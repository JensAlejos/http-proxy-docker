var isBookingChanged = "N";
var isOverrideReset = "N";
var piece=" ";
var weightOriginal=" ";
var cubeOriginal=" ";
var ALASKA_POV_NAME = "ALASKA AUTO";
var POV_NAME = "PERSONAL AUTO";
var GOVERNMENT_NAME = "GOVERNMENT";
var tempShipperAddress='';
var tempConsigneeAddress='';
var tempPartyTypeCode="";
var equipId = "";




$(function() {

	setGlobalVariableValues(); // D029605 not getting called for new bookings.
	elRTE.prototype.options.panels.web2pyPanel = [ 'bold', 'italic',
			'underline', 'forecolor', 'hilitecolor', 'justifyleft',
			'justifyright', 'justifycenter', 'justifyfull', 'formatblock',
			'fontsize', 'fontname', 'insertorderedlist', 'insertunorderedlist',
			'link', 'image', ];

	elRTE.prototype.options.toolbars.web2pyToolbar = [ 'web2pyPanel', 'tables' ];
	                                           	
	isBookingChanged = "N";
	$('#bookingForm').validationEngine('attach');
	
	$('#bookingForm :input').change(function()
	{
		//D026018
		if($(this).attr('id') != "shipmentNumber" && $(this).attr('id') != "containerNumber"){
			isBookingChanged = "Y";
		}
	});
	
	$('#bookingForm select').change(function()
	{
		isBookingChanged = "Y";
	});
	
	$('.autoTabbedField').keypress(function(event){
		if(event.keyCode != 13 && $(this).val().length == ($(this).attr('maxlength')-1))
			$(this).next().focus();
	});

	
	if($('#bookingTypeCode').val()=='B'){
		//setDefaultCustomerGroup();
	}
	setScreenDetails();

	$('#commentsDiv').hide();
	$('#historyDiv').hide();
	$('#msgDivBill').hide();
	
	$("#quoteExistsDiv").hide();
	
	//enableDisableClearButton();
	
	//$("#shipperConsigneeNameDiv").html("<b>Shipper Consignee</b>");

	isBookingDeletable();
	//Display existing booking

	//Display existing booking
	/*$('#shipmentNumber').blur(function(){
		invokeBookingDisplayCall();
    });*/
	if($('#callFromQuote').val() != undefined && $('#callFromQuote').val() != '' && $('#callFromQuote').val() == 'Y'){		
		getQuote($('#quoteId').val());
	}
	if($('#shipmentNumber').val()!='') {
		$("#updatepayment").removeAttr("disabled");
	}
	
	// Booking Save
	$('#bookingSave').click(function(){
		checkTCNIBS();
		if(isBookingChanged == "Y")
			bookingSaveButtonClick();
		else
			alert("No fields have been changed. Cannot save");
	});
	
	
	//D018135: 	Did not receive msg "you have unsaved changes" 	
	$(window).bind('beforeunload', function(event){
		 if(isBookingChanged=='Y' && !exitFlag) {
			 exitFlag = false;
			 event.stopImmediatePropagation();
			 return 'You have unsaved changes!';
		 }
		 exitFlag = false;
	});

	
	if($('#bookingTypeCode').val()=="T")
	{
		isDeleteAllowed = true;
		isEditAllowed = true;
	}
	
	// create bill booking dialog at body on-load
	$("#billBookingDialog").dialog({
		//dialogClass:'transparent',
		autoOpen : false,
		width : 1000,
		height : 650,
		modal : true,
		close : function() {
			$('#msgDivBill').html("<div class=\"message_info\">Successfully Displayed.</div>");
		}
	});
	
	// create quote exists show dialog at body on-load
	$("#quoteShowDialog").dialog({
		autoOpen : false,
		width : 930,
		height : 300,
		modal : true,
		close : function() {
			unloadQuoteShowGrid();
			//$("#quoteShowDialog").dialog("close");
		}
	});

	//quoteExistsDiv present in create_booking.jsp
	$('#quoteExistsDiv').click(function(){
		showQuotesGrid();
    });	
	

	createSpecialServiceGrid("booking");

	// Booking Clear, clear button is clicked
	$('#bookingClear').click(function() {
		if(isBookingChanged == 'Y'){
			var isConfirm = confirm("All the unsaved Changes will be discarded. Please confirm!");
			if (isConfirm) {
				tempShipperAddress='';
				tempConsigneeAddress='';
				tempPartyTypeCode="";
				clearBookingDataOnClearBtnClick();
			}
		} else {
			tempShipperAddress='';
			tempConsigneeAddress='';
			tempPartyTypeCode="";
			clearBookingDataOnClearBtnClick();
		}
    });
	

	if(null!=$('#templateNumberOnLoad').val() && $('#templateNumberOnLoad').val()!='' && $('#bookingTypeCode').val()=='B'){
		templateUpdate($('#templateNumberOnLoad').val(),'MaintainBooking');
	}

	$("#bookingStatusCode").change(function(){
		$("#bookingSave").attr("disabled",false);
		if($('#savedBookingStatusCode').val()=='CANC'){
			makeFormReadOnly('','bookingForm',false);
		}
	});

	
	$("#msgDivDialog" ).dialog({autoOpen: false, autoResize : true, minHeight: 0, modal: true, width: 543,
		close : function(event, ui) {
			var errorText = $('#msgDivFrt').text();
			if(errorText!='' && ((errorText.search('tariff')>0 && errorText.search('item')>0) || (errorText.search('tariff')>0))){
				$('#tariff').focus();
			}
			else if(errorText.search('item')>0){
				$('#tariffItemNumber').focus();
			}
  	  }
	});
	tabSequence('#bookingForm',false,false);
	//Hitsory
	$("#changeLog").dialog({
		//dialogClass:'transparent',
		autoOpen : false,
		width : 900,
		height : 850,
		modal : true,
		/*position:{
			my: "left center",
			at: "left+100 center",
			of: window
		},*/
		buttons: {
	         Exit: function(){
	        	 $( this ).dialog( "close" );
	         }
	    }
	});
	
	
});

function checkTCNIBS(){
	if($.trim($('#customerGroupId :selected').text())==GOVERNMENT_NAME && ($.trim($('#loadDschServiceGroupCode').val())=='CON' || $.trim($('#loadDschServiceGroupCode').val())=='LCL') && $.trim($('#isAllowBookingUnit').val())=="Y"){
		   if($("#tcnGrid").getGridParam("records")==0 && $('#militaryIbsStatusCode option:selected').text()==''){
	              
               $("#militaryIbsStatusCode").removeClass("validate\[required\]");
               $("#militaryTcn").removeClass("validate\[required\]");
        }else {
        
               if($("#tcnGrid").getGridParam("records")==0){
            	   //If the IBS is present and not the tcn should expand the commodity section
          	     	 expandSection(4);
                     $("#militaryTcn").addClass("validate\[required\]");
               } else {
                     $("#militaryTcn").removeClass("validate\[required\]");
               }
               
               if($('#militaryIbsStatusCode option:selected').text()==''){
                     expandSection(5);
                     $("#militaryIbsStatusCode").addClass("validate\[required\]");
               } else {            	  
                     $("#militaryIbsStatusCode").removeClass("validate\[required\]");
               }
               
        }	
	}
}
function createCommentFunc(){
	var isDeleteAllowed = false;
	var isEditAllowed = false;
	if($('#bookingTypeCode').val()=="T")
	{
		isDeleteAllowed = true;
		isEditAllowed = true;
	}
	var args = {
			entityType: 'BKNG',
			entityId: $('#bookingId').val(),
			commentId: 'commentId',
			displayCommentTypes: 'ALL',
			commentTypesForGrid:'',
			isDeleteAllowed:isDeleteAllowed,
			isEditAllowed:isEditAllowed
		   };
	
	getCommentTypes(args);
}


function cancelBooking(){
	$('#msgDiv').html("<div class=\"message_info\">Please wait while booking is cancelled...</div>");
	$('#msgDiv').show();
	$.ajax({
		url: _context +"/booking/cancelBooking",
		data: {
			bookingId: $("#bookingId").val(),
			shipmentNumber: $("#shipmentNumber").val()
		},
		success: function(responseText){
			if (responseText.messages.error.length == 0) {
				$('#bookingStatusCode').val('CANC');
				$('#savedBookingStatusCode').val('CANC');
				makeFormReadOnly('','bookingForm',true);
				$('#shipmentNumber').focus();
				isBookingDeletable();
				isBookingChanged = "N";
			}
			showResponseMessages('msgDiv', responseText);
			$.unblockUI();
		}
	});
}	

function removeGridValuesOfsDataRow(){
	//Ref-number section
	$('#referenceNumberNotation').val("");
	$('#typeCode').val(0);
	//dodaac
	$('#dodaacCode').val("");
}

function bookingSaveButtonClick(){
	//change for D025317
	if($('#bookingStatusCode').val()!='PEND' && $('#bookingStatusCode').val()!='INCP'){
	var status = freightDeleteCheckOnBookingSave();
	if(status=='failure'){
		return;
	}
	}
	
	var loadServiceCode = $('#loadServiceCode :selected').val();
	var dischargeServiceCode = $('#dischargeServiceCode :selected').val();
	
	if(loadServiceCode=="RO" && dischargeServiceCode=="RO" && $('#freight\\.isRoRo1').is(':checked')==false){
		alert("Rolling Stock Ind must be checked for selected Load/Discharge service. Please check it and save again.");
		//$('#freight\\.isRoRo1').attr('checked', true);
		return;
	}
	
	//D026820
	var pickupZipCode = $('#pickupZipCode').val();
	var deliveryZipCode = $('#deliveryZipCode').val();
	if(loadServiceCode=="P" && pickupZipCode=='')
	{
	alert(" PickUp Zip required");
	return;
	}
	if(dischargeServiceCode=="P" && deliveryZipCode=='')
	{
	alert(" DeliveryZip required");
	return;
	}
	
	$('#bookingSave').attr("disabled", true);
	blockUI();
	removeErrorPointers();
	removeGridValuesOfsDataRow();
	//user wants to cancel booking
	if($('#bookingStatusCode').val()=='CANC' && $("#bookingId").val()!=''){
		//D026010
			//var overRide = confirm("Do you really want to Cancel the "+ $('#shipmentNumberHidden').val() +" booking? ");
			//if(overRide == true){
				cancelBooking();
			//}else{
			//	$('#bookingSave').attr("disabled", false);
			//	$.unblockUI();
			//}
		}else{
		if(!checkIfAnyFreightFieldHasValue()){
			resetMandatoryCmdDesc();
		}
		else{
			if(!$('#tariff').is(':visible') && addFreightEnabled()){
				$($('.booking-section')[4]).accordion("enable");
				$('#commodityHeader').attr('aria-expanded', "true");
				$('#commodityHeader').attr('aria-selected', "true");
				$('#commodityHeader').attr('tabindex', "0");
				$('#commodityHeader').removeClass("ui-state-default ui-corner-all").addClass("ui-state-active ui-corner-top");
				$('#commodityHeader span').removeClass('ui-icon-triangle-1-e').addClass('ui-icon-triangle-1-s');
				$('#maintainBookingCommodity').removeClass('ui-accordion-disabled ui-state-disabled');
				$('#maintainBookingCommodity').addClass('ui-accordion-content-active');
				$('#maintainBookingCommodity').css('display', 'block');
				var status = $($('.booking-section')[4]).accordion('option', 'active');
				if (typeof status == "boolean" && !status) {
					$($('.booking-section')[4]).accordion('option', 'active', 0);
				}
			}
			if($("#primaryFreightPresent").val()=='Y'){
        		if($("#tariffCommodityDescription").val()=='' || $("#tariff").val()=='' || $("#tariffItemNumber").val()=='' || $("#commodityCode").val()==''){
        			setMandatoryTariffCmdDesc();
        			resetMandatoryCustDesc();
        		}
        		else{
        			resetMandatoryCmdDesc();
        		}
        	}
			else{
				if($("#tariff").val().trim()!='' && $("#tariffItemNumber").val().trim()==''){
					setMandatoryTariffItem();
					resetMandatoryCmdDesc();
				}
				else{
					resetMandatoryTariffCmdDesc();
					setMandatoryCmdDesc();
				}
			}
		}
		if(!$("#bookingForm").validationEngine('validate') || !validateBookingUIFields()){
			$('#bookingSave').attr("disabled", false);
			$.unblockUI();
			return;
		}else{
			/*if($('#shipmentNumberHidden').val() !='' && $('#quoteNumber').val()==$('#shipmentNumberHidden').val()){
				checkRatingAttributes();
			}else */if($('#bookingStatusCode').val()=='CANC'){
				var overRide = confirm("Do you really want to Cancel the "+ $('#shipmentNumberHidden').val() +" booking? ");
				if(overRide == true){
					checkDebtors();
				}else{
					$('#bookingSave').attr("disabled", false);
					$.unblockUI();
				}
			}else{
				checkDebtors();
			}
		}
	}
}

function checkRatingAttributes(){
	if("Y"==isBookingFromQuote()){
		var booking = $('#bookingForm').formSerialize();
		var urlStr = _context +"/booking/checkRatingAttributes";
		$.ajax({
			type: "POST",
			url: urlStr,
			data: booking,
			success: function(responseText){
				if(responseText.messages.error.length>0){
					var overRide = confirm(responseText.messages.error);
					if(overRide == true){
						saveBooking();
					}else{
						$('#bookingSave').attr("disabled", false);
						$.unblockUI();
					}
				}else{
					saveBooking();
				}
			}
		});
	}else{
		saveBooking();
	}
}

function invokeBookingDisplayCall(){
	//&& $('#shipmentNumber').val() != $('#shipmentNumberHidden').val()
	if($('#shipmentNumber').val()!='' && $('#shipmentNumber').val().length==7){
		//$('#shipmentNumberHidden').val($('#shipmentNumber').val());
		if($('#bookingTypeCode').val()=='B'){
			if($('#shipmentNumber').val().toUpperCase().indexOf('T')==-1){
				showLoadingMessage();
				displayBooking();
			}else{
				$('#shipmentNumber').validationEngine('showPrompt', 'Booking entity not valid.', 'error', 'topRight', true);
			}
		}else if($('#bookingTypeCode').val()=='T'){
			if($('#shipmentNumber').val().toUpperCase().indexOf('T')==0){
				showLoadingMessage();
				displayTemplate($('#shipmentNumber').val());
			}else{
				$('#shipmentNumber').validationEngine('showPrompt', 'Template booking not valid.', 'error', 'topRight', true);
			}
		}
	}
}

/*function enableDisableClearButton(){
	if($('#shipmentNumberHidden').val()==''){
		$("#bookingClear").attr("disabled",false);
	}else{
		$("#bookingClear").attr("disabled",true);
	}
}
*/

function isBookingFromQuote(){
	var quoteNumber = $('#quoteVNConcat').val();
	var bookingNumber = $('#shipmentNumber').val();
	if(null == quoteNumber || quoteNumber == ''){
		return "N";
	}
	if(null == bookingNumber || bookingNumber == ''){
		return "N";
	}
	if(bookingNumber == quoteNumber){
		return "Y";
	}
}

function clearBookingDataOnClearBtnClick(){
	$('#msgDiv').html("<div class=\"message_info\">Please wait while screen is refreshed...</div>");
	$('#msgDiv').show();
	$.ajax({
		url: _context +"/booking/clear",
		data : {
			bookingFromQuote : isBookingFromQuote()
		},
		success: function(responseText){
			if (responseText.messages.error.length == 0) {
				/*Freight*/
				resetMandatory();
				responseText.data.header.bookingCsr="";
				$('#shipmentNumberHidden').val("");
				setBookingTitle(null);
				makeFormReadOnly(responseText,'bookingForm',false);
				clearBookingForm();
				/*Reset load discharge service*/
				getAllLoadServices();
				getAllDischargeServices();
				expandAll();
				//expandAllNew();
				/*Reset hold bottom overlay*/
				resetHoldUnreleasedGrid();
				handleButtonOnCLearClick();
				collapseSection(4);
				reInitOnClear();
				enableDisableNote();				
				$('#bookingSave').attr("disabled",true);
				setGlobalVariableValues(); // D029605
				setHazCount("-");
				$('#shipmentNumber').focus();
			}
			showResponseMessages('msgDiv', responseText);
			window.scrollTo(0, 0);
		}
	});
}	

function reInitOnClear(){
	//refresh
	$('#previousTradeCode').val("");
	$('#customerGroupId').val("");
	$('#lastLoadDschServiceGroupCode').val("");
	$('#displayingBookingEvent').val("N");
	$('#displayingTemplateEvent').val("N");
	$("#entityVersion").val('');
	$('#commentId').val('');
	$('#ratingAttributesChanged').val('');
	$('#bookingTemplateOwner').val('');
	$('#showQuoteForAroleOnTemplatePull').val('');
	$('#bookingTemplateOwnerPartyType').val('');
	$('#bookingStatusCodeHidden').val('');
	$('#quoteIsLoadedOnScreen').val('');
	$('#isCustomizeNameAddress').val('');
	$('#billExists').val('');
	$('#displayingBookingEvent').val('N');
	$('input[name="shipper\\.organizationName"]').css('color', 'black');			//for defect D020335
	$('input[name="consignee\\.organizationName"]').css('color', 'black');
	$('#refNumOverRideForShipper').val('');
	$('#refNumOverRideForConsignee').val('');
	$('#hiddenBookedDate').val('');
	$('#isInBond').val("false");
	$('#dealerAuctionLocationCode').attr("disabled", true);
	$('#inbondNumber').attr("disabled", true);
	$('#overridePickupCarrierCode').attr('disabled', true);
	$('#overrideDeliveryCarrierCode').attr('disabled', true);
	$('#bookingStatusCode').val('');
	$('#customerGroupId').val('');
	$('#militaryIbsStatusCode').val("");
	//$("#overrideInitialLtvDate").val("01-01-0001");
	$('#billingStartedHyperlink').hide();
	$('#vvdChangeAuthPartyCode').attr("disabled", true);
	$('#partiesExists').val("false");
	//$('#shipmentNumberHidden').val("");
	$('#refNumOverRideForShipper').val("N");
	$('#refNumOverRideForConsignee').val("N");
	/*$('#consigneeZipOverride').val("");
	$('#dealerCode').val("");
	$('#templateNumberOnLoad').val("");
	$('#templateAppliedOnBookingFromScreen').val("");
	$('#userFromMenu').val("");*/
	$('#checkRequiredDispatch').val("N");
	//Freight
	iterated = false;
	$("#okAlreadyPressed").val("false");
	$('#showAlertTCGLDSP').val("true");
	$('#selectTCGLDSPChange').val("N");
	$('#freightSeqNo').val('');
	$('select#currentCommodityLine').children().remove().end().append('<option selected value="0">0</option>');
	$('#totalCommodityLines').text(0);
	disableAccordian(4);
	$('#freightVVDModified').val('N');
	$('#billOfLadingLink').text('Bill Of Lading');
	$('#holdEqpExists').text('');
	$('#createBkngTmplSeqNbrDs').val("");
	
	$('#chargeCurrency').text('');
	$('#actualTotalChargeAmount').text('');
	//D031804: bkg# 6317125 cntr# CHVU070920 error on container variance page
	$('#ediTypeCode').val('');
	$('#isRequireCustomerVerifyAdd').val('');
	$('#isRequireCustomerVerifyChg').val('');
	
}

function handleButtonOnCLearClick(){
	$("#dispatchBtn").attr("disabled", true);
	$("#updatepayment").attr("disabled", true);
	$("#sendDoc").attr("disabled", true);
	$("#sendEDI").attr("disabled", true);
	$("#alert").attr("disabled", true);
	$("#billBooking").attr("disabled", true);
	$("#customizeNameAddress").attr("disabled", true);
	$("#bookingDelete").attr("disabled", true);
	$("#holdRelease").attr("disabled", true);
	
	//handle URL/Hyperlinks
	var aHtml = ""
		+"<a href=\"javascript:templatePopupSearch();\">"
		+"<div id=\"bookingTemplateNumber\" class=\"span-2 last\"></div><img id=\"templateSearch\" src=\""+_context+"/resources/images/search.png\" border=\"0\" style=\"vertical-align: text-bottom; cursor: pointer;\" name=\"popupSearchtemplateSearch\" alt=\"Search\"/>"
		+"</a>"
		+"";
	$('#templateDiv').html(aHtml);
}

function displayBookingRequest(callBack) { // Cheetah 
	blockUI();
	$.ajax({
		type: "GET",
		url: _context +"/booking/display",
		data: { bookingNumber: $("#shipmentNumber").val(), userFromMenu: $("#userFromMenu").val() },
		success: function(responseText) {
			callBack.call(this, responseText);
			$.unblockUI();
		}
	});
}

var oldBkNbr;
function displayBooking(){
	oldBkNbr = $("#shipmentNumber").val();
	if($('#displayingBookingEvent').val()=="N"){
		
		function displayBookingCallBack(responseText){ // Cheetah
			// Clear fields of booking form and reset the defaults
			clearBookingForm();
			if (responseText.messages.error.length == 0 && responseText.data.header.tradeCode == 'A') {
				$('#billingStartedHyperlink').hide();
				showJSON(responseText);
				collapseAll();
				$('#billExists').val(responseText.data.header.billExists);
				//D031169: 	Priority Stow to have a new selection list only for Alaska
				if(responseText.data.header.tradeCode!=null && responseText.data.header.tradeCode=='A'){
					setStowDataForAlaska();
				} else {
					$("#stowSelect").hide();
				}
				//D033452
				setSITFlag();
				//we have to call it seperately bcoz we do not want it to execute everytime showJSON runs.
				if(responseText.data.header.billExists=="Y"){
					prepareHeaderDataForBillingOverlay(responseText);
					$('#billingStartedHyperlink').show();
				}
				else{
					$('#billingStartedHyperlink').hide();
				}

				/*Booking Security*/
				if(isHoldOverlayBottomEnabled){
					//Display Unreleased Holds Grid on initial display
					openUnreleasedHoldGridOnIntialDisplay("booking");
				}
				
				console.log("booking="+responseText.data.header.ediTypeCode);
				//D025919: 	Maintain Booking: Make the EDI label a hyperlink to the EDI Booking Detail
				var ediLink = "<div style=\"height:20px;padding-top: 7px;\"><a href=\"javascript:onEdiClick();\">EDI</a><div>";
				if(responseText.data.isBookingOnEDIReviewQueue=='Y'){
					if(responseText.data.header.bookingCsr=='EDIBKG'){
						$('#ediOrWebIndicator').html(ediLink);
					} else {
						$('#ediOrWebIndicator').text('WEB');
					}
				}
				else if(responseText.data.header.bookingCsr=='EDIBKG'){
					$('#ediOrWebIndicator').html(ediLink);
				}
				else if(responseText.data.header.bookingCsr=='WEBBKG'){
					$('#ediOrWebIndicator').text('WEB');
				} else if(responseText.data.header.ediTypeCode=='Y') {
					$('#ediOrWebIndicator').html(ediLink);
				}
				else {
					$('#ediOrWebIndicator').text('');
				}
				
				console.log("userfrom="+$("#userFromMenu").val());
				if(responseText.data.isBookingOnEDIReviewQueue=='Y'){
					var fromMenu = $("#userFromMenu").val();
					var fromEdi = false;
					if(fromMenu.lastIndexOf("ediBookingDetail_", 0) === 0 ) {
						fromEdi = true;
					}
					
					//Defect - D019815 - 018501
					// D029837: add canc
					if(responseText.data.header.bookingStatusCode!='CANC'  && responseText.data.header.bookingStatusCode!='APPR' && responseText.data.header.bookingStatusCode!='OFFR' && $("#userFromMenu").val() != 'webBookingReviewQueue' && !fromEdi ){
						//ediBookingDetail_
						otherAlert("","Booking is on web/edi review queue.  Press ok to edit booking.");
					}
				}
				
				if(responseText.data.header.bookingStatusCode=='APPR'){
					$('#billBooking').attr("disabled", false);
				}else{
					$('#billBooking').attr("disabled", true);
				}
				
				$('#templateAppliedOnBookingFromScreen').val('N');
				disableCreateBookingFromQuote();
				
				//TODO - readonly call removed
				if(responseText.data.header.bookingStatusCode=='CANC'){
					//update booking BR-02 [Canceled Booking cannot be updated.]
					makeFormReadOnly(responseText,'bookingForm',true);
				}else{
					makeFormReadOnly(responseText,'bookingForm',false);
				}
				$('#commentsDiv').show();
				if(isHistoryDisplayOnly) $('#historyDiv').show();
				//getTemplateNumberForId();
				//Grid reload calls
				reloadBookingGrids();
				//	D021215: 	Session Variable clear/change shortcut
				getSearchFieldValue(500);
				
			}else{
				//Set booking title to default if booking doesn't exist
				setBookingTitle(null);
				$("#bookingSave").attr("disabled",false);
				$('#shipmentNumberHidden').val("");
				//resetHoldUnreleasedGrid();
			}
			//D029724: 	Prod Maintain Booking : Error: Zero is not a valid weight 
			if($("#weight").val()==0){
				$("#weight").val('');
			}
			piece=$('#pieceCount').val();//Defect-24921
			weightOriginal=$('#weight').val();//Defect-25136
			cubeOriginal=$('#cube').val();
			$("#shipmentNumber").attr("disabled",false);
			$("#bookingStatusCode").attr("disabled", false);
			//Messages
			showResponseMessages("msgDiv", responseText);
			
			if(responseText.messages.error.length == 0 && responseText.data.header.tradeCode != 'A'){
				$('#msgDiv').html('<div class="message_error">Booking not found for Alaska trade</div>');
			}
			
			//Security Implementations
			enforceUserSecurityRolesAndPermissions();
			
			//Enables-disables footer buttons if booking exists
			enableDisableFooterButtons();
			//[Manjeet/Vivek/Saif]after security roles, Please dont change unless you know impact.
			if (responseText.messages.error.length == 0 && responseText.data.header.tradeCode == 'A') {
				//TODO - readonly call removed
				if(responseText.data.header.bookingStatusCode=='CANC'){
					//update booking BR-02 [Canceled Booking cannot be updated.]
					makeFormReadOnly(responseText,'bookingForm',true);
				}else{
					makeFormReadOnly(responseText,'bookingForm',false);
				}
				$('#quoteVNConcat').attr("disabled", true);
				//if(responseText.data.header.bookingStatusCode=='APPR' || responseText.data.header.bookingStatusCode=='OFFR'){
				if($('#checkRequiredDispatch').val()=='Y'){
					$("#dispatchBtn").attr("disabled", false);
				}
				else{
					$("#dispatchBtn").attr("disabled", true);
				}

				if(responseText.data.header.bookingStatusCode!='CANC')
				{
					/*Booking Security*/
					if(isHeaderStatusUpdate){
						$("#bookingStatusCode").attr("disabled",false);
					}
					//D032770: 	New Port Editor permission Port Editor access : K&L Beer Bookings
					if(isCommodityModifiablePE){
						$("#commodityDescription").attr("disabled",false);
					}
					checkCopyButtons();			
					autoBillOnchangeEventFunction();
					$('#inbondNumber').attr("disabled", true);
					$('#loadServiceCode').attr("disabled", true);
					$('#dischargeServiceCode').attr("disabled", true);
					//$('#overridePickupCarrierCode').attr('disabled', true);
					//$('#overrideDeliveryCarrierCode').attr('disabled', true);
					$('#inland').gatesDisable();
					$('#isInBond').attr("disabled", true);
					$('#isSIT').attr("disabled", true);
					$('#vvd_premium').gatesDisable();
					$('#vvd_conventional').gatesDisable();
					
					checkPickupCarrier();
					checkDeliveryCarrier();
					processChangeSource();
					/*if($('#loadDschServiceGroupCode').val()=='CON' || $('#loadDschServiceGroupCode').val()=='LCL')
					{
						$('#vvd_conventional').show();
						if(isRoutingModifiable)
						{
							$('#convCgoApptCutoffDate').attr('disabled', false);
							$('#convCgoApptCutoffTime').attr('disabled', false);
							$('#convCgoEstArrivalDate').attr('disabled', false);
							$('#convCgoEstArrivalTime').attr('disabled', false);
							$('#requiredDeliveryDate').attr('disabled', false);
						}
						
					}
					else
					{
						
						$('#vvd_conventional').hide();
						$('#convCgoApptCutoffDate').attr('disabled', true);
						$('#convCgoApptCutoffTime').attr('disabled', true);
						$('#convCgoEstArrivalDate').attr('disabled', true);
						$('#convCgoEstArrivalTime').attr('disabled', true);
						$('#requiredDeliveryDate').attr('disabled', true);
						//$('#milRequiredDeliveryDate').attr('disabled', true);
					}*/
					setRoutingLoadDischargeDetails();
					setDefaultOverrides();
				}
			}
			
			/*Dirty Check*/
			isBookingChanged = "N";
			$('#displayingBookingEvent').val("N");
			
			$("#gridIdForParties").trigger('reloadGrid');
			enableDisableNote();
			
		}
		
		displayBookingRequest(displayBookingCallBack); // Cheetah
	}
}

function setDefaultCustomerGroup(){
	$.getJSON(_context+'/cas/autocomplete.do?method=getCustGrp&searchType=250&parentSearch=OT',
			function(contacts){
				$(contacts).each(function() {										
					//Highlight these Groups
					var toBeHighlighted = this.value;
					$("#customerGroupId option").each(function() {
						if (this.value == toBeHighlighted) { 
							$(this).attr('selected', 'selected');
						}
					});				
				});
				if($("#customerGroupId :selected").val()=="")
				{
					$("#customerGroupId option").each(function() {
						  if($(this).text() == "GENERAL GROUP") {
						    $(this).attr('selected', 'selected');            
						  }                        
					});
				}
			}
		);
	}

function resetDivNames(){
	//$("#shipperConsigneeNameDiv").html("<b>Shipper Consignee</b>");
	//setAccordianTabDetails("shipperNameDiv", "Shipper");
	//setAccordianTabDetails("consigneeNameDiv", "Consignee");
	$("#shipperNameDiv").html("");
	$("#consigneeNameDiv").html("");
	setAccordianTabDetails("partiesHeader", "");
	setAccordianTabDetails("refAndMarksId", "Reference Numbers");
	setAccordianTabDetails("routingHeader", "");
	setAccordianTabDetails("maintainBookingCommodityId", "");
	setAccordianTabDetails("maintainBookingMilitaryId", "");
	setAccordianTabDetails("splServicesHeader", "");
	setAccordianTabDetails("clauseHeader", "");
	setAccordianTabDetails("maintainBookingHoldId", "");
	setAccordianTabDetails("bookingOverridesText", "Booking Overrides");
}

function prepareHeaderDataForBillingOverlay(responseText){
	$("#billShipmentNumber").text($("#shipmentNumber").val());
	$("#billShipper").text($('input[name="shipper\\.organizationName"]').val());
	$("#billConsignee").text($('input[name="consignee\\.organizationName"]').val());
	$("#billPlaceOfReceipt").text($("#blOriginCityCode").val());
	$("#billPlaceOfDelivery").text($("#blDestinationCityCode").val());
	$("#billPortOfLoading").text($("#originPortCityCode").val());
	$("#billPortOfDischarge").text($("#destinationPortCityCode").val());
	$("#billLDSP").text($("#loadServiceCode").val() +" "+ $("#dischargeServiceCode").val());
	$("#billBooked").text(responseText.data.header.booked);
	$("#billReceived").text(responseText.data.header.received);
	$("#billPreReceived").text(responseText.data.header.preReceived);
	$("#billBilled").text(responseText.data.header.billed);
}

function showLoadingMessage(){
	$("#shipmentNumber").attr("disabled",true);
	if($('#bookingTypeCode').val()=='B'){
		$('#msgDiv').html("<div class=\"message_info\">Loading booking "+ $("#shipmentNumber").val() +" ...</div>");
	}else{
		$('#msgDiv').html("<div class=\"message_info\">Loading template "+ $("#shipmentNumber").val() +" ...</div>");
	}
	$('#msgDiv').show();
}

function showSavingMessage(){
	$("#bookingSave").attr("disabled",true);
	var entity="";
	if($('#bookingTypeCode').val()=='B'){
		entity = "Booking";
	}else if($('#bookingTypeCode').val()=='T'){
		entity = "Template";
	}
	if($('#bookingId').val()==''){
		$('#msgDiv').html("<div class=\"message_info\">Please wait while "+ entity +" is saved...</div>");
	}else{
		$('#msgDiv').html("<div class=\"message_info\">Please wait while "+ entity +" is updated...</div>");
	}
	window.scrollTo(0, 0);
	$('#msgDiv').show();
}

//common method for all UI fields...
function validateBookingUIFields(){
	var uiFieldsValidationStatus = true;

	uiFieldsValidationStatus = validateShipmentNumber();
	if(uiFieldsValidationStatus==false)
		return uiFieldsValidationStatus;
	//if($('#tradeCode').val() == 'F'){//for tradedefect
	/*uiFieldsValidationStatus = validateContactForShipperConsignee('shipper');
	if(uiFieldsValidationStatus==false){
		return uiFieldsValidationStatus;
	}
	
	uiFieldsValidationStatus = validateContactForShipperConsignee('consignee');
	if(uiFieldsValidationStatus==false){
		return uiFieldsValidationStatus;
	}*/
	//}	

	/*uiFieldsValidationStatus = validatePartiesSectionOnSave();
	if(uiFieldsValidationStatus==false)
		return uiFieldsValidationStatus;*/
	
	uiFieldsValidationStatus = validateRoutingFieldsOnSave();
	if(uiFieldsValidationStatus==false)
		return uiFieldsValidationStatus;
	
	uiFieldsValidationStatus = validateFreightFieldsOnSave();
	if(uiFieldsValidationStatus==false)
		return uiFieldsValidationStatus;
	
	/*uiFieldsValidationStatus = validateMilitaryFieldsOnSave();
	if(uiFieldsValidationStatus==false){
		return uiFieldsValidationStatus;
	}
	
	uiFieldsValidationStatus = validateOverridesFieldsOnSave();
	if(uiFieldsValidationStatus==false)
		return uiFieldsValidationStatus;*/
	
	return uiFieldsValidationStatus;
}

function validateShipmentNumber(){
	if($('#shipmentNumberHidden').val()!= $('#shipmentNumber').val() && $('#bookingTypeCode').val()=='B'){
		$('#shipmentNumber').validationEngine('showPrompt', 'Booking must be saved/loaded first.', 'error', 'topRight', true);
		return false;
	}
}

function validateBooking(){
	if($('input[name="shipper\\.addressRoleId"]').val()=="" && $('input[name="consignee\\.addressRoleId"]').val()==""){
		var freightExists=checkFreightExists();
		if(freightExists==true){
			addUpdateCommodityOnBKSave();
		}else{
			saveBooking();
		}
	}else{
		if($('input[name="shipper\\.addressRoleId"]').val()!="" && ($('#refNumOverRideForShipper').val()=="N" || $('#refNumOverRideForShipper').val()=="") 
			|| $('input[name="consignee\\.addressRoleId"]').val()!="" && ($('#refNumOverRideForConsignee').val()=="N" || $('#refNumOverRideForConsignee').val()=="")){
			validateBookingReferenceNumber();
		}else if($('#consigneeZipOverride').val()=="N" || $('#consigneeZipOverride').val()==""){
			var trade = $("#tradeCode").val();
			var cneeZip = $('input[name="consignee\\.zip"]').val();
			if(trade!=null && (trade=='H' || trade =='G') && cneeZip != ''){
				validateConsigneeZip();
			}else{
				isChangesValidAfterUnitsReceived();
			}
		}else if($('#isChangeAcceptedAfterUnitsReceived').val()=="N" || $('#isChangeAcceptedAfterUnitsReceived').val()==""){
			isChangesValidAfterUnitsReceived();
		}else{
			var freightExists=checkFreightExists();
			if(freightExists==true){
				addUpdateCommodityOnBKSave();
			}else{
				saveBooking();
			}
		}
	}
}

function checkFreightExists(){
	var commodityLines=$('#currentCommodityLine').val();
	if(commodityLines=='0'){
		if($("#tariff").val()=='' && $("#tariffItemNumber").val()=='' && $("#commodityDescription").val()==''){
			return false;
		}
	}
	return true;
}

function addUpdateCommodityOnBKSave(){
	
	var status=$('#bookingStatusCode').val();
	if(status=='APPR')
	{
		 if(!bookingApprovalEnabled)
		  {
			$('#msgDiv').html("<div class=\"message_error\">"+"No Enough Permission to Approve Booking"+"</div>");
			window.scrollTo(0, 0);
			triggerErrorMessageAlert();
			return;
		  }
	}
	var isFreightUpdate = checkForAddOrUpdate();
	if(isFreightUpdate==false){
		var dataUrl = _context +"/booking/freight/addFreight";
		var freightValidationFlag = addUpdateFreight(dataUrl, true);
		if(freightValidationFlag == undefined || freightValidationFlag==false){
			//check whether accordian is closed : if yes open the accordian
			//collapseAll();
			if(!$('#tariff').is(':visible')){
	    		var status = $($('.booking-section')[4]).accordion('option', 'active');
	    		if (typeof status == "boolean" && !status) {
	    			$($('.booking-section')[4]).accordion('option', 'active', 0);
	    		}
    		}
			var equipmentGridCollapsed = $('#equipmentGrid').is(':visible');
			if(!equipmentGridCollapsed){
				if($('#tariff').is(':visible')){
					$(".HeaderButton", ("#gview_equipmentGrid")).click();
				}
			}
			
			setTimeout(function(){
				if(updateEquipmentErrorOccurred)
				{
					if(!$($('table[aria-labelledby="gbox_equipmentGrid"] thead tr[id="FormError"] td')[0]).is(':visible') || 
							$($('table[aria-labelledby="gbox_equipmentGrid"] thead tr[id="FormError"] td')[0]).html()=='')
						saveAllEquipments();
				}
				scrollToCommodity();
				$.unblockUI();
				$('#bookingSave').attr("disabled", false);
			}, 250);
			
			return;
		}
	}else if(isFreightUpdate==true){
		var dataUrl = _context +"/booking/freight/updateFreight";
		var freightValidationFlag = addUpdateFreight(dataUrl,true);
		if(freightValidationFlag == undefined || freightValidationFlag==false){
			//check whether accordian is closed : if yes open the accordian
			/*$($('.booking-section')[4]).accordion("enable");
			$($('.booking-section')[4]).accordion('option', 'active', 0);*/
			//collapseAll();
			if(!$('#tariff').is(':visible')){
	    		var status = $($('.booking-section')[4]).accordion('option', 'active');
	    		if (typeof status == "boolean" && !status) {
	    			$($('.booking-section')[4]).accordion('option', 'active', 0);
	    		}
	    		
    		}
			
			var equipmentGridCollapsed = $('#equipmentGrid').is(':visible');
			if(!equipmentGridCollapsed){
				if($('#tariff').is(':visible')){
					$(".HeaderButton", ("#gview_equipmentGrid")).click();
				}
			}
			
			setTimeout(function(){
				if(updateEquipmentErrorOccurred)
				{
					if(!$($('table[aria-labelledby="gbox_equipmentGrid"] thead tr[id="FormError"] td')[0]).is(':visible') || 
							$($('table[aria-labelledby="gbox_equipmentGrid"] thead tr[id="FormError"] td')[0]).html()=='')
						saveAllEquipments();
				}
				scrollToCommodity();
				$.unblockUI();
				$('#bookingSave').attr("disabled", false);
			}, 250);
			
			return;
		}
	}
	//saveBooking();
}

function validateBookingReferenceNumber(){
	var booking = $('#bookingForm').formSerialize();
	var urlStr = _context +"/booking/validate";
	$.ajax({
		type: "POST",
		url: urlStr,
		data: booking,
		success: function(responseText){
			if(responseText.messages.error.length>0){
				if (responseText.messages.error[0]=='shipper.ref.error') {
					var overRide = confirm("Shipper requires reference number. Confirm override.(Ok/Cancel)");
					if(overRide == true){
						$('#refNumOverRideForShipper').val("Y");
						if($('#refNumOverRideForConsignee').val()=="N" || $('#refNumOverRideForConsignee').val()==""){
							validateBookingReferenceNumber();
						}
					}else{
						$('#refNumOverRideForShipper').val("N");
						$.unblockUI();
						$('#bookingSave').attr("disabled", false);
					}
				}else if (responseText.messages.error[0]=='consignee.ref.error') {
					var overRide = confirm("Consignee requires reference number. Confirm override.(Ok/Cancel)");
					if(overRide == true){
						$('#refNumOverRideForConsignee').val("Y");
						validateConsigneeZip();
					}else{
						$('#refNumOverRideForConsignee').val("N");
						$.unblockUI();
						$('#bookingSave').attr("disabled", false);
					}
				}else if (responseText.messages.error[0]=='cnee.invalid.zip') {
					var overRide = confirm("Consignee zip is invalid for Dest. Confirm override.(Ok/Cancel)");
					if(overRide == true){
						$('#consigneeZipOverride').val("Y");
						isChangesValidAfterUnitsReceived();
					}else{
						$('#consigneeZipOverride').val("N");
						$.unblockUI();
						$('#bookingSave').attr("disabled", false);
					}
				}
			}else{
				validateConsigneeZip();
			}
		}
	});
}

function validateConsigneeZip(){
	if($('#consigneeZipOverride').val() != "Y"){
		var trade = $("#tradeCode").val();
		var cneeZip = $('input[name="consignee\\.zip"]').val();
		var cneeArole = $('input[name="consignee\\.addressRoleId"]').val();
		if(trade!=null && (trade=='H' || trade =='G') && cneeZip != '' && cneeArole!=''){
			var urlStr = _context +"/booking/validateConsizneeZip";
			$.ajax({
				type: "POST",
				url: urlStr,
				data: {
					zipCode: $('input[name="consignee\\.zip"]').val(),
					pod: $('#destinationPortCityCode').val(),
					cneeAroleId : $('input[name="consignee\\.addressRoleId"]').val(),
					bookingId : $('#bookingId').val()
				},
				success: function(responseText){
					if(responseText.messages.error.length>0){
						if (responseText.messages.error[0]=='cnee.invalid.zip') {
							var overRide = confirm("Consignee zip is invalid for Dest. Confirm override (Ok/Cancel)");
							if(overRide == true){
								$('#consigneeZipOverride').val("Y");
								isChangesValidAfterUnitsReceived();
							}else{
								$('#consigneeZipOverride').val("N");
								$('#bookingSave').attr("disabled", false);
								$.unblockUI();
							}
						}
					}else{
						isChangesValidAfterUnitsReceived();
					}
					$('#bookingSave').attr("disabled", false);
				}
			});
		}else{
			isChangesValidAfterUnitsReceived();
		}
	}else{
		isChangesValidAfterUnitsReceived();
	}
}

function isChangesValidAfterUnitsReceived(){
	if($('#consigneeZipOverride').val()!="Y"){
		var booking = $('#bookingForm').formSerialize();
		var urlStr = _context +"/booking/validateRCUT";
		$.ajax({
			type: "POST",
			url: urlStr,
			data: booking,
			success: function(responseText){
				if(responseText.messages.error.length>0){
					if (responseText.messages.error[0]=='updates.invalid.after.units.received') {
						var overRide = confirm("Change requires Received Unit update on BK63. Confirm override (Ok/Cancel)");
						if(overRide == true){
							$('#isChangeAcceptedAfterUnitsReceived').val("Y");
							var freightExists=checkFreightExists();
							if(freightExists==true){
								addUpdateCommodityOnBKSave();
							}else{
								saveBooking();
							}
						}else{
							$('#isChangeAcceptedAfterUnitsReceived').val("N");
							$('#bookingSave').attr("disabled", false);
							$.unblockUI();
						}
					}
				}else{
					var freightExists=checkFreightExists();
					if(freightExists==true){
						addUpdateCommodityOnBKSave();
					}else{
						saveBooking();
					}
				}
			}
		});
	}else{
		var freightExists=checkFreightExists();
		if(freightExists==true){
			addUpdateCommodityOnBKSave();
		}else{
			saveBooking();
		}
	}
}

function saveBooking(){
	blockUI();
	showSavingMessage();
	var isChangeSourceDisabled = false;
	var changeCondition=true;
	if(isRoutingModifiable && $('#vvdChangeAuthPartyCode :selected').val()!='' && 
		$('#vvdChangeAuthPartyCode').attr("disabled")=="disabled")
	{
		isChangeSourceDisabled = true;
		$('#vvdChangeAuthPartyCode').attr("disabled", false);
	}
	var booking = $('#bookingForm').formSerialize();
	if(isChangeSourceDisabled)
		$('#vvdChangeAuthPartyCode').attr("disabled", true);
	var urlStr = '';
	if($('#bookingTypeCode').val()=='B'){
		urlStr = _context +"/booking/portEditorSave";
	}else if($('#bookingTypeCode').val()=='T'){
		urlStr = _context +"/booking/saveTemplate";
		//Defect-25136 & 24921
	}if("Y"==isBookingFromQuote() && (piece!=$('#pieceCount').val()||weightOriginal!=$('#weight').val()||cubeOriginal!=$('#cube').val())){
		var rateChange=confirm("Booking created from quote,update may affect rating");
		if(rateChange){
			changeCondition=true;
			piece=$('#pieceCount').val();
			weightOriginal=$('#weight').val();
			cubeOriginal=$('#cube').val();
			
			}else{
				changeCondition=false;
				$('#pieceCount').val(piece);
				$('#weight').val(weightOriginal);
				$('#cube').val(cubeOriginal);
				$('#msgDiv').html("<div class=\"message_info\">Booking not updated.</div>");
			}
		}
	if(changeCondition==true){
	$.ajax({
		type: "POST",
		url: urlStr,
		data: booking,
		success: function(responseText){
				$("#bookingSave").attr("disabled",false);
				if(responseText.success==true){
					collapseAll();
					
					//D031169: 	Priority Stow to have a new selection list only for Alaska
					if(responseText.data.header.tradeCode!=null && responseText.data.header.tradeCode=='A'){
						setStowDataForAlaska();
					} else {
						$("#stowSelect").hide();
					}
					//D033452
					setSITFlag();
					refreshVVDInfo();
					$("#bookingId").val(responseText.data.bookingId);	
					// Comment ID
					$("#commentId").val(responseText.data.commentId);
					$('#freightCommentId').val(responseText.data.freight.commentId);
					// Entity Version ID
					//Hibernate returns the entity version before update, on insert.
					if(responseText.data.entityVersion==0)
						$("#entityVersion").val('1');
					else
						$("#entityVersion").val(responseText.data.entityVersion);
					$("#templateEntityVersion").val(responseText.data.bookingTemplate.entityVersion);
					
					if(undefined != responseText.data.header.shipmentNumber && null!=responseText.data.header.shipmentNumber){
						$("#shipmentNumber").val(responseText.data.header.shipmentNumber);
						setBookingTitle(responseText.data.header.shipmentNumber);
					}
					
					//Setting Booked Date, Time & user and Last Update Date, Time & user
					if(responseText.data.header.bookedDate!=null){
						$("#bookedDateTimeUser").html(responseText.data.header.bookedDate + " &nbsp;&nbsp;&nbsp;" + responseText.data.header.bookingCsr);
					}
					if(responseText.data.header.lastUpdateDateTime!=null){
						$("#lastUpdateDateTimeUser").html(getTimeWithoutSeconds(responseText.data.header.lastUpdateDateTime)+ " &nbsp;&nbsp;&nbsp;" + responseText.data.lastUpdateUser);
					}
					$("#savedBookingStatusCode").val(responseText.data.header.savedBookingStatusCode);
					
					//$('#commentsDiv').show();
					
					$("#bookingStatusCode").val(responseText.data.header.bookingStatusCode);
					reloadBookingGrids();
					loadFreightGrids();
					// Reload hold Grid
					//loadHoldGrid('D');
					$('#partiesExists').val(responseText.data.partiesExists);
					$('#shipmentNumberHidden').val(responseText.data.header.shipmentNumberHidden);
					$('#quoteVNConcatHidden').val(responseText.data.header.quoteVNConcatHidden);
					$('#hiddenBookedDate').val(responseText.data.hiddenBookedDate);
					
					//Sets lastOriginPortCityCode and lastDestinationPortCityCode
					$("#lastOriginPortCityCode").val(responseText.data.routing.lastOriginPortCityCode);
					$("#lastDestinationPortCityCode").val(responseText.data.routing.lastDestinationPortCityCode);
					disableCreateBookingFromQuote();
					$("#quoteExistsDiv").hide();
					$('#templateAppliedOnBookingFromScreen').val('N');
					
					if($("#bookingStatusCode").val()=='CANC'){
						//TODO - readonly call removed
						makeFormReadOnly(responseText,'bookingForm',true);
						//$("#bookingStatusCode").attr("disabled",true);
						$('#msgDiv').show();
						isBookingDeletable();
					}else{
						//TODO - readonly call removed
						makeFormReadOnly(responseText,'bookingForm',false);//TODO
						/*Booking Security*/
						if($('#bookingTypeCode').val()=='B' && isHeaderStatusUpdate){
							$("#bookingStatusCode").attr("disabled",false);
						}

						checkCopyButtons();
						processChangeSource();
						autoBillOnchangeEventFunction();
						setRoutingLoadDischargeDetails();
						
						$('#inbondNumber').attr("disabled", true);
						$('#loadServiceCode').attr("disabled", true);
						$('#dischargeServiceCode').attr("disabled", true);
						$('#overridePickupCarrierCode').attr('disabled', true);
						$('#overrideDeliveryCarrierCode').attr('disabled', true);
						$('#inland').gatesDisable();
						$('#isInBond').attr("disabled", true);
						$('#isSIT').attr("disabled", true);
						$('#vvd_premium').gatesDisable();
						$('#vvd_conventional').gatesDisable();
						
						checkPickupCarrier();
						checkDeliveryCarrier();
						/*if($('#isAutoInlandMove :selected').val()==true || $('#isAutoInlandMove :selected').val()=='true' && isRoutingModifiable)
							$('#dealerAuctionLocationCode').attr("disabled", false);
						else
							$('#dealerAuctionLocationCode').attr("disabled", true);
						if(($('#loadDschServiceGroupCode').val()!='CON' && $('#loadDschServiceGroupCode').val()!='LCL') || !isRoutingModifiable)
						{
							$('#convCgoApptCutoffDate').attr('disabled', true);
							$('#convCgoApptCutoffTime').attr('disabled', true);
							$('#convCgoEstArrivalDate').attr('disabled', true);
							$('#convCgoEstArrivalTime').attr('disabled', true);
							$('#requiredDeliveryDate').attr('disabled', true);
							//$('#milRequiredDeliveryDate').attr('disabled', true);
						}*/
						checkIssuePtDefaultValue();
					}
					$('#bookingCsr').val(responseText.data.header.bookingCsr);
					if(responseText.data.header.customerGroupId!=null){
						$("#customerGroupId").val(responseText.data.header.customerGroupId);
					}
					/*if(responseText.data.header.quoteNumber !=null){
						var quoteText = responseText.data.header.quoteNumber;
						if(responseText.data.header.quoteVersion!=null && responseText.data.header.quoteVersion!=''){
							quoteText = quoteText + "-"+responseText.data.header.quoteVersion;
						}
						$('#quoteNumberLabel').html("<a style=\"color: blue\" href= " + _context + "/quote/getQuote?quoteId="+ responseText.data.header.appliedQuoteId +">"+quoteText+"</a>");//quoteText);
					}*/
					checkIfBookingFromQuote();
					isBookingChanged = "N";
					$('#quoteVNConcat').attr("disabled", true);
					$("#bookingStatusCode").attr("disabled", false);
					$('#checkRequiredDispatch').val(responseText.data.checkRequiredDispatch);
					
					enableDisableFreightButtons(responseText.data.freight.commodityLines.length, $('select#currentCommodityLine').val());
					
					$('#createUser').val(responseText.data.createUser);
					
					if(($.trim($('#bookingCsr').val()) == 'EDIBKG' && $('#bookingStatusCode').val()=='APPR') 
							|| ($.trim($('#bookingCsr').val()) != 'EDIBKG' && ($('#bookingStatusCode').val()=='APPR' || $('#bookingStatusCode').val()=='OFFR'))) {
						
						//Send EDI Confirmation
						sendEDIConfirmation('saveBkng');
					}
					
					$('#isRequirePrePayment').val(responseText.data.header.isRequirePrePayment);
					createCommentFunc();
					
					setAutoBillMandatory();
					
					if(isHistoryDisplayOnly) $('#historyDiv').show();
					
				}else{
					if($("#bookingId").val() == undefined || $("#bookingId").val()=='' || $("#bookingId").val() == null){
						$("#bookingStatusCode").attr("disabled",true);
					}
				}
				//enableDisableClearButton()
				showResponseMessages("msgDiv", responseText);
				
				if($.trim($('#customerGroupId :selected').text())==GOVERNMENT_NAME && ($.trim($('#loadDschServiceGroupCode').val())=='CON' || $.trim($('#loadDschServiceGroupCode').val())=='LCL') && $.trim($('#isAllowBookingUnit').val())=="Y"){
					if($("#tcnGrid").getGridParam("records")!=0 && $("#tcnGrid").getGridParam("records")!=$('#pieceCount').val()){
						var messageContent = $('#msgDiv').html();
							messageContent += '<div class="message_warning">Pieces Count does not equal number of TCNs</div>';
							$('#msgDiv').html(messageContent);
					}
				}
				
				//Enables-disables footer buttons if booking exists
				enableDisableFooterButtons();
				
				// Set total charges incase of POV commodity
				if($("#bookingStatusCode").val()=='APPR' || $("#bookingStatusCode").val()=='OFFR'){
					var amount=responseText.data.header.actualTotalChargeAmount;
					if(amount!=null && amount!='' && ! isNaN(amount)){
						amount = parseFloat(amount); 
						$('#chargeCurrency').text('$');
						$('#actualTotalChargeAmount').text(amount.toFixed(2));
					}else if(amount==null || amount==''){
						$('#chargeCurrency').text('');
						$('#actualTotalChargeAmount').text('');
					}
				}else{
					$('#chargeCurrency').text('');
					$('#actualTotalChargeAmount').text('');
				}
				
				if($('#isCustomizeNameAddress').val() == 'true') {

					$('#isCustomizeNameAddress').val('false');

					if($('#partiesExists').val()=='true'){
						bookingHeaderLink("customizednameandaddress/showForm",false);
					}else{
						alert("No Parties exists.");
					}
				}
				
				if($('div.message_error', '#msgDivFrt').html()!=''){
					$('#msgDivFrt').html('');
					$('#msgDivFrt').hide();
		 		}
				//D027551: 	HOLDS - AUTOBILL - XBK62 - didnt pop up in GATES 
				/*if(isHoldOverlayBottomEnabled){
					openUnreleasedHoldGridOnIntialDisplay("booking");
				}*/
				
				$.unblockUI();
		}
	});
}else{
	$.unblockUI();
	$('#bookingSave').attr("disabled", false);
	
}
}

function setStowDataForAlaska(){
	if($('#bookingTypeCode').val()=='B'){
		$("#stowSelect").show();
		if($("#stowCharAlaska").get(0).options.length == 1){
			var urlStr = _context +"/booking/freight/getPriorityStowForAlaska";
			$.ajax({
				type: "GET", 
				url: urlStr,
				async: false,
				dataType:'json',
				success: function(responseData){			
					if(responseData.success==true){
						var stowList = responseData.data;
						$('#stowCharAlaska option').remove();
						$("#stowCharAlaska").get(0).options[0] = new Option("Select", "");
						$.each(stowList, function(index,codeDescription) {
							$("#stowCharAlaska").get(0).options[$("#stowCharAlaska").get(0).options.length] = new Option(codeDescription.description, codeDescription.description);
						});
					} 
				}
			});
		}
	}
}
//D033452
function setSITFlag() {
	var urlStr = _context + '/booking/specialservice/getSITFlag?entityName=booking';
	$.ajax({
		type : "GET",
		url : urlStr,
		success : function(responseData) {
			if(responseData.success){
				if (responseData.data) {
					$('#isSIT').val("true");
				} else {
					$('#isSIT').val("false");
				}
			}
		}
	});
}

function getTimeWithoutSeconds(timeWithSeconds){
	var retValue ="";
	if(timeWithSeconds!= null && timeWithSeconds != ''){
		retValue = timeWithSeconds.substring(0,timeWithSeconds.lastIndexOf(":"));
		return retValue;
	}else{
		return timeWithSeconds;
	}
}
function setAssignLinkValue(responseText){
	if(responseText.data.header == undefined || responseText.data.header.shipmentNumber == '' || responseText.data.header.shipmentNumber == null /*|| responseText.data.header.shipmentNumber==responseText.data.header.quoteNumber*/){
		$('#assignLink').html("Assign Quote");
	}else{
		if(responseText.data.header.quoteNumber == '' || responseText.data.header.quoteNumber ==null/* || responseText.data.header.quoteId ==null*/){
			$('#assignLink').html("<a href=\"javascript:quotePopupSearch('assign');\">Assign Quote</a>");
		}else{
			$('#assignLink').html("<a href=\"javascript:removeAssignQuote();\">Remove Quote</a>");
		}
		// enable link for BKPO when booking has saved.
	}
}

function setBookingTitle(shipmentNumber){
	//Workaround to fix dynamic setting of page title
	if($('#bookingTypeCode').val()=='B')
		window.location.hash = ""+new Date().getTime();
	
	var bookingTitle = $('title').text().split("-");
	if(shipmentNumber!=null && shipmentNumber!=''){
		document.title = bookingTitle[0]+" - "+shipmentNumber;
	}
	else{
		document.title = bookingTitle[0];
	}
}

function removePopUps(){
	$("#bookingForm").validationEngine('hideAll');
}

function showJSON(responseText)  {
	setBookingTitle(responseText.data.header.shipmentNumber);	
	
	// Booking Id
	$("#bookingId").val(responseText.data.bookingId);
	
	//Comment Id
	$("#commentId").val(responseText.data.commentId);
	

	//Entity Versiod Id
	$("#entityVersion").val(responseText.data.entityVersion);

	//Header
	$("#bookingStatusCode").attr("disabled",false);
	$("#header").loadJSON(responseText.data.header);
	if(responseText.data.header.tradeCode!=null && responseText.data.header.tradeCode!=''){
		$('#previousTradeCode').val(responseText.data.header.tradeCode);
	}
	else{
		$('#previousTradeCode').val("");
	}

	$('#isRequireCustomerVerifyAdd').val(responseText.data.header.isRequireCustomerVerifyAdd);
	$('#isRequireCustomerVerifyChg').val(responseText.data.header.isRequireCustomerVerifyChg);
	
	if(responseText.data.header.bookingTemplateNumber != undefined && responseText.data.header.bookingTemplateNumber!=null){
		$("#bookingTemplateNumber").html("<a href='#' onclick=\"checkForChangeInBooking('" + responseText.data.header.bookingTemplateNumber +"');\" style=\"color: blue\">"+ responseText.data.header.bookingTemplateNumber +"</a>");
		tempShipperAddress= responseText.data.shipper.addressRoleId;
		tempConsigneeAddress=responseText.data.consignee.addressRoleId;
		//D029999:For consignee/Shipper it needs to look at the template type and only remove if it is that type of template. 
		tempPartyTypeCode=responseText.data.bookingTemplate.partyTypeCode;
	}
	else
		{
		tempShipperAddress= '';
		tempConsigneeAddress='';
		tempPartyTypeCode="";
		}
	if(responseText.data.header.quoteNumber!=null && (responseText.data.header.quoteNumber == responseText.data.header.shipmentNumber))
		$('#quoteVNConcat').val(responseText.data.header.quoteNumber);//+"."+responseText.data.header.quoteVersion);
	
	if(responseText.data.header.quoteNumber !=null){
		var quoteText = responseText.data.header.quoteNumber;
		if(responseText.data.header.quoteVersion!=null && responseText.data.header.quoteVersion!=''){
			quoteText = quoteText + "-"+responseText.data.header.quoteVersion;
		}
		$('#quoteNumberLabel').html("<a style=\"color: blue\" href= " + _context + "/quote/getQuote?quoteId="+ responseText.data.header.appliedQuoteId +">"+quoteText+"</a>");//quoteText);
	}
	
	if(responseText.data.header.quoteAmount!=null)
		$('#quoteAmountDiv').text('$'+responseText.data.header.quoteAmount);
	
	$('#createBkngTmplSeqNbrDs').val(responseText.data.header.createBkngTmplSeqNbrDs);

	//Setting Booked Date, Time & user and Last Update Date, Time & user
	if(responseText.data.header.bookedDate!=null){
		//$("#bookedDateTimeUser").html(getTimeWithoutSeconds(responseText.data.header.createDateTime)+ " &nbsp;&nbsp;&nbsp;" + responseText.data.createUser);
		$("#bookedDateTimeUser").html(responseText.data.header.bookedDate+ " &nbsp;&nbsp;&nbsp;" + responseText.data.header.bookingCsr);
	}
	if(responseText.data.header.lastUpdateDateTime!=null){
		$("#lastUpdateDateTimeUser").html(getTimeWithoutSeconds(responseText.data.header.lastUpdateDateTime)+ " &nbsp;&nbsp;&nbsp;" + responseText.data.lastUpdateUser);
	}
	
	$("#bookingTemplate").loadJSON(responseText.data.bookingTemplate);
	$('#templateDelete').attr('disabled',false);
	//allow Assign Quote only in case of empty booking #
	if(responseText.data.header.shipmentNumber == '' || responseText.data.header.shipmentNumber == null/*|| responseText.data.header.shipmentNumber==responseText.data.header.quoteNumber*/){
		$('#assignLink').html("Assign Quote");
	}else{
		if(responseText.data.header.quoteNumber =='' /*|| responseText.data.header.quoteId ==''*/){
			$('#assignLink').html("<a href=\"javascript:quotePopupSearch('assign');\">Assign Quote</a>");
		}else{
			$('#assignLink').html("<a href=\"javascript:removeAssignQuote();\">Remove Quote</a>");
		}
	}

	// Setting lastCustomerGroupId
	if(responseText.data.header.customerGroupId!=null){
		$("#lastCustomerGroupId").val(responseText.data.header.customerGroupId);
	}
	else{
		$("#lastCustomerGroupId").val("");
	}

	//Shipper
	shipperAddress = responseText.data.shipper.address;
	$("#shipper").loadJSON(responseText.data.shipper);
	$('#shipperName').val($('input[name="shipper\\.organizationName"]').val());
	loadAdditionalShipperDetails(responseText);
	
	processShipperConsigneeColor("shipper");

	//Consignee
	consigneeAddress = responseText.data.consignee.address;
	$("#consignee").loadJSON(responseText.data.consignee);
	$('#consigneeName').val($('input[name="consignee\\.organizationName"]').val());
	loadAdditionalConsigneeDetails(responseText);
	
	processShipperConsigneeColor("consignee");
	checkCopyButtons();

	//Parties
	$("#maintainBookingParties").loadJSON(responseText.data.header);
	debtorCode = $('#prepaidCollectCode :selected').val();
	
	autoBillOnchangeEventFunction();
	setPartiesHeader();
	
	//MarksNumbers
	$("#marksAndNumbers").val(responseText.data.header.marksAndNumbers);
	
	//Routing
	$("#maintainBookingRouting").loadJSON(responseText.data.routing);
	if($.trim($('#loadDschServiceGroupCode').val()) == "AU" && ($.trim($('#customerGroupId :selected').text()) == POV_NAME || $.trim($('#customerGroupId :selected').text()) == ALASKA_POV_NAME))
		$('#premiumRDD').val(responseText.data.header.requiredDeliveryDate);
	$('#pickupZoneDisplay').html(responseText.data.routing.pickupZone);
	$('#deliveryZoneDisplay').html(responseText.data.routing.deliveryZone);
	$("#maintainBookingOverrides").loadJSON(responseText.data.routing);
	populateLoadDischargeLists(responseText.data.routing);
	setGlobalVariableValues();
	changeTextColour();
	setOverridesHeader();
	if($('#isInBond :selected').val()==true || $('#isInBond :selected').val()=='true' && isRoutingModifiable)
		$('#inbondNumber').attr("disabled", false);
	else
		$('#inbondNumber').attr("disabled", true);
	checkPickupCarrier();
	checkDeliveryCarrier();
	if($('#isAutoInlandMove :selected').val()==true || $('#isAutoInlandMove :selected').val()=='true' && isRoutingModifiable)
		$('#dealerAuctionLocationCode').attr("disabled", false);
	else
		$('#dealerAuctionLocationCode').attr("disabled", true);
	if(responseText.data.header.requiredDeliveryDate!=null && responseText.data.header.requiredDeliveryDate!=''){
		$("#requiredDeliveryDate").val(responseText.data.header.requiredDeliveryDate);
	}
	else{
		$("#requiredDeliveryDate").val('');
	}
	
	//Commodity
	$("#okAlreadyPressed").val("false");
	$('#unitOfMeasureSourceCode').val(responseText.data.header.unitOfMeasureSourceCode);
	getFreightJSONresponse(responseText.data.freight);
	showFreight($.trim($('#customerGroupId :selected').text()));
	setFirstVVD();
	$('#previousTradeCode').val($('#tradeCode :selected').val());
	$('#lastCustomerGroupId').val($('#customerGroupId :selected').val());
	$('#showAlertTCGLDSP').val("true");
	
	//Military
	$("#maintainBookingMilitary").loadJSON(responseText.data.header);
	$("#maintainBookingMilitary").loadJSON(responseText.data.militaryBooking);
	$('#militaryPortCallFileNumber').trigger('change');
	//RDD
	if(responseText.data.militaryBooking.requiredDeliveryDate!=null && responseText.data.militaryBooking.requiredDeliveryDate!=''){
		$("#milRequiredDeliveryDate").val(responseText.data.militaryBooking.requiredDeliveryDate);
	}
	/*else if(isMilitaryModifiable){
		$("#milRequiredDeliveryDate").val('01-01-0001');
	}*/
	else
		$("#milRequiredDeliveryDate").val('');
	
	//D016178
	if($.trim($('#customerGroupId :selected').text())==GOVERNMENT_NAME && ($.trim($('#loadDschServiceGroupCode').val())=='CON'||$.trim($('#loadDschServiceGroupCode').val())=='LCL') && $.trim($('#isAllowBookingUnit').val())=="Y"){
		if(responseText.data.tcnExists){
		setIBSCodeMandatory();
		if($('#militaryIbsStatusCode option:selected').text()!=''){
			setCargoPickupDeliveryMandatory($('#militaryIbsStatusCode option:selected').text().split(":")[1]);
		}
		}
	}
	else{
		resetIBSCode();
		resetCargoPickup();
		resetCargoDelivery();
	}
	
	//Booking Overrides
	$("#maintainBookingOverrides").loadJSON(responseText.data.routing);
	
	$('#commentsDiv').show();
	if(isHistoryDisplayOnly) $('#historyDiv').show();
	//collapseAll();

	if(responseText.data.shipper.organizationName==null)
		responseText.data.shipper.organizationName ='';
	if(responseText.data.consignee.organizationName==null)
		responseText.data.consignee.organizationName='';

	updateShipperConsigneeNames(responseText);
	isBookingDeletable();
	
	$('#bookingTemplateOwnerPartyType').val(responseText.data.bookingTemplate.bookingTemplateOwnerPartyType);
	$('#partiesExists').val(responseText.data.partiesExists);
	$('#shipmentNumberHidden').val(responseText.data.header.shipmentNumberHidden);
	$('#quoteVNConcatHidden').val(responseText.data.header.quoteVNConcatHidden);
	$('#hiddenBookedDate').val(responseText.data.hiddenBookedDate);
	if(responseText.data.shipper.organizationName!='')
		setShipperDivName(" " +responseText.data.shipper.organizationName);
	if(responseText.data.consignee.organizationName!='')
		setConsigneeDivName(" " +responseText.data.consignee.organizationName);
	
	//Added method for Marks Header Checkbox
	if(responseText.data.header.marksAndNumbers=='' || responseText.data.header.marksAndNumbers==null){
		$('#marksHeaderCheckBox').attr('checked', false);
	}else{
		$('#marksHeaderCheckBox').attr('checked', true);
	}
	if(responseText.data.header.quoteNumber!=null && (responseText.data.header.quoteNumber == responseText.data.header.shipmentNumber)){
		$('#quotePopUpSearch').hide();
	}else{
		$('#quotePopUpSearch').show();
	}
	disableCreateBookingFromQuote();
	
	if($("#bookingStatusCode").val()=='APPR' || $("#bookingStatusCode").val()=='OFFR'){
		var amount=responseText.data.header.actualTotalChargeAmount;
		if(amount!=null && amount!='' && ! isNaN(amount)){
			amount = parseFloat(amount); 
			$('#chargeCurrency').text('$');
			$('#actualTotalChargeAmount').text(amount.toFixed(2));
		}
	}else{
		$('#chargeCurrency').text('');
		$('#actualTotalChargeAmount').text('');
	}
	$('#bookingCsr').val(responseText.data.header.bookingCsr);
	$('#checkRequiredDispatch').val(responseText.data.checkRequiredDispatch);
	isBookingChanged = "N";
	$('#freightCommentId').val(responseText.data.freight.commentId);
	$('#ediTypeCode').val(responseText.data.header.ediTypeCode);
	$('#isRequirePrePayment').val(responseText.data.header.isRequirePrePayment);
	$('#createUser').val(responseText.data.createUser);
	
	createCommentFunc();
	setHazCount(responseText.data.header.hazardCount);
}

function setHazCount(cnt) {
	$('#hazmat').text("Hazmat("+cnt+")");
}

function disableCreateBookingFromQuote(){
	if($('#shipmentNumberHidden').val()==''){
		$('#quoteVNConcat').attr("disabled",false);
		$('#quoteLinkDiv').gatesEnable();
		$('#quoteLinkDiv').html("<a id=\"quotePopUpSearch\" href=\"javascript:quotePopupSearch('create');\">\<img src=\""+_context+"/resources/images/search.png\" alt=\"search\" style=\"vertical-align: middle;margin-bottom:6px;\"/></a>");
	}else{
		$('#quoteVNConcat').attr("disabled",true);
		$('#quoteLinkDiv').gatesDisable();
	}
}

function setShipperCommMethodValue(shipper){
	if(shipper.communicationMethodCode=='P'){
		$('#shipperComm1').attr('checked', true);
		$('#shipperComm1').val("P");
	}
	else if(shipper.communicationMethodCode=='C'){
		$('#shipperComm2').attr('checked', true);
		$('#shipperComm2').val("C");
	}
	else if(shipper.communicationMethodCode=='F'){
		$('#shipperComm3').attr('checked', true);
		$('#shipperComm3').val("F");
	}
	else if(shipper.communicationMethodCode=='E'){
		$('#shipperComm4').attr('checked', true);
		$('#shipperComm4').val("E");
	}else{
		$('#shipperComm1').attr('checked',true);
		$('#shipperComm2').attr('checked',false);
		$('#shipperComm3').attr('checked',false);
		$('#shipperComm4').attr('checked',false);
	}
}

function setConsigneeCommMethodValue(consignee){
	if(consignee.communicationMethodCode=='P'){
		$('#consigneeComm1').attr('checked', true);
		$('#consigneeComm1').val("P");
	}
	else if(consignee.communicationMethodCode=='C'){
		$('#consigneeComm2').attr('checked', true);
		$('#consigneeComm2').val("C");
	}
	else if(consignee.communicationMethodCode=='F'){
		$('#consigneeComm3').attr('checked', true);
		$('#consigneeComm3').val("F");
	}
	else if(consignee.communicationMethodCode=='E'){
		$('#consigneeComm4').attr('checked', true);
		$('#consigneeComm4').val("E");
	}else{
		$('#consigneeComm1').attr('checked',true);
		$('#consigneeComm2').attr('checked',false);
		$('#consigneeComm3').attr('checked',false);
		$('#consigneeComm4').attr('checked',false);
	}
}

//post-submit callback 
function showResponseMessages(msgDivId, responseText)  {
  	if (responseText.messages) {

		var messages = responseText.messages;
		var messageContent = '';
		if (messages.error.length > 0) {
			var array = messages.error;
			var len = messages.error.length;
			for (var i=0; i<len; i++) {
				messageContent += '<div class="message_error">' + array[i] + '</div>';
				//D026921: 	Maintain Booking to Assignment Maintenance
				if(array[i] != undefined && array[i].match("^Booking Assignment Maintenance required")){
					var msg = array[i].split("|");
					messageContent = '<div class="message_error">'+ msg[0] + "<a href="+_context + "/bookingMaintenance/showScreen?containerNo="+msg[1]+">Click Here</a>"+'</div>';
				}
				//D026482: 	Maintain Booking - error message address role must be active. It turned out to be the consignee however the message should tell you what party needs updated
				if(array[i] != undefined && array[i] != null && array[i].match("^Address Role must be active for ")){
					expandAll();
					if(array[i].match("Shipper.$")){
						//$('input[name="shipper\\.organizationName"]').css('color', 'red');
						$('input[name="shipper\\.organizationName"]').css('backgroundColor', "#FFBABA");
					} else if(array[i].match("Consignee.$")){
						//$('input[name="consignee\\.organizationName"]').css('color', 'red');
						$('input[name="consignee\\.organizationName"]').css('backgroundColor', "#FFBABA");
					} else {
						 var rowIDs = jQuery("#gridIdForParties").getDataIDs();
						 for (var j=0;j<rowIDs.length;j=j+1)
					     { 
							 var rowData=jQuery("#gridIdForParties").getRowData(rowIDs[j]);
							 if(rowData.partyTypeDescription != undefined && rowData.partyTypeDescription != null &&
									  array[i].match(rowData.partyTypeDescription)){
								 $('#gridIdForParties').jqGrid('setCell', j+1, 'organizationName','','',{style: 'background : #FFBABA'},'');
							 }
					     }
					}
				}
			}
		}

		if (messages.warn.length > 0) {
			var array = messages.warn;
			var len = messages.warn.length;
			for (var i=0; i<len; i++) {
				messageContent += '<div class="message_warning">' + array[i] + '</div>';
				//D026921: 	Maintain Booking to Assignment Maintenance
				if(array[i] != undefined && array[i].match("^Booking Assignment Maintenance required")){
					var msg = array[i].split("|");
					messageContent = '<div class="message_warning">'+ msg[0] + "<a href="+_context + "/bookingMaintenance/showScreen?containerNo="+msg[1]+">Click Here</a>"+'</div>';
				}
			}
		}
		
		if (messages.info.length > 0) {
			var array = messages.info;
			var len = messages.info.length;
			for (var i=0; i<len; i++) {
				messageContent += '<div class="message_info">' + array[i] + '</div>';
			}
		}

		if (messages.success.length > 0) {
			var array = messages.success;
			var len = messages.success.length;
			for (var i=0; i<len; i++) {
				messageContent += '<div class="message_success">' + array[i] + '</div>';
			}
		}

		$('#'+msgDivId).html(messageContent);
		
		if(messageContent!='')
		{
			if(msgDivId=='msgDiv')
				window.scrollTo(0, 0);
			/*else
			{
				var offset = $('#'+msgDivId).offset();
				window.scrollTo(offset.left, offset.top);
			}*/
		}
		
		if (messages.error.length > 0) {
			triggerErrorMessageAlert(msgDivId);
		}
  	}
}

function selectForFormSerialize(radioButtonObj, value)
{
	$(radioButtonObj).attr("checked", true);
	$(radioButtonObj).val(value);
}

//function to reset default values in form (in case clearForm() is called)
function resetDefault(){
	//$('select').attr('selectedIndex',0);
	$('select option:first-child').attr("selected", "selected");
	setDefaultForAssignLink();
	//$('#overrideInitialLtvDate').val('01-01-0001');
	$('#overrideInitialLtvDate').css('color','black');
}

function populateLoadDischargeLists(routingData)
{
	lastLoadService = $.trim(routingData.loadServiceCode);
	lastDischargeService = $.trim(routingData.dischargeServiceCode);
	
	if(routingData.loadServiceCode!=null && $.trim(routingData.loadServiceCode)!='' && 
			routingData.dischargeServiceCode!=null && $.trim(routingData.dischargeServiceCode)!='')
	{
		
		function callBackA(responseTextDischageList) {
			setLoadDischargeValues(responseTextDischageList.data, '#dischargeServiceCode', $.trim(routingData.dischargeServiceCode));
			function callBack2(responseTextLoadList){
				setLoadDischargeValues(responseTextLoadList.data, '#loadServiceCode', $.trim(routingData.loadServiceCode));
				//Set Load Discharge group Code
				//setLoadDischargeGroupCode(routingData.loadServiceCode, routingData.dischargeServiceCode);
				setRoutingLoadDischargeDetails();
				setRoutingHeader();
			}
			getLoadServicesRequest(callBack2, $.trim(routingData.dischargeServiceCode));
		}
		getDischargeServicesRequest(callBackA, $.trim(routingData.loadServiceCode));

	}
	else if(routingData.loadServiceCode!=null && $.trim(routingData.loadServiceCode)!='')
	{

		function callBackB(responseTextDischageList) { // cheetah
			setLoadDischargeValues(responseTextDischageList.data, '#dischargeServiceCode', $.trim(routingData.dischargeServiceCode));
			function callBack2(responseTextLoadList) { // cheetah
				setLoadDischargeValues(responseTextLoadList.data, '#loadServiceCode', $.trim(routingData.loadServiceCode));
				setRoutingLoadDischargeDetails();
				setRoutingHeader();
			}
			getAllLoadServicesRequest(callBack2); // cheetah
		}
		getDischargeServicesRequest(callBackB, $.trim(routingData.loadServiceCode));
		
	}
	else if(routingData.dischargeServiceCode!=null && $.trim(routingData.dischargeServiceCode)!='')
	{
		
		function callBackC(responseTextLoadList) { // cheetah
			setLoadDischargeValues(responseTextLoadList.data, '#loadServiceCode', $.trim(routingData.loadServiceCode));
			function callBack2(responseTextDischargeList) { // cheetah
				setLoadDischargeValues(responseTextDischargeList.data, '#dischargeServiceCode', $.trim(routingData.dischargeServiceCode));
				setRoutingLoadDischargeDetails();
				setRoutingHeader();
			}
			getAllDischargeServicesRequest(callBack2); // cheetah				
		}
		getLoadServicesRequest(callBackC, $.trim(routingData.dischargeServiceCode));
		
	}
	else
	{
		
		function callBackD(responseTextLoadList) { // cheetah
			setLoadDischargeValues(responseTextLoadList.data, '#loadServiceCode', $.trim(routingData.loadServiceCode));
			function callBack2(responseTextDischargeList) { // cheetah
				setLoadDischargeValues(responseTextDischargeList.data, '#dischargeServiceCode', $.trim(routingData.dischargeServiceCode));
				setRoutingLoadDischargeDetails();
				setRoutingHeader();
			}
			getAllDischargeServicesRequest(callBack2); // cheetah				
		}
		getAllLoadServicesRequest(callBackD); // cheetah		

	}
}

function bookingHeaderLink(url,billStarted){
	var bookingEntityVersion = $("#entityVersion").val();
	var bookingIdHeader = $("#bookingId").val();
	var shippingIdHeader = $("#shipmentNumber").val();
	var originPortCityCode = $("#originPortCityCode").val();
	var destinationPortCityCode = $("#destinationPortCityCode").val();
	
	
	var tradeCodeHeader = $("#tradeCode").val();
	var tradeCodeValueHeader = $("#tradeCode option:selected").text();
	var bookingStatusHeader = $("#bookingStatusCode option:selected").text();
	var customerGroupHeader = $("#customerGroupId option:selected").text();
	if(customerGroupHeader == 'Select') {
		customerGroupHeader = '';
	}
	
	var placeOfRecieptHeader = $("#blOriginCityCodeDescription").val();
	var portOfLoadingHeader = $('#originPortCityCodeDescription').val();
	var portOfDischargeHeader = $("#destinationPortCityCodeDescription").val();
	var placeOfDelevieryHeader = $("#blDestinationCityCodeDescription").val();
	
	var shipperHeader = $('input[name="shipper\\.organizationName"]').val();
	var consigneeHeader = $('input[name="consignee\\.organizationName"]').val();
	
	var vvdHeader = $("#vessel").val() + ' ' + $("#voyage").val() + ' ' + $("#direction").val();
	var ldSVCHeader = '';
	
	if($("#loadServiceCode").val() != '' && $("#dischargeServiceCode").val() != '') {
		ldSVCHeader = $("#loadServiceCode").val() + ' ' + $("#dischargeServiceCode").val();	 
	} else if($("#loadServiceCode").val() == '' && $("#dischargeServiceCode").val() != '') {
		ldSVCHeader = $("#dischargeServiceCode").val();
	} else if($("#loadServiceCode").val() != '' && $("#dischargeServiceCode").val() == '') {
		ldSVCHeader = $("#loadServiceCode").val();
	}
	
	var debtorHeader =$("#prepaidCollectCode option:selected").val();
	var debtorValueHeader = $("#prepaidCollectCode option:selected").text();
	
	var bookingHeaderParam= "?bookingIdHeader="+encodeURIComponent(bookingIdHeader)+"&tradeCodeHeader="+encodeURIComponent(tradeCodeHeader)+"&bookingStatusHeader="+encodeURIComponent(bookingStatusHeader)+"&customerGroupHeader="+encodeURIComponent(customerGroupHeader)+"&placeOfRecieptHeader="+encodeURIComponent(placeOfRecieptHeader)+"&portOfLoadingHeader="+encodeURIComponent(portOfLoadingHeader)+"&portOfDischargeHeader="+encodeURIComponent(portOfDischargeHeader)+"&placeOfDelevieryHeader="+encodeURIComponent(placeOfDelevieryHeader)+"&shipperHeader="+encodeURIComponent(shipperHeader)+"&consigneeHeader="+encodeURIComponent(consigneeHeader)+"&vvdHeader="+encodeURIComponent(vvdHeader)+"&ldSVCHeader="+encodeURIComponent(ldSVCHeader)+"&debtorHeader="+encodeURIComponent(debtorHeader)+"&debtorValueHeader="+encodeURIComponent(debtorValueHeader)+"&tradeCodeValueHeader="+encodeURIComponent(tradeCodeValueHeader)+"&shippingIdHeader="+encodeURIComponent(shippingIdHeader)+"&originPortCityCode="+encodeURIComponent(originPortCityCode)+"&destinationPortCityCode="+encodeURIComponent(destinationPortCityCode)+"&bookingEntityVersion="+encodeURIComponent(bookingEntityVersion)+"&isNavigationFromMenu=N";

	 
	if(billStarted == true){
		document.location.href= _context +"/"+url;
	}else{
		document.location.href= _context +"/booking/"+url+bookingHeaderParam;
	}

	//window.open(_context +"/booking/"+url+bookingHeaderParam);

	
}

function isBookingDeletable(){
	if($('#bookingId').val()!=null && $('#bookingId').val()!='' && $('#savedBookingStatusCode').val()=='CANC'){
		if($('#quoteVNConcat').val()!='' && $('#shipmentNumber').val() == $('#quoteVNConcat').val() && $('#bookingStatusCode').val()=='CANC'){
			$("#bookingDelete").attr("disabled", false);
		}else{
			$("#bookingDelete").attr("disabled", true);
		}
	}
}

function deleteBooking(){
	$.ajax({
		type: "POST",
		url: _context +"/booking/delete",
		data: {
			shipmentNumber: $("#shipmentNumber").val(),
			bookingId: $('#bookingId').val(),
			quoteId: $('#quoteId').val()
		},
		success: function(responseText){
			if (responseText.messages.error.length == 0) {
				clearAndResetBookingScreen();
				//we have to call it seperately bcoz we do not want it to execute everytime showJSON runs.
				//getTemplateNumberForId();
				checkIfTemplateToBeDisabled();
				$("#bookingStatusCode").val("");
				$("#savedBookingStatusCode").val("");
				//reloadBookingGrids();
				setDefaultForBookingStatus();
				setDefaultForAssignLink();
				clearHeaderData();
				$('#commentsDiv').hide();
				$('#historyDiv').hide();
				//$("#shipperConsigneeNameDiv").html("<b>Shipper Consignee</b>");
				//setBookingTitle("");
				$("#bookingDelete").attr("disabled", true);
				resetDivNames();
				$("#bookedDateTimeUser").html("");
				$("#lastUpdateDateTimeUser").html("");
				$('#quotePopUpSearch').show();
				//TODO - readonly call removed
				makeFormReadOnly(responseText,'bookingForm',false);
				$('#quoteVNConcat').attr("disabled",false);
				$('#quoteLinkDiv').gatesEnable();
				$('#bookingSave').attr("disabled",false);
				$("#bookingStatusCode").val("");
				resetBookingForm();
				clearHiddenFieldsOnDelete();
				enableDisableButtonOnDelete();
				isBookingChanged = "N";
				reInitOnClear();
				enableDisableNote();	
				expandAll();
			}
			//Messages
			showResponseMessages("msgDiv", responseText);
			$('#msgDiv').show();
			$('#commentsDiv').show();
			//enableDisableClearButton();
		}
	});
}

function enableDisableButtonOnDelete(){
	$('#bookingSave').attr("disabled",false);
	
	$('#dispatchBtn').attr("disabled",true);
	$('#sendDoc').attr("disabled",true);
	$('#customizeNameAddress').attr("disabled",true);
	$('#updatepayment').attr("disabled",true);
	$('#dispatchBtn').attr("disabled",true);
	$('#sendDocsendDoc').attr("disabled",true);
	$('#customizeNameAddress').attr("disabled",true);
	
	$('#bookingStatusCode').attr("disabled",true);
	
	$('#maintainBookingRouting').gatesEnable();
	$('#bookingVVDRoutingDiv').gatesEnable();

}

function clearHiddenFieldsOnDelete(){
	 $("#bookingId").val("");
	 $("#commentId").val(null);
	 $("#entityVersion").val(null);
	 $("#shipmentNumberHidden").val("");
	 $("#refNumOverRideForShipper").val("");
	 $("#refNumOverRideForConsignee").val("");
	 $("#consigneeZipOverride").val("");
	 $("#userFromMenu").val(null);
	 
	 $("#ratingAttributesChanged").val(null);
	 $("#bookingTemplateOwner").val(null);
	 $("#showQuoteForAroleOnTemplatePull").val(null);
	 $("#bookingTemplateOwnerPartyType").val(null);
	 $("#bookingStatusCodeHidden").val(null);
	 $("#quoteIsLoadedOnScreen").val('');
	 $("#isCustomizeNameAddress").val(null);
	 $("#billExists").val(null);
	 $('#shipmentNumberHidden').val(null);
}

//common method for reloading all grids for booking
function reloadBookingGrids(){
	//$("#gridIdForParties").trigger('reloadGrid');
	$("#vvdRoutingGrid").trigger("reloadGrid");
	//D032770: 	New Port Editor permission Port Editor access : K&L Beer Bookings
	$("#referenceNumberGrid").trigger('reloadGrid');
	//$("#dodaacGrid").trigger('reloadGrid');
	$("#specialServiceGrid").trigger('reloadGrid');
	$('#hazGrid').trigger("reloadGrid");
	//$("#gridIdForClauses").trigger('reloadGrid');
	//loadHoldGrid('D');
	/*setTimeout(function(){
		$("#gridIdForParties").trigger('reloadGrid');
		//$("#equipmentGrid").trigger('reloadGrid');
	}, 500);*/
}

function clearHeaderData(){
	$("#bookingStatusCode").attr("disabled",true);
	$("#createDate").html("");
	$("#lastUpdateDate").html("");
	$("#bookingTemplateNumber").html("");
	$('#quoteVNConcat').attr("disabled",false);
	$('#quoteLinkDiv').gatesEnable();
	$('#quoteLinkDiv').html("<a id=\"quotePopUpSearch\" href=\"javascript:quotePopupSearch('create');\">\<img src=\""+_context+"/resources/images/search.png\" alt=\"search\" style=\"vertical-align: middle;margin-bottom:6px;\"/></a>");
	removeAssignQuote();
	setDefaultForAssignLink();
	$("#quoteExistsDiv").hide();
}

//common method for making form read only [in case of opening cancelled booking]
function makeFormReadOnly(responseText, formId,readOnly){
	if(readOnly==true){
		$('#header').gatesDisable({exclude: ["hazmat"]});
		$('#maintainBookingShipperConsignee').gatesDisable();
		$('#maintainBookingParties').gatesDisable();
		$('#jqgrid').gatesEnable();
		$('#marksAndNumbers').attr('readonly',true);
		$('#maintainBookingRouting').gatesDisable();
		$('#maintainBookingCommodity').gatesDisable();
		$('#gview_freightGrid').gatesEnable();
		$('#militarySection').gatesDisable();
		$('#gview_dodaacGrid').gatesEnable();
		$('#maintainBookingSpecialServices').gatesDisable();
		
		$('#gview_specialServiceGrid').gatesEnable();
		//$('#maintainBookingClauses').gatesDisable();
		$('#gview_holdGrid').gatesEnable();
		$('#maintainBookingHold').gatesDisable();
		$('#maintainBookingOverrides').gatesDisable();
		$('#bookingVVDRoutingDiv').gatesDisable();
		
		$("div.ui-pg-div.ui-inline-del").hide();
		$("div.ui-pg-div.ui-inline-edit").hide();
		
		$('#del_freightGrid').hide();
		$('#del_referenceNumberGrid').hide();
		$('#del_equipmentGrid').hide();
		$('#del_hazGrid').hide();
		$('#del_dodaacGrid').hide();
		$('#del_specialServiceGrid').hide();
		$('#del_holdGrid').hide();
		
		//grids
		/*$("#lui_referenceNumberGrid").show();
		$("#lui_gridIdForParties").show();
		$("#lui_vvdRoutingGrid").show();
		$("#lui_referenceNumberGrid").show();
		$("#lui_freightGrid").show();
		$("#lui_dodaacGrid").show();
		$("#lui_specialServiceGrid").show();
		$("#lui_gridIdForClauses").show();*/
		
		$('#bookingSave').attr("disabled",true);
		$('#dispatchBtn').attr("disabled",true);
		$('#sendDoc').attr("disabled",true);
		$('#customizeNameAddress').attr("disabled",true);
		$('#updatepayment').attr("disabled",true);
		$('#dispatchBtn').attr("disabled",true);
		$('#sendDocsendDoc').attr("disabled",true);
		$('#customizeNameAddress').attr("disabled",true);
		//link
		$('#assignLink').html("Assign Quote");
		
	}else{
		$('#header').gatesEnable();
		//Added Security for Defect Start D027291
		if(isHeaderTradeDisplay && !isHeaderTradeUpdate){
			disableSection('headerTradeCode');
		}
		else if(isHeaderTradeDisplay && isHeaderTradeUpdate){
			enableSection('headerTradeCode');
		}
		else{
			enforceSecurityDivAndButtons('headerTradeCode', false);
		}
		if(isHeaderCustgrpDisplay && !isHeaderCustgrpUpdate){
			disableSection('headerCustomerGroup');
		}
		else if(isHeaderTradeDisplay && isHeaderTradeUpdate){
			enableSection('headerCustomerGroup');
		}
		else{
			enforceSecurityDivAndButtons('headerCustomerGroup', false);
		}
		//Added Security for Defect End D027291
		if(isShipperConsgineeModifiable){
			$('#maintainBookingShipperConsignee').gatesEnable();
		}
		if(isPartiesModifiable){
			$('#maintainBookingParties').gatesEnable();
		}
		//Security added for Defect D027297
		if(!isReferenceNumberMarksDeletable)
		{
		   $('#del_referenceNumberGrid').hide();
		}
		if(!isHoldDelete)
		{
		   $('#del_holdGrid').hide();
		}
		$('#marksAndNumbers').attr('readonly',false);
		if(isRoutingModifiable){
			$('#maintainBookingRouting').gatesEnable();
			if($('#isInBond :selected').val()==false || $('#isInBond :selected').val()=='false')
				$('#inbondNumber').attr("disabled", true);
			checkPickupCarrier();
			checkDeliveryCarrier();
			$('#bookingVVDRoutingDiv').gatesEnable();
			if(($('#vessel').val()+handleVoyage($('#voyage').val())+$('#direction').val()) == 
				($('#originalVesselCode').text()+handleVoyage($('#originalVoyage').text())+$('#originalDirectionSeq').text())
				&& $("#vvdChangeAuthPartyCode :selected").val()=='')
			{
				$('#vvdChangeAuthPartyCode').attr('disabled', true);
				$('#changeSourceLabel').html("Change Source");
			}
		}
		if(isCommodityModifiable){
			$('#maintainBookingCommodity').gatesEnable();
			enableDisableFreightButtons($('#totalCommodityLines').text(),($('#totalCommodityLines').text()!='' && $('#totalCommodityLines').text()!="0"?$('select#currentCommodityLine').val():0));
		}
		//D027295
		if(isCommodityModifiable && !isCommodityAddDelete && isHeaderUpdate && !isCommodityDisplayOnly)
		{
			$('#maintainBookingCommodity').gatesDisable();
			$('#del_equipmentGrid').hide();
			$('#del_hazGrid').hide();
		}
		if(isMilitaryModifiable){
			$('#maintainBookingMilitary').gatesEnable();
			if(responseText.data.tcnExists){
				//setIBSCodeMandatory();
				if($('#militaryIbsStatusCode option:selected').text()!=''){
					setCargoPickupDeliveryMandatory($('#militaryIbsStatusCode option:selected').text().split(":")[1]);
				}
			}
			else{
				//resetIBSCode();
				resetCargoPickup();
				resetCargoDelivery();
			}
		}
		if(isSpecialServiceModifiable){
			$('#maintainBookingSpecialServices').gatesEnable();
		}
		if(isClauseModifiable){
			$('#maintainBookingClauses').gatesEnable();
		}
		if(isHoldManualModifiable){
			$('#maintainBookingHold').gatesEnable();
		}
		if(isRoutingOverrideModifiable){
			$('#maintainBookingOverrides').gatesEnable();
		}
		
		//grids
		/*$("#lui_referenceNumberGrid").hide();
		$("#lui_referenceNumberGrid").hide();
		$("#lui_gridIdForParties").hide();
		$("#lui_vvdRoutingGrid").hide();
		$("#lui_referenceNumberGrid").hide();
		$("#lui_freightGrid").hide();
		$("#lui_dodaacGrid").hide();
		$("#lui_specialServiceGrid").hide();
		$("#lui_gridIdForClauses").hide();*/
        //Added for Security  D028931	
		if(isShipperConsgineeModifiable)
		{	
	   	  $("#shipperOneTimeCustDiv").html("<a href=\"javascript:openOneTimeCustomer('shipper');\"><img height=\"16\" border=\"0\" align=\"absmiddle\" width=\"15\" height=\"15\" alt=\"search\" src=\""+_context+"/resources/images/u388_r.png\"></img>Add One Time Customer</a>");
		  $("#consigneeOneTimeCustDiv").html("<a href=\"javascript:openOneTimeCustomer('consignee');\"><img height=\"16\" border=\"0\" align=\"absmiddle\" width=\"15\" height=\"15\" alt=\"search\" src=\""+_context+"/resources/images/u388_r.png\"></img>Add One Time Customer</a>");
		}
		if(responseText!= undefined && responseText!='')
			setAssignLinkValue(responseText);
		$("#divOfRoutingVVD").html("<a href=\"javascript:openSearchVVD('routing');\"><img src=\""+_context+"/resources/images/search.png\" alt=\"search\" style=\"vertical-align: middle;margin-bottom:6px;\"/></a>");

		$('#bookingSave').attr("disabled",false);
		$('#dispatchBtn').attr("disabled",false);
		$('#sendDoc').attr("disabled",false);
		$('#customizeNameAddress').attr("disabled",false);
		
		if($('#shipmentNumber').val() !='' && $.trim($('#isRequirePrePayment').val()) != 'false' && $.trim($('#isRequirePrePayment').val()) != false)
			$('#updatepayment').attr("disabled", false);
		else
			$('#updatepayment').attr("disabled", true);
		
		$('#dispatchBtn').attr("disabled",false);
		$('#sendDocsendDoc').attr("disabled",false);
		$('#customizeNameAddress').attr("disabled",false);
	}
	
	$("#shipmentNumber").attr('disabled', false);
	if(isHeaderStatusDisplay && !isHeaderStatusUpdate){
		disableSection('headerStatusCode');
	}
	else if(isHeaderStatusDisplay && isHeaderStatusUpdate){
		enableSection('headerStatusCode');
	}
	else{
		enforceSecurityDivAndButtons('headerStatusCode', false);
	}
	//$("#bookingStatusCode").attr("disabled", false);
	/*
	if(readOnly==true){
		$('#'+formId+' :input').attr('disabled', true);
		$('select').attr("disabled",true);
		$("#bookingSave").attr("disabled",true);
	}else{
		$('#'+formId+' :input').attr('disabled', false);
		//$('#'+ formId +' :input').removeAttr('readOnly');
		$('select').removeAttr('disabled');
		$("#bookingSave").attr("disabled",false);
		//reset to read only
		resetReadOnly();
	}*/
	
}

//if your form has read only fields at time of load, declare them here [ as readOnly true]
function resetReadOnly(){
	//shipper fields
	$('input[name="shipper\\.city"]').attr('readonly', true);
	$('input[name="shipper\\.state"]').attr('readonly', true);
	$('input[name="shipper\\.zip"]').attr('readonly', true);
	//consignee fields
	$('input[name="consignee\\.city"]').attr('readonly', true);
	$('input[name="consignee\\.state"]').attr('readonly', true);
	$('input[name="consignee\\.zip"]').attr('readonly', true);
}
/*
function checkIfQuoteShowLinkToBeShown(){
	if($("#bookingTemplateId").val()!='' && $('input[name="consignee\\.addressRoleId"]').val()!=''){
		$.ajax({
			type : "POST",
			url : _context +"/booking/getQuoteCount",
			data : {
				aroleId : $('input[name="consignee\\.addressRoleId"]').val()
			},
			success : function(responseText) {
				quoteCount = responseText.data;
				if(quoteCount<=0){
					$("#quoteExistsDiv").hide();
				}else if(quoteCount>0){
					$("#quoteExistsDiv").show();
				}
			}
		});
	}else{
		$("#quoteExistsDiv").hide();
	}
}
*/

function setAccordianTabDetails(id, displayText){
	$("#"+id).text(displayText);
}

function setScreenDetails(){
	if($('#bookingTypeCode').val()=='B'){

		//VVD and routing
		$('#bookingVVDRoutingDiv').show();
		$('#isAutoInlandMove').attr('disabled',false);
		$('#dealerAuctionLocationCode').attr('disabled',false);
		$('#militaryIbsStatusCode').attr('disabled',false);
		$('#freightMBU').show();

		$('#overrideInitialVesselName').attr('readonly',false);
		$('#overrideCustomsVesselName').attr('readonly',false);
		$('#overrideVoyageDirectionSeq').attr('readonly',false);
		$('#overrideInitialLtvDate').attr('readonly',false);
		
		$('#overrideInitialLtvDate').datepicker({
			dateFormat : 'mm-dd-yy',
			onSelect : function(dateText, elem)
			{
				isBookingChanged = "Y";
				
				if($('#overrideInitialLtvDate').val() =='')
				{
					//$('#overrideInitialLtvDate').val('01-01-0001');
					$('#overrideInitialLtvDate').css('color','black');
					$('#isOverrideInitialLtvDate').attr("checked", false);
				}
				else if($('#overrideInitialLtvDate').val() =='01-01-0001')
				{
					$('#overrideInitialLtvDate').css('color','black');
					$('#isOverrideInitialLtvDate').attr("checked", false);
				}
				else
				{
					$('#overrideInitialLtvDate').css('color','green');
					$('#isOverrideInitialLtvDate').attr("checked", true);
				}
				setOverridesHeader();
			}
		});

	}else if($('#bookingTypeCode').val()=='T'){

		//VVD and routing
		$('#bookingVVDRoutingDiv').hide();
		$('#isAutoInlandMove').attr('disabled',true);
		$('#dealerAuctionLocationCode').attr('disabled',true);
		$('#militaryIbsStatusCode').attr('disabled',true);
		$('#freightMBU').hide();

		$('#overrideInitialVesselName').attr('readonly',true);
		$('#overrideCustomsVesselName').attr('readonly',true);
		$('#overrideVoyageDirectionSeq').attr('readonly',true);
		$('#overrideInitialLtvDate').attr('readonly',true);
		$('#vvdDetailsOnCommodity').hide();
		$('#estShipLbl').css("margin-left", "250px");
	}
	
	enableDisableNote();
}

function expandAll(){
	// $('.booking-section').accordion('option', 'active', false);
	// $('.booking-section').accordion('option', 'active', 0);
	window.scrollTo(0, 0);
	$('.booking-section').each(function(index) {
		var status = $(this).accordion('option', 'active');
		if (typeof status == "boolean" && !status && index!=4) {
			$(this).accordion('option', 'active', 0);
		}
		else if(index==4){
			if(!addFreightEnabled()){
				if($('#tariff').is(':visible'))
					$($('.booking-section')[4]).accordion('option', 'active', false);
				disableAccordian(4);
			}
			else
			{
				var status = $($('.booking-section')[4]).accordion('option', 'active');
				if ((typeof status == "boolean" && !status) || (status=="0" && !$('#tariff').is(':visible'))) {
					var disabled = $($('.booking-section')[4]).accordion("option", "disabled");
					if(disabled)
					{
						$($('.booking-section')[4]).accordion("enable");
					}
					$($('.booking-section')[4]).accordion('option', 'active', 0);
				}
			}
		}
	});
	animatedcollapse.show('inland');
	if($('#bookingTypeCode').val()=='B'){
		animatedcollapse.show('routingMainDiv');
		animatedcollapse.show('cuttOffDiv');
	}
	removeErrorPointers();
	setTimeout(function(){
		window.scrollTo(0, 0);}, 500);
}

function collapseAll(){
	$('.booking-section').each(function(index) {
		$(this).accordion('option', 'active', false);
	});
	//$('.booking-section').accordion('option', 'active', false);
	//$('.booking-section').accordion('option', 'collapsible', true);
	removeErrorPointers();
	/*animatedcollapse.hide('inland');
	if($('#bookingTypeCode').val()=='B')
	{
		animatedcollapse.hide('routingMainDiv');
		animatedcollapse.hide('cuttOffDiv');
	}*/
}

function setGlobalVariableValues()
{
	lastBlOriginCode = $('#blOriginCityCode').val();
	lastBlOriginDescription = $('#blOriginCityDescription').val();
	lastBlOriginCodeDescription = $('#blOriginCityCodeDescription').val();
	
	lastOriginPortCode = $('#originPortCityCode').val();
	lastOriginPortDescription = $('#originPortCityDescription').val();
	lastOriginPortCodeDescription = $('#originPortCityCodeDescription').val();
	
	lastDestinationPortCode = $('#destinationPortCityCode').val();
	lastDestinationPortDescription = $('#destinationPortCityDescription').val();
	lastDestinationPortCodeDescription = $('#destinationPortCityCodeDescription').val();
	
	lastBlDestinationCode = $('#blDestinationCityCode').val();
	lastBlDestinationDescription = $('#blDestinationCityDescription').val();
	lastBlDestinationCodeDescription = $('#blDestinationCityCodeDescription').val();
	
	$('#lastLoadDschServiceGroupCode').val($.trim($('#loadDschServiceGroupCode').val()));
	
	if($.trim($('#lastLoadDschServiceGroupCode').val())=="CON" || $.trim($('#lastLoadDschServiceGroupCode').val())=="LCL")
		defaultHidden = true;
	else
		defaultHidden = false;
	
	//setRoutingLoadDischargeDetails();
	
	if($('#loadDschServiceGroupCode').val()=='AU')
		$('#vvdCutOff').hide();
	else
		$('#vvdCutOff').show();
	
	if($('#loadDschServiceGroupCode').val()=='CON' || $('#loadDschServiceGroupCode').val()=='LCL')
	{
		$('#vvd_conventional').show();
		if(isRoutingModifiable && $("#bookingStatusCode").val()!='CANC')
		{
			$('#convCgoApptCutoffDate').attr('disabled', false);
			$('#convCgoApptCutoffTime').attr('disabled', false);
			$('#convCgoEstArrivalDate').attr('disabled', false);
			$('#convCgoEstArrivalTime').attr('disabled', false);
			$('#requiredDeliveryDate').attr('disabled', false);
		}
		if(isMilitaryModifiable && $("#bookingStatusCode").val()!='CANC')
			$('#milRequiredDeliveryDate').attr('disabled', false);
	}
	else
	{

		$('#vvd_conventional').hide();
		$('#convCgoApptCutoffDate').val('');
		$('#convCgoApptCutoffTime').val('');
		$('#convCgoEstArrivalDate').val('');
		$('#convCgoEstArrivalTime').val('');
		$('#requiredDeliveryDate').val('');
		$('#milRequiredDeliveryDate').val('');
		
		$('#convCgoApptCutoffDate').attr('disabled', true);
		$('#convCgoApptCutoffTime').attr('disabled', true);
		$('#convCgoEstArrivalDate').attr('disabled', true);
		$('#convCgoEstArrivalTime').attr('disabled', true);
		$('#requiredDeliveryDate').attr('disabled', true);
		//$('#milRequiredDeliveryDate').attr('disabled', true);
	}

	if($('#tradeCode').val()!='')
	{
		$('#overridePlaceOfIssue').attr("disabled", true);
		if($('#tradeCode').val()=='G' || $('#tradeCode').val()=='M')
		{
			domesticForeignIndicator =  "international";
			setDefaultOverrides();
		}
		else if($('#tradeCode').val()=='F')
		{
			if($('#originPortCityCode').val()=='')
			{
				domesticForeignIndicator =  'none';
				setDefaultOverrides();
			}
			else
			{
				$.ajax({
					url: "/gates/booking/routing/validateChinaTrade?cityCode="+$('#originPortCityCode').val(),
					success: function(responseText){
						if(responseText.data=="Y")
						{
							domesticForeignIndicator =  "china";
							setDefaultOverrides();
							if($('#bookingTypeCode').val()=='B' && $('#direction').val()=='E' && $("#bookingStatusCode").val()!='CANC')
								$('#overridePlaceOfIssue').attr("disabled", false);
						}
						else
						{
							domesticForeignIndicator = "international";
							setDefaultOverrides();
						}
					}
				});
			}
		}
		else if($('#tradeCode').val()=='A') {
			$("#hazmatdiv").show();
			domesticForeignIndicator = "domestic";
			setDefaultOverrides();
		}
		else
		{
			domesticForeignIndicator = "domestic";
			setDefaultOverrides();
		}
	}
	else
	{
		domesticForeignIndicator = 'none';
		setDefaultOverrides();
	}
}

function setDefaultOverrides()
{
	//Setting overrides values if they are not overridden
	checkPlaceOfReceiptDefaultValue("check");
	checkOriginPortDefaultValue("check");
	checkDestinationPortDefaultValue("check");
	checkPlaceOfDeliveryDefaultValue("check");
	checkOriginPtDefaultValue("check");
	
	/*if(!$('#isOverrideBlOrigin').attr("checked"))
		setPlaceOfReceiptDefaultValue();
	if(!$('#isOverrideOriginPort').attr("checked"))
		setOriginPortDefaultValue();
	if(!$('#isOverrideDestinationPort').attr("checked"))
		setDestinationPortDefaultValue();
	if(!$('#isOverrideBlDestination').attr("checked"))
		setPlaceOfDeliveryDefaultValue();
	if(!$('#isOverrideCountryOfOrigin').attr("checked"))
		setOriginPtDefaultValue();*/
	
	//Setting overrides values for VVD if they are not overridden
	if($('#bookingTypeCode').val()=='B')
	{
		checkVVDVesselDefaultValue("check");
		checkVVDVoyageDefaultValue("check");
		checkIssuePtDefaultValue("check");
		/*if(!$('#isOverrideCustomsVesselName').attr("checked"))
				setVVDVesselDefaultValue();
		if(!$('#isOverrideVoyageDirectionSeq').attr("checked"))
			setVVDVoyageDefaultValue();
		if(domesticForeignIndicator=='china' && $('#direction').val()=='E')
		{
			if(isRoutingOverrideModifiable){
				$('#overridePlaceOfIssue').attr("disabled", false);
				if(!$('#isOverridePlaceOfIssue').attr("checked"))
					setIssuePtDefaultValue();
			}
		}
		else
		{
			$('#overridePlaceOfIssue').val('');
			$('#isOverridePlaceOfIssue').attr("checked", false);
			$('#overridePlaceOfIssue').attr("disabled", true);
		}
		setOverridesHeader();*/
	}
}

function validateDate(dateId, showPrompt) {
	var date = $('#'+dateId).val();
	var dateSize = date.length;
	var day;
	var month;
	var fullYear;
	var newDate;
	if(dateSize == 6){
		month = parseInt(date.substring(0,2), 10);
		day = parseInt(date.substring(2,4), 10);
		fullYear = parseInt("20"+date.substring(4,6), 10);
		newDate = date.substring(0,2)+"-"+date.substring(2,4)+"-20"+date.substring(4,6);
	}
	else if(dateSize == 8)
	{
		month = parseInt(date.substring(0,2), 10);
		day = parseInt(date.substring(2,4), 10);
		fullYear = parseInt(date.substring(4,8), 10);
		newDate = date.substring(0,2)+"-"+date.substring(2,4)+"-"+
			date.substring(4,8);
	}
	else if(dateSize == 10)
	{
		month = parseInt(date.substring(0,2), 10);
		day = parseInt(date.substring(3,5), 10);
		fullYear = parseInt(date.substring(6,10), 10);
		newDate = date.substring(0,2)+"-"+date.substring(3,5)+"-"+
			date.substring(6,10);
	}
	else
	{
		if(showPrompt){
			$('#'+dateId).validationEngine('showPrompt', '* Enter date in Format(mm-dd-yyyy)', 'error', 'topRight', true);
		}
		return false;
	}
	
	if(isNaN(day) || isNaN(month) || isNaN(fullYear))
	{
		if(showPrompt){
			$('#'+dateId).validationEngine('showPrompt', '* Enter date in Format(mm-dd-yyyy)', 'error', 'topRight', true);
		}
		return false;
	}
	else
	{
		if(fullYear<1 || fullYear>9999)
		{
			if(showPrompt){
				$('#'+dateId).validationEngine('showPrompt', '* Enter date in Format(mm-dd-yyyy)', 'error', 'topRight', true);
			}
			return false;
		}
		else if(month<1 || month>12)
		{
			if(showPrompt){
				$('#'+dateId).validationEngine('showPrompt', '* Enter date in Format(mm-dd-yyyy)', 'error', 'topRight', true);
			}
			return false;
		}
		else if(day<1 || day>31)
		{
			if(showPrompt){
				$('#'+dateId).validationEngine('showPrompt', '* Enter date in Format(mm-dd-yyyy)', 'error', 'topRight', true);
			}
			return false;
		}
		else
		{
			var isLeapYear = false;
			if((fullYear%4)==0)
				isLeapYear = true;
			
			if(month==2 && isLeapYear && day>29)
			{
				if(showPrompt){
					$('#'+dateId).validationEngine('showPrompt', '* Enter date in Format(mmm-dd-yyyy)', 'error', 'topRight', true);
				}
				return false;
			}
			else if(month==2 && !isLeapYear && day>28)
			{
				if(showPrompt){
					$('#'+dateId).validationEngine('showPrompt', '* Enter date in Format(mm-dd-yyyy)', 'error', 'topRight', true);
				}
				return false;
			}
			else if((month==4 || month==6 || month==9 || month==11)	&& day>30)
			{
				if(showPrompt){
					$('#'+dateId).validationEngine('showPrompt', '* Enter date in Format(mm-dd-yyyy)', 'error', 'topRight', true);
				}
				return false;
			}
			else
			{
				$('#'+dateId).val(newDate);
				return true;
			}
		}
	}
}

function clearBookingForm(){
	var webPageSectionIds = ['bookingHeaderDiv','maintainBookingShipperConsignee', 'maintainBookingParties', 'referenceMarks', 'marksAndNumbersSection', 'maintainBookingRouting', 'maintainBookingCommodity', 'militarySection', 'maintainBookingOverrides','bookingOverridesHeaderDiv'];
	for (var i=0; i<webPageSectionIds.length; i++) {
		clearWebPageSection(webPageSectionIds[i]);
	}
	$('#ediOrWebIndicator').text('');
	$('#containerNumber').val(equipId);
	resetBookingForm();
}

function clearWebPageSection(webPageSectionId){
	var re = /^(?:color|date|datetime|email|month|number|password|range|search|tel|text|time|url|week|hidden)$/i;
	$("#"+webPageSectionId+" :input").each(function() {
		var t = this.type, tag = this.tagName.toLowerCase();
		if (re.test(t) || tag == 'textarea') {
			this.value = '';
		}
		else if (t == 'checkbox' || t == 'radio') {
			this.checked = false;
		}
		else if (tag == 'select') {
			this.selectedIndex = 0;
		}
	});
}

function resetBookingForm(){
	removeErrorPointers();
	resetDivNames();
	setDefaultForAssignLink();
	$("#bookingStatusCode").attr("disabled",true);
	$("#createDate").html("");
	$("#lastUpdateDate").html("");
	$("#lastUpdateDateTimeUser").html("");
	$("#bookedDateTimeUser").html("");
	cleanShipperConsignee();
	changeShipperConsigneeColor("shipper", "N");
	changeShipperConsigneeColor("consignee", "N");
	$('input[name="shipper\\.address"]').attr("readonly",false);
	$('input[name="consignee\\.address"]').attr("readonly",false);
	clearHeaderData();
	$('#changeSourceLabel').html("Change Source");
	$('#originalVVD .cutOff').text('');
	$('#vvdCutOff .cutOff').text('');
	$('#pickupZoneDisplay').html('');
	$('#deliveryZoneDisplay').html('');
	/*$('#shipperRepeatContact').attr('disabled', true);
	$('#consigneeRepeatContact').attr('disabled', true);
	$('#partiesRepeatContact').attr('disabled', true);*/
	$('#autobillOptionCode').attr('disabled', true);
	$('#autobillTriggerCode').attr('disabled', true);
	$('#inbondNumber').attr('disabled', true);
	$('#overridePickupCarrierCode').attr('disabled', true);
	$('#overrideDeliveryCarrierCode').attr('disabled', true);
	$('#dealerAuctionLocationCode').attr('disabled', true);
	$('#vvdChangeAuthPartyCode').attr("disabled", true);
	$('#vvd_conventional').hide();
	$('#vvd_premium').hide();
	$('#vvdCutOff').show();
	$('#convCgoApptCutoffDate').attr('disabled', true);
	$('#convCgoApptCutoffTime').attr('disabled', true);
	$('#convCgoEstArrivalDate').attr('disabled', true);
	$('#convCgoEstArrivalTime').attr('disabled', true);
	$('#requiredDeliveryDate').attr('disabled', true);
	$('#premiumRDD').attr('disabled', true);
	clearCommodityCodeList();
	/*removeCurrentCommodity();*/
	$("#estShip").html('');
	$("#estAvail").html('');
	$("a.vinsightUnitIdUrl").html('');
	//$('#milRequiredDeliveryDate').attr('disabled', true);
	/*if(isMilitaryModifiable)
		$('#milRequiredDeliveryDate').val('01-01-0001');*/
	resetIBSCode();
	resetCargoPickup();
	resetCargoDelivery();
	$('#overridePlaceOfIssue').attr('disabled', true);
	
	if(isRoutingModifiable)
	{
		$('#blOriginCityCodeDescription').attr('disabled', false);
		$('#blDestinationCityCodeDescription').attr('disabled', false);
		$('#pickupZipCode').attr('disabled', false);
		$('#deliveryZipCode').attr('disabled', false);
		$('#overridePickupCarrierCode').attr('disabled', false);
		$('#overrideDeliveryCarrierCode').attr('disabled', false);
	}
	
	$('#billExists').val('');
	$('#commentId').val('');
	$('#commentsDiv').hide();
	$('#historyDiv').hide();
	clearGlobalVariables();
	changeTextColour();
	reloadBookingGrids();
	loadFreightGrids();
}

function clearGlobalVariables()
{
	isBookingChanged = "N";
	domesticForeignIndicator = "none";
	shipNo=0;
	
	shipperAddress = "";
	templateCaller ="";
	isTemplateFirstLoad = false;
	consigneeAddress = "";
	isOneTimerChanged = "";
	isCustomerOverridden = false;
	//savedCommMethodValue = "";
	debtorCode = "";
	isPartyChanged = "";
	partyOrg = "";
	partyAddr = "";
	repeatCaller ="";
	repeatOrgName = "";
	repeatAddress = "";
	
	lastLoadService = "";
	lastDischargeService = "";

	lastOriginPortCode = "";
	lastOriginPortDescription = "";
	lastOriginPortCodeDescription = "";

	lastDestinationPortCode = "";
	lastDestinationPortDescription = "";
	lastDestinationPortCodeDescription = "";

	lastBlOriginCode = "";
	lastBlOriginDescription = "";
	lastBlOriginCodeDescription = "";

	lastBlDestinationCode = "";
	lastBlDestinationDescription = "";
	lastBlDestinationCodeDescription = "";
	
	lastChangeSource = "";
	
	iterated = false;
	freightModified = false;
	estimatedDropOffDateModified = false;
	
	currentRowId='';
	updateEquipmentErrorOccurred = false;
	equipmentUpdated = false;
	defaultHidden = false;
	
	//countryPhoneCodes = null;
	emergencyPhoneCountryCode="";
	isSpecialServiceChanged=false;
	_SpecialServiceGridCount = -1;
	isOperDoneOnce = false;
	
	isClauseChanged = "";
	clauseCode = "";
	equipId = "";
}

function enableDisableFooterButtons(){
	var footerButtonIds = ['updatepayment', 'sendDoc', 'customizeNameAddress'];
	var showEnabled = true;
	if($("#shipmentNumber").val()!="" && $('#bookingStatusCode').val()!='CANC'){
		showEnabled = false;
	}
	
	for (var i=0; i<footerButtonIds.length; i++) {
		enableDisableFooterButton(footerButtonIds[i], showEnabled);
	}
	
	if($('#shipmentNumber').val() !='' && $.trim($('#isRequirePrePayment').val()) != 'false' && $.trim($('#isRequirePrePayment').val()) != false)
		$('#updatepayment').attr("disabled", false);
	else
		$('#updatepayment').attr("disabled", true);

	if(($.trim($('#bookingCsr').val()) == 'EDIBKG' && $('#bookingStatusCode').val()=='APPR') 
		|| ($.trim($('#bookingCsr').val()) != 'EDIBKG' && ($('#bookingStatusCode').val()=='APPR' || $('#bookingStatusCode').val()=='OFFR'))) {
		$("#sendEDI").attr("disabled", false);
	} else 
		$("#sendEDI").attr("disabled", true);
}

function enableDisableFooterButton(footerButtonId, showEnabled){
		$("#"+footerButtonId).attr("disabled", showEnabled);
}

function hideGridsEditDelete(){
	if((isReferenceNumberMarksDisplayOnly && !isReferenceNumberMarksModifiable && !isReferenceNumberMarksDeletable ) || $('#bookingStatusCode').val()=='CANC'){
		$("div.ui-pg-div.ui-inline-del").hide();
		$("div.ui-pg-div.ui-inline-edit").hide();
		$('#sData','#gbox_referenceNumberGrid').hide();
		$('#gview_referenceNumberGrid input').attr("disabled", true);
		$('#gview_referenceNumberGrid select').attr("disabled", true);
	}else if (isReferenceNumberMarksModifiable && !isReferenceNumberMarksDeletable) {
		$("div.ui-pg-div.ui-inline-del").hide();
		$("div.ui-pg-div.ui-inline-edit").show();
		$('#sData','#gbox_referenceNumberGrid').show();
		$('#gview_referenceNumberGrid input').attr("disabled", false);
		$('#gview_referenceNumberGrid select').attr("disabled", false);
	}
	else {
		$("div.ui-pg-div.ui-inline-del").show();
		$("div.ui-pg-div.ui-inline-edit").show();
		$('#sData','#gbox_referenceNumberGrid').show();
		$('#gview_referenceNumberGrid input').attr("disabled", false);
		$('#gview_referenceNumberGrid select').attr("disabled", false);
	}
}

function getCommentTypes(args){
	/*if($('#bookingId').val()==null || $('#bookingId').val()==''){
		return;
	}*/
	$.ajax({
		url: _context +"/comments/commentTypes",
		data: {
			entity: 'BKNG',
			contextScreen: 'maintainbooking'
		},
		success: function(responseText){
			if(responseText.success==true){
				var commentTypes=responseText.data;
				var string="";
				for(var i=0;i<commentTypes.length;i++){
					if(i<commentTypes.length-1){
						string=string+commentTypes[i]+",";
					}else{
						string=string+commentTypes[i];
					}
				}
				// For template overriden the values.
				if($('#bookingTypeCode').val()=="T"){
					args.displayCommentTypes='CSS,DOC,OPS';
					args.commentTypesForGrid='CSS,DOC,OPS';
				}else{
					args.commentTypesForGrid=string;
				}
				$("#comment_link").comments(args);
			}
		}
	});

}


function concludeRatingForBooking(id)
{		
	$('#re_choice_dialog').dialog( "close" );
	
	var url = "";
	if($('#reUseSelection').val() != undefined && $('#reUseSelection').val() != ""){
		url = "/booking/concludeRating?id="+id+"&reUseSelection="+$('#reUseSelection').val();
	}else{
		url =  "/booking/concludeRating?id="+id;
	}
	blockUI();
	$.ajax({
		   type: "POST",				   							   
		   url: _context +  url,
		   success: function(responseText){		
			   $.unblockUI();
			   if (responseText.data.rateView == "showError") {						
					$('#re_error_dialog').dialog('open');
					jQuery("#chargeGrid").setGridParam({rowNum:10,datatype:"json" }).trigger('reloadGrid');
					$("#ratingErrorForm").loadJSON(responseText.data);
					loadErrorOverLay(responseText);		
					$("#reErrorGrid").trigger('reloadGrid');
//					$("#reErrEstShipDate").val(responseText.data.estimatedShipDateString);
				    jQuery("#reErrorGrid").setGridParam({rowNum:10,datatype:"json" }).trigger('reloadGrid');
					$('#reErrContinueBtn').hide();
					displayBooking();
				}else if (responseText.data.rateView == "hold"){
					if(responseText.data.flow == true){
						navigateToTargetPageForFurtherFlow('Maintain Booking',responseText.data.targetPage, 
							$("#shipmentNumber").val(), responseText.data.sequenceNumber,"000",
							"2");
					}
					//D025294
					else
					{					
					navigateToTargetPageForFurtherFlow('',responseText.data.targetPage, 
							$("#shipmentNumber").val(), responseText.data.sequenceNumber,'000',"2");
					}
				}
			   else if(responseText.data.rateView == "showChoices"){
					loadChoiceOverLay(responseText);
					$('#re_choice_dialog').dialog('open');
					$("#ratingChoiceForm").loadJSON(responseText.data);
					$("#reChoiceGrid").trigger('reloadGrid');
//					$("#reChEstShipDate").val(responseText.data.estimatedShipDateString);
//					if(responseText.data.isAllChoicesUnSelectable != null 
//							&& responseText.data.isAllChoicesUnSelectable == "Y"){
//						$('#reChoiceCloseBtn').hide();	
//						$('#reChoiceContinueBtn').show();
//					}else{
//						$('#reChoiceCloseBtn').show();	
//						$('#reChoiceContinueBtn').hide();	
//					}											
				    jQuery("#reChoiceGrid").setGridParam({rowNum:10,datatype:"json" }).trigger('reloadGrid');
				}else if(responseText.data.rateView == "showWarning"){
											
					$('#re_error_dialog').dialog('open');
					$("#ratingErrorForm").loadJSON(responseText.data);
//					$("#reErrEstShipDate").val(responseText.data.estimatedShipDateString);
					jQuery("#chargeGrid").setGridParam({rowNum:10,datatype:"json" }).trigger('reloadGrid');
				    jQuery("#reErrorGrid").setGridParam({rowNum:10,datatype:"json" }).trigger('reloadGrid');
					$('#reErrCloseBtn').hide();
					$('#shipmentForm').loadJSON(responseText.data);
					showResponseMessages("msgDiv", responseText);
				}else if(responseText.data.rateView == "Success"){
					if(responseText.data.targetScreen == 'BK01'){
						displayBooking();
					}else if(responseText.data.targetScreen == 'BLRT'){
						document.location.href = _context+ "/maintainRate/loadShipmentDetails?shipmentNumber="+ 
						$("#shipmentNumber").val()+'&shipmentSequenceNumber='+responseText.data.shipmentSequenceNumber
						+'&shipmentCorrectionNumber=000&navigationUrl=2';
					}
//					showResponseMessages("msgDiv", responseText);
//					displayBooking();
				}
				else {
					$('#shipmentForm').loadJSON(responseText.data);
					jQuery("#chargeGrid").setGridParam({rowNum:10,datatype:"json" }).trigger('reloadGrid');
					showResponseMessages("msgDiv", responseText);
				}	
			   
		   }
	});	

}

function exitFromBooking() {
	$.ajax({
		type: "POST",
		url: _context+'/booking/exit',
		success: function(responseText) {
			if($('#userFromMenu').val() == 'Y') {
				document.location.href = _context + '/';
			}else if($('#userFromMenu').val() == 'approveOfferBooking') {
				document.location.href = _context + '/cas/approveOfferBkSearch.do';
			}else if($('#userFromMenu').val() == 'ediBookingQueue') {
				document.location.href = _context + '/cas/ediBookingQueueSearch.do';
			}else if($('#userFromMenu').val() == 'webBookingReviewQueue') {
				document.location.href = _context + '/cas/bkEDIReviewSearch.do';
			}else if($('#userFromMenu').val() == 'bkWireDown') {
				document.location.href = _context + '/cas/bkWireDownSearch.do';
			}else if($('#userFromMenu').val() == 'billingQueue') {
				document.location.href = _context + '/cas/bookBillWorkQueueSearch.do';
			}else if($('#userFromMenu').val().indexOf('_') > -1) {
				var values = $('#userFromMenu').val().split('_');
				if(values[0] == 'ediBookingDetail') {
					if($.trim(values[1]) == '') {
						values[1] = null;
					}
					document.location.href = _context + '/booking/edi/showForm?ediBkngRefNum=' + values[1] + '&ediShmtReqId=' + values[2];					
				}
				else if(values[0] == 'variance') {
					var bookingNo = $('#shipmentNumber').val();
					document.location.href = _context + '/containerVariance/showForm?bookingId=' + bookingNo + '&containerNumbers=' + values[1] +'&source=B';					
				}
				else
					document.location.href = _context + '/';
			}
			else
			{
				/*if($('#userFromMenu').val() == 'Y') {
					document.location.href = _context + '/cas/approveOfferBkSearch.do';
				}
				else if($.trim($('#userFromMenu').val()) != 'Y') {
					document.location.href = _context + '/cas/approveOfferBkSearch.do';
				}*/
				document.location.href = _context + '/';
			}
			
		}
	});
}

function removeErrorPointers()
{
	$('.formError').remove();
	$("#bookingForm").validationEngine('hideAll');
}

//this function checks if Booking is created from Quote. If it is so, then applies the business rules.
function checkIfBookingFromQuote(){
	/*var aHtml = "";
	if($('#shipmentNumberHidden').val() !='' && $('#quoteNumber').val()==$('#shipmentNumberHidden').val()){
		aHtml = ""
			+"<div id=\"bookingTemplateNumber\" class=\"span-2 last\"></div><img id=\"templateSearch\" src=\""+_context+"/resources/images//search.png\" border=\"0\" style=\"vertical-align: text-bottom; cursor: pointer;\" name=\"popupSearchtemplateSearch\" alt=\"Search\"/>"
			+"";
		$('#quoteVNConcat').attr('disabled',true);
	}else{
		aHtml = ""
			+"<a href=\"javascript:templatePopupSearch();\">"
			+"<div id=\"bookingTemplateNumber\" class=\"span-2 last\"></div><img id=\"templateSearch\" src=\""+_context+"/resources/images/search.png\" border=\"0\" style=\"vertical-align: text-bottom; cursor: pointer;\" name=\"popupSearchtemplateSearch\" alt=\"Search\"/>"
			+"</a>"
			+"";
		$('#quoteVNConcat').attr('disabled',false);
	}*/
	//$('#templateDiv').html(aHtml);
}

function setRoutingLoadDischargeDetails()
{
	if($('#loadServiceCode :selected').val()!='' && $('#dischargeServiceCode :selected').val()!='')
	{
		
		function callBack(responseText) { // cheetah
			if(isRoutingModifiable && responseText.data.isRequireBlOrigin!='N')
				$('#blOriginCityCodeDescription').attr('disabled', false);
			else if($('#blOriginCityCode').val()=='' && responseText.data.isRequireBlOrigin=='N')
				$('#blOriginCityCodeDescription').attr('disabled', true);
			
			if(isRoutingModifiable && responseText.data.isRequireBlDestination!='N')
				$('#blDestinationCityCodeDescription').attr('disabled', false);
			else if($('#blDestinationCityCode').val()=='' && responseText.data.isRequireBlDestination=='N')
				$('#blDestinationCityCodeDescription').attr('disabled', true);
			
			if(isRoutingModifiable && responseText.data.isRequirePickupZipCode!='N')
				$('#pickupZipCode').attr('disabled', false);
			else if($('#pickupZipCode').val()=='' && responseText.data.isRequirePickupZipCode=='N')
				$('#pickupZipCode').attr('disabled', true);
			
			if(isRoutingModifiable && responseText.data.isRequireDeliveryZipCode!='N')
				$('#deliveryZipCode').attr('disabled', false);
			else if($('#deliveryZipCode').val()=='' && responseText.data.isRequireDeliveryZipCode=='N')
				$('#deliveryZipCode').attr('disabled', true);
		}
		
		getLoadDischargePairRequest(callBack, $('#loadServiceCode :selected').val(), $('#dischargeServiceCode :selected').val()); // cheetah

	}
	else
	{
		if(isRoutingModifiable)
		{
			$('#blOriginCityCodeDescription').attr('disabled', false);
			$('#blDestinationCityCodeDescription').attr('disabled', false);
			$('#pickupZipCode').attr('disabled', false);
			$('#deliveryZipCode').attr('disabled', false);
		}
	}
	checkPickupCarrier();
	checkDeliveryCarrier();
}

function expandDefaultSections(){
	//Freight
	disableAccordian(4);
}

function expandSection(accordionIndex){
	var status = $($('.booking-section')[accordionIndex]).accordion('option', 'active');
	if (typeof status == "boolean" && !status) {
		$($('.booking-section')[accordionIndex]).accordion('option', 'active', 0);
	}
}

function collapseSection(accordionIndex){
	$($('.booking-section')[accordionIndex]).accordion('option', 'active', false);
}

function invokeBillingStartedOverlayScreen(){
	$("#billOverlayContent").show();
	$("#billBookingDialog" ).dialog( "option", "title", 'Billing Started' );
	$("#billBookingDialog").dialog('open');
}

function checkForAddOrUpdate(){
	var isUpdate = false;
	if($('#freightSeqNo').val()!=undefined && $('#freightSeqNo').val()!=null && $('#freightSeqNo').val()!=''){
		isUpdate = true;
	}
	return isUpdate;
}

function autoTabBooking(CurrentElementID, NextElementID, FieldLength) {
    //Get a reference to the two elements in the tab sequence.
    var CurrentElement = $('#' + CurrentElementID);
    var NextElement = $('#' + NextElementID);
 
    CurrentElement.keyup(function(e) {
        //Retrieve which key was pressed.
        var KeyID = (window.event) ? event.keyCode : e.keyCode;
 
        //If the user has filled the textbox to the given length and the user just pressed 
        // a number or letter, then move the cursor to the next element in the tab sequence.   
        if (CurrentElement.val().length >= FieldLength
            && ((KeyID >= 48 && KeyID <= 90) ||
            (KeyID >= 96 && KeyID <= 105)))
            NextElement.focus();
    });
}

function autoTabBookingNameSelector(source, CurrentElementID, NextElementID, FieldLength) {
    //Get a reference to the two elements in the tab sequence.
    //var CurrentElement = $('#' + CurrentElementID);
    var CurrentElement = $('input[name="'+source+'\\.'+CurrentElementID+'"]');
    var NextElement = $('input[name="'+source+'\\.'+NextElementID+'"]');
    //var NextElement = $('#' + NextElementID);
 
    CurrentElement.keyup(function(e) {
        //Retrieve which key was pressed.
        var KeyID = (window.event) ? event.keyCode : e.keyCode;
 
        //If the user has filled the textbox to the given length and the user just pressed 
        // a number or letter, then move the cursor to the next element in the tab sequence.   
        if (CurrentElement.val().length >= FieldLength
            && ((KeyID >= 48 && KeyID <= 90) ||
            (KeyID >= 96 && KeyID <= 105)))
            NextElement.focus();
    });
}

//D021198
function focusBookingNoCustomerGroupOnTemplatePull(){
	var str = $('#msgDiv').text().toLowerCase();
	if(str.search('successfully')>=0 && str.search('loaded')>0){
		window.scroll(0, 0);
		if($('#customerGroupId :selected').text()=="Select"){
			$('#customerGroupId').focus();
		}
		else{
			$('#shipmentNumber').focus();
		}
}
}

function sendEDIConfirmation(source) {
	$.ajax({
		url: _context +"/booking/sendEDI",
		data: {shipmentNumber: $("#shipmentNumber").val(), 
			   source: source},
		success: function(responseText) {
			if(source == 'sendEDI') {
				showResponseMessages('msgDiv', responseText);
			}
		}
	});
}

function expandAllNew(){
	 $('.ui-accordion-content').attr('style','display:block');
}

function applyQuoteCommonCodeForQuote(){
	//$('#bookingForm').clearForm();
	//resetDefault();
	/*if(data!=''){
		$('#quoteNumber').val(data.number);
		$('#quoteId').val(data.id);
		$('#quoteVersion').val(data.version.substr(1,4));
		$('#quoteVNConcat').val(data.number);//+'.'+data.version);
	}*/
	getQuote('');
}

function triggerErrorMessageAlert(errorMsgDivId){
	if(errorMsgDivId==undefined || errorMsgDivId==null || errorMsgDivId==''){
		errorMsgDivId = 'msgDiv';
	}
	if(!$('#msgDivDialog').is(':visible'))
	{
		var xErrorCoordinate = window.pageXOffset;
		var yErrorCoordinate = window.pageYOffset;
		$("#msgDivDialog" ).html($('#'+errorMsgDivId).html());
		$.unblockUI();
		$("#msgDivDialog").dialog('open'); 
		if(yErrorCoordinate != 0 || xErrorCoordinate !=0)
		{
			setTimeout(function(){
				window.scrollTo(xErrorCoordinate, yErrorCoordinate);
				}, 250);
		}
	}
}

//Hitsory
function openHistory(){
	$('#changeLog').html('<h3>History</h3><div class="span-24"><div class="span-24"><table id="changeLogGrid"></table><div id="changeLogPager"></div></div></div>');
	createChangeLogGrid($('#bookingId'),'bookingmaintenance');
	$("#changeLog" ).dialog( "option", "title", 'Change Log' );
	$("#changeLog").dialog('open');
	
}

function openSendAlerts() {
	console.log("openSendAlerts");

	var kickerColNames = ['Id', 'Category', 'Customer Group', 'Name', 'Description', 'Subject Line', 'From', 'To', 'isHtml', 'CC', 'Create User', 'Create Date', 'User', 'Update Date'];

	var kickerColModel = [
	     	       {name:'templateId', hidden:true, width:25},
	     	       {name:'category', hidden:false, width:90},
	     	         {name:'customerGroups', hidden:false, width:100},
	     	       {name:'name', hidden:false},
	     	       {name:'description', hidden:false},
	     	       {name:'emailSubject', hidden:false},
	     	       {name:'emailFrom', hidden:true},
	     	       {name:'emailTo', hidden:false},
	     	       {name:'isHtml', hidden:true},
	     	       {name:'emailCC', hidden:true},
	     	       {name:'createUser', hidden:true},
	     	       {name:'createDate', hidden:true},
	     	       {name:'lastUpdateUser', hidden:true},
	     	       {name:'lastUpdateDate', hidden:true, "formatter":"date"}
				];
	
	var jsonReaderReference = {
			root:"rows",
			page:"page",
			total:"total",
			records:"records",
			repeatitems:false,
			cell:"cell",
			id:"templateId"
		};
	
	$('#sendKickerGrid').jqGrid({        
	   	url:_context+'/booking/loadEmailTemplates?module=Booking',
		datatype: "json",
	   	colNames:kickerColNames,
	   	colModel:kickerColModel,
	   	rowNum:10,
	   	pager: '#sendKickerPager',
	    viewrecords: true,
	    caption:'Templates',
	    sortName: 'templateId',
	    sortorder: "desc",
	    loadonce: true,
	    jsonReader : jsonReaderReference,
	    height: "100%",
	    multiselect: true,
	    beforeSelectRow: function(rowid, e){
	        jQuery("#sendKickerGrid").jqGrid('resetSelection');
	        return(true);
	    }
	}).navGrid("#sendKickerPager",{edit:false,add:false,del:false});
	
	$("#kickerTemplatesDivDialog").dialog('open');
}

function startsWith(expr, value) {
	return (value.substr(0, expr.length) == expr);
}

function onEdiClick(){
	document.location.href= _context + '/booking/edi/showForm?ediBkngRefNum=&ediShmtReqId=&shipmentNumber=' + $("#shipmentNumber").val();
}

function applyAndPrintKicker(templateId) {
	blockUI();
	var urlStr = _context +"/booking/getBookingKickerSource?bookingNumber="+$('#shipmentNumber').val()+"&templateId="+templateId;
	
	var params = ['height='+window.height,'width='+window.width].join(',');        
	var popup = window.open('', 'popup_window', params); 

	popup.document.title = 'Print Alert Email';	
	popup.document.write("<div id='body'>Please wait</div>");	
	
	$.ajax({
		type: "GET", 
		url: urlStr,
		dataType:'json',
		success: function(responseData){			
			if (responseData.data) {
				popup.document.getElementById('body').innerHTML = responseData.data.emailBody;
				setTimeout(function (){
					popup.print();      
         		}, 1000); 
				$.unblockUI();
			} else {
				if (popup) popup.close();
				$.unblockUI();
				alert("An error occurred while calling printing function");
			}
		},
		error: function(jqXHR,textStatus,errorThrown) {
			if (popup) popup.close();
			$.unblockUI();
			alert("An error occurred while calling printing function:" + textStatus);
		}
	});
}

function applyAndSendKicker(templateId) {
	
	blockUI();
	var urlStr = _context +"/booking/getBookingKickerSource?bookingNumber="+$('#shipmentNumber').val()+"&templateId="+templateId;
	$.ajax({
		type: "GET",
		url: urlStr,
		dataType:'json',
		success: function(responseData){
			
			//var length = responseData.data.length ? parseInt(responseData.data.length) : 9999;
			
			var key = "body=";
			var start = responseData.data.mailto.indexOf(key) + key.length;
			var toEncode = responseData.data.mailto.substring(start);
			var noEncode = responseData.data.mailto.substring(0,start);
			var fullMailTo = noEncode + encodeURIComponent(toEncode);
			
			var length = fullMailTo.length;
			
			if (responseData.data.isHtml == 'true' || length > 1500) {

				console.log ('openSendBookingKicker called. templateId:' + templateId);
				$("#kickerTemplatesDivDialog").dialog('close'); // close templates grid
				$("#sendKickerDivDialog").dialog('open'); // opens SendEmail overlay
				
				if ($('#sendKickerDivDialog-isHtml').val() == 'true') { // if previous email was HTML, then reset Body
					$('#sendKickerDivDialog-emailBody').elrte('destroy');
					$('#sendKickerDivDialog-bodyContainer').html("<textarea id='sendKickerDivDialog-emailBody' style='width:950px;height:400px;'></textarea>");	
				} else {
					$('#sendKickerDivDialog-emailBody').val(''); // clear out	
				}
				
				//D026512: 	*corr* MB: after an alert is sent, Maintain Booking loses the bkg cmmt and starts behaving oddly
				//Following line is clearing out the values for all form fields in page. So commented it and set blanks on each field
				//$('#sendKickerDivDialog-form input[type=text],input[type=hidden]').val(''); // clear out form fields
				
				$('#sendKickerDivDialog-form input[type=text]').val(''); // clear out form fields
				$('#sendKickerDivDialog-form input[type=hidden]').val(''); // clear out form fields
				
				$('#sendKickerDivDialog-emailTo').val('');
				$('#sendKickerDivDialog-emailSubject').val('');
				$('#sendKickerDivDialog-emailCc').val('');
				$('#sendKickerDivDialog-bookingNumber').val('');
				$('#sendKickerDivDialog-templateId').val('');
				$('#sendKickerDivDialog-isHtml').val('');
				
				if (responseData.data.isHtml == 'true') {
					var opts = {
							cssClass : 'el-rte',
							height : 400,
							width : 900,
							toolbar : 'web2pyToolbar',
							cssfiles : [ 'elrte-1.3/css/elrte-inner.css' ]
						}
					$("#sendKickerDivDialog-emailBody").elrte(opts).elrte('val', responseData.data.emailBody);	
				} else {
					$("#sendKickerDivDialog-emailBody").val(responseData.data.emailBody);
				}
				
				$('#sendKickerDivDialog-emailTo').val(responseData.data.emailTo);
				$('#sendKickerDivDialog-emailSubject').val(responseData.data.emailSubject);
				$('#sendKickerDivDialog-emailCc').val(responseData.data.emailCc);
				$('#sendKickerDivDialog-bookingNumber').val(responseData.data.bookingNumber);
				$('#sendKickerDivDialog-templateId').val(responseData.data.templateId);
				$('#sendKickerDivDialog-isHtml').val(responseData.data.isHtml);
				
			} else {

 				$('#sendKickerHref').attr("href",noEncode + encodeURIComponent(toEncode));
				$('#sendKickerHref')[0].click();	
			}

			$.unblockUI();
		},
		error: function(jqXHR,textStatus,errorThrown) {
			$.unblockUI();
			alert("Error getting template "+textStatus);
		}
	});
}
;// START - booking_load.js // Part of Cheetah changes.
// Below are functions only used when Booking is loaded for first time at Maintain Booking screen.

function _getFreightJSONresponse(responseText){
	equipmentUpdated = false;
	resetMandatory();
	
	if(responseText.tariffCommodityDescription!=null && responseText.tariffCommodityDescription!=''){
		$('#tariffCommodityDescriptionHidden').val(responseText.tariffCommodityDescription);
	}
	else{
		$('#tariffCommodityDescriptionHidden').val("");
	}
	
	$("#maintainBookingCommodity").loadJSON(responseText);
	$("#vehicleDescription").val(((responseText.bookingAuto!=null && responseText.bookingAuto.description!=null && responseText.bookingAuto.description!="")?responseText.bookingAuto.description:""));
	
	populateCommodityLines(responseText.commodityLines, responseText.currentCommodityLine);
	//loadHazGrid(); // cheetah
	// Set Commodity Code List
	getCommodityCodes(responseText.tariffItemCmdtyDescId, false);
	$('#commodityCode').val(responseText.commodityCode==null?"":($('#commodityCode').val()!=''?$('#commodityCode').val():$.trim(responseText.commodityCode)));
	setPrimaryFreightPresent(responseText.tariff, responseText.frtGrpId, responseText.tariffItemNumber, responseText.frtItemId, $('#commodityCode').val(), responseText.tariffItemCmdtyDescId);
	enableDisableFreightButtons($('#totalCommodityLines').text(), responseText.freightSeqNo);
	
	if($('#isAutobill :selected').val()=="true" && $('#shipmentNumber').val() != '' && $('#bookingTypeCode').val()=='B'){
		setAutoBillMandatory();
	}
	else{
		if(responseText.tariff!=null && responseText.tariff!='' && responseText.tariffItemNumber!=null && responseText.tariffItemNumber!=''){
			// $("#tariff").val($("#tariffNumber").val());
			setMandatoryTariffItem();
		}
		else{
			/* $("#tariff").val(""); */
			resetMandatoryTariffCmdDesc();
		}
	}
	
	if(responseText.bookingAuto.vinsightNumber!=null && responseText.bookingAuto.vinsightNumber!=''){
		$("a.vinsightUnitIdUrl").attr("href", responseText.bookingAuto.vinsightWebUrl);
		$("a.vinsightUnitIdUrl").html(responseText.bookingAuto.vinsightNumber);
		
	}
	//D029724: 	Prod Maintain Booking : Error: Zero is not a valid weight 
	if($("#weight").val()==0){
		$("#weight").val('');
	}
	if(responseText.bookingAuto.vinNumber!=null && responseText.bookingAuto.vinNumber!=''){
		if($('#loadDschServiceGroupCode').val()=='CON' || $('#loadDschServiceGroupCode').val()=='LCL'){
			$("#freightWeightLbl").html($("#freightWeightLbl").text()+"<span class=\"mandatory\">*</span>");
			$("#weight").addClass("validate[required]");
		}
		else if(!($.trim($('#loadDschServiceGroupCode').val())=="AU" && ($.trim($('#customerGroupId :selected').text())==POV_NAME|| $.trim($('#customerGroupId :selected').text())==ALASKA_POV_NAME))){
			$("#freightWeightLbl").html($("#freightWeightLbl").text());
			$("#weight").removeClass("validate[required]");
		}
	}
	
	if(responseText.bookingFreightId==null){
		$("#bookingFreightId").val("");
	}
	
	if(responseText.bookingAuto.estimatedAvailDate!=null && $.trim(responseText.bookingAuto.estimatedAvailDate)!=''){
		$("#estAvail").html(responseText.bookingAuto.estimatedAvailDate);
	}
	
	(responseText.isOversize)?$('#freight\\.isOversize1').attr('checked', true):$('#freight\\.isOversize1').attr('checked', false);
	(responseText.isRoRo)?$('#freight\\.isRoRo1').attr('checked', true):$('#freight\\.isRoRo1').attr('checked', false);
	
	/* Booking Security */
	/*
	 * if(isCommodityDisplayOnly && !isCommodityModifiable){
	 * disableDialogButton('conventionalDialog', 'Ok'); }
	 */

	_afterFreightLoadComplete($('#totalCommodityLines').text(), responseText.tariff, responseText.tariffItemNumber, responseText.commodityDescription, responseText.tariffCommodityDescription);
	
	$('#msgDivFrt').html('');
	$('#msgDivFrt').hide();
	
	setMandatoryPieces();
	_loadFreightGrids();
}


function _afterFreightLoadComplete(freightCount, tariffNumber, tariffItemNumber, commodityDescription, tariffCommodityDescription){
	if(freightCount==0){
		// Reset total charges
		$('#actualTotalChargeAmount').text("");
	}
	if($("#tariff").val()!=""){
		$('#tariffHidden').val($("#tariff").val());
	}
	$('#tariffCheck').val($("#tariff").val());
	// Set description according to first commodity added in the frieght grid.
	setFreightAccordianTabDetails(freightCount, tariffNumber, tariffItemNumber, commodityDescription, tariffCommodityDescription);
	//loadSpecialServiceGrid(); // cheetah
	//loadHazGrid();//Defect-25636 // cheetah
	// D016178
	// validateTCNExists();
}

//gatesData.emptyContactDetails = function(source) {
function _emptyContactDetails(source) {	
	$('select[name="'+ source +'\\.contactId"]').children().remove();
	$('select[name="'+ source +'\\.contactId"]').append("<option value='' label='Select'></option>");

	//// emptyContactDetailsOnContactChange(source);
	// start of emptyContactDetailsOnContactChange
	$('input[name="'+ source +'\\.contact"]').val("");
	$('input[name="'+ source +'\\.addressRoleContactCode"]').val("");
	
	$('input[name="'+ source +'\\.contactFaxCountryCode"]').val("");
	$('input[name="'+ source +'\\.contactFaxAreaCode"]').val("");
	$('input[name="'+ source +'\\.contactFaxExchange"]').val("");
	$('input[name="'+ source +'\\.contactFaxStation"]').val("");
	$('input[name="'+ source +'\\.contactFaxExtension"]').val("");
	
	$('input[name="'+ source +'\\.contactCellCountryCode"]').val("");
	$('input[name="'+ source +'\\.contactCellAreaCode"]').val("");
	$('input[name="'+ source +'\\.contactCellExchange"]').val("");
	$('input[name="'+ source +'\\.contactCellStation"]').val("");
	$('input[name="'+ source +'\\.contactCellExtension"]').val("");

	$('input[name="'+ source +'\\.contactPhoneAreaCode"]').val("");
	$('input[name="'+ source +'\\.contactPhoneExchange"]').val("");
	$('input[name="'+ source +'\\.contactPhoneStation"]').val("");
	$('input[name="'+ source +'\\.contactPhoneCountryCode"]').val("");
	$('input[name="'+ source +'\\.contactPhoneExtension"]').val("");

	$('input[name="'+ source +'\\.contactEmailAddress"]').val("");
	//$('input[name="'+ source +'\\.communicationMethodCode"]').val("");
	
	//// setDefaultPrefMethod(source);
	// start of setDefaultPrefMethod
	/*$('#'+source+'Comm1').attr('checked',true);
	$('#'+source+'Comm1').val('P');
	$('#'+source+'Comm1').trigger('click');*/
	//$('#shipperComm1').trigger('click');
	$('#'+ source +'Comm1').attr('checked',true);
	$('#'+ source +'Comm2').attr('checked',false);
	$('#'+ source +'Comm3').attr('checked',false);
	$('#'+ source +'Comm4').attr('checked',false);
	//$('#'+ source +'Comm1').trigger('change');	
	// end of setDefaultPrefMethod
	
	//if(source=='consignee')
	//	loadHazGrid(); // cheetah - commenting out this and moving to reloadBookingGrids
	
	// end of emptyContactDetailsOnContactChange
}

function _loadGrid($grid, gridName) {
	var bookingInitData = ('bookingInitData' in (window.gatesCheetah || {}))? window.gatesCheetah.bookingInitData : {};
	var gatesCheetah = window.gatesCheetah || {};
	if (gatesCheetah && (gridName in bookingInitData))  {
		console.log('Cheetah: setting Grid data from response:' + gridName);
		$grid.jqGrid('setGridParam', {
			datatype : 'gates-jsonstring',
			datastr : bookingInitData[gridName]
		}).trigger("reloadGrid");
	} else {
		console.log('Cheetah: setting Grid data from Ajax:' + gridName);
		$grid.trigger("reloadGrid");
	}
}

//gatesData.reloadBookingGrids = function(){
function _loadBookingGrids(){
	//$("#gridIdForParties").trigger('reloadGrid');

	_loadGrid( $("#equipmentGrid") , 'equipmentGrid');
	_loadGrid( $("#tcnGrid") , 'tcnGrid');	
	_loadGrid( $("#vvdRoutingGrid") , 'loadVVDGrid');
	_loadGrid( $("#referenceNumberGrid") , 'referenceNumberGrid');
	_loadGrid( $("#dodaacGrid") , 'dodaacGrid'); // fix for D027740 fix
	_loadGrid( $("#specialServiceGrid") , 'specialServiceGrid');
	_loadGrid( $("#hazGrid") , 'hazGrid');
	_loadGrid( $("#gridIdForClauses") , 'gridIdForClauses');
	_loadGrid( $("#holdGrid") , 'holdGrid');
	_loadGrid( $("#gridIdForParties") , 'gridIdForParties');
	//Reloaded special service grid for D028389
	$("#specialServiceGrid").trigger('reloadGrid'); 
	
	//_loadGrid( $("#dodaacGrid") , 'dodaacGrid');
	
	// setting this for D027740, let Jose look at it.
	//$("#dodaacGrid").trigger('reloadGrid'); // commenting out for D027740 fix
	
	/*
	$('#equipmentGrid').trigger("reloadGrid");
	$('#tcnGrid').trigger("reloadGrid");
	$("#vvdRoutingGrid").trigger("reloadGrid");
	$("#referenceNumberGrid").trigger('reloadGrid');
	$("#dodaacGrid").trigger('reloadGrid');
	$("#specialServiceGrid").trigger('reloadGrid');
	$('#hazGrid').trigger("reloadGrid");
	$("#gridIdForClauses").trigger('reloadGrid');
	$('#holdGrid').trigger("reloadGrid"); // loadHoldGrid('D');
	setTimeout(function(){
		$("#gridIdForParties").trigger('reloadGrid');
		//$("#equipmentGrid").trigger('reloadGrid');
	}, 500);
	*/
}

//gatesData.loadFreightGrids = function() {
function _loadFreightGrids() {
	var xCoordinate = window.pageXOffset;
	var yCoordinate = window.pageYOffset;
	
	// loadEquipmentGrid(); // Cheetah - commenting out and moving to reloadBookingGrids
	// loadTCNGrid();		// Cheetah - commenting out and moving to reloadBookingGrids
	// loadHazGrid();// Cheetah - commenting out and moving to reloadBookingGrids
	
	setTimeout(
		function() {
			if ($('#tariff').is(':visible')) {
				if (!$("#equipmentGrid").is(':visible')) {
					if (!defaultHidden
							|| ($("#equipmentGrid")
									.getGridParam("reccount") != undefined && $(
									"#equipmentGrid").getGridParam(
									"reccount") > 0)) {
						$(".HeaderButton", ("#gview_equipmentGrid"))
								.click();
						// hideEquipmentInlineEditDelete();
						// showSelectedCharacteristics();
					}
				} else if ($("#equipmentGrid").is(':visible')) {
					if (defaultHidden
							&& ($("#equipmentGrid")
									.getGridParam("reccount") == undefined || $(
									"#equipmentGrid").getGridParam(
									"reccount") == 0))
						$(".HeaderButton", ("#gview_equipmentGrid"))
								.click();
					/*
					 * else { hideEquipmentInlineEditDelete();
					 * //showSelectedCharacteristics(); }
					 */
				}
			}
			window.scrollTo(xCoordinate, yCoordinate);
		}, 250);
};

//gatesData.clearBookingForm = function() {
function _clearBookingForm() {
	// start of clearBookingForm();
	var webPageSectionIds = ['bookingHeaderDiv','maintainBookingShipperConsignee', 'maintainBookingParties', 'referenceMarks', 'marksAndNumbersSection', 'maintainBookingRouting', 'maintainBookingCommodity', 'militarySection', 'maintainBookingOverrides','bookingOverridesHeaderDiv'];
	for (var i=0; i<webPageSectionIds.length; i++) {
		clearWebPageSection(webPageSectionIds[i]);
	}	
	// end of clearBookingForm();
	
	// start of resetBookingForm();
	removeErrorPointers();
	resetDivNames();
	setDefaultForAssignLink();
	$("#bookingStatusCode").attr("disabled",true);
	$("#createDate").html("");
	$("#lastUpdateDate").html("");
	$("#lastUpdateDateTimeUser").html("");
	$("#bookedDateTimeUser").html("");
	
	// cleanShipperConsignee();
	// start of cleanShipperConsignee();
	$("#shipperNameDiv").html("");
	$("#consigneeNameDiv").html("");
	$("#copyShipper").attr("disabled", true);
	$("#copyConsignee").attr("disabled", true);
	enableScreenForDealer();
	$('#msgDiv').html("");
	_emptyContactDetails("shipper");//gatesData.emptyContactDetails("shipper");
	_emptyContactDetails("consignee");//gatesData.emptyContactDetails("consignee");
	//enableDisableContactId('shipper',true);
	//enableDisableContactId('consignee',true);
	resetDefault();	
	// end of cleanShipperConsignee();
	
	
	
	changeShipperConsigneeColor("shipper", "N");
	changeShipperConsigneeColor("consignee", "N");
	$('input[name="shipper\\.address"]').attr("readonly",false);
	$('input[name="consignee\\.address"]').attr("readonly",false);
	clearHeaderData();
	$('#changeSourceLabel').html("Change Source");
	$('#originalVVD .cutOff').text('');
	$('#vvdCutOff .cutOff').text('');
	$('#pickupZoneDisplay').html('');
	$('#deliveryZoneDisplay').html('');
	/*$('#shipperRepeatContact').attr('disabled', true);
	$('#consigneeRepeatContact').attr('disabled', true);
	$('#partiesRepeatContact').attr('disabled', true);*/
	$('#autobillOptionCode').attr('disabled', true);
	$('#autobillTriggerCode').attr('disabled', true);
	$('#inbondNumber').attr('disabled', true);
	$('#overridePickupCarrierCode').attr('disabled', true);
	$('#overrideDeliveryCarrierCode').attr('disabled', true);
	$('#dealerAuctionLocationCode').attr('disabled', true);
	$('#vvdChangeAuthPartyCode').attr("disabled", true);
	$('#vvd_conventional').hide();
	$('#vvd_premium').hide();
	$('#vvdCutOff').show();
	$('#convCgoApptCutoffDate').attr('disabled', true);
	$('#convCgoApptCutoffTime').attr('disabled', true);
	$('#convCgoEstArrivalDate').attr('disabled', true);
	$('#convCgoEstArrivalTime').attr('disabled', true);
	$('#requiredDeliveryDate').attr('disabled', true);
	$('#premiumRDD').attr('disabled', true);
	clearCommodityCodeList();
	/*removeCurrentCommodity();*/
	$("#estShip").html('');
	$("#estAvail").html('');
	$("a.vinsightUnitIdUrl").html('');
	//$('#milRequiredDeliveryDate').attr('disabled', true);
	/*if(isMilitaryModifiable)
		$('#milRequiredDeliveryDate').val('01-01-0001');*/
	resetIBSCode();
	resetCargoPickup();
	resetCargoDelivery();
	$('#overridePlaceOfIssue').attr('disabled', true);
	
	if(isRoutingModifiable)
	{
		$('#blOriginCityCodeDescription').attr('disabled', false);
		$('#blDestinationCityCodeDescription').attr('disabled', false);
		$('#pickupZipCode').attr('disabled', false);
		$('#deliveryZipCode').attr('disabled', false);
		$('#overridePickupCarrierCode').attr('disabled', false);
		$('#overrideDeliveryCarrierCode').attr('disabled', false);
	}
	
	$('#billExists').val('');
	$('#commentId').val('');
	$('#commentsDiv').hide();
	$('#historyDiv').hide();
	clearGlobalVariables();
	changeTextColour();
	//reloadBookingGrids(); // Cheetah - commented out - duplicate
	_loadFreightGrids();//gatesData.loadFreightGrids();	// Cheetah - move to reloadBookinGrids
	
	// end of resetBookingForm();
};

//gatesData.showJSON = function(responseText) {
function _showJSON(responseText) {
	setBookingTitle(responseText.data.header.shipmentNumber);	
	
	// Booking Id
	$("#bookingId").val(responseText.data.bookingId);
	
	//Comment Id
	$("#commentId").val(responseText.data.commentId);
	

	//Entity Versiod Id
	$("#entityVersion").val(responseText.data.entityVersion);

	//Header
	$("#bookingStatusCode").attr("disabled",false);
	$("#header").loadJSON(responseText.data.header);
	if(responseText.data.header.tradeCode!=null && responseText.data.header.tradeCode!=''){
		$('#previousTradeCode').val(responseText.data.header.tradeCode);
	}
	else{
		$('#previousTradeCode').val("");
	}

	$('#isRequireCustomerVerifyAdd').val(responseText.data.header.isRequireCustomerVerifyAdd);
	$('#isRequireCustomerVerifyChg').val(responseText.data.header.isRequireCustomerVerifyChg);
	
	if(responseText.data.header.bookingTemplateNumber != undefined && responseText.data.header.bookingTemplateNumber!=null){
		$("#bookingTemplateNumber").html("<a href='#' onclick=\"checkForChangeInBooking('" + responseText.data.header.bookingTemplateNumber +"');\" style=\"color: blue\">"+ responseText.data.header.bookingTemplateNumber +"</a>");
	}
	if(responseText.data.header.quoteNumber!=null && (responseText.data.header.quoteNumber == responseText.data.header.shipmentNumber))
		$('#quoteVNConcat').val(responseText.data.header.quoteNumber);//+"."+responseText.data.header.quoteVersion);
	
	if(responseText.data.header.quoteNumber !=null){
		var quoteText = responseText.data.header.quoteNumber;
		if(responseText.data.header.quoteVersion!=null && responseText.data.header.quoteVersion!=''){
			quoteText = quoteText + "-"+responseText.data.header.quoteVersion;
		}
		$('#quoteNumberLabel').html("<a style=\"color: blue\" href= " + _context + "/quote/getQuote?quoteId="+ responseText.data.header.appliedQuoteId +">"+quoteText+"</a>");//quoteText);
	}
	
	if(responseText.data.header.quoteAmount!=null)
		$('#quoteAmountDiv').text('$'+responseText.data.header.quoteAmount);
	
	$('#createBkngTmplSeqNbrDs').val(responseText.data.header.createBkngTmplSeqNbrDs);

	//Setting Booked Date, Time & user and Last Update Date, Time & user
	if(responseText.data.header.bookedDate!=null){
		//$("#bookedDateTimeUser").html(getTimeWithoutSeconds(responseText.data.header.createDateTime)+ " &nbsp;&nbsp;&nbsp;" + responseText.data.createUser);
		$("#bookedDateTimeUser").html(responseText.data.header.bookedDate+ " &nbsp;&nbsp;&nbsp;" + responseText.data.header.bookingCsr);
	}
	if(responseText.data.header.lastUpdateDateTime!=null){
		$("#lastUpdateDateTimeUser").html(getTimeWithoutSeconds(responseText.data.header.lastUpdateDateTime)+ " &nbsp;&nbsp;&nbsp;" + responseText.data.lastUpdateUser);
	}
	
	$("#bookingTemplate").loadJSON(responseText.data.bookingTemplate);
	$('#templateDelete').attr('disabled',false);
	//allow Assign Quote only in case of empty booking #
	if(responseText.data.header.shipmentNumber == '' || responseText.data.header.shipmentNumber == null/*|| responseText.data.header.shipmentNumber==responseText.data.header.quoteNumber*/){
		$('#assignLink').html("Assign Quote");
	}else{
		if(responseText.data.header.quoteNumber =='' /*|| responseText.data.header.quoteId ==''*/){
			$('#assignLink').html("<a href=\"javascript:quotePopupSearch('assign');\">Assign Quote</a>");
		}else{
			$('#assignLink').html("<a href=\"javascript:removeAssignQuote();\">Remove Quote</a>");
		}
	}

	// Setting lastCustomerGroupId
	if(responseText.data.header.customerGroupId!=null){
		$("#lastCustomerGroupId").val(responseText.data.header.customerGroupId);
	}
	else{
		$("#lastCustomerGroupId").val("");
	}

	//Shipper
	shipperAddress = responseText.data.shipper.address;
	$("#shipper").loadJSON(responseText.data.shipper);
	$('#shipperName').val($('input[name="shipper\\.organizationName"]').val());
	loadAdditionalShipperDetails(responseText);
	
	processShipperConsigneeColor("shipper");

	//Consignee
	consigneeAddress = responseText.data.consignee.address;
	$("#consignee").loadJSON(responseText.data.consignee);
	$('#consigneeName').val($('input[name="consignee\\.organizationName"]').val());
	loadAdditionalConsigneeDetails(responseText);
	
	processShipperConsigneeColor("consignee");
	checkCopyButtons();

	//Parties
	$("#maintainBookingParties").loadJSON(responseText.data.header);
	debtorCode = $('#prepaidCollectCode :selected').val();
	
	autoBillOnchangeEventFunction();
	setPartiesHeader();
	
	//MarksNumbers
	$("#marksAndNumbers").val(responseText.data.header.marksAndNumbers);
	
	//Routing
	$("#maintainBookingRouting").loadJSON(responseText.data.routing);
	if($.trim($('#loadDschServiceGroupCode').val()) == "AU" && ($.trim($('#customerGroupId :selected').text()) == POV_NAME || $.trim($('#customerGroupId :selected').text()) == ALASKA_POV_NAME))
		$('#premiumRDD').val(responseText.data.header.requiredDeliveryDate);
	$('#pickupZoneDisplay').html(responseText.data.routing.pickupZone);
	$('#deliveryZoneDisplay').html(responseText.data.routing.deliveryZone);
	$("#maintainBookingOverrides").loadJSON(responseText.data.routing);
	populateLoadDischargeLists(responseText.data.routing);
	setGlobalVariableValues();
	changeTextColour();
	setOverridesHeader();
	if($('#isInBond :selected').val()==true || $('#isInBond :selected').val()=='true' && isRoutingModifiable)
		$('#inbondNumber').attr("disabled", false);
	else
		$('#inbondNumber').attr("disabled", true);
	checkPickupCarrier();
	checkDeliveryCarrier();
	if($('#isAutoInlandMove :selected').val()==true || $('#isAutoInlandMove :selected').val()=='true' && isRoutingModifiable)
		$('#dealerAuctionLocationCode').attr("disabled", false);
	else
		$('#dealerAuctionLocationCode').attr("disabled", true);
	if(responseText.data.header.requiredDeliveryDate!=null && responseText.data.header.requiredDeliveryDate!=''){
		$("#requiredDeliveryDate").val(responseText.data.header.requiredDeliveryDate);
	}
	else{
		$("#requiredDeliveryDate").val('');
	}
	
	//Commodity
	$("#okAlreadyPressed").val("false");
	$('#unitOfMeasureSourceCode').val(responseText.data.header.unitOfMeasureSourceCode);
	_getFreightJSONresponse(responseText.data.freight);
	showFreight($.trim($('#customerGroupId :selected').text()));
	setFirstVVD();
	$('#previousTradeCode').val($('#tradeCode :selected').val());
	$('#lastCustomerGroupId').val($('#customerGroupId :selected').val());
	$('#showAlertTCGLDSP').val("true");
	
	//Military
	$("#maintainBookingMilitary").loadJSON(responseText.data.header);
	$("#maintainBookingMilitary").loadJSON(responseText.data.militaryBooking);
	$('#militaryPortCallFileNumber').trigger('change');
	//RDD
	if(responseText.data.militaryBooking.requiredDeliveryDate!=null && responseText.data.militaryBooking.requiredDeliveryDate!=''){
		$("#milRequiredDeliveryDate").val(responseText.data.militaryBooking.requiredDeliveryDate);
	}
	/*else if(isMilitaryModifiable){
		$("#milRequiredDeliveryDate").val('01-01-0001');
	}*/
	else
		$("#milRequiredDeliveryDate").val('');
	
	//D016178
	if($.trim($('#customerGroupId :selected').text())==GOVERNMENT_NAME && ($.trim($('#loadDschServiceGroupCode').val())=='CON' || $.trim($('#loadDschServiceGroupCode').val())=='LCL') && $.trim($('#isAllowBookingUnit').val())=="Y"){
		if(responseText.data.tcnExists)
		setIBSCodeMandatory();
		if($('#militaryIbsStatusCode option:selected').text()!=''){
			setCargoPickupDeliveryMandatory($('#militaryIbsStatusCode option:selected').text().split(":")[1]);
		}
	}
	else{
		resetIBSCode();
		resetCargoPickup();
		resetCargoDelivery();
	}
	
	//Booking Overrides
	$("#maintainBookingOverrides").loadJSON(responseText.data.routing);
	
	$('#commentsDiv').show();
	if(isHistoryDisplayOnly) $('#historyDiv').show();
	//collapseAll();

	if(responseText.data.shipper.organizationName==null)
		responseText.data.shipper.organizationName ='';
	if(responseText.data.consignee.organizationName==null)
		responseText.data.consignee.organizationName='';

	updateShipperConsigneeNames(responseText);
	isBookingDeletable();
	
	$('#bookingTemplateOwnerPartyType').val(responseText.data.bookingTemplate.bookingTemplateOwnerPartyType);
	$('#partiesExists').val(responseText.data.partiesExists);
	$('#shipmentNumberHidden').val(responseText.data.header.shipmentNumberHidden);
	$('#quoteVNConcatHidden').val(responseText.data.header.quoteVNConcatHidden);
	$('#hiddenBookedDate').val(responseText.data.hiddenBookedDate);
	if(responseText.data.shipper.organizationName!='')
		setShipperDivName(" " +responseText.data.shipper.organizationName);
	if(responseText.data.consignee.organizationName!='')
		setConsigneeDivName(" " +responseText.data.consignee.organizationName);
	
	//Added method for Marks Header Checkbox
	if(responseText.data.header.marksAndNumbers=='' || responseText.data.header.marksAndNumbers==null){
		$('#marksHeaderCheckBox').attr('checked', false);
	}else{
		$('#marksHeaderCheckBox').attr('checked', true);
	}
	if(responseText.data.header.quoteNumber!=null && (responseText.data.header.quoteNumber == responseText.data.header.shipmentNumber)){
		$('#quotePopUpSearch').hide();
	}else{
		$('#quotePopUpSearch').show();
	}
	disableCreateBookingFromQuote();
	
	/*if($('#shipmentNumber').val()!='')
	{
		$('#shipperRepeatContact').attr('disabled', false);
		$('#consigneeRepeatContact').attr('disabled', false);
		$('#partiesRepeatContact').attr('disabled', false);
	}*/
	
	if($("#bookingStatusCode").val()=='APPR' || $("#bookingStatusCode").val()=='OFFR'){
		var amount=responseText.data.header.actualTotalChargeAmount;
		if(amount!=null && amount!='' && ! isNaN(amount)){
			amount = parseFloat(amount); 
			$('#chargeCurrency').text('$');
			$('#actualTotalChargeAmount').text(amount.toFixed(2));
		}
	}else{
		$('#chargeCurrency').text('');
		$('#actualTotalChargeAmount').text('');
	}
	$('#bookingCsr').val(responseText.data.header.bookingCsr);
	$('#checkRequiredDispatch').val(responseText.data.checkRequiredDispatch);
	isBookingChanged = "N";
	$('#freightCommentId').val(responseText.data.freight.commentId);
	$('#ediTypeCode').val(responseText.data.header.ediTypeCode);
	$('#isRequirePrePayment').val(responseText.data.header.isRequirePrePayment);
	$('#createUser').val(responseText.data.createUser);
	
	createCommentFunc();	
	// D033160
	setHazCount(responseText.data.header.hazardCount);
};

//cheetah - function to load a booking when first server call is made
function displayInitialBookingCallBack(responseText) {
	
	var gatesCheetah = window.gatesCheetah || {};
	
	if (gatesCheetah)  {
		console.log('Cheetah: setting booking data from response');
		gatesCheetah.isLoading = true;
		gatesCheetah.bookingInitData = responseText.initData;
	}
	
	_clearBookingForm();
	
	if (responseText.messages.error.length == 0 && responseText.data.header.tradeCode == 'A') {
		$('#billingStartedHyperlink').hide();
		/*if(responseText.data.header.billExists=="Y"){
			$('#receivedFreightGridDiv').hide();
			$('#receivedUnitsGridDiv').hide();
			loadBillStartedGrids();
		}*/
		_showJSON(responseText);
		// collapseAll();
		$('#billExists').val(responseText.data.header.billExists);
		//D031169: 	Priority Stow to have a new selection list only for Alaska
		if(responseText.data.header.tradeCode!=null && responseText.data.header.tradeCode=='A'){
			setStowDataForAlaska();
		}
		//D033452
		setSITFlag();
		// D028769: 	Maintain booking - on hold in parties section shows but not on maintain bill 
		// Commented this display out, left all the logic in place
		/*	
		if(responseText.data.holdEqpExists) {
			$('#holdEqpExists').text('-On Hold');
		} else {
			$('#holdEqpExists').text('');
		}
		*/
		//we have to call it seperately bcoz we do not want it to execute everytime showJSON runs.
		if(responseText.data.header.billExists=="Y"){
			prepareHeaderDataForBillingOverlay(responseText);
			$('#billingStartedHyperlink').show();
		}
		else{
			$('#billingStartedHyperlink').hide();
		}
		//checkIfTemplateToBeDisabled();
		/*Booking Security*/
		if(isHoldOverlayBottomEnabled){
			//Display Unreleased Holds Grid on initial display
			openUnreleasedHoldGridOnIntialDisplay("booking");
		}
		
		if(responseText.data.shipperNameAddressCustomized){
			$('input[name="shipper\\.organizationName"]').css('color', 'green');
		}
		if(responseText.data.consigneeNameAddressCustomized){
			$('input[name="consignee\\.organizationName"]').css('color', 'green');
		}
		//checkIfQuoteShowLinkToBeShown();
		
		console.log("booking="+responseText.data.header.ediTypeCode);
		//D025919: 	Maintain Booking: Make the EDI label a hyperlink to the EDI Booking Detail
		var ediLink = "<div style=\"height:20px;padding-top: 7px;\"><a href=\"javascript:onEdiClick();\">EDI</a><div>";
		if(responseText.data.isBookingOnEDIReviewQueue=='Y'){
			if(responseText.data.header.bookingCsr=='EDIBKG'){
				$('#ediOrWebIndicator').html(ediLink);
			} else {
				$('#ediOrWebIndicator').text('WEB');
			}
		}
		else if(responseText.data.header.bookingCsr=='EDIBKG'){
			$('#ediOrWebIndicator').html(ediLink);
		}
		else if(responseText.data.header.bookingCsr=='WEBBKG'){
			$('#ediOrWebIndicator').text('WEB');
		} else if(responseText.data.header.ediTypeCode=='Y') {
			$('#ediOrWebIndicator').html(ediLink);
		}
		else {
			$('#ediOrWebIndicator').text('');
		}
		 
		if(responseText.data.isBookingOnEDIReviewQueue=='Y'){
			//Defect - D019815 - 018501
			var fromMenu = $("#userFromMenu").val();
			var fromEdi = false;
			if(fromMenu.lastIndexOf("ediBookingDetail_", 0) === 0 ) {
				fromEdi = true;
			}
			
			// D029837: Add Cancel
			if(responseText.data.header.bookingStatusCode!='CANC' && responseText.data.header.bookingStatusCode!='APPR' && responseText.data.header.bookingStatusCode!='OFFR' && $("#userFromMenu").val() != 'webBookingReviewQueue' && !fromEdi){
				otherAlert("","Booking is on web/edi review queue.  Press ok to edit booking.");
			}
		}
		
		if(responseText.data.header.bookingStatusCode=='APPR'){
			$('#billBooking').attr("disabled", false);
		}else{
			$('#billBooking').attr("disabled", true);
		}
		
		$('#templateAppliedOnBookingFromScreen').val('N');
		disableCreateBookingFromQuote();
		if(responseText.data.header.bookingTemplateNumber != undefined && responseText.data.header.bookingTemplateNumber!=null){
			tempShipperAddress= responseText.data.shipper.addressRoleId;
				tempConsigneeAddress=responseText.data.consignee.addressRoleId;
				//D029999:For consignee/Shipper it needs to look at the template type and only remove if it is that type of template. 
				tempPartyTypeCode=responseText.data.bookingTemplate.partyTypeCode;
				}
		
		//TODO - readonly call removed
		if(responseText.data.header.bookingStatusCode=='CANC'){
			//update booking BR-02 [Canceled Booking cannot be updated.]
			makeFormReadOnly(responseText,'bookingForm',true);
		}else{
			makeFormReadOnly(responseText,'bookingForm',false);
		}
		$('#commentsDiv').show();
		if(isHistoryDisplayOnly) $('#historyDiv').show();
		//getTemplateNumberForId();
		//Grid reload calls
		_loadBookingGrids();
		//	D021215: 	Session Variable clear/change shortcut
		getSearchFieldValue(500);
		
	}else{
		//Set booking title to default if booking doesn't exist
		setBookingTitle(null);
		$("#bookingSave").attr("disabled",false);
		$('#shipmentNumberHidden').val("");
		
		resetHoldUnreleasedGrid();
	}
	piece=$('#pieceCount').val();//Defect-24921
	weightOriginal=$('#weight').val();//Defect-25136
	cubeOriginal=$('#cube').val();
	$("#shipmentNumber").attr("disabled",false);
	$("#bookingStatusCode").attr("disabled", false);
	//Messages
	showResponseMessages("msgDiv", responseText);
	//enableDisableClearButton();
	if(responseText.messages.error.length == 0 && responseText.data.header.tradeCode != 'A'){
		$('#msgDiv').html('<div class="message_error">Booking not found for Alaska trade</div>');
	}
	//Security Implementations
	enforceUserSecurityRolesAndPermissions();
	
	//Enables-disables footer buttons if booking exists
	enableDisableFooterButtons();
	//[Manjeet/Vivek/Saif]after security roles, Please dont change unless you know impact.
	if (responseText.messages.error.length == 0  && responseText.data.header.tradeCode == 'A') {
		//TODO - readonly call removed
		if(responseText.data.header.bookingStatusCode=='CANC'){
			//update booking BR-02 [Canceled Booking cannot be updated.]
			makeFormReadOnly(responseText,'bookingForm',true);
		}else{
			makeFormReadOnly(responseText,'bookingForm',false);
		}
		$('#quoteVNConcat').attr("disabled", true);
		//if(responseText.data.header.bookingStatusCode=='APPR' || responseText.data.header.bookingStatusCode=='OFFR'){
		if($('#checkRequiredDispatch').val()=='Y'){
			$("#dispatchBtn").attr("disabled", false);
		}
		else{
			$("#dispatchBtn").attr("disabled", true);
		}

		if(responseText.data.header.bookingStatusCode!='CANC')
		{
			/*Booking Security*/
			if(isHeaderStatusUpdate){
				$("#bookingStatusCode").attr("disabled",false);
			}
			//D032770: 	New Port Editor permission Port Editor access : K&L Beer Bookings
			if(isCommodityModifiablePE){
				$("#commodityDescription").attr("disabled",false);
			}
			checkCopyButtons();
			$('#inbondNumber').attr("disabled", true);
			$('#loadServiceCode').attr("disabled", true);
			$('#dischargeServiceCode').attr("disabled", true);
			$('#overridePickupCarrierCode').attr('disabled', true);
			$('#overrideDeliveryCarrierCode').attr('disabled', true);
			$('#inland').gatesDisable();
			$('#isInBond').attr("disabled", true);
			$('#isSIT').attr("disabled", true);
			$('#vvd_premium').gatesDisable();
			$('#vvd_conventional').gatesDisable();

			autoBillOnchangeEventFunction();
			checkPickupCarrier();
			checkDeliveryCarrier();
			processChangeSource();
			/*if($('#loadDschServiceGroupCode').val()=='CON' || $('#loadDschServiceGroupCode').val()=='LCL')
			{
				$('#vvd_conventional').show();
				if(isRoutingModifiable)
				{
					$('#convCgoApptCutoffDate').attr('disabled', false);
					$('#convCgoApptCutoffTime').attr('disabled', false);
					$('#convCgoEstArrivalDate').attr('disabled', false);
					$('#convCgoEstArrivalTime').attr('disabled', false);
					$('#requiredDeliveryDate').attr('disabled', false);
				}
			}
			else
			{
				$('#vvd_conventional').hide();
				$('#convCgoApptCutoffDate').attr('disabled', true);
				$('#convCgoApptCutoffTime').attr('disabled', true);
				$('#convCgoEstArrivalDate').attr('disabled', true);
				$('#convCgoEstArrivalTime').attr('disabled', true);
				$('#requiredDeliveryDate').attr('disabled', true);
			}*/
			setRoutingLoadDischargeDetails();
			setDefaultOverrides();
		}
	}
	
	
	/*Dirty Check*/
	isBookingChanged = "N";
	$('#displayingBookingEvent').val("N");
	
	//$("#gridIdForParties").trigger('reloadGrid'); // Cheetah
	enableDisableNote();

	if (gatesCheetah) {
		gatesCheetah.isLoading = false;
	}
}

//END - booking_load.js;var domesticForeignIndicator = "none";
var shipNo=0;
var POV_NAME = "PERSONAL AUTO";
var ALASKA_POV_NAME = "ALASKA AUTO";

$(function() {

	//defect - D019763 [Autocomplete visible on wrong place due to window re-size
	$(window).resize(function() {
		$('.ui-autocomplete').hide();
		changePosOfDialog('billBookingDialog', 'center');
	});

	var assignOrCreate="";
	$('#bookingForm').validationEngine('attach');

	setDefaultForBookingStatus();
	setDefaultForAssignLink();
	disableCreateBookingFromQuote();

	//Display existing booking
	//Booking# Predictive Search
	
	$('#shipmentNumber').gatesAutocomplete({
		//source: url,
		source:_context+'/cas/autocomplete.do',
		name: "Booking Number",
	 	extraParams: {
		 		 method: 'searchBKNumber',
		 		 searchType: '230',
		 		 parentSearch:  function() { return $('#bookingTypeCode').val(); }
	 	},
		minLength: 7,
		formatItem: function(data) {
			shipNo=0;
			shipNo=data.shno;
			return data.shno;
		},
		formatResult: function(data) {
			return data.shno;
		}, 
		select: function(data) {
			if(null != data && null != data.shno){
				if(data.shno.indexOf('T')<0){
				//D026018
					if(isBookingChanged == 'Y'){
						var isConfirm = confirm("All the unsaved Changes will be discarded. Please confirm!");
						if (isConfirm) {
							showLoadingMessage();
							$('#shipmentNumber').val(data.shno);
							$('#shipmentNumberHidden').val($('#shipmentNumber').val());
							if($('#bookingTypeCode').val()=='B'){
								$('.ui-autocomplete').hide();
								displayBooking();
								$('#displayingBookingEvent').val("Y");
							}
						} else {
							$('#shipmentNumber').val(oldBkNbr);
						}
					} else {
						showLoadingMessage();
						$('#shipmentNumber').val(data.shno);
						$('#shipmentNumberHidden').val($('#shipmentNumber').val());
						if($('#bookingTypeCode').val()=='B'){
							$('.ui-autocomplete').hide();
							displayBooking();
							$('#displayingBookingEvent').val("Y");
						}
					}
				}else if(data.shno.indexOf('T')>=0){
					showLoadingMessage();
					$('#shipmentNumber').val(data.shno);
					$('#shipmentNumberHidden').val($('#shipmentNumber').val());
					if($('#bookingTypeCode').val()=='T'){
						$('.ui-autocomplete').hide();
						displayTemplate($('#shipmentNumber').val());
						$('#displayingTemplateEvent').val("Y");
					}
				}
			}
		}
	});
	
	$('#shipmentNumber').keydown(function(evt) { 
		  var theEvent = evt || window.event;
		  var key = theEvent.keyCode || theEvent.which;
		  if(key == '13'){
			  checksBeforeDisplayBooking();
		  }
	}); 
	
	$('#shipmentNumber').change(function(evt) { 
		  checksBeforeDisplayBooking();
	}); 
	
	$('#containerNumber').bind('keydown',function(event) {
		// keyCode for enter key is 13
		if (event.keyCode == 13 ) {
			$("#containerNumber").val(($("#containerNumber").val()).toUpperCase()); 
			getBookingForContainer();
		}
	});		
	
	$('#containerNumber').gatesAutocomplete({
		source:_context+'/cas/autocomplete.do',
		name: 'Container Number',
	 	extraParams: {
	 		method: 'searchContainer',
		 		 searchType: '288',
	 	},
		minLength: 10,
		formatItem: function(data) {
			return data.contNo.trim();
		},
		formatResult: function(data) {
			return data.contNo.trim();
		}, 
		select: function(data) {
			$("#containerNumber").val(($("#containerNumber").val().trim()).toUpperCase());
			getBookingForContainer();
		}
	});
	

	//D031169: 	Priority Stow to have a new selection list only for Alaska
	$("#stowSelect").change(function(){
		var rows = $('#equipmentGrid').jqGrid('getDataIDs');
		var selectedStow = $('#stowSelect :selected').val()
		for(var index=0;index<rows.length;index++) {
			var charArray = $("#"+rows[index]+"_characteristics").val().split(", ");
			var newChar = "";
			for (var i = 0; i < charArray.length; i++) {
				if (!$.trim(charArray[i]).match("STOW")) {
					if(newChar == ""){
						newChar = charArray[i];
					} else {
						newChar = newChar + ", " + charArray[i];
					}
				}
			}
			if(selectedStow != ""){
				if(newChar == ""){
					newChar = selectedStow;
				} else {
					newChar = newChar + ", " + selectedStow;
				}	
			}
			$("#"+rows[index]+"_characteristics").val(newChar);
		}
	});
	
	// validate address roles based on trade
	$('#bookingStatusCode').change(function() {
		checkIfTemplateToBeDisabled();
		isBookingDeletable();
		if($('#bookingStatusCode').val()!=''){
			var valid = validateBookingStatusForActor();
			if(valid == true){
				$('#msgDiv').html("");
				$('#msgDiv').hide();
				//validateBookingStatusForActorOnServer();
			}else{
				$('#msgDiv').html("<div class=\"message_error\">New booking status not valid for previous status.</div>");
				$('#msgDiv').show();
				window.scrollTo(0, 0);
				triggerErrorMessageAlert();
			}
		}
	});


});

function getBookingForContainer(){
	blockUI();
	var containerNumber = $('#containerNumber').val();
	equipId = containerNumber;
	if(containerNumber != undefined &&  containerNumber != ''){
		$.ajax({
			type : "POST",
			url : _context +"/booking/header/getBookingForContainer",
			data : {
				containerNumber : containerNumber
			},
			success : function(responseText) {
				$("#shipmentNumber").val(responseText.data);
				$.unblockUI();
				checksBeforeDisplayBooking();
			}
		});
	}
}

function checksBeforeDisplayBooking(){
	if($('#shipmentNumber').val()!='' && $('#shipmentNumber').val().length==7)
	{
		if($('#bookingTypeCode').val() =='B'){
			if($('#shipmentNumber').val().toUpperCase().indexOf('T')>=0)
			{
				$('#msgDiv').html('<div class="message_error">'+'Booking not found..'+'</div>');
				$('#shipmentNumberHidden').val("");
				window.scrollTo(0, 0);
				//triggerErrorMessageAlert();
			}
			else
			{
			//D026018
				if(isBookingChanged == 'Y'){
					var isConfirm = confirm("All the unsaved Changes will be discarded. Please confirm!");
					if (isConfirm) {
						showLoadingMessage();
						if(shipNo!=$('#shipmentNumber').val()){
							shipNo=$('#shipmentNumber').val();
						}
						$('#shipmentNumber').val(shipNo);
						shipNo=0;
						$('#shipmentNumberHidden').val($('#shipmentNumber').val());
						$('.ui-autocomplete').hide();
						displayBooking();
						$('#displayingBookingEvent').val("Y");
					} else {
						$('#shipmentNumber').val(oldBkNbr);
					}
				} else {
					showLoadingMessage();
					if(shipNo!=$('#shipmentNumber').val()){
						shipNo=$('#shipmentNumber').val();
					}
					$('#shipmentNumber').val(shipNo);
					shipNo=0;
					$('#shipmentNumberHidden').val($('#shipmentNumber').val());
					$('.ui-autocomplete').hide();
					displayBooking();
					$('#displayingBookingEvent').val("Y");
				}
			}
		  }else{
			  if($('#bookingTypeCode').val()=='T' && $('#shipmentNumber').val().toUpperCase().indexOf('T')>=0){
				  $('#shipmentNumber').val($('#shipmentNumber').val().toUpperCase());
				  showLoadingMessage();
				if(shipNo!=$('#shipmentNumber').val()){
					shipNo=$('#shipmentNumber').val();
				}
				$('#shipmentNumber').val(shipNo);
				shipNo=0;
				$('#shipmentNumberHidden').val($('#shipmentNumber').val());
				$('.ui-autocomplete').hide();
				displayTemplate($('#shipmentNumber').val());
				$('#displayingTemplateEvent').val("Y");
			  }else{
				$('#msgDiv').html('<div class="message_error">'+'Template not found..'+'</div>');
				$('#shipmentNumberHidden').val("");
				window.scrollTo(0, 0);
				//triggerErrorMessageAlert();
			  }
		  }
		  
			
	}
	//change D024687
	else
		{
		if($('#bookingTypeCode').val()=='T')
			{
				$('#msgDiv').html('<div class="message_error">'+'Template not found..'+'</div>');
				$('#shipmentNumberHidden').val("");
				window.scrollTo(0, 0);
			
		  }else{
			$('#msgDiv').html('<div class="message_error">'+'Booking not found..'+'</div>');
			$('#shipmentNumberHidden').val("");
			window.scrollTo(0, 0);
			//triggerErrorMessageAlert();
		  }
		
		}
}

function applyQuoteCommonCode(data){
	//$('#bookingForm').clearForm();
	//resetDefault();
	if(data!=''){
		$('#quoteNumber').val(data.number);
		$('#quoteId').val(data.id);
		$('#quoteVersion').val(data.version.substr(1,4));
		$('#quoteVNConcat').val(data.number);//+'.'+data.version);
	}
	getQuote('');
}

function cleanHeader(){
	setDefaultForAssignLink();
	setDefaultForBookingStatus();
	disableCreateBookingFromQuote();
}
function setDefaultForBookingStatus(){
	//if($("#shipmentNumber").val() == '' || $("#shipmentNumber").val() == null){
	if($("#bookingId").val() == '' || $("#bookingId").val() == null){
		$("#bookingStatusCode").attr("disabled",true);
	}else{
		$("#bookingStatusCode").attr("disabled",false);
	}
}

function setDefaultForAssignLink(){
	if($("#shipmentNumber").val() == '' || $("#shipmentNumber").val() == null /*|| $("#shipmentNumber").val()==$('#quoteNumber').val()*/){
		$('#assignLink').html("Assign Quote");
	}else{
		if(/*$('#quoteId').val()=='' || */$('#quoteNumber').val() ==''){
			$('#assignLink').html("<a href=\"javascript:quotePopupSearch('assign');\">Assign Quote</a>");
		}
		else{
			$('#assignLink').html("<a href=\"javascript:removeAssignQuote();\">Remove Quote</a>");
		}
	}
}


function quotePopupSearch(data){
	assignOrCreate = data;
	var actionUrl = null;
	
	actionUrl = _context + '/cas/quoteLookup.do?bkFilters='+prepareInputForCASTemplateScreen() ;
	
/*	if(data=='create')
		actionUrl = actionUrl+'&quoteNo='+$('#quoteVNConcat').val();
	else 
		actionUrl = actionUrl+'&quoteNo='+$('#quoteVNConcat').val();*/
	actionUrl = actionUrl+'&quoteNo='+$('#quoteVNConcat').val();
	actionUrl = actionUrl + "&data=" + data;
	var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, '', windowStyle);
}

function loadHazMat(url){
	
	var actionUrl = url+'?bookingNumber='+$('#shipmentNumber').val() ;
	
	var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, '', windowStyle);
}

function loadGems(url){
	var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(url, '', windowStyle);
}

function removeAssignQuote(){
	isBookingChanged = "Y";
	$('#quoteNumber').val("");
//	$('#quoteId').val("");
	$('#quoteVersion').val("");
	$('#quoteNumberLabel').text("");
	$('#quoteAmount').val("");
	$('#quoteAmountDiv').text("");
	$('#assignLink').html("<a href=\"javascript:quotePopupSearch('assign');\">Assign Quote</a>");
}

function validateBookingStatusForActor(){
	var savedBKNGStatus = $('#savedBookingStatusCode').val();
	var requestedBKNGStatus = $('#bookingStatusCode').val();
	var valid = false;

	//only booking created from quote can be cancelled
	//commented after defect - > [D016083]
	/*
	if(requestedBKNGStatus=='CANC' && (($('#shipmentNumber').val() != $('#quoteNumber').val()))){
		$('#bookingStatusCode').val(savedBKNGStatus);
		return false;
	}
	//CANC to INCP
	if(requestedBKNGStatus=='INCP' && (($('#shipmentNumber').val() == $('#quoteNumber').val()))){
		return true;
	}
	*/
	
	if(savedBKNGStatus!=''){
		switch(savedBKNGStatus){
		case 'INCP':
			switch(requestedBKNGStatus){
				case 'CANC':
					return true;
			}
			break;
		case 'PEND':
			switch(requestedBKNGStatus){
				case 'CANC':
					return true;
				case 'APPR':
					return true;
				case 'OFFR':
					return true;
			}
			break;
		case 'APPR':
			switch(requestedBKNGStatus){
			case 'CANC':
				return true;
			case 'OFFR':
				return true;
			}
			break;
		case 'OFFR':
			switch(requestedBKNGStatus){
				case 'CANC':
					return true;
				case 'APPR':
					return true;
			}
			break;
		case 'CANC':
			switch(requestedBKNGStatus){
				case 'APPR':
					return true;
			}
			break;
		case 'ASGN':
			break;
		}
	}else{
		return true;
	}

	if(valid==false)
		$('#bookingStatusCode').val(savedBKNGStatus);
	return valid;

}

function checkIfTemplateToBeDisabled(){
	/*var aHtml = "";
	if($('#bookingStatusCode').val()=='APPR' || $('#bookingStatusCode').val()=='OFFR'){
		aHtml = ""
			+"<div id=\"bookingTemplateNumber\" class=\"span-2 last\"></div><img id=\"templateSearch\" src=\""+_context+"/resources/images//search.png\" border=\"0\" style=\"vertical-align: text-bottom; cursor: pointer;\" name=\"popupSearchtemplateSearch\" alt=\"Search\"/>"
			+"";
	}else{
		aHtml = ""
			+"<a href=\"javascript:templatePopupSearch();\">"
			+"<div id=\"bookingTemplateNumber\" class=\"span-2 last\"></div><img id=\"templateSearch\" src=\""+_context+"/resources/images/search.png\" border=\"0\" style=\"vertical-align: text-bottom; cursor: pointer;\" name=\"popupSearchtemplateSearch\" alt=\"Search\"/>"
			+"</a>"
			+"";
	}
	$('#templateDiv').html(aHtml);*/
}

function validateBookingStatusForActorOnServer(){
	/*if($('#bookingStatusCode').val()=='CANC'){
		var overRide = confirm("Do you really want to Cancel the "+ $('#shipmentNumberHidden').val() +" booking? (Y/N)");
		if(overRide == true){
			validateStatusOnServer();
		}else{
			$('#bookingStatusCode').val($('#savedBookingStatusCode').val());
		}
	}else{*/
		validateStatusOnServer();
	//}
}

function validateStatusOnServer(){
	var queryString = $('#bookingForm').formSerialize();
	$.ajax({
		type : "POST",
		url : _context +"/booking/header/status",
		data : queryString + "&requestedBookingStatus="+ $('#bookingStatusCode').val(),
		success : function(responseText) {
			showResponseMessages("msgDiv",responseText);
			
		}
	});
}

function getTemplateNumberForId(){/*
	var templateId = $('#bookingTemplateId').val();
	if(templateId != undefined &&  $('#bookingTemplateId').val()!=''){
		$.ajax({
			type : "POST",
			url : _context +"/booking/header/getTemplateNumber",
			data : {
				templateId : templateId
			},
			success : function(responseText) {
				//$("#bookingTemplateNumber").text(responseText.data);
				$("#bookingTemplateNumber").html("<a href="+_context +"/booking/template/showTemplateForm?templateNumber=" +responseText.data+" style=\"color: blue\">"+ responseText.data +"</a>");
			}
		});
	}
*/}

function templatePopupSearch(){
	var ediText = $('#ediOrWebIndicator').html();
	if(ediText == null) edeiText = "";
	if(ediText.indexOf("EDI") > -1) {
		otherAlert("","Apply template on Edi Booking Details.");
	} else {
		var actionUrl = _context + '/cas/templateSearch.do?templateValue1='+prepareInputForCASTemplateScreen();
		var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
		window.open(actionUrl, 'Template Search', windowStyle);
	}
}

function getQuote(id){
	var quoteNumberForRetain = $('#quoteVNConcat').val();
	var quoteId = '' ;
	if(id!='' && id.indexOf("=")>0){
		quoteId = id.split('=')[1];
		$("#quoteShowDialog").dialog('close');
	}else{
		quoteId = $('#quoteId').val();
		if(quoteId == null || quoteId == ''){
			quoteId = id;
		}
	}
	showQuoteLoadingMessage();
	$.ajax({
		type: "POST",
		url: _context +"/booking/applyQuote",
		data: {
			quoteId : quoteId,
			quoteNumber : $('#quoteVNConcat').val()
		},
		success: function(responseText){
			$('#bookingForm').clearForm();
			resetDefault();
			resetDivNames();
			if (responseText.messages.error.length == 0) {
				//clearAndResetBookingScreen();
				$('input[name="shipper\\.addressRoleId"]').val("");
				$('input[name="consignee\\.addressRoleId"]').val("");
				emptyContactDetails("shipper");
				emptyContactDetails("consignee");
				//resetDefault();
				//resetDivNames();
				$('#quoteIsLoadedOnScreen').val('Y');
				$('#bookingTemplateNumber').val("");
				$('#bookingTemplateId').val("");
				var aHtml = ""
					+"<a href=\"javascript:templatePopupSearch();\">"
					+"<div id=\"bookingTemplateNumber\" class=\"span-2 last\"></div><img id=\"templateSearch\" src=\""+_context+"/resources/images/search.png\" border=\"0\" style=\"vertical-align: text-bottom; cursor: pointer;\" name=\"popupSearchtemplateSearch\" alt=\"Search\"/>"
					+"</a>"
					+"";
				$('#templateDiv').html(aHtml);
				showJSON(responseText);
				if(responseText.data.shipper.addressRoleId != null){
					$('#prepaidCollectCode').attr('selectedIndex', 1);
				}else
					$('#prepaidCollectCode').attr('selectedIndex', 2);
				//Grid reload calls
				$('#prepaidCollectCode').trigger('change');
				reloadBookingGrids();
				processChangeSource();
				
				if(null != responseText.data.freight)
					populateCommodityCodeList(responseText.data.freight.commodityCodeList);
				//requestForContactList("shipper");
				/*if(responseText.data.shipper.contactId!=null && responseText.data.shipper.contactId!='')
					$('select[name="shipper\\.contactId"]').val(responseText.data.shipper.contactId);
				else if(responseText.data.consignee.contactId!=null && responseText.data.consignee.contactId!='')
					$('select[name="consignee\\.contactId"]').val(responseText.data.consignee.contactId);*/

				setDefaultForBookingStatus();
				$('#bookingSave').attr("disabled",false);
				if(null != responseText.data.shipper && responseText.data.shipper.contactId!=null && responseText.data.shipper.contactId!=''){
					$('select[name="shipper\\.contactId"]').val(responseText.data.shipper.contactId);
					setShipperCommMethodValue(responseText.data.shipper);
				}else if(null != responseText.data.consignee && responseText.data.consignee.contactId!=null && responseText.data.consignee.contactId!=''){
					$('select[name="consignee\\.contactId"]').val(responseText.data.consignee.contactId);
					setConsigneeCommMethodValue(responseText.data.consignee);
				}
				//getContactListOnQuotePull('shipper');
				//getContactListOnQuotePull('consignee');
				
				/*if(addFreightEnabled()){
					showFreight($.trim($('#customerGroupId :selected').text()));
					$($('.booking-section')[4]).accordion("enable");
					$($('.booking-section')[4]).accordion('option', 'active', 0);
				}*/
				
				//D026348 : Get description if it is blank and Item numbe exists
				if($.trim($("tariffCommodityDescription").val()) == '' && $.trim($('#tariffItemNumber').val())!=''){
					getPrimaryCommodity($('#tariff').val(), $('#tariffItemNumber').val());
				}
				
				$('#isAutobill').val('true');
				$('#autobillOptionCode').attr('disabled', false);
				$('#autobillTriggerCode').attr('disabled', false);
				isBookingChanged = "Y";
				isTemplateFirstLoad = false;
				expandAll();
				
			}
			else
				$('#quoteIsLoadedOnScreen').val('');
			//Messages
			setTimeout(function(){
				showResponseMessages("msgDiv",responseText);
				var quoteNumber = $('#quoteNumberLabel').text().split("-")[0].split("-")[0];
				$('#quoteVNConcat').val(quoteNumber);
				//hideEquipmentInlineEditDelete();
			}, 1000);
			$('#quoteVNConcat').val(quoteNumberForRetain);
		}
	});
}

function getContactListOnQuotePull(source, responseText){
	if($('input[name="'+source+'\\.addressRoleId"]').val() != "")
	{
		$.ajax({
			type : "POST",
			url : _context +"/booking/arole/getContactList",
			data : {
				addressRoleId : $('input[name="'+source+'\\.addressRoleId"]').val()
			},
			success : function(responseText) {
				$('select[name="'+source+'\\.contactId"]').children().remove();
				$('select[name="'+source+'\\.contactId"]').append("<option val='0' label='Select'></option>");
				$.each(responseText.data.contactList, function(key,
						value) {
					$('select[name="'+source+'\\.contactId"]')
							.append($("<option/>", {
								value : key,
								text : value
							}));
					if(source == 'shipper' && responseText.data.shipper.contactId!=null && responseText.data.shipper.contactId!='')
					{
						$('select[name="shipper\\.contactId"]').val(responseText.data.shipper.contactId);
						requestForContactDetails(source);
					}
					else if(source == 'consignee' && responseText.data.consignee.contactId!=null && responseText.data.consignee.contactId!='')
					{
						$('select[name="consignee\\.contactId"]').val(responseText.data.consignee.contactId);
						requestForContactDetails(source);
					}
				});
				if(source == 'shipper' && responseText.data.shipper.contactId!=null && responseText.data.shipper.contactId!='')
				{
					$('select[name="shipper\\.contactId"]').val(responseText.data.shipper.contactId);
				}else{
					$('select[name="consignee\\.contactId"]').val(responseText.data.consignee.contactId);
				}
			}
		});
	}
}

function validateBookingTrade(){
	var tradeCode = $('#tradeCode').val();
	var shipperAroleId = $('input[name="shipper\\.addressRoleId"]').val();
	var consigneeAroleId = $('input[name="consignee\\.addressRoleId"]').val();
	var pol = $('#originPortCityCode').val();
	var pod = $('#destinationPortCityCode').val();
	if((shipperAroleId == null || shipperAroleId=='') && (consigneeAroleId == null || consigneeAroleId=='') 
			&& (pol == null || pol == '') && (pod == null || pod == '')){
		return;
	}
	$.ajax({
		type : "POST",
		url : _context +"/booking/header/trade",
		data : {
			tradeCode : tradeCode,
			shipperAroleId : shipperAroleId,
			consigneeAroleId : consigneeAroleId,
			pol : pol,
			pod : pod
		},
		success : function(responseText) {
			showResponseMessages("msgDiv",responseText);
		}
	});
}

function removePopUps(){
	$("#bookingForm").validationEngine('hideAll');
}

function getBooking(){
	$.ajax({
		type: "POST",
		url: _context +"/booking/display",
		data: {bookingNumber: $("#shipmentNumber").val()},
		success: function(responseText){
			if (responseText.messages.error.length == 0) {
				showJSON(responseText);
				/*
				 * [ Grid reload calls ]
				 * */
				//Parties Grid
				$("#gridIdForParties").trigger('reloadGrid');
				// Reference Number grid
				$("#referenceNumberGrid").trigger('reloadGrid');
				// DODAAC
				$("#dodaacGrid").trigger('reloadGrid');
				//getTemplateNumberForId();
				checkIfTemplateToBeDisabled();
	
				if ((responseText.data.header.shipmentNumber != "")
						&& (responseText.data.header.shipmentNumber != null))
					$('#customizeNameAddress').removeAttr("disabled");
			}
			//Messages
			showResponseMessages("msgDiv",responseText);
			$('#commentsDiv').show();
		}
	});
}

function showQuoteLoadingMessage(){
	$('#msgDiv').html("<div class=\"message_info\">Loading quote "+ $('#quoteVNConcat').val() +" ...</div>");
	$('#msgDiv').show();
}

function changePosOfDialog(dialogName, pos){
	$("#"+ dialogName +"").dialog({ position: pos });
}
;var consigneeAddress = "";

$(function() {

	setDefaultPrefMethod('consignee');

	// create parties override dialog at body onload
	$("#notifyPartyOverrideDialog").dialog({
		autoOpen : false,
		width : 500,
		modal : true
	});
	
	$('input[name="consignee\\.city"]').attr("readonly", true);
	$('input[name="consignee\\.state"]').attr("readonly", true);
	$('input[name="consignee\\.zip"]').attr("readonly", true);
	
	$('input[name="consignee\\.contactPhoneCountryCode"]').change(function(){
		loadHazGrid();
	});
	
	consigneeOrgPredictive();
	consigneeAddPredictive();

	// consignee Pop-Up Search
	$('input[name="consignee\\.organizationName"]').gatesPopUpSearch({
		func : function() {
			consigneePopupSearch();
		}
	});

	// consignee address Pop-Up Search
	$('input[name="consignee\\.address"]').gatesPopUpSearch({
		func : function() {
			consigneeAddressPopupSearch();
		}
	});

	// Clear consignee details on change of consignee
	$('input[name="consignee\\.organizationName"]').change(
			function() {
				if ($('input[name="consignee\\.organizationName"]').val()=='' 
					|| $('input[name="consignee\\.organizationName"]').val() != $('#consigneeName').val()) {
				
					$('input[name="consignee\\.organizationId"]').val("");
					$('input[name="consignee\\.organizationCode"]').val('');
					$('input[name="consignee\\.organizationName"]').val('');
					$('input[name="consignee\\.isOneTimeCustomer"]').val("false");
				}
				processShipperConsigneeColor("consignee");
				$('input[name="consignee\\.address"]').val("");
				$('input[name="consignee\\.address"]').trigger('change');
	});

	$('input[name="consignee\\.address"]').change(function() {
		if(consigneeAddress!=$('input[name="consignee\\.address"]').val())
		{
			$('input[name="consignee\\.address"]').val('');
			consigneeAddress = '';
			$('input[name="consignee\\.addressRoleId"]').val("");
			$('#refNumOverRideForConsignee').val("");
			$('#isChangeAcceptedAfterUnitsReceived').val("");
		}
		
		emptyCityStateZip("consignee");
		emptyContactDetails("consignee");
		handlePrepaidCollectIndicator('C');
		//removeConsigneeAsDebtor();
		checkAccordionHeaderForConsignee();
		checkCopyButtons();
		removeBookingErrorPointers();
	});

	// get contact details for selected contact id[commented for merge.]
	$('select[name="consignee\\.contactId"]').change(function() {
		removeBookingErrorPointers();
		if($('select[name="consignee\\.contactId"] option').length!=0 && 
				$('select[name="consignee\\.contactId"] :selected').val()!=''){
			requestForContactDetails("consignee", "N");
			$('#isChangeAcceptedAfterUnitsReceived').val("N");
		}else{
			emptyContactDetailsOnContactChange('consignee');
		}
	});

	// get contact details for selected contact id
	$('input[name="consignee\\.contact"]').change(function() {
		handleManualContact('consignee');
	});
	
	/**
	 * Copy Consignee to Shipper 
	 * */
	$('#copyConsignee').click(function() {
		if ($('input[name="consignee\\.organizationName"]').val() != '' && $('input[name="shipper\\.organizationName"]').val() == '') {
			$('input[name="shipper\\.organizationName"]').validationEngine('hidePrompt');
			$('input[name="shipper\\.organizationName"]').val($('input[name="consignee\\.organizationName"]').val());
			$('input[name="shipper\\.organizationCode"]').val($('input[name="consignee\\.organizationCode"]').val());
			$('#shipperName').val($('input[name="consignee\\.organizationName"]').val());
			$('input[name="shipper\\.address"]').val($('input[name="consignee\\.address"]').val());
			shipperAddress = $('input[name="consignee\\.address"]').val();
			$('input[name="shipper\\.nameQualifier"]').val($('input[name="consignee\\.nameQualifier"]').val());
			$('input[name="shipper\\.careOf"]').val($('input[name="consignee\\.careOf"]').val());
			$('input[name="shipper\\.city"]').val($('input[name="consignee\\.city"]').val());
			$('input[name="shipper\\.state"]').val($('input[name="consignee\\.state"]').val());
			$('input[name="shipper\\.zip"]').val($('input[name="consignee\\.zip"]').val());
			$('input[name="shipper\\.countryName"]').val($('input[name="consignee\\.countryName"]').val());
			$('input[name="shipper\\.provinceName"]').val($('input[name="consignee\\.provinceName"]').val());
			$('select[name="shipper\\.contactId"]').html($('select[name="consignee\\.contactId"]').html());

			$('select[name="shipper\\.contactId"]').val($('select[name="consignee\\.contactId"] :selected').val());
			$('input[name="shipper\\.addressRoleContactCode"]').val($('input[name="consignee\\.addressRoleContactCode"]').val());
			$('input[name="shipper\\.contact"]').val($('input[name="consignee\\.contact"]').val());
			$('input[name="shipper\\.contactPhoneCountryCode"]').val($('input[name="consignee\\.contactPhoneCountryCode"]').val());
			$('input[name="shipper\\.contactPhoneAreaCode"]').val($('input[name="consignee\\.contactPhoneAreaCode"]').val());
			$('input[name="shipper\\.contactPhoneExchange"]').val($('input[name="consignee\\.contactPhoneExchange"]').val());
			$('input[name="shipper\\.contactPhoneStation"]').val($('input[name="consignee\\.contactPhoneStation"]').val());
			$('input[name="shipper\\.contactPhoneExtension"]').val($('input[name="consignee\\.contactPhoneExtension"]').val());

			$('input[name="shipper\\.contactCellCountryCode"]').val($('input[name="consignee\\.contactCellCountryCode"]').val());
			$('input[name="shipper\\.contactCellAreaCode"]').val($('input[name="consignee\\.contactCellAreaCode"]').val());
			$('input[name="shipper\\.contactCellExchange"]').val($('input[name="consignee\\.contactCellExchange"]').val());
			$('input[name="shipper\\.contactCellStation"]').val($('input[name="consignee\\.contactCellStation"]').val());
			$('input[name="shipper\\.contactCellExtension"]').val($('input[name="consignee\\.contactCellExtension"]').val());

			$('input[name="shipper\\.contactFaxCountryCode"]').val($('input[name="consignee\\.contactFaxCountryCode"]').val());
			$('input[name="shipper\\.contactFaxAreaCode"]').val($('input[name="consignee\\.contactFaxAreaCode"]').val());
			$('input[name="shipper\\.contactFaxExchange"]').val($('input[name="consignee\\.contactFaxExchange"]').val());
			$('input[name="shipper\\.contactFaxStation"]').val($('input[name="consignee\\.contactFaxStation"]').val());
			$('input[name="shipper\\.contactFaxExtension"]').val($('input[name="consignee\\.contactFaxExtension"]').val());

			$('input[name="shipper\\.contactEmailAddress"]').val($('input[name="consignee\\.contactEmailAddress"]').val());
			$("#copyConsignee").attr("disabled", true);
			
			//copy the internal ID's
			$('input[name="shipper\\.addressRoleId"]').val($('input[name="consignee\\.addressRoleId"]').val());
			$('input[name="shipper\\.organizationId"]').val($('input[name="consignee\\.organizationId"]').val());
			$('input[name="shipper\\.isOneTimeCustomer"]').val($('input[name="consignee\\.isOneTimeCustomer"]').val());
			$('input[name="shipper\\.organizationCode').val($('input[name="consignee\\.organizationCode').val());
			
			processShipperConsigneeColor("shipper");
			
			isBookingChanged = "Y";

			var preMethod = getPrefCommMethod('consignee');
			$('#shipperComm1').attr('checked',false);
			$('#shipperComm2').attr('checked',false);
			$('#shipperComm3').attr('checked',false);
			$('#shipperComm4').attr('checked',false);
			if(preMethod=='P'){
				$('#shipperComm1').attr('checked',true);
				$('#shipperComm1').val(preMethod);
			}else if(preMethod=='C'){
				$('#shipperComm2').attr('checked',true);
				$('#shipperComm2').val(preMethod);
			}else if(preMethod=='F'){
				$('#shipperComm3').attr('checked',true);
				$('#shipperComm3').val(preMethod);
			}else if(preMethod=='E'){
				$('#shipperComm4').attr('checked',true);
				$('#shipperComm4').val(preMethod);
			}else{
				$('#shipperComm1').attr('checked',true);
				$('#shipperComm1').val(preMethod);
			}
			//enableDisableContactId('shipper',false);
			
			checkAccordionHeaderForShipper();
			$('#refNumOverRideForShipper').val("N");
			
			/*if($('input[name="shipper\\.addressRoleId"]').val()!='')
				addShipperAsDebtor();*/
			//shipperOrgPredictive();
			//shipperAddressPredictive();
			handlePrepaidCollectIndicator('S');
		}
	});

	$('#consigneeRepeatContact').click(function(){
		if($("#bookingStatusCode").val()=='CANC'){
			$("#repeatContactOverlay").gatesDisable();
		}else{
			$("#repeatContactOverlay").gatesEnable();
		}
		if($('input[name="consignee\\.addressRoleId"]').val()!='')
		{
			if($('select[name="consignee\\.contactId"] :selected').val()=='' && 
					$('input[name="consignee\\.contact"]').val()!='')
			{
				repeatCaller ="consignee";
				
				$('#originalOrgName').val($('input[name="consignee\\.organizationName"]').val());
				//$('#originalOrgAddress').val($('input[name="consignee\\.address"]').val());
				$('#originalOrgAddress').val(formatAddRoleDscrForSC('', $('input[name="consignee\\.address"]').val(), 
						$('input[name="consignee\\.city"]').val(), $('input[name="consignee\\.state"]').val(), $('input[name="consignee\\.zip"]').val()));
				$('#repeatContactShipmentNo').val($('#shipmentNumber').val());
				$("#repeatContactOriginalAroleId").val($('input[name="consignee\\.addressRoleId"]').val());
				$("#repeatContactNameLabel").html($('input[name="consignee\\.contact"]').val());

							
				//consignee.contactPhoneCountryCode
				
				var p1 =  $('input[name="consignee\\.contactPhoneCountryCode"]').val();
				var p2 =  $('input[name="consignee\\.contactPhoneAreaCode"]').val();
				var p3 =  $('input[name="consignee\\.contactPhoneExchange"]').val();
				var p4 =  $('input[name="consignee\\.contactPhoneStation"]').val();
				var p5 =  $('input[name="consignee\\.contactPhoneExtension"]').val();
						
				var Phonearray = [p1,p2,p3,p4,p5];			
				var Phone = Phonearray.join("-");			
				
				
				var c1 =  $('input[name="consignee\\.contactCellCountryCode"]').val();
				var c2 =  $('input[name="consignee\\.contactCellAreaCode"]').val();
				var c3 =  $('input[name="consignee\\.contactCellExchange"]').val();
				var c4 =  $('input[name="consignee\\.contactCellStation"]').val();
				var c5 =  $('input[name="consignee\\.contactCellExtension"]').val();					
				
				var cellarray = [c1,c2,c3,c4,c5];
				var cell = cellarray.join("-");
				
				var f1 =  $('input[name="consignee\\.contactFaxCountryCode"]').val();
				var f2 =  $('input[name="consignee\\.contactFaxAreaCode"]').val();
				var f3 =  $('input[name="consignee\\.contactFaxExchange"]').val();
				var f4 =  $('input[name="consignee\\.contactFaxStation"]').val();
				var f5 =  $('input[name="consignee\\.contactFaxExtension"]').val();
				
				var faxarray = [f1,f2,f3,f4,f5];			
				var fax = faxarray.join("-");
				
				$("#repeatContactPhone").val(Phone);			
				$("#repeatContactCell").val(cell);
				$("#repeatContactFax").val(fax);			
				$("#repeatContactEmailAddress").val($('input[name="consignee\\.contactEmailAddress"]').val());
				$("#repeatContactId").html($('select[name="consignee\\.contactId"]').html());
				$("#repeatContactId :selected").val('');
				
				$("#repeatContactOverlay").dialog('open');
			}
			else
			{
				$('#consigneeRepeatContact').attr("checked", false);
				alert("Please enter a non-CP contact first");
			}
		}
		else
		{
			$('#consigneeRepeatContact').attr("checked", false);
			alert("Please select consignee address role first");
		}
	});

	//setDefaultPrefMethod('consignee');
	
	/*$('input[name="consignee\\.organizationName"]').click(function(){
		shipperPredictiveSearch();
		consigneePredictiveSearch();
	});*/
	
	$("#consignee input").change(function() {
		if ($(this).is("#contactId") || $(this).is("#contactPhoneAreaCode") || 
				$(this).is("#contactPhoneExchange") || $(this).is("#contactPhoneStation")){
			$('#isChangeAcceptedAfterUnitsReceived').val("N");
		}
	});
		//code to tab out in Phone fields
	var chkPhoneCountry =true;
	var chkPhoneArea = true;
	var chkPhoneExchange = true;
	$('input[name="consignee\\.contactPhoneCountryCode"]').keydown(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if(chkPhoneCountry){
	    	 this.select();
	    	 chkPhoneCountry = false;
	     }
		});
	$('input[name="consignee\\.contactPhoneCountryCode"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if($('input[name="consignee\\.contactPhoneCountryCode"]').val()=='1' || 
	    		 $('input[name="consignee\\.contactPhoneCountryCode"]').val()=='01' ||  
	    		 $('input[name="consignee\\.contactPhoneCountryCode"]').val().length == 3){
	    	 $('input[name="consignee\\.contactPhoneAreaCode"]').select();
			 chkPhoneCountry =true;
	     }
	}); 
	$('input[name="consignee\\.contactPhoneAreaCode"]').focus(function(evt) {
		chkPhoneArea = true;
	});
	$('input[name="consignee\\.contactPhoneAreaCode"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
		if(chkPhoneArea){
	    	 this.select();
	    	 chkPhoneArea = false;
	    	$('input[name="consignee\\.contactPhoneAreaCode"]').val('');
	     }
	     if(( $('input[name="consignee\\.contactPhoneAreaCode"]').val().length == 3 && isAmericanParty('consignee\\.contactPhoneCountryCode')) || 
	    		 $('input[name="consignee\\.contactPhoneAreaCode"]').val().length == 4){
	    		$('input[name="consignee\\.contactPhoneExchange"]').select();
	     }
	}); 
	
	$('input[name="consignee\\.contactPhoneAreaCode"]').keydown(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	    if(chkPhoneArea){
	    	 this.select();
	    	 chkPhoneArea = false;
	    	$('input[name="consignee\\.contactPhoneAreaCode"]').val('');
	     }
	}); 
	$('input[name="consignee\\.contactPhoneExchange"]').focus(function(evt) {
		chkPhoneExchange = true;
	});
	$('input[name="consignee\\.contactPhoneExchange"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
		 if(chkPhoneArea){
	    	 this.select();
	    	 chkPhoneExchange = false;
	    	$('input[name="consignee\\.contactPhoneExchange"]').val('');
	     }
	     if(($('input[name="consignee\\.contactPhoneExchange"]').val().length == 3 && isAmericanParty('consignee\\.contactPhoneCountryCode')) || 
	 		$('input[name="consignee\\.contactPhoneExchange"]').val().length == 4){
	    	 $('input[name="consignee\\.contactPhoneStation"]').select();
	     }
	}); 
	
	$('input[name="consignee\\.contactPhoneExchange"]').keydown(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if(chkPhoneExchange){
	    	 this.select();
	    	 chkPhoneExchange = false;
	    	$('input[name="consignee\\.contactPhoneExchange"]').val('');
	     }
	});

	$('input[name="consignee\\.contactPhoneStation"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if($('input[name="consignee\\.contactPhoneStation"]').val().length == 4){
	    	 $('input[name="consignee\\.contactPhoneExtension"]').focus();
	     }
	}); 
	
	//code to tab out in Cell fields
	var chkCellCountry =true;
	var chkCellArea = true;
	var chkCellExchange = true;
	$('input[name="consignee\\.contactPhoneCountryCode"]').keydown(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if(chkCellCountry){
	    	 this.select();
	    	 chkCellCountry = false;
	     }
		});
	$('input[name="consignee\\.contactCellCountryCode"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if($('input[name="consignee\\.contactCellCountryCode"]').val()=='1' || 
	    		 $('input[name="consignee\\.contactCellCountryCode"]').val()=='01' ||  
	    		 $('input[name="consignee\\.contactCellCountryCode"]').val().length == 3){
	    	 $('input[name="consignee\\.contactCellAreaCode"]').select();
			  chkCellCountry =true;
	     }
	}); 
	$('input[name="consignee\\.contactCellAreaCode"]').focus(function(evt) {
		chkCellArea = true;
	});
	$('input[name="consignee\\.contactCellAreaCode"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
		if(chkCellArea){
	    	 this.select();
	    	 chkCellArea = false;
	    	$('input[name="consignee\\.contactCellAreaCode"]').val('');
	     }
	     if(($('input[name="consignee\\.contactCellAreaCode"]').val().length == 3 && isAmericanParty('consignee\\.contactCellCountryCode')) || 
	    		 $('input[name="consignee\\.contactCellAreaCode"]').val().length == 4){
	    	 $('input[name="consignee\\.contactCellExchange"]').select();
	     }
	}); 
	
	$('input[name="consignee\\.contactCellAreaCode"]').keydown(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	      if(chkCellArea){
	    	 this.select();
	    	 chkCellArea = false;
	    	$('input[name="consignee\\.contactCellAreaCode"]').val('');
	     }
	});
	$('input[name="consignee\\.contactCellExchange"]').focus(function(evt) {
		chkCellExchange = true;
	});
	$('input[name="consignee\\.contactCellExchange"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
		 if(chkCellExchange){
	    	 this.select();
	    	 chkCellExchange = false;
	    	$('input[name="consignee\\.contactCellExchange"]').val('');
	     }
	     if(($('input[name="consignee\\.contactCellExchange"]').val().length == 3 && isAmericanParty('consignee\\.contactCellCountryCode')) || 
	    		 $('input[name="consignee\\.contactCellExchange"]').val().length == 4 ){
	    	 $('input[name="consignee\\.contactCellStation"]').select();
	     }
	}); 
	
	$('input[name="consignee\\.contactCellExchange"]').keydown(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	      if(chkCellExchange){
	    	 this.select();
	    	 chkCellExchange = false;
	    	$('input[name="consignee\\.contactCellExchange"]').val('');
	     }
	});
	
	$('input[name="consignee\\.contactCellStation"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if($('input[name="consignee\\.contactCellStation"]').val().length == 4){
	    	 $('input[name="consignee\\.contactCellExtension"]').focus();
	     }
	}); 
	//code to tab out in Cell fields
	var chkFaxCountry =true;
	var chkFaxArea = true;
	var chkFaxExchange = true;
	$('input[name="consignee\\.contactFaxCountryCode"]').keydown(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if(chkFaxCountry){
	    	 this.select();
	    	 chkFaxCountry = false;
	     }
		});
	$('input[name="consignee\\.contactFaxCountryCode"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if($('input[name="consignee\\.contactFaxCountryCode"]').val()=='1' || 
	    		 $('input[name="consignee\\.contactFaxCountryCode"]').val()=='01' ||  
	    		 $('input[name="consignee\\.contactFaxCountryCode"]').val().length == 3){
	    	 $('input[name="consignee\\.contactFaxAreaCode"]').select();
			 chkFaxCountry =true;
	     }
	}); 
	$('input[name="consignee\\.contactFaxAreaCode"]').focus(function(evt) {
		chkFaxArea = true;
	});
	$('input[name="consignee\\.contactFaxAreaCode"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
		if(chkFaxArea){
	    	 this.select();
	    	 chkFaxArea = false;
	    	 $('input[name="shipper\\.contactFaxAreaCode"]').val('');
	     }
	     if(($('input[name="consignee\\.contactFaxAreaCode"]').val().length == 3 && isAmericanParty('consignee\\.contactFaxCountryCode')) || 
	    		 $('input[name="consignee\\.contactFaxAreaCode"]').val().length == 4){
	    	 $('input[name="consignee\\.contactFaxExchange"]').select();
	     }
	}); 
	
	$('input[name="consignee\\.contactFaxAreaCode"]').keydown(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if(chkFaxArea){
	    	 this.select();
	    	 chkFaxArea = false;
	    	 $('input[name="consignee\\.contactFaxAreaCode"]').val('');
	     }
	});
	$('input[name="consignee\\.contactFaxExchange"]').focus(function(evt) {
		chkFaxExchange = true;
	});
	$('input[name="consignee\\.contactFaxExchange"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
		if(chkFaxExchange){
	    	 this.select();
	    	 chkFaxExchange = false;
	    	 $('input[name="consignee\\.contactFaxExchange"]').val('');
	     }
	     if(($('input[name="consignee\\.contactFaxExchange"]').val().length == 3 && isAmericanParty('consignee\\.contactFaxCountryCode')) || 
	    		 $('input[name="consignee\\.contactFaxExchange"]').val().length == 4){
	    	 $('input[name="consignee\\.contactFaxStation"]').select();
	    }
	}); 
	
	$('input[name="consignee\\.contactFaxExchange"]').keydown(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if(chkFaxExchange){
	    	 this.select();
	    	 chkFaxExchange = false;
	    	 $('input[name="consignee\\.contactFaxExchange"]').val('');
	     }
	});
	
	$('input[name="consignee\\.contactFaxStation"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	 	var key = theEvent.keyCode || theEvent.which;
	 	if(key == '16' || key == '9' || key == '8' || key == '46')
	 		return;
	    if($('input[name="consignee\\.contactFaxStation"]').val().length == 4){
	   		$('input[name="consignee\\.contactFaxExtension"]').focus();
	    }
	}); 
	
});

function consigneeOrgPredictive()
{
	//var urlConsigneeOrg = _context + '/cas/autocomplete.do?method=searchOrg&searchType=229&parentSearch=BK|'+$('#tradeCode').val();
	$('input[name="consignee\\.organizationName"]').gatesAutocomplete({
		//source : urlConsigneeOrg,
		source:_context+'/cas/autocomplete.do',
		name: "Customer Name",
	 	extraParams: {
		 		 method: 'searchOrg',
		 		 searchType: '229',
		 		 parentSearch:  function() { return "BK|"+$('#tradeCode').val(); }
	 	},
		autoSelectWhenSingle:true,
		autoSelectFirst:true,
			autoSelectCriteria:function(item) {
			   if(item != null){
			     return 'true';
			  }
			  else {
			     return 'false';
			  }
			},
		formatItem : function(data) {
			$('input[name="consignee\\.organizationName"]').validationEngine('hidePrompt');
			$('input[name="consignee\\.organizationId"]').val("");
			return data.name + "-" + data.abbr;
		},
		formatResult : function(data) {
			$('input[name="consignee\\.organizationName"]').validationEngine('hidePrompt');
			return data.name + "-" + data.abbr;//data.abbr + "-" + data.name;
		},
		select : function(data) {
			
			$('input[name="consignee\\.organizationName"]').validationEngine('hidePrompt');
			$('input[name="consignee\\.organizationName"]').val(
					data.name + "-" + data.abbr);
			$('#consigneeName').val(data.name);
			$('input[name="consignee\\.organizationId"]').val(data.id);
			$('input[name="consignee\\.organizationCode"]').val(data.abbr);
			consigneeId = data.id;
			
			
			$('input[name="consignee\\.isOneTimeCustomer"]').val(false);
			processShipperConsigneeColor("consignee");
		
			$('input[name="consignee\\.address"]').val("");
			$('input[name="consignee\\.address"]').trigger("change");
			
			$.ajax({
				type : "POST",
				url : _context +"/cas/autocomplete.do?method=searchSingleAddressforBK&searchType=234&parentSearch="+encodeURIComponent($('input[name="consignee\\.organizationId"]').val() + '|03|'+$('#tradeCode').val()),
				
				success : function(responseText) {
					if(responseText.length == 1){
						var nameQualifier = responseText[0].nameQual;
						/*var city = responseText[0].city;
						var state = responseText[0].state;
						var finalAddress = formatAddRoleDscrForSC(nameQualifier, responseText[0].stAdd, city, state);*/
						
						if(nameQualifier != undefined && nameQualifier != '' && nameQualifier != 'null' && nameQualifier != null){
							nameQualifier += " - ";
						}else{
							nameQualifier = '';
						}
						
						$('input[name="consignee\\.address"]').val(nameQualifier + responseText[0].stAdd);
						consigneeAddressPopulate(responseText[0]);
					} else {
						consigneeAddressPopupSearch();
					}
				}
			});
			$('#consigneeZipOverride').val("N");
		}
	});
}

function consigneeAddPredictive()
{
	//var urlConsigneeAdd = _context + '/cas/autocomplete.do?method=searchAddRoleBK&searchType=234&parentSearch='+ $('input[name="consignee\\.organizationId"]').val() + '|03|'+$('#tradeCode').val();
	
	$('input[name="consignee\\.address"]').gatesAutocomplete(
	{
		//source : urlConsigneeAdd,
		source:_context+'/cas/autocomplete.do',
		name: "Customer Address",
	 	extraParams: {
		 		 method: 'searchAddRoleBK',
		 		 searchType: '234',
		 		 parentSearch:  function() { return $('input[name="consignee\\.organizationId"]').val() + '|03|'+$('#tradeCode').val(); }
	 	},
	 	
		autoSelectWhenSingle:true,
		autoSelectFirst:true,
			autoSelectCriteria:function(item) {
			   if(item != null){
			     return 'true';
			  }
			  else {
			     return 'false';
			  }
			},
		formatItem : function(data) {
			var nameQualifier = data.nameQual;
			var city = data.city;
			var state = data.state;
			var zip = data.zip;
			var finalAddress = formatAddRoleDscrForSC(nameQualifier, data.stAdd, city, state, zip);
			return finalAddress;
		},
		formatResult : function(data) {
			/*var nameQualifier = data.nameQual;
			var city = data.city;
			var state = data.state;
			var zip = data.zip;*/
			//var finalAddress = formatAddRoleDscrForSC(nameQualifier, data.stAdd, city, state, zip);
			var nameQualifier = '';
			if(data.nameQual!=undefined && data.nameQual!=null && data.nameQual!='null' && data.nameQual!='')
				nameQualifier =data.nameQual+" - ";
			var finalAddress = nameQualifier+data.stAdd;
			return finalAddress;
		},
		select : function(data) {
			consigneeAddressPopulate(data);
		}
	});
}

function consigneeAddressPopulate(data){
	
	emptyContactDetails("consignee");
	emptyCityStateZip("consignee");
	
	/*var nameQualifier = data.nameQual;
	var city = data.city;
	var state = data.state;
	var finalAddress = formatAddRoleDscrForSC(nameQualifier, data.stAdd, city, state);*/
	var nameQualifier = '';
	if(data.nameQual!=undefined && data.nameQual!=null && data.nameQual!='null' && data.nameQual!='')
	{
		$('input[name="consignee\\.nameQualifier"]').val(data.nameQual);
		nameQualifier =data.nameQual+" - ";
	}
	else
		$('input[name="consignee\\.nameQualifier"]').val('');
	consigneeAddress = nameQualifier+data.stAdd;
	emptyCityStateZip("consignee");
	$('input[name="consignee\\.addressRoleId"]').val(data.addRole);
	if(data.coOrgName!=null && data.coOrgName!='null')
		$('input[name="consignee\\.careOf"]').val(data.coOrgName);
	else
		$('input[name="consignee\\.careOf"]').val('');
	$('input[name="consignee\\.countryName"]').val(data.cntry);
	$('input[name="consignee\\.provinceName"]').val(data.provnc);
	$('input[name="consignee\\.city"]').val(data.city);
	$('input[name="consignee\\.state"]').val(data.state);
	$('input[name="consignee\\.zip"]').val(data.zip);
	
	$('#refNumOverRideForConsignee').val("N");
	$('#isChangeAcceptedAfterUnitsReceived').val("N");
	
	isBookingChanged = "Y";
	
	processShipperConsigneeColor("consignee");
	checkAccordionHeaderForConsignee();
	checkCopyButtons();
	
	if($('#bookingTypeCode').val()=='B')
		checkForConsigneeTemplate();
	else
		requestForContactList("consignee");
	
	//addConsigneeAsDebtor();
	handlePrepaidCollectIndicator('C');
	removeBookingErrorPointers();
	$('#consigneeZipOverride').val("N");
}

function getTradeForTemplate() {
	var data ="";
	console.log('trade='+$('#tradeCode').val());
	if($('#tradeCode').val() != '') {
		data = $('#tradeCode').val() + "|";
	}
	return data;
}

function checkForConsigneeTemplate(){
	var isEdi = false;
	var ediText = $('#ediOrWebIndicator').html();
	if(ediText != null && ediText.indexOf("EDI") > -1) {
		isEdi = true;
	}
	
	if($("#bookingStatusCode").val()=='INCP' || $("#bookingStatusCode").val()==''){
		if($('input[name="consignee\\.address"]').val()!='' && $('input[name="consignee\\.addressRoleId"]').val()!=''){

			//do not show consignee templates if Shipper is present [ Defect - D023287 ] 
			if($('input[name="shipper\\.addressRoleId"]').val() != ''){
				requestForContactList("consignee");
				return;
			}
				

			if($('#bookingTemplateOwnerPartyType').val()=='03' || ($('#bookingTemplateId').val()=='' || $('#bookingTemplateId').val()==null)){
				//var data = prepareInputForCASTemplateScreen();
				//D031254 - make async : false - debtor was getting deleted due to async calls
				$.ajax({
					type : "POST",
					async : false,
					//url : _context+'/cas/autocomplete.do?method=getTemplateCount&searchType=257&parentSearch='+$('input[name="consignee\\.addressRoleId"]').val()+'|03|'+filterParamsForCASForTemplateValidation(),
					url : _context+'/cas/autocomplete.do?method=getTemplateCount&searchType=257&parentSearch='+$('input[name="consignee\\.addressRoleId"]').val()+'|03|'+getTradeForTemplate(),
					success : function(responseText) {
						var templateCount = responseText[0].totrec;
							if(templateCount==1){
								// D031918, don't apply template for EDI
								if(isEdi) {
									otherAlert("","Apply template on Edi Booking Details.");
								}
								//no quote details shoud be on page, even pulled quote should not be on page
								else if($('#quoteId').val()==''){
									if($('#bookingId').val()=='')
										templateUpdate(responseText[0].id,'consignee');
									else{
										var overRide = confirm("Booking data exists on screen. Confirm override.(Ok/Cancel)");
										if(overRide == true){
											templateUpdate(responseText[0].id,'consignee');
										}
									}
								}
							}else if(templateCount>1){
								// D031918, don't apply template for EDI
								if(isEdi) {
									otherAlert("","Apply template on Edi Booking Details.");
								}
								//do not show template, if Quote details are present 
								else if($('#quoteId').val()==''){
									templatePopupSearch();
								}
								requestForContactList("consignee");
							}else{
								requestForContactList("consignee");
							}
					}
				});
			}
			else{
				requestForContactList("consignee");
			}
		}
	}
	else{
		requestForContactList("consignee");
	}
}

function clearCityStateZip() {
	$('input[name="consignee\\.careOf"]').val('');
	$('input[name="consignee\\.nameQualifier"]').val('');
	$('input[name="consignee\\.city"]').val('');
	$('input[name="consignee\\.state"]').val('');
	$('input[name="consignee\\.zip"]').val('');
	$('input[name="consignee\\.countryName"]').val('');
	$('input[name="consignee\\.provinceName"]').val('');
}

/**
 * This method calls consignee lookup and passes it necessary arguments.
 * */
function consigneePopupSearch() {
	orgCaller = 'consignee';
	var consigneeName = $('input[name="consignee\\.organizationName"]').val();
	var splitconsigneeName = "";
	var actionUrl = "";
	if(consigneeName.indexOf("-") > 0){
		splitconsigneeName = consigneeName.split("-");
		actionUrl = _context + '/cas/orgSearchLookup.do?filterValue1='+encodeURIComponent(splitconsigneeName[0])
		+'|' + $('#tradeCode').val() + '|BK|||'+encodeURIComponent(splitconsigneeName[1]);
	}else{
		actionUrl = _context + '/cas/orgSearchLookup.do?filterValue1='
		+ encodeURIComponent(consigneeName) + '|' + $('#tradeCode').val() + '|BK'/*+'|'+$('#customerGroupId').val()*/;
	}
	var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, 'CustomerSearch', windowStyle);
}

/**
 * consignee address pop-up search
 * */
function consigneeAddressPopupSearch() {
	orgCaller = 'consignee';
	
	if ($.trim($('input[name="consignee\\.organizationId"]').val())=='') { 
		alert("Please select organization first");
	}/*else if($('#tradeCode :selected').val()==''){
		alert("Please select Trade");
	}*/else {
		var actionUrl = _context + '/cas/addRoleBKLookup.do?filterValue1='
				+ encodeURIComponent($('input[name="consignee\\.organizationId"]').val()) + '&filterValue2=03'+'&filterValue3='+$('#tradeCode').val();
		var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
		window.open(actionUrl, 'AddressSearch', windowStyle);
	}
}

/**
 * consignee address method called by CAS, after look-up.
 * */
//function addroleUpdate(data) {}


function loadAdditionalConsigneeDetails(responseText){
	$("#consigneeId").val(responseText.data.consignee.organizationId);
	$('#consignee\\.addressRoleId').val(responseText.data.consignee.addressRoleId);
	
	/*if(null!=responseText.data.consignee.addressRoleId){
		enableDisableContactId('consignee',false);
	}*/

	setConsigneeCommMethodValue(responseText.data.consignee);
	//first clear the drop down
	$('select[name="consignee\\.contactId"]').children().remove();
	$('select[name="consignee\\.contactId"]').append("<option value='' label='Select'></option>");
	$.each(responseText.data.consignee.contactList, function(key, value) {
		$('select[name="consignee\\.contactId"]').append($("<option/>", {
					value : key,
					text : value
		}));
	});
	
	$('select[name="consignee\\.contactId"]').val(responseText.data.consignee.contactId);
	
	//$('select[name="consignee\\.contactId"]').attr('selectedIndex', 0);

	/*if(responseText.data.consignee.isCustomerOneTimeCust==true){
		formatColorForOneTime('consignee');
	}*/
}

function addConsigneeAsDebtor(){
	blockUI();
	var queryString = $('#bookingForm').formSerialize();
	$.ajax({
		url : _context +"/booking/party/checkDefaultNotifyParty",
		type : "POST",
		data : queryString,
		success : function(responseText) {
			showResponseMessages('msgDiv', responseText);
			
			console.log("has default?"+responseText.data.hasDefault);
			var hasDefault = responseText.data.hasDefault;
			var hasNotifyParty = responseText.data.hasNotifyParty;
			
			if(hasDefault == 'skip' ) {
				setDefaults('skip', queryString);
			} else {
				var buttons = new Array();
				
				if(hasNotifyParty == 'true') {
					buttons.push({
						text : "Retain Notify",
						click : function() {
							setDefaults('retain',queryString);
							$("#notifyPartyOverrideDialog").dialog("close");
						}
					});
				}
				
				if(hasDefault == 'true') {
					buttons.push({
						text : "Use CP Default Notify",
						click : function() {
							setDefaults('cp',queryString);
							$("#notifyPartyOverrideDialog").dialog("close");
						}
					});
				}
				
				if(hasNotifyParty == 'true') {
					buttons.push({
						text : "Remove Notify",
						click : function() {
							setDefaults('remove', queryString);
							$("#notifyPartyOverrideDialog").dialog('close');
						}
					} );
				}
				
				if(hasNotifyParty == 'true') {
					$.unblockUI();
					
					$("#notifyPartyOverrideDialog").dialog("option", "buttons",buttons);
					$("#notifyPartyOverrideDialog").show();
					$("#notifyPartyOverrideDialog").dialog('open');
				} else {
					setDefaults('cp', queryString);
				}
			}
			
			
			
		}
	
	
		
	
	});
	
	
}

function setDefaults(action, queryString) {
	blockUI();
	$.ajax({
		url : _context +"/booking/party/setDefaults",
		async: false,
		type : "POST",
		data : queryString+"&type=consignee&oper=add&action="+action,
		success : function(responseText) {
			showResponseMessages('msgDiv', responseText);
			
			/*if($('input[name="shipper\\.addressRoleId"]').val()!='' && $('input[name="consignee\\.addressRoleId"]').val()!='')
				$('#prepaidCollectCode').val('B');//both
			else if($('input[name="shipper\\.addressRoleId"]').val()=='' && $('input[name="consignee\\.addressRoleId"]').val()!='')
				$('#prepaidCollectCode').val('C');//consignee
			
			debtorCode = $('#prepaidCollectCode :selected').val();
			setPartiesHeader();*/
			$("#gridIdForParties").trigger("reloadGrid");
			$.unblockUI();
		}
	});
	
}

function removeConsigneeAsDebtor(){
	
	var queryString = $('#bookingForm').formSerialize();
	$.ajax({
		url : _context +"/booking/party/setDefaults",
		type : "POST",
		data : queryString+"&type=consignee&oper=remove&action=skip",
		success : function(responseText) {
			showResponseMessages('msgDiv', responseText);
			/*if($('input[name="shipper\\.addressRoleId"]').val()!='')
				$('#prepaidCollectCode').val('P');
			else
				$('#prepaidCollectCode').val('');
				
			debtorCode = $('#prepaidCollectCode :selected').val();
			setPartiesHeader();*/
			$("#gridIdForParties").trigger("reloadGrid");
		}
	});
}

function setConsigneeDivName(name){
	if(name != null && name != ''){
		setAccordianTabDetails("consigneeNameDiv", " - " + name);
	}else{
		setAccordianTabDetails("consigneeNameDiv", "");
	}
}

function checkAccordionHeaderForConsignee()
{
	if($('input[name="consignee\\.addressRoleId"]').val()!='')
		setAccordianTabDetails("consigneeNameDiv", " - "+$('input[name="consignee\\.organizationName"]').val());
	else
		setAccordianTabDetails("consigneeNameDiv", "");
}
;var shipperAddress = "";
var templateCaller ="";
var isTemplateFirstLoad = false;

$(function() {
	
	setDefaultPrefMethod('shipper');
	
	shipperOrgPredictive();
	shipperAddressPredictive();
	
	// Shipper Pop-Up Search
	$('input[name="shipper\\.organizationName"]').gatesPopUpSearch({
		func : function() {
			shipperPopupSearch();
		}
	});

	// Shipper address Pop-Up Search
	$('input[name="shipper\\.address"]').gatesPopUpSearch({
		func : function() {
			shipperAddressPopupSearch();
		}
	});
	
	// Clear shipper details on change of Shipper
	$('input[name="shipper\\.organizationName"]').change(function() {
		if ($('input[name="shipper\\.organizationName"]').val()=='' 
			|| $('input[name="shipper\\.organizationName"]').val() != $('#shipperName').val()) {
			$('input[name="shipper\\.organizationId"]').val("");
			$('input[name="shipper\\.organizationName"]').val("");
			$('input[name="shipper\\.organizationCode"]').val("");
			$('input[name="shipper\\.isOneTimeCustomer"]').val("false");
		}
		
		processShipperConsigneeColor("shipper");
		$('input[name="shipper\\.address"]').val("");
		$('input[name="shipper\\.address"]').trigger('change');
	});

	$('input[name="shipper\\.address"]').change(function() {
		if(shipperAddress!=$('input[name="shipper\\.address"]').val())
		{
			$('input[name="shipper\\.address"]').val('');
			$('input[name="shipper\\.nameQualifier"]').val('');
			$('input[name="shipper\\.careOf"]').val('');
			$('input[name="shipper\\.countryName"]').val('');
			$('input[name="shipper\\.provinceName"]').val('');
			shipperAddress = '';
			$('input[name="shipper\\.addressRoleId"]').val("");
			$('#refNumOverRideForShipper').val("");
		}
		
		emptyCityStateZip("shipper");
		emptyContactDetails("shipper");
		handlePrepaidCollectIndicator('S');
		//removeShipperAsDebtor();
		checkAccordionHeaderForShipper();
		checkCopyButtons();
	});

	// get contact details for selected contact id
	$('select[name="shipper\\.contactId"]').change(function() {
		removeBookingErrorPointers();
		if($('select[name="shipper\\.contactId"] option').length!=0 
			&& $('select[name="shipper\\.contactId"] :selected').val()!=''){
			requestForContactDetails("shipper", "N");
		}else{
			emptyContactDetailsOnContactChange('shipper');
		}
	});

	// get contact details for selected contact id
	$('input[name="shipper\\.contact"]').change(function() {
		handleManualContact('shipper');
	});

	//Copy Shipper to Consignee
	$('#copyShipper').click(function() {
		if ($('input[name="shipper\\.organizationName"]').val() != '' && $('input[name="consignee\\.organizationName"]').val() == '') {
			$('input[name="consignee\\.organizationName"]').validationEngine('hidePrompt');
			$('input[name="consignee\\.organizationName"]').val($('input[name="shipper\\.organizationName"]').val());
			$('input[name="consignee\\.organizationCode"]').val($('input[name="shipper\\.organizationCode"]').val());
			$('#consigneeName').val($('input[name="shipper\\.organizationName"]').val());
			$('input[name="consignee\\.address"]').val($('input[name="shipper\\.address"]').val());
			consigneeAddress = $('input[name="shipper\\.address"]').val();
			$('input[name="consignee\\.nameQualifier"]').val($('input[name="shipper\\.nameQualifier"]').val());
			$('input[name="consignee\\.careOf"]').val($('input[name="shipper\\.careOf"]').val());
			$('input[name="consignee\\.countryName"]').val($('input[name="shipper\\.countryName"]').val());
			$('input[name="consignee\\.provinceName"]').val($('input[name="shipper\\.provinceName"]').val());
			$('input[name="consignee\\.city"]').val($('input[name="shipper\\.city"]').val());
			$('input[name="consignee\\.state"]').val($('input[name="shipper\\.state"]').val());
			$('input[name="consignee\\.zip"]').val($('input[name="shipper\\.zip"]').val());
			
			$('select[name="consignee\\.contactId"]').html($('select[name="shipper\\.contactId"]').html());
			
			$('select[name="consignee\\.contactId"]').val($('select[name="shipper\\.contactId"] :selected').val());//html($('select[name="shipper\\.contactId"]').html());
			$('input[name="consignee\\.addressRoleContactCode"]').val($('input[name="shipper\\.addressRoleContactCode"]').val());
			$('input[name="consignee\\.contact"]').val($('input[name="shipper\\.contact"]').val());

			$('input[name="consignee\\.contactPhoneCountryCode"]').val($('input[name="shipper\\.contactPhoneCountryCode"]').val());
			$('input[name="consignee\\.contactPhoneAreaCode"]').val($('input[name="shipper\\.contactPhoneAreaCode"]').val());
			$('input[name="consignee\\.contactPhoneExchange"]').val($('input[name="shipper\\.contactPhoneExchange"]').val());
			$('input[name="consignee\\.contactPhoneStation"]').val($('input[name="shipper\\.contactPhoneStation"]').val());
			$('input[name="consignee\\.contactPhoneExtension"]').val($('input[name="shipper\\.contactPhoneExtension"]').val());

			$('input[name="consignee\\.contactCellCountryCode"]').val($('input[name="shipper\\.contactCellCountryCode"]').val());
			$('input[name="consignee\\.contactCellAreaCode"]').val($('input[name="shipper\\.contactCellAreaCode"]').val());
			$('input[name="consignee\\.contactCellExchange"]').val($('input[name="shipper\\.contactCellExchange"]').val());
			$('input[name="consignee\\.contactCellStation"]').val($('input[name="shipper\\.contactCellStation"]').val());
			$('input[name="consignee\\.contactCellExtension"]').val($('input[name="shipper\\.contactCellExtension"]').val());

			$('input[name="consignee\\.contactFaxCountryCode"]').val($('input[name="shipper\\.contactFaxCountryCode"]').val());
			$('input[name="consignee\\.contactFaxAreaCode"]').val($('input[name="shipper\\.contactFaxAreaCode"]').val());
			$('input[name="consignee\\.contactFaxExchange"]').val($('input[name="shipper\\.contactFaxExchange"]').val());
			$('input[name="consignee\\.contactFaxStation"]').val($('input[name="shipper\\.contactFaxStation"]').val());
			$('input[name="consignee\\.contactFaxExtension"]').val($('input[name="shipper\\.contactFaxExtension"]').val());

			$('input[name="consignee\\.contactEmailAddress"]').val($('input[name="shipper\\.contactEmailAddress"]').val());
			$("#copyShipper").attr("disabled", true);
			$("#copyConsignee").attr("disabled", true);
			//copy the internal ID's
			$('input[name="consignee\\.addressRoleId"]').val($('input[name="shipper\\.addressRoleId"]').val());
			$('input[name="consignee\\.organizationId"]').val($('input[name="shipper\\.organizationId"]').val());
			$('input[name="consignee\\.isOneTimeCustomer"]').val($('input[name="shipper\\.isOneTimeCustomer"]').val());
			$('input[name="consignee\\.organizationCode').val($('input[name="shipper\\.organizationCode').val());
			
			processShipperConsigneeColor("consignee");
			
			isBookingChanged = "Y";
			
			var preMethod = getPrefCommMethod('shipper');
			$('#consigneeComm1').attr('checked',false);
			$('#consigneeComm2').attr('checked',false);
			$('#consigneeComm3').attr('checked',false);
			$('#consigneeComm4').attr('checked',false);
			if(preMethod=='P'){
				$('#consigneeComm1').attr('checked',true);
				$('#consigneeComm1').val(preMethod);
			}else if(preMethod=='C'){
				$('#consigneeComm2').attr('checked',true);
				$('#consigneeComm2').val(preMethod);
			}else if(preMethod=='F'){
				$('#consigneeComm3').attr('checked',true);
				$('#consigneeComm3').val(preMethod);
			}else if(preMethod=='E'){
				$('#consigneeComm4').attr('checked',true);
				$('#consigneeComm4').val(preMethod);
			}else{
				$('#consigneeComm1').attr('checked',true);
				$('#consigneeComm1').val(preMethod);
			}
			
			//enableDisableContactId('consignee',false);
			checkAccordionHeaderForConsignee();
			$('#refNumOverRideForconsignee').val("N");
			
			/*if($('input[name="consignee\\.addressRoleId"]').val()!='')
				addConsigneeAsDebtor();*/
			//consigneeOrgPredictive();
			//consigneeAddPredictive();
			handlePrepaidCollectIndicator('C');
			loadHazGrid();
		}
	});

	$('#shipperRepeatContact').click(function(){
		if($("#bookingStatusCode :selected").val()=='CANC'){
			$("#repeatContactOverlay").gatesDisable();
		}else{
			$("#repeatContactOverlay").gatesEnable();
		}
		if($('input[name="shipper\\.addressRoleId"]').val()!='')
		{
			if($('select[name="shipper\\.contactId"] :selected').val()=='' && 
				$('input[name="shipper\\.contact"]').val()!='')
			{
				repeatCaller ="shipper";
				
				$('#originalOrgName').val($('input[name="shipper\\.organizationName"]').val());
				
				$('#originalOrgAddress').val(formatAddRoleDscrForSC('', $('input[name="shipper\\.address"]').val(), 
						$('input[name="shipper\\.city"]').val(), $('input[name="shipper\\.state"]').val(), $('input[name="shipper\\.zip"]').val()));
				$('#repeatContactShipmentNo').val($('#shipmentNumber').val());
				$("#repeatContactOriginalAroleId").val($('input[name="shipper\\.addressRoleId"]').val());
				$("#repeatContactNameLabel").html($('input[name="shipper\\.contact"]').val());
				
				//Added by Hrushikesh
				
				var p1 =  $('input[name="shipper\\.contactPhoneCountryCode"]').val();
				var p2 =  $('input[name="shipper\\.contactPhoneAreaCode"]').val();
				var p3 =  $('input[name="shipper\\.contactPhoneExchange"]').val();
				var p4 =  $('input[name="shipper\\.contactPhoneStation"]').val();
				var p5 =  $('input[name="shipper\\.contactPhoneExtension"]').val();
				var Phonearray = [p1,p2,p3,p4,p5];
				
				var Phone = Phonearray.join("-");				
				
				var c1 =  $('input[name="shipper\\.contactCellCountryCode"]').val();
				var c2 =  $('input[name="shipper\\.contactCellAreaCode"]').val();
				var c3 =  $('input[name="shipper\\.contactCellExchange"]').val();
				var c4 =  $('input[name="shipper\\.contactCellStation"]').val();
				var c5 =  $('input[name="shipper\\.contactCellExtension"]').val();
				
				var cellarray = [c1,c2,c3,c4,c5];
				
				var cell = cellarray.join("-");
				
				
				var f1 =  $('input[name="shipper\\.contactFaxCountryCode"]').val();
				var f2 =  $('input[name="shipper\\.contactFaxAreaCode"]').val();
				var f3 =  $('input[name="shipper\\.contactFaxExchange"]').val();
				var f4 =  $('input[name="shipper\\.contactFaxStation"]').val();
				var f5 =  $('input[name="shipper\\.contactFaxExtension"]').val();
				
				var faxarray = [f1,f2,f3,f4,f5];
				
				var fax = faxarray.join("-");
				
				$("#repeatContactPhone").val(Phone);			
				$("#repeatContactCell").val(cell);
				$("#repeatContactFax").val(fax);			
				$("#repeatContactEmailAddress").val($('input[name="shipper\\.contactEmailAddress"]').val());
				$("#repeatContactId").html($('select[name="shipper\\.contactId"]').html());
				$("#repeatContactId").val('');
				
				$("#repeatContactOverlay").dialog('open');
			}
			else
			{
				$('#shipperRepeatContact').attr("checked", false);
				alert("Please enter a non-CP contact first");
			}
		}
		else
		{
			$('#shipperRepeatContact').attr("checked", false);
			alert("Please select a shipper address role first");
		}
	});
	//code to tab out in Phone fields
	var chkPhoneCountry =true;
	var chkPhoneArea = true;
	var chkPhoneExchange = true;
	 
	$('input[name="shipper\\.contactPhoneCountryCode"]').keydown(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if(chkPhoneCountry){
	    	 this.select();
	    	 chkPhoneCountry = false;
	     }
		});
	$('input[name="shipper\\.contactPhoneCountryCode"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if($('input[name="shipper\\.contactPhoneCountryCode"]').val()=='1' || 
	    		 $('input[name="shipper\\.contactPhoneCountryCode"]').val()=='01' ||  
	    		 $('input[name="shipper\\.contactPhoneCountryCode"]').val().length == 3){
	    	 $('input[name="shipper\\.contactPhoneAreaCode"]').focus();
			 chkPhoneCountry =true;
	     }
	}); 
	
	$('input[name="shipper\\.contactPhoneAreaCode"]').focus(function(evt) {
		chkPhoneArea = true;
	});
	$('input[name="shipper\\.contactPhoneAreaCode"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
		if(chkPhoneArea){
	    	 this.select();
	    	 chkPhoneArea = false;
	    	$('input[name="shipper\\.contactPhoneAreaCode"]').val('');
	     }
	     if(( $('input[name="shipper\\.contactPhoneAreaCode"]').val().length == 3 && isAmericanParty('shipper\\.contactPhoneCountryCode')) || 
	    		 $('input[name="shipper\\.contactPhoneAreaCode"]').val().length == 4){
	    		$('input[name="shipper\\.contactPhoneExchange"]').focus();
	     }
	}); 
	
	$('input[name="shipper\\.contactPhoneAreaCode"]').keydown(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	      if(chkPhoneArea){
	    	 this.select();
	    	 chkPhoneArea = false;
	    	$('input[name="shipper\\.contactPhoneAreaCode"]').val('');
	     }
	}); 
	$('input[name="shipper\\.contactPhoneExchange"]').focus(function(evt) {
		chkPhoneExchange = true;
	});
	
	$('input[name="shipper\\.contactPhoneExchange"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
			if(chkPhoneExchange){
	    	 this.select();
	    	 chkPhoneExchange = false;
	    	$('input[name="shipper\\.contactPhoneExchange"]').val('');
	     }
	     if(($('input[name="shipper\\.contactPhoneExchange"]').val().length == 3 && isAmericanParty('shipper\\.contactPhoneCountryCode')) || 
	 		$('input[name="shipper\\.contactPhoneExchange"]').val().length == 4){
	    	 $('input[name="shipper\\.contactPhoneStation"]').focus();
	     }
	}); 
	
	$('input[name="shipper\\.contactPhoneExchange"]').keydown(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	    if(chkPhoneExchange){
	    	 this.select();
	    	 chkPhoneExchange = false;
	    	 $('input[name="shipper\\.contactPhoneExchange"]').val('');
	     }
	});

	$('input[name="shipper\\.contactPhoneStation"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if($('input[name="shipper\\.contactPhoneStation"]').val().length == 4){
	    	 $('input[name="shipper\\.contactPhoneExtension"]').focus();
	     }
	}); 
	//code to tab out in Cell fields
	var chkCellCountry =true;
	var chkCellArea = true;
	var chkCellExchange = true;
	$('input[name="shipper\\.contactCellCountryCode"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if($('input[name="shipper\\.contactCellCountryCode"]').val()=='1' || 
	    		 $('input[name="shipper\\.contactCellCountryCode"]').val()=='01' ||  
	    		 $('input[name="shipper\\.contactCellCountryCode"]').val().length == 3){
	    	 $('input[name="shipper\\.contactCellAreaCode"]').focus();
			 chkCellCountry =true;
	     }
	}); 
	$('input[name="shipper\\.contactCellCountryCode"]').keydown(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if(chkCellCountry){
	    	 this.select();
	    	 chkCellCountry = false;
	     }
		});
	
	$('input[name="shipper\\.contactCellAreaCode"]').focus(function(evt) {
		chkCellArea = true;
	});
	$('input[name="shipper\\.contactCellAreaCode"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
		if(chkCellArea){
	    	 this.select();
	    	 chkCellArea = false;
	    	  $('input[name="shipper\\.contactCellAreaCode"]').val('');
	     }
	     if(($('input[name="shipper\\.contactCellAreaCode"]').val().length == 3 && isAmericanParty('shipper\\.contactCellCountryCode')) || 
	    		 $('input[name="shipper\\.contactCellAreaCode"]').val().length == 4){
	    	 $('input[name="shipper\\.contactCellExchange"]').focus();
	     }
	}); 
	
	$('input[name="shipper\\.contactCellAreaCode"]').keydown(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if(chkCellArea){
	    	 this.select();
	    	 chkCellArea = false;
	    	 $('input[name="shipper\\.contactCellAreaCode"]').val('');
	     }
	}); 
	$('input[name="shipper\\.contactCellExchange"]').focus(function(evt) {
		chkCellExchange = true;
	});
	$('input[name="shipper\\.contactCellExchange"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
		if(chkCellExchange){
	    	 this.select();
	    	 chkCellExchange = false;
	    	$('input[name="shipper\\.contactCellExchange"]').val('');
	     }
	     if(($('input[name="shipper\\.contactCellExchange"]').val().length == 3 && isAmericanParty('shipper\\.contactCellCountryCode')) || 
	    		 $('input[name="shipper\\.contactCellExchange"]').val().length == 4 ){
	    	 $('input[name="shipper\\.contactCellStation"]').focus();
	     }
	}); 
	
	$('input[name="shipper\\.contactCellExchange"]').keydown(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if(chkCellExchange){
	    	 this.select();
	    	 chkCellExchange = false;
	    	$('input[name="shipper\\.contactCellExchange"]').val('');
	     }
	});
	
	$('input[name="shipper\\.contactCellStation"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if($('input[name="shipper\\.contactCellStation"]').val().length == 4){
	    	 $('input[name="shipper\\.contactCellExtension"]').focus();
	     }
	}); 
	//code to tab out in Cell fields
	var chkFaxCountry =true;
	var chkFaxArea = true;
	var chkFaxExchange = true;
	$('input[name="shipper\\.contactFaxCountryCode"]').keydown(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if(chkFaxCountry){
	    	 this.select();
	    	 chkFaxCountry = false;
	     }
		});
	$('input[name="shipper\\.contactFaxCountryCode"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if($('input[name="shipper\\.contactFaxCountryCode"]').val()=='1' || 
	    		 $('input[name="shipper\\.contactFaxCountryCode"]').val()=='01' ||  
	    		 $('input[name="shipper\\.contactFaxCountryCode"]').val().length == 3){
	    	 $('input[name="shipper\\.contactFaxAreaCode"]').focus();
			 chkFaxCountry =true;
	     }
	}); 
	$('input[name="shipper\\.contactFaxAreaCode"]').focus(function(evt) {
		chkFaxArea = true;
	});
	$('input[name="shipper\\.contactFaxAreaCode"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
		if(chkFaxArea){
	    	 this.select();
	    	 chkFaxArea = false;
	    	 $('input[name="shipper\\.contactFaxAreaCode"]').val('');
	     }
	     if(($('input[name="shipper\\.contactFaxAreaCode"]').val().length == 3 && isAmericanParty('shipper\\.contactFaxCountryCode')) || 
	    		 $('input[name="shipper\\.contactFaxAreaCode"]').val().length == 4){
	    	 $('input[name="shipper\\.contactFaxExchange"]').focus();
	     }
	}); 
	
	$('input[name="shipper\\.contactFaxAreaCode"]').keydown(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if(chkFaxArea){
	    	 this.select();
	    	 chkFaxArea = false;
	    	 $('input[name="shipper\\.contactFaxAreaCode"]').val('');
	     }
	}); 
	$('input[name="shipper\\.contactFaxExchange"]').focus(function(evt) {
		chkFaxExchange = true;
	});
	$('input[name="shipper\\.contactFaxExchange"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
		if(chkFaxExchange){
	    	 this.select();
	    	 chkFaxExchange = false;
	    	 $('input[name="shipper\\.contactFaxExchange"]').val('');
	     }
	     if(($('input[name="shipper\\.contactFaxExchange"]').val().length == 3 && isAmericanParty('shipper\\.contactFaxCountryCode')) || 
	    		 $('input[name="shipper\\.contactFaxExchange"]').val().length == 4){
	    	 $('input[name="shipper\\.contactFaxStation"]').focus();
	     }
	}); 
	
	$('input[name="shipper\\.contactFaxExchange"]').keydown(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	    if(chkFaxExchange){
	    	 this.select();
	    	 chkFaxExchange = false;
	    	 $('input[name="shipper\\.contactFaxExchange"]').val('');
	     }
	});
	
	$('input[name="shipper\\.contactFaxStation"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if($('input[name="shipper\\.contactFaxStation"]').val().length == 4){
	    		$('input[name="shipper\\.contactFaxExtension"]').focus();
	     }
	}); 
	
});

function handlePrepaidCollectIndicator(caller){
	var isOverridden = false;
	
	if((caller=='S' && $('input[name="shipper\\.addressRoleId"]').val()!='') || 
	   (caller=='C' && $('input[name="consignee\\.addressRoleId"]').val()!=''))
	{
		var rowIDs = jQuery("#gridIdForParties").getDataIDs();
		for (var i=0;i<rowIDs.length;i=i+1)
	    { 
	      var rowData=jQuery("#gridIdForParties").getRowData(rowIDs[i]);
	      if (caller=='S' && rowData.partyTypeDescription=='Prepaid Bill To Party' && (rowData.isCpPartyOverridden=='true'
	    	  || rowData.isCpPartyOverridden == true || rowData.isCpPartyOverridden == 'Yes'))
	      {
	    	  isOverridden = true;
	    	  break;
	      }
	      else if (caller=='C' && rowData.partyTypeDescription=='Collect Bill To Party' && (rowData.isCpPartyOverridden=='true'
	    	  || rowData.isCpPartyOverridden == true || rowData.isCpPartyOverridden == 'Yes'))
	      {
	    	  isOverridden = true;
	    	  break;
	      }
	    }
		if(isOverridden && caller=='S')
		{
			$("#partiesOverrideDialogDiv").html("Prepaid Bill to Party not Default.");
			$("#partiesSaveDialog").dialog("option", "buttons", [ {
				text : "Override",
				click : function() {
					$("#partiesSaveDialog").dialog("close");
				}
			}, {
				text : "Default",
				click : function() {
					$.ajax({
						url : _context +"/booking/party/setDefault",
						data : {
									type:'prepaid', 
									tradeCode:$('#tradeCode :selected').val(), 
									shipperArolId:$('input[name="shipper\\.addressRoleId"]').val(), 
									consigneeArolId:$('input[name="consignee\\.addressRoleId"]').val()
								},
						success : function(responseText) {
							if (responseText.success == true) {
								$("#gridIdForParties").trigger("reloadGrid");
								$("#partiesSaveDialog").dialog("close");
								addShipperAsDebtor();
							}
							else 
							{
								alert("An error has occurred");
							}
						}
					});
				}
			}]);
			$("#partiesSaveDialog").dialog().parents(".ui-dialog").find(".ui-dialog-titlebar").hide(); 
			var xErrorCoordinate = window.pageXOffset;
			var yErrorCoordinate = window.pageYOffset;
			$('#partiesSaveDialog').dialog('open');
			setTimeout(function(){
				window.scrollTo(xErrorCoordinate, yErrorCoordinate);
				}, 250);
		}
		else if(isOverridden && caller=='C')
		{
			$("#partiesOverrideDialogDiv").html("Collect Bill to Party not Default.");
			$("#partiesSaveDialog").dialog("option", "buttons", [ {
				text : "Override",
				click : function() {
					$("#partiesSaveDialog").dialog("close");
				}
			}, {
				text : "Default",
				click : function() {
					$.ajax({
						url : _context +"/booking/party/setDefault",
						data : {
									type:'collect', 
									tradeCode:$('#tradeCode :selected').val(), 
									shipperArolId:$('input[name="shipper\\.addressRoleId"]').val(), 
									consigneeArolId:$('input[name="consignee\\.addressRoleId"]').val()
								},
						success : function(responseText) {
							if (responseText.success == true) {
								$("#gridIdForParties").trigger("reloadGrid");
								$("#partiesSaveDialog").dialog("close");
								addConsigneeAsDebtor();
							}
							else 
							{
								alert("An error has occurred");
							}
						}
					});
				}
			}]);
			$("#partiesSaveDialog").dialog().parents(".ui-dialog").find(".ui-dialog-titlebar").hide(); 
			var xErrorCoordinate = window.pageXOffset;
			var yErrorCoordinate = window.pageYOffset;
			$('#partiesSaveDialog').dialog('open');
			setTimeout(function(){
				window.scrollTo(xErrorCoordinate, yErrorCoordinate);
				}, 250);
		}
		else if(!isOverridden)
		{
			if(caller=='S')
				addShipperAsDebtor();
			else if(caller=='C')
				addConsigneeAsDebtor();
		}
	}
	/*if(!isOverridden)
	{
		switch(caller){
			case 'S':
				if("SHA"==$('#originPortCityCode'))
				{
					if($('#prepaidCollectCode').val()=='P' || 
					$('#prepaidCollectCode').val()=='B')
					{
						$.ajax({
							url : _context +"/booking/party/evaluateChinaBookingDebtors",
							data : {
										shipperArolId:$('input[name="shipper\\.addressRoleId"]').val(),
										tradeCode: $('#tradeCode :selected').val()
									},
							success : function(responseText) {
								if (responseText.success == true) {
									$("#gridIdForParties").trigger("reloadGrid");
								}
								else 
								{
									alert("An error has occurred");
								}
							}
						});
					}
				}
				else
				{
					if($('#prepaidCollectCode').val()=='P'){
						$('#prepaidCollectCode').val('');
						$('#prepaidCollectCode').trigger('change');
					}
					else if($('#prepaidCollectCode').val()=='B'){
						$('#prepaidCollectCode').val('C');
						$('#prepaidCollectCode').trigger('change');
					}
				}
				break;
			case 'C':
				if($('#prepaidCollectCode').val()=='C'){
					$('#prepaidCollectCode').val('');
					$('#prepaidCollectCode').trigger('change');
				}
				else if($('#prepaidCollectCode').val()=='B'){
					$('#prepaidCollectCode').val('P');
					$('#prepaidCollectCode').trigger('change');
				}
				break;
			default:
				break;
		}
	}*/
}

function shipperOrgPredictive()
{
	/*var urlShipperOrg = _context
			+ '/cas/autocomplete.do?method=searchOrg&searchType=229&parentSearch=BK|'+$('#tradeCode').val();*/
	
	$('input[name="shipper\\.organizationName"]').gatesAutocomplete(
		{
			source:_context+'/cas/autocomplete.do',
			name: "Customer Name",
		 	extraParams: {
 		 		 method: 'searchOrg',
 		 		 searchType: '229',
 		 		parentSearch:  function() { return "BK|"+$('#tradeCode').val(); }
		 	},
		 	
			autoSelectWhenSingle:true,
			autoSelectFirst:true,
				autoSelectCriteria:function(item) {
				   if(item != null){
				     return 'true';
				  }
				  else {
				     return 'false';
				  }
				},
			//source : urlShipperOrg,
			formatItem : function(data) {
				$('input[name="shipper\\.organizationName"]').validationEngine('hidePrompt');
				$('input[name="shipper\\.organizationId"]').val("");
				return data.name + "-" + data.abbr;
			},
			formatResult : function(data) {
				$('input[name="shipper\\.organizationName"]').validationEngine('hidePrompt');
				return data.name + "-" + data.abbr;//data.abbr + "-" + data.name;
			},
			select : function(data) {
				$('input[name="shipper\\.organizationName"]').validationEngine('hidePrompt');
				$('input[name="shipper\\.organizationName"]').val(data.name + "-" + data.abbr);
				$('#shipperName').val($('input[name="shipper\\.organizationName"]').val());
				$('input[name="shipper\\.organizationCode"]').val(data.abbr);
				$('input[name="shipper\\.organizationId"]').val(data.id);
				shipperId = data.id;
				
				isBookingChanged = "Y";
				
				$('input[name="shipper\\.isOneTimeCustomer"]').val("false");
				processShipperConsigneeColor("shipper");
				
				$('input[name="shipper\\.address"]').val("");
				$('input[name="shipper\\.address"]').trigger('change');
				
				
				singleAddressShipperCall();
				//shipperAddressPopupSearch();
			}
		});
}

function singleAddressShipperCall(){
	$.ajax({
		type : "POST",
		url : _context +"/cas/autocomplete.do?method=searchSingleAddressforBK&searchType=234&parentSearch="+encodeURIComponent($('input[name="shipper\\.organizationId"]').val() + '|02|'+$('#tradeCode').val()),
		
		success : function(responseText) {
			if(responseText.length == 1){
				var nameQualifier = responseText[0].nameQual;
				/*var city = responseText[0].city;
				var state = responseText[0].state;
				var finalAddress = formatAddRoleDscrForSC(nameQualifier, responseText[0].stAdd, city, state);*/
				if(nameQualifier != undefined && nameQualifier != '' && nameQualifier != 'null' && nameQualifier != null){
					nameQualifier += " - ";
				}else{
					nameQualifier = '';
				}
				var finalAddress =nameQualifier+responseText[0].stAdd;
				$('input[name="shipper\\.address"]').val( finalAddress);
				
				shipperAddressPopulate(responseText[0]);
			} else {
				shipperAddressPopupSearch();
			}
			
		}
	});
}

function shipperAddressPredictive()
{
	//address role predictive search.
	/*var urlShipperAdd = _context
	+ '/cas/autocomplete.do?method=searchAddRoleBK&searchType=234&parentSearch='
	+ $('input[name="shipper\\.organizationId"]').val() + '|02|'+$('#tradeCode').val();*/
	
	$('input[name="shipper\\.address"]').gatesAutocomplete({
			//source : urlShipperAdd,
			source:_context+'/cas/autocomplete.do',
			name: "Customer Address",
		 	extraParams: {
 		 		 method: 'searchAddRoleBK',
 		 		 searchType: '234',
 		 		 parentSearch:  function() { return $('input[name="shipper\\.organizationId"]').val() + '|02|'+$('#tradeCode').val(); }
		 	},
			autoSelectWhenSingle:true,
			autoSelectFirst:true,
				autoSelectCriteria:function(item) {
				   if(item != null){
				     return 'true';
				  }
				  else {
				     return 'false';
				  }
				},
			formatItem : function(data) {
				$('input[name="shipper\\.addressRoleId"]').val("");
				var nameQualifier = data.nameQual;
				var city = data.city;
				var state = data.state;
				var zip = data.zip;
				var finalAddress = formatAddRoleDscrForSC(nameQualifier, data.stAdd, city, state, zip);
				return finalAddress;
			},
			formatResult : function(data) {
				/*var nameQualifier = data.nameQual;
				var city = data.city;
				var state = data.state;
				var zip = data.zip;
				var finalAddress = formatAddRoleDscrForSC(nameQualifier, data.stAdd, city, state, zip);*/
				var nameQualifier = '';
				if(data.nameQual!=undefined && data.nameQual!=null && data.nameQual!='null' && data.nameQual!='')
					nameQualifier =data.nameQual+" - ";
				var finalAddress = nameQualifier+data.stAdd;
				return finalAddress;
			},
			select : function(data) {
				
				shipperAddressPopulate(data);
			}
		});	
}

function shipperAddressPopulate(data){
	
	emptyCityStateZip("shipper");
	emptyContactDetails("shipper");
	
	/*var nameQualifier = data.nameQual;
	var city = data.city;
	var state = data.state;
	
	var finalAddress = formatAddRoleDscrForSC(nameQualifier, data.stAdd, city, state);*/
	var nameQualifier = '';
	if(data.nameQual!=undefined && data.nameQual!=null && data.nameQual!='null' && data.nameQual!='')
	{
		$('input[name="shipper\\.nameQualifier"]').val(data.nameQual);
		nameQualifier =data.nameQual+" - ";
	}
	else
		$('input[name="shipper\\.nameQualifier"]').val('');
	shipperAddress = nameQualifier+data.stAdd;
	$('input[name="shipper\\.addressRoleId"]').val(data.addRole);
	$('input[name="shipper\\.city"]').val(data.city);
	$('input[name="shipper\\.state"]').val(data.state);
	$('input[name="shipper\\.zip"]').val(data.zip);
	$('input[name="shipper\\.countryName"]').val(data.cntry);
	$('input[name="shipper\\.provinceName"]').val(data.provnc);
	if(data.coOrgName!=null && data.coOrgName!='null')
		$('input[name="shipper\\.careOf"]').val(data.coOrgName);
	else
		$('input[name="shipper\\.careOf"]').val('');
	$('#refNumOverRideForShipper').val("N");
	
	processShipperConsigneeColor("shipper");
	checkAccordionHeaderForShipper();
	checkCopyButtons();
	
	isBookingChanged = "Y";
	
	if($('#bookingTypeCode').val()=='B')
		checkForShipperTemplate();
	else
		requestForContactList("shipper");
	
	//addShipperAsDebtor();// removes old and Adds New
	handlePrepaidCollectIndicator('S');
	removeBookingErrorPointers();
	
}

function shipperPopupSearch() {
	orgCaller = 'shipper';
	var shipperName = $('input[name="shipper\\.organizationName"]').val();
	var splitShipperName = "";
	var actionUrl = "";
	if(shipperName.indexOf("-") > 0){
		splitShipperName = shipperName.split("-");
		actionUrl = _context + '/cas/orgSearchLookup.do?filterValue1='+encodeURIComponent(splitShipperName[0])
		+'|'+ $('#tradeCode').val() + '|BK|||'+encodeURIComponent(splitShipperName[1]);
	}else{
		splitShipperName = shipperName;
		actionUrl = _context + '/cas/orgSearchLookup.do?filterValue1='
		+ encodeURIComponent(shipperName) + '|'+ $('#tradeCode').val() + '|BK';
	}
	var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, 'CustomerSearch', windowStyle);
}

function shipperAddressPopupSearch() {
	orgCaller = 'shipper';
	
	if ($.trim($('input[name="shipper\\.organizationId"]').val())=='') { 
		alert("Please select organization first");
	}/*else if($('#tradeCode :selected').val()==''){
		alert("Please select Trade");
	}*/else {
		var actionUrl = _context + '/cas/addRoleBKLookup.do?filterValue1='
				+ encodeURIComponent($('input[name="shipper\\.organizationId"]').val()) + '&filterValue2=02'+'&filterValue3='+$('#tradeCode').val();
		var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
		window.open(actionUrl, 'AddressSearch', windowStyle);
	}
}

function cleanShipperConsignee(){
	$("#shipperNameDiv").html("");
	$("#consigneeNameDiv").html("");
	$("#copyShipper").attr("disabled", true);
	$("#copyConsignee").attr("disabled", true);
	//For Defect 27290
	//enableScreenForDealer();
	$('#msgDiv').html("");
	emptyContactDetails("shipper");
	emptyContactDetails("consignee");
	//enableDisableContactId('shipper',true);
	//enableDisableContactId('consignee',true);
	resetDefault();
}

function goToMaintainTemplatePage(templateNumber){
	var url = _context +"/booking/template/loadTemplateForm?templateNumber=" + templateNumber;
	window.open(url);
}

function setDefaultPrefMethod(source){
	/*$('#'+source+'Comm1').attr('checked',true);
	$('#'+source+'Comm1').val('P');
	$('#'+source+'Comm1').trigger('click');*/
	//$('#shipperComm1').trigger('click');
	$('#'+ source +'Comm1').attr('checked',true);
	$('#'+ source +'Comm2').attr('checked',false);
	$('#'+ source +'Comm3').attr('checked',false);
	$('#'+ source +'Comm4').attr('checked',false);
	//$('#'+ source +'Comm1').trigger('change');
}

function populateTrade(trades){
	if($('#tradeCode').val()==''){
		var splitTrades = trades.split(",");
		$('#tradeCode').selected().val(splitTrades[0]);
		$('#tradeCode').trigger('change');
		$('#tradeCode').trigger('blur');
	}
}

function resetTrade(){
	//if($('input[name="shipper\\.organizationId"]').val()=='' && $('input[name="consignee\\.organizationId"]').val()==''){
	if($('#originPortCityCode').val()=='' || $('#destinationPortCityCode').val()==''){
		if($('#shipmentNumber').val()==''){
			$('#tradeCode').val('');
			$('#tradeCode').trigger('change');
			$('#tradeCode').trigger('blur');	
		}
	}
}

function filterParamsForCASForTemplateValidation(){
	var data="";
	data = $('#blOriginCityCode').val()+"|"+	$('#blDestinationCityCode').val()+"|"+$('#originPortCityCode').val()+"|"+$('#destinationPortCityCode').val()+"|"+$('#loadServiceCode').val()+"|"+$('#dischargeServiceCode').val();
	return data;
}

function getTradeForTemplate() {
	var data ="";
	console.log('trade='+$('#tradeCode').val());
	if($('#tradeCode').val() != '') {
		data = $('#tradeCode').val() + "|";
	}
	return data;
}

//check if template available for shipper
function checkForShipperTemplate(){
	var isEdi = false;
	var ediText = $('#ediOrWebIndicator').html();
	if(ediText != null && ediText.indexOf("EDI") > -1) {
		isEdi = true;
	}
	
	
	if($("#bookingStatusCode").val()=='INCP' || $("#bookingStatusCode").val()==''){
		if($('input[name="shipper\\.address"]').val()!='' && $('input[name="shipper\\.addressRoleId"]').val()!=''){
			templateCaller ="shipper";
			
			//do not show shipper templates if Consignee is present [ Defect - D020866 ] 
			if($('input[name="consignee\\.addressRoleId"]').val() != ''){
				requestForContactList("shipper");
				return;
			}
			//D031254 - make async : false - debtor was getting deleted due to async calls
			//call to cas to get template count
			$.ajax({
				type : "POST",
				async : false,
				//url : _context+'/cas/autocomplete.do?method=getTemplateCount&searchType=257&parentSearch='+$('input[name="shipper\\.addressRoleId"]').val()+'|02|'+filterParamsForCASForTemplateValidation(),
				url : _context+'/cas/autocomplete.do?method=getTemplateCount&searchType=257&parentSearch='+$('input[name="shipper\\.addressRoleId"]').val()+'|02|'+getTradeForTemplate(),
				success : function(responseText) {
					var templateCount = responseText[0].totrec;
					if(templateCount==1){
						//no quote details shoud be on page, even pulled quote should not be on page
						if($('#quoteId').val()==''){
							// D031918, don't apply template for EDI
							if(isEdi) {
								otherAlert("","Apply template on Edi Booking Details.");
							}
							else if($('#bookingId').val()=='')
								templateUpdate(responseText[0].id,'shipper');
							else{
								var overRide = confirm("Booking data exists on screen. Confirm override.(Ok/Cancel)");
								if(overRide == true){
									templateUpdate(responseText[0].id,'shipper');
								}
							}
						}
					}else if(templateCount>1){
						// D031918, don't apply template for EDI
						if(isEdi) {
							otherAlert("","Apply template on Edi Booking Details.");
						}
						//do not show template, if Quote details are present 
						else if($('#quoteId').val()==''){
							templatePopupSearch();
						}
						requestForContactList("shipper");
					}else{
						requestForContactList("shipper");
					}
				}
			});
		}
	}
	else
		requestForContactList("shipper");
}

//TRADE|CUSTOMERGROUP|TARIFF|ITEM|DESCRIPTION|DEALERCODE|SHIPPERNAME|SHIPPERADDRESS|SHIPPERAROLEID|CONSIGNEENAME|CONSIGNEEADDRESS|CONSIGNEEAROLEID|
//LS|DS|PLR|POL|POD|PLD|EQUIPMENT
function prepareInputForCASTemplateScreen(){
	var data="";
	data = $('#tradeCode').val() + '-' + $('#tradeCode option:selected').text() +'|';
	//changed for D25648
	//if($('#shipmentNumberHidden').val() !=''){
		data = data + $('#customerGroupId').val() + '-' + $('#customerGroupId option:selected').text() +'|';
	//}else{		data = data  + "|";	}

	data = data + $('#tariff').val()+'|';
	data = data + $('#tariffItemNumber').val()+'|';

	//data = data + $('#tariffCommodityDescription').val()+'|';
	data = data + '|';
	data = data + $('#dealerAuctionLocationCode').val()+'|';

	data = data + $('input[name="shipper\\.organizationName"]').val()+'|';
	data = data + $('input[name="shipper\\.address"]').val()+'|';
	data = data + $('input[name="shipper\\.addressRoleId"]').val()+'|';
	data = data + $('input[name="shipper\\.organizationId"]').val() +'|';

	data = data + $('input[name="consignee\\.organizationName"]').val()+'|';
	data = data + $('input[name="consignee\\.address"]').val()+'|';
	data = data + $('input[name="consignee\\.addressRoleId"]').val()+'|';
	data = data + $('input[name="consignee\\.organizationId"]').val() +'|';

	data = data + $('#loadServiceCode').val() +'|';
	data = data + $('#dischargeServiceCode').val() +'|';

	data = data + $('#blOriginCityCodeDescription').val()+'|';
	data = data + $('#originPortCityCodeDescription').val()+'|';

	data = data + $('#destinationPortCityCodeDescription').val()+'|';
	data = data + $('#blDestinationCityCodeDescription').val()+'|';
	data = data + $('#contactId').val()+'|';
	return data;
}

function pullCASTemplateScreenInfoToMB(data){
}

function clearCityStateZip() {
	$('input[name="shipper\\.careOf"]').val('');
	$('input[name="shipper\\.nameQualifier"]').val('');
	$('input[name="shipper\\.city"]').val('');
	$('input[name="shipper\\.state"]').val('');
	$('input[name="shipper\\.zip"]').val('');
	$('input[name="shipper\\.countryName"]').val('');
	$('input[name="shipper\\.provinceName"]').val('');
	$("#copyShipper").attr("disabled", true);
}

function orgSearchUpdate(id) {
	if (orgCaller == 'shipper') {
		$('input[name="shipper\\.organizationName"]').validationEngine('hidePrompt');
		var values = id.split("|");
		$('input[name="shipper\\.organizationName"]').val(values[0] +"-"+ values[1]);
		$('input[name="shipper\\.organizationCode"]').val(values[1]);
		$('input[name="shipper\\.organizationId"]').val(values[2]);
		$('input[name="shipper\\.isOneTimeCustomer"]').val("false");
		$('#shipperName').val(values[0]);
		processShipperConsigneeColor("shipper");
		$('input[name="shipper\\.address"]').val("");
		$('input[name="shipper\\.address"]').trigger('change');
		isBookingChanged = "Y";
		
		singleAddressShipperCall();
		
		//shipperAddressPredictive();
	}else if (orgCaller == 'consignee') {
			$('input[name="consignee\\.organizationName"]').validationEngine('hidePrompt');
			var values = id.split("|");
			$('input[name="consignee\\.organizationName"]').val(values[0] +"-"+ values[1]);
			$('input[name="consignee\\.organizationCode"]').val(values[1]);
			$('input[name="consignee\\.organizationId"]').val(values[2]);
			$('input[name="consignee\\.isOneTimeCustomer"]').val("false");
			$('#consigneeName').val(values[0]);
			processShipperConsigneeColor("consignee");
			$('input[name="consignee\\.address"]').val("");
			$('input[name="consignee\\.address"]').trigger('change');
			isBookingChanged = "Y";
			//consigneeAddressPopupSearch();
			
			$.ajax({
				type : "POST",
				url : _context +"/cas/autocomplete.do?method=searchSingleAddressforBK&searchType=234&parentSearch="+encodeURIComponent($('input[name="consignee\\.organizationId"]').val() + '|03|'+$('#tradeCode').val()),
				
				success : function(responseText) {
					if(responseText.length == 1){
						var nameQualifier = responseText[0].nameQual;
						/*var city = responseText[0].city;
						var state = responseText[0].state;
						var finalAddress = formatAddRoleDscrForSC(nameQualifier, responseText[0].stAdd, city, state);*/
						if(nameQualifier != undefined && nameQualifier != '' && nameQualifier != 'null' && nameQualifier != null){
							nameQualifier += " - ";
						}else{
							nameQualifier = '';
						}
						$('input[name="consignee\\.address"]').val(nameQualifier + responseText[0].stAdd);
						consigneeAddressPopulate(responseText[0]);
					} else {
						consigneeAddressPopupSearch();
					}
				}
			});
			
			
			//consigneeAddPredictive();
		}else if (orgCaller == 'parties') {
			var values = id.split("|");
			$('input[name="organizationName"]').val(values[0] +"-"+ values[1]);
			partyOrg = values[1] +"-"+ values[0];
			$('input[name="organizationCode"]').val(values[1]);
			$('input[name="organizationId"]').val(values[2]);
			$('input[name="isOneTimeCustomer"]').val("false");
			$('input[name="address"]').val("");
			$('input[name="address"]').trigger('change');
			//partiesAddressPopupSearch();
			singleAddressPartiesCall();
			isPartyChanged = "Y";
			//partiesAddPredictive();
		}else if (orgCaller == 'repeat') {
			var values = id.split("|");

			$('#repeatContactOrgName').val(values[0] +"-"+ values[1]);
			repeatOrgName = values[1] +"-"+ values[0];
			$('#repeatContactOrgId').val(values[2]);
			$("#repeatContactOrgAddress").val("");
			//repeatContactAddressPredictive();
			orgAddressPopupSearch();
		}
		else if (orgCaller == 'dataAdmin') {
			var values = id.split("|");

			$('#existingOrganization').val(values[0] +"-"+ values[1]);
			$('#replaceOrganizationId').val(values[2]);
			if($("#dataAdminCode:checked").val()=="C")
			{
				$('#existingAddressLine1').val("");
				$('#existingAddressLine1').trigger('change');
				singleAddressOneTimerCall();
			}
		}
}

function setShipperDivName(name){
	//alert("name: = " + name);
	if(name != null && name != ''){
		setAccordianTabDetails("shipperNameDiv", " - "+name);
	}else{
		setAccordianTabDetails("shipperNameDiv", "");
	}
}

function addroleUpdate(data) {
	
	templateNumber=$('#bookingTemplateNumber').find('a').html();
	
	if (orgCaller == 'shipper') {
		var values = data.split("|");
		if(templateNumber!='' && tempShipperAddress!== undefined && tempShipperAddress !== null  && tempShipperAddress!='' && tempShipperAddress!=values[9])
	{
		var isConfirm = confirm("Data from Original template selection remains. Please review booking for necessary updates");
		if(!isConfirm)
		{
			return;
		}
	}	
		//D029999:For consignee/Shipper it needs to look at the template type and only remove if it is that type of template. 
		if(templateNumber!='' && tempShipperAddress!== undefined && tempShipperAddress !== null && tempShipperAddress!='' && tempShipperAddress!=values[9] && tempPartyTypeCode =='02')
		{
		$("#bookingTemplateNumber").html("");
		$('#bookingTemplateId').val('');
		}
		emptyContactDetails("shipper");
		emptyCityStateZip("shipper");
		
		//var values = data.split("|");
		var nameQualifier = '';
		if(values[4]!=undefined && values[4]!=null && values[4]!='null' && values[4]!='')
		{
			$('input[name="shipper\\.nameQualifier"]').val(values[4]);
			nameQualifier = values[4]+" - ";
		}
		else
			$('input[name="shipper\\.nameQualifier"]').val('');
		if(values[3]!=null && values[3]!='null')
			$('input[name="shipper\\.careOf"]').val(values[3]);
		else
			$('input[name="shipper\\.careOf"]').val('');
		$('input[name="shipper\\.city"]').val(values[2]);
		$('input[name="shipper\\.state"]').val(values[6]);
		$('input[name="shipper\\.zip"]').val(values[8]);
		$('input[name="shipper\\.countryName"]').val(values[11]);
		
		if(values[10]!=null && values[10]!='null')
			$('input[name="shipper\\.provinceName"]').val(values[10]);
		else 
			$('input[name="shipper\\.provinceName"]').val('');
		//var finalAddress = formatAddRoleDscrForSC(values[4],values[7],values[2],values[6]);//nameQualifier, addressLine1, city, state
		var finalAddress = nameQualifier+values[7];
		$('input[name="shipper\\.address"]').val(finalAddress);
		shipperAddress = finalAddress;
		$('input[name="shipper\\.addressRoleId"]').val(values[9]);
		
		$('#refNumOverRideForShipper').val("N");
		isBookingChanged = "Y";
		checkAccordionHeaderForShipper();
		checkCopyButtons();
		
		if($('#bookingTypeCode').val()=='B'){
			checkForShipperTemplate();
		}else{
			requestForContactList("shipper");
		}
		//addShipperAsDebtor();
		handlePrepaidCollectIndicator('S');
		removeBookingErrorPointers();
	}else if (orgCaller == 'consignee') {
		// D029377: added null check
		var values = data.split("|");
		if( templateNumber!='' && tempConsigneeAddress!== undefined && tempConsigneeAddress !== null && tempConsigneeAddress!='' && tempConsigneeAddress!=values[9])
		{
		var isConfirm = confirm("Data from Original template selection remains. Please review booking for necessary updates");
		if(!isConfirm)
		{
			return;
		}
		}
		if(templateNumber!='' && tempConsigneeAddress!== undefined && tempConsigneeAddress !== null && tempConsigneeAddress!='' && tempConsigneeAddress!=values[9] && tempPartyTypeCode =='03')
		{
			$("#bookingTemplateNumber").html("");
			$('#bookingTemplateId').val('');
		}
		emptyContactDetails("consignee");
		emptyCityStateZip("consignee");
		
		//var values = data.split("|");
		var nameQualifier = '';
		if(values[4]!=undefined && values[4]!=null && values[4]!='null' && values[4]!='')
		{
			$('input[name="consignee\\.nameQualifier"]').val(values[4]);
			nameQualifier = values[4] + " - ";
		}
		else
			$('input[name="consignee\\.nameQualifier"]').val('');
		if(values[3]!=null && values[3]!='null')
			$('input[name="consignee\\.careOf"]').val(values[3]);
		else
			$('input[name="consignee\\.careOf"]').val('');
		$('input[name="consignee\\.city"]').val(values[2]);
		$('input[name="consignee\\.state"]').val(values[6]);
		$('input[name="consignee\\.zip"]').val(values[8]);
		$('input[name="consignee\\.countryName"]').val(values[11]);
		if(values[10]!=null && values[10]!='null')
			$('input[name="consignee\\.provinceName"]').val(values[10]);
		else 
			$('input[name="consignee\\.provinceName"]').val('');
		//var finalAddress = formatAddRoleDscrForSC(values[4],values[7],values[2],values[6]);//nameQualifier, addressLine1, city, state)
		var finalAddress = nameQualifier+values[7];
		$('input[name="consignee\\.address"]').val(finalAddress);
		consigneeAddress = finalAddress;
		$('input[name="consignee\\.addressRoleId"]').val(values[9]);
		
		isBookingChanged = "Y";
		$('#refNumOverRideForConsignee').val("N");
		$('#isChangeAcceptedAfterUnitsReceived').val("N");
		
		checkAccordionHeaderForConsignee();
		checkCopyButtons();
		
		if($('#bookingTypeCode').val()=='B'){
			checkForConsigneeTemplate();
		}else{
			requestForContactList("consignee");
		}
		//addConsigneeAsDebtor();
		handlePrepaidCollectIndicator('C');
		removeBookingErrorPointers();
		$('#consigneeZipOverride').val("N");

	}else if (orgCaller == 'parties') {
		/*var partyTypeCode = $('#partyTypeCode :selected').val();
		var addressRoleType = data.split("|")[0];
		if((partyTypeCode=='20' || partyTypeCode=='21' || partyTypeCode=='31') && addressRoleType!='ALL' && addressRoleType!='FREIGHT PAYABLE')
		{
			alert("Address Role selected must be of type ALL or FREIGHT PAYABLE");
		}
		else if((partyTypeCode=='22' || partyTypeCode=='29') && addressRoleType!='ALL' && addressRoleType!='SHP TO' && addressRoleType!='NOTIFY')
		{
			alert("Address Role selected must be of type ALL or SHP TO or NOTIFY");
		}
		else if(partyTypeCode=='30' && addressRoleType!='ALL' && addressRoleType!='SHPFRM' && addressRoleType!='FWDAGT')
		{
			alert("Address Role selected must be of type ALL or SHPFRM or FWDAGT");
		}
		else*/
			partiesAddressUpdate(data);
	}else if (orgCaller == 'repeat') {
		var values = data.split("|");
		var finalAddress = formatAddRoleDscrForSC(values[4],values[7],values[2],values[6],values[8]);
		$("#repeatContactOrgAddress").val(finalAddress);
		$("#repeatContactAddressRoleId").val(values[9]);
		repeatAddress = finalAddress;
	}
	else if(orgCaller == 'dataAdmin')
	{
		var values = data.split("|");
		var finalAddress = formatAddRoleDscrForSC(values[4],values[7],values[2],values[6],values[8]);
		$("#existingAddressLine1").val(finalAddress);
		$("#replaceAddressRoleId").val(values[9]);
	}
}

function templatePopupSearch() {
	var ediText = $('#ediOrWebIndicator').html();
	if(ediText == null) edeiText = "";
	if(ediText.indexOf("EDI") > -1) {
		otherAlert("","Apply template on Edi Booking Details.");
	} else {

		var actionUrl = _context +'/cas/templateSearch.do?templateValue1='+encodeURIComponent(prepareInputForCASTemplateScreen());
		var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
		window.open(actionUrl, 'TemplateSearch', windowStyle);
	}
}

function isQuoteIdPresent(){
	var quoteDetails = $('#quoteId').val();
	if(quoteDetails == null || quoteDetails == '' || quoteDetails == '0'){
		return false;
	}
	return true;
}

function templateUpdate(id,methodCaller){
	if(isQuoteIdPresent()){
		alert("Cannot overlay Quote Data. Please Refresh before prompt");
		return;
	}
	var templateNumber;
	if(id.indexOf("|") != -1){
		var splitTemplateData = id.split("|");
		templateNumber = splitTemplateData[0];
		// Fetching tradeCode from 4th Index - Interchanged tradeCode and description(In cas search DB table 'ref_column'), because of Pipe '|' limitation in CAS frame work
		var tradeCode = splitTemplateData[4];
		if(null != tradeCode && null != $('#tradeCode').val()){
			if($('#tradeCode').val() != ''){
				if(tradeCode != $('#tradeCode').val()){
					$('#msgDiv').html("<div class=\"message_error\">Template trade doesn't match Booking trade, select another template.</div>");
					$('#msgDiv').show();
					window.scrollTo(0, 0);
					triggerErrorMessageAlert();
					return;
				}
			}
		}
	}else{
		templateNumber = id;
	}
	var bookingId = $('#bookingId').val();
	var shipmentNumber = $('#shipmentNumber').val();
	$('#msgDiv').html("<div class=\"message_info\">Loading "+ templateNumber +" template...</div>");
	$('#msgDiv').show();
	//D031254 - make async : false - debtor was getting deleted due to async calls
	if(templateNumber != undefined){
		$.ajax({
			type : "POST",
			url : _context +"/booking/applyTemplate",
			async : false,
			data : {
				templateNumber : templateNumber,
				bookingId : bookingId,
				shipmentNumber : shipmentNumber
			},
			success : function(responseText) {
				
				if (responseText.messages.error.length == 0) {
					var hiddenBookDate = $('#hiddenBookedDate').val();
					clearAndResetBookingScreen();
					
					var tempEntityVersion = $("#entityVersion").val();
					var tempCommentId = $("#commentId").val();
					showJSON(responseText);
					$('#hiddenBookedDate').val(hiddenBookDate);
					$('#bookingStatusCode').val($('#savedBookingStatusCode').val());
					processChangeSource();
					$("#entityVersion").val(tempEntityVersion);
					$("#commentId").val(tempCommentId);
					if(methodCaller=="" || methodCaller=='shipper'){
						$('input[name="shipper\\.addressRoleId"]').val(responseText.data.shipper.addressRoleId);
						shipperAddress = responseText.data.consignee.address;
						//$('#shipperRepeatContact').attr('disabled', false);
					}else{
						$('input[name="consignee\\.addressRoleId"]').val(responseText.data.consignee.addressRoleId);
						consigneeAddress = responseText.data.consignee.address;
						//$('#consigneeRepeatContact').attr('disabled', false);
					}
					removeAssignedQuoteOnTemplatePull();
					
					//Moved to show Json method
					//requestForContactDetails("shipper", "N");
					//requestForContactDetails("consignee", "N");
					//updateParties(responseText);
					//checkCopyButtons();->already called in showJSON
					templateOwner="shipper";
					checkQuotesForPulledTemplate(id);
					setDefaultForBookingStatus();
					var aHtml = "<a style=\"color: blue\" href='#' " +
					"onclick=\"checkForChangeInBooking('" + templateNumber + "');\" >" + templateNumber + "</a>";
					$('#bookingTemplateNumber').html(aHtml);
					//Defect - D015881
					$('#dealerCode').val(responseText.data.bookingTemplate.dealerCode);
					if($.trim($("#dealerCode").val())!=''){
						if($('#loadServiceCode').val()=='AU' && $('#dischargeServiceCode').val()=='AU'){
							//disableScreenForDealer();
						}
					}else{
						enableScreenForDealer();
					}
					if($.trim($('#shipmentNumber').val()) == '') {
						$('#billOfLadingLink').html("Bill Of Lading");
						
					}
					$('#templateAppliedOnBookingFromScreen').val('Y');
					tempShipperAddress= responseText.data.shipper.addressRoleId;
					tempConsigneeAddress=responseText.data.consignee.addressRoleId;
					tempPartyTypeCode=responseText.data.bookingTemplate.partyTypeCode;
					$('#createBkngTmplSeqNbrDs').val(responseText.data.bookingTemplate.bookingTemplateSeqNbrDs);
					expandAll();
					reloadBookingGrids();
					/*if(addFreightEnabled()){
						showFreight($.trim($('#customerGroupId :selected').text()));
						$($('.booking-section')[4]).accordion("enable");
						$($('.booking-section')[4]).accordion('option', 'active', 0);
					}*/
					isTemplateFirstLoad = true;
					isBookingChanged = "Y";
				}else{
					$("#quoteExistsDiv").hide();
					var hiddenBookDate = $('#hiddenBookedDate').val();
					clearAndResetBookingScreen();
					$('#customizeNameAddress').removeAttr("disabled");
					reloadBookingGrids();
					setDefaultForBookingStatus();
					setDefaultForAssignLink();
					clearHeaderData();
					$('#commentsDiv').hide();
					$("#bookingDelete").attr("disabled", true);
					resetDivNames();
					$("#lastUpdateDateTimeUser").html("");
					var aHtml = "<div id=\"bookingTemplateNumber\" class=\"span-2 last\"></div>";
					$('#bookingTemplateNumber').html(aHtml);
					$('#templateAppliedOnBookingFromScreen').val('N');
					$('#hiddenBookedDate').val(hiddenBookDate);
					
				}
				//D029724: 	Prod Maintain Booking : Error: Zero is not a valid weight 
				if($("#weight").val()==0){
					$("#weight").val('');
				}
				//Messages
				showResponseMessages("msgDiv",responseText);
				$('#msgDiv').show();
				
				processShipperConsigneeColor("shipper");
				processShipperConsigneeColor("consignee");
				
				focusBookingNoCustomerGroupOnTemplatePull();
				
				/*Booking Security*/
				if(isHoldOverlayBottomEnabled){
					//Display Unreleased Holds Grid on initial display
					openUnreleasedHoldGridOnIntialDisplay("booking");
				}
				
				/*setTimeout(function(){
					hideEquipmentInlineEditDelete();
				}, 2000);*/
				enableDisableNote();
			}
		});
	}
}

function checkForChangeInBooking(templateNumber)
{
	if(isBookingChanged=='Y')
	{
		var isConfirm = confirm("All the unsaved Changes will be discarded. Continue?");
		if(isConfirm)
			document.location.href= _context + "/booking/template/showTemplateForm?templateNumber="+templateNumber;
	}
	else
		document.location.href= _context + "/booking/template/showTemplateForm?templateNumber="+templateNumber;
}

function disableScreenForDealer(){
	$('#originPortCityCodeDescription').attr('disabled',true);
	$('#destinationPortCityCodeDescription').attr('disabled',true);
	$("#consignee").gatesDisable();
}

function enableScreenForDealer(){
	$('#originPortCityCodeDescription').attr('disabled',false);
	$('#destinationPortCityCodeDescription').attr('disabled',false);
	$("#consignee").gatesEnable();
	if($('input[name="shipper\\.addressRoleId"]').val() =='' && $('input[name="consignee\\.addressRoleId"]').val()!='' && isShipperConsgineeModifiable){
		$("#copyConsignee").attr("disabled", false);
	}
	else
		$("#copyConsignee").attr("disabled", true);
	if($('input[name="shipper\\.addressRoleId"]').val()!=''){
		$("#copyConsignee").attr("disabled", true);
	}
	//$("#consigneeOneTimeCustDiv").html("<a href=\"javascript:openOneTimeCustomer('consignee');\">Add One Time Customer</a>");
	$("#consigneeOneTimeCustDiv").html("<a href=\"javascript:openOneTimeCustomer('consignee');\"><img height=\"16\" border=\"0\" align=\"absmiddle\" width=\"15\" height=\"15\" alt=\"search\" src=\""+_context+"/resources/images/u388_r.png\"></img>Add One Time Customer</a>");

}

function quoteFilterParams(){
	var queryString="";
	queryString = "&trade="+$('#tradeCode').val()+"&placeOfReceipt="+$('#blOriginCityCode').val() +"&placeOfDelivery="+$('#blDestinationCityCode').val()+"&pol="+$('#originPortCityCode').val()+"&pod="+$('#destinationPortCityCode').val();
	queryString = queryString + "&loadService="+$('#loadServiceCode').val()+"&dischargeService="+$('#dischargeServiceCode').val()+"&tariffNumber="+$('#tariff').val();
	return queryString;
}

function checkQuotesForPulledTemplate(casResponse){
	//Quotes to be checked only if Booking is not saved....
	if($('#bookingId').val()==''){
		//get owner from CAS
		var splitCASStr = casResponse.split("|");
		var templateOwner = splitCASStr[3];//casResponse[0].templateOwner;;
		//declare variable for holding AROLE id 
		var aroleIdForQuotes = "";
		var quoteShowHtml="";
		if(templateOwner=='Y' || templateOwner==''){//template owner shipper, get quote count for consignee
			//$("#bookingTemplateOwner").val('02');
			aroleIdForQuotes = $('input[name="consignee\\.addressRoleId"]').val();
			$("#showQuoteForAroleOnTemplatePull").val($('input[name="consignee\\.addressRoleId"]').val());
			quoteShowHtml="Consignee Quote Exists(Show)";
		}else if(templateOwner=='N'){//template owner consignee, get quote count for shipper
			//$("#bookingTemplateOwner").val('03');
			aroleIdForQuotes = $('input[name="shipper\\.addressRoleId"]').val();
			$("#showQuoteForAroleOnTemplatePull").val($('input[name="shipper\\.addressRoleId"]').val());
			quoteShowHtml="Shipper Quote Exists(Show)";
		}else{
			if($('input[name="shipper\\.addressRoleId"]').val()!='' && $('input[name="consignee\\.addressRoleId"]').val()==''){
				aroleIdForQuotes = $('input[name="shipper\\.addressRoleId"]').val();
				$("#showQuoteForAroleOnTemplatePull").val($('input[name="shipper\\.addressRoleId"]').val());
				quoteShowHtml="Shipper Quote Exists(Show)";
			}else if($('input[name="shipper\\.addressRoleId"]').val()=='' && $('input[name="consignee\\.addressRoleId"]').val()!=''){
				aroleIdForQuotes = $('input[name="consignee\\.addressRoleId"]').val();
				$("#showQuoteForAroleOnTemplatePull").val($('input[name="consignee\\.addressRoleId"]').val());
				quoteShowHtml="Consignee Quote Exists(Show)";
			}else{
				aroleIdForQuotes = $('input[name="shipper\\.addressRoleId"]').val();
				$("#showQuoteForAroleOnTemplatePull").val($('input[name="shipper\\.addressRoleId"]').val());
				quoteShowHtml="Shipper Quote Exists(Show)";
            }
		}
		if(aroleIdForQuotes!=''){
			var quoteCount = 0;//get quote count from CS response [responseText[0]]
			//call to booking controller to get quote count
			var quoteFilters = quoteFilterParams();
			$.ajax({
				type : "POST",
				url : _context +"/booking/getQuoteCount?"+quoteFilters,
				data : {
					aroleId : aroleIdForQuotes
				},
				success : function(responseText) {
					quoteCount = responseText.data;
					if(quoteCount==0){
						$("#quoteExistsDiv").hide();
					}else if(quoteCount>0){
						$("#quoteExistsDiv").html("<a href='#' class=\"span-5 last\" style=\"color: blue\">"+quoteShowHtml+"</a>");
						$("#quoteExistsDiv").show();
					}
				}
			});
		}
	}
}

function clearAndResetBookingScreen(){
	$('#msgDiv').html("");
	$('#bookingForm').clearForm();
	$('input[name="shipper\\.addressRoleId"]').val("");
	$('input[name="consignee\\.addressRoleId"]').val("");
	emptyContactDetails("shipper");
	emptyContactDetails("consignee");
	resetDefault();
	$("#bookedDateTimeUser").html("");
	$("#lastUpdateDateTimeUser").html("");
}
function removeAssignedQuoteOnTemplatePull(){
	$('#quoteId').val("");
	$('#quoteNumber').val("");
	$('#quoteVersion').val("");
	$('#quoteNumberLabel').text("");
	$('#quoteAmount').val("");
	$('#quoteAmountDiv').text("");
	if($("#shipmentNumber").val() == '' || $("#shipmentNumber").val() == null){
		$('#assignLink').html("Assign Quote");
	}else{
		$('#assignLink').html("<a href=\"javascript:quotePopupSearch('assign');\">Assign Quote</a>");
	}
}
function checkCopyButtons(){
	if($('input[name="shipper\\.addressRoleId"]').val() !='' && $('input[name="consignee\\.addressRoleId"]').val()!=''){
		$("#copyShipper").attr("disabled", true);
		$("#copyConsignee").attr("disabled", true);
		return;
	}
	
	if($('input[name="shipper\\.addressRoleId"]').val() !='' && $('input[name="consignee\\.addressRoleId"]').val()=='' && isShipperConsgineeModifiable){
		$("#copyShipper").attr("disabled", false);
		$("#copyConsignee").attr("disabled", true);
	}else if($('input[name="consignee\\.addressRoleId"]').val() !='' && $('input[name="shipper\\.addressRoleId"]').val()=='' && isShipperConsgineeModifiable){
		$("#copyShipper").attr("disabled", true);
		$("#copyConsignee").attr("disabled", false);
	}

	/*if($('input[name="consignee\\.addressRoleId"]').val() !='' && $('input[name="shipper\\.addressRoleId"]').val()==''){
		$("#copyConsignee").attr("disabled", false);
	}else{
		$("#copyConsignee").attr("disabled", true);
	}*/
}

function updateParties(responseText){

	/*if(responseText.data.shipper.organizationName==null)
		responseText.data.shipper.organizationName = '';
	if(responseText.data.consignee.organizationName==null)
		responseText.data.consignee.organizationName = '';

	if(responseText.data.shipper.organizationName!='' && responseText.data.consignee.organizationName==''){
		$('#prepaidCollectCode').attr('selectedIndex', 1);
	}
	else if(responseText.data.shipper.organizationName=='' && responseText.data.consignee.organizationName!=''){
		$('#prepaidCollectCode').attr('selectedIndex', 2);
	}
	else if(responseText.data.shipper.organizationName!='' && responseText.data.consignee.organizationName!=''){
		$('#prepaidCollectCode').attr('selectedIndex', 3);
	}else{
			$('#prepaidCollectCode').attr('selectedIndex', 1);
	}*/
	$('#prepaidCollectCode').selected().val(responseText.data.header.prepaidCollectCode);
	$('#prepaidCollectCode').trigger('change');
}

function loadAdditionalShipperDetails(responseText){
	$("#shipperId").val(responseText.data.shipper.organizationId);
	$('#shipper\\.addressRoleId').val(responseText.data.shipper.addressRoleId);
	/*if(null!=responseText.data.shipper.addressRoleId){
		enableDisableContactId('shipper',false);
	}*/
	setShipperCommMethodValue(responseText.data.shipper);
	//first clear the drop down
	$('select[name="shipper\\.contactId"]').children().remove();
	$('select[name="shipper\\.contactId"]').append("<option value='' label='Select'></option>");
	$.each(responseText.data.shipper.contactListForm, function(index, value) {
		$('select[name="shipper\\.contactId"]').append($("<option/>", {
					value : value.contactId,
					text : value.contactDesc
		}));
	});
	$('select[name="shipper\\.contactId"]').val(responseText.data.shipper.contactId);
	
	/*if(responseText.data.shipper.isCustomerOneTimeCust==true){
		formatColorForOneTime('shipper');
	}*/
}

function formatAddRoleDscrForSC(nameQualifier, addressLine1, city, state, zip) {
	var nameQualifierTemp = "";
	var addressLine1Temp = "";
	var cityTemp = "";
	var stateTemp = "";
	var zipTemp = "";
	
	if (nameQualifier!=undefined && nameQualifier!=null && nameQualifier!='null' && nameQualifier != "") {
		nameQualifierTemp = nameQualifier;
	}
	if (addressLine1 != "") {
		if (nameQualifierTemp != "") {
			addressLine1Temp = " - " + addressLine1;
		} else {
			addressLine1Temp =  addressLine1;
		}
	}
	if (city != "") {
		cityTemp = " - " + city;
	}
	if (state != null && state != "" && state!='null') {
		stateTemp = ", " + state;
	}
	if(zip!= null && zip !='' && zip!='null')
		zipTemp = " - " + zip;
	
	return nameQualifierTemp + addressLine1Temp + cityTemp + stateTemp + zipTemp;
}

/*function formatColorForOneTime(source){
	//$('input[name="'+source+'\\.organizationName"]').css('background-color', 'yellow');
	$('input[name="'+source+'\\.address"]').attr("disabled",true);
}*/

function addShipperAsDebtor(){
	
	var queryString = $('#bookingForm').formSerialize();
	$.ajax({
		url : _context +"/booking/party/setDefaults",
		async: false,
		type : "POST",
		data : queryString+"&type=shipper&oper=add&action=skip",
		success : function(responseText) {
			showResponseMessages('msgDiv', responseText);
			/*if($('input[name="shipper\\.addressRoleId"]').val()!='' && $('input[name="consignee\\.addressRoleId"]').val()!='')
				$('#prepaidCollectCode').val('B');//both
			else if($('input[name="shipper\\.addressRoleId"]').val()!='' && $('input[name="consignee\\.addressRoleId"]').val()=='')
				$('#prepaidCollectCode').val('P');//shipper
			
			debtorCode = $('#prepaidCollectCode :selected').val();
			setPartiesHeader();*/
			$("#gridIdForParties").trigger("reloadGrid");
		}
	});
}

function removeShipperAsDebtor(){
	var queryString = $('#bookingForm').formSerialize();
	$.ajax({
		url : _context +"/booking/party/setDefaults",
		type : "POST",
		data : queryString+"&type=shipper&oper=remove&action=skip",
		success : function(responseText) {
			showResponseMessages('msgDiv', responseText);
			/*if($('input[name="consignee\\.addressRoleId"]').val()!='')
				$('#prepaidCollectCode').val('C');//collect
			else
				$('#prepaidCollectCode').val('');//none
			
			debtorCode = $('#prepaidCollectCode :selected').val();
			setPartiesHeader();*/
			$("#gridIdForParties").trigger("reloadGrid");
		}
	});
}

function enableDisableContactId(source,set){
	/*Booking Security*/
	if(!set)
		$('select[name="'+source+'\\.contactId"]').attr("disabled",set);
	else if($("#bookingStatusCode").val()!='CANC' && isShipperConsgineeModifiable)
		$('select[name="'+source+'\\.contactId"]').attr("disabled",set);
}

function requestForContactList(source){
	/*var contactNameDataList = "";
	$.getJSON(_context+'/cas/autocomplete.do?method=getContacts&searchType=213&parentSearch=' + $('input[name="'+source+'\\.organizationId"]').val() + "|" + $('input[name="'+source+'\\.addressRoleId"]').val(),
		function(contacts) {
			$('select[name="'+source+'\\.contactId"]').children().remove();
			$('select[name="'+source+'\\.contactId"]').append("<option value=''>Select</option>");
			$(contacts).each(function() {
				var formattedName = getFormattedName(validateForUndefined(this.label), 
						validateForUndefined(this.dept), validateForUndefined(this.title));
				var option = $('<option />');
				option.attr('value', this.value).text(unescape(formattedName.replace(/ /g, "%A0")));
				$('select[name="'+source+'\\.contactId"]').append(option);
				contactNameDataList += this.value + "!?" + this.label + "!?"
						+ validateForUndefined(this.phcntry) + "!?" 
						+ validateForUndefined(this.pharea) + "!?" 
						+ validateForUndefined(this.phexch) + "!?" 
						+ validateForUndefined(this.phstcde) + "!?" 
						+ validateForUndefined(this.phextn) + "!?" 
						+ validateForUndefined(this.fxcntry) + "!?" 
						+ validateForUndefined(this.fxarea) + "!?" 
						+ validateForUndefined(this.fxexch) + "!?" 
						+ validateForUndefined(this.fxstcde) + "!?" 
						+ validateForUndefined(this.email) + "|"; 
			});
			//$("#contactNameDataList").val(contactNameDataList);
			$('select[name="'+source+'\\.contactId"]').trigger('blur');							
	});*/
	
	
	if(null!=$('input[name="'+source+'\\.addressRoleId"]').val() && $('input[name="'+source+'\\.addressRoleId"]').val()!=''){
		$.ajax({
			type : "POST",
			url : _context +"/booking/arole/getContactList",
			data : {
				addressRoleId : $('input[name="'+source+'\\.addressRoleId"]').val()
			},
			success : function(responseText) {
				$('select[name="'+source+'\\.contactId"]').children().remove();
				$('select[name="'+source+'\\.contactId"]').append("<option value='' label='Select'></option>");
				$.each(responseText.data.contactListForm, function(index, value) {
					$('select[name="'+source+'\\.contactId"]').append($("<option/>", {
								value : value.contactId,
								text : value.contactDesc
					}));
				});
				/*$.each(responseText.data.contactList, function(key,
						value) {
					$('select[name="'+source+'\\.contactId"]')
							.append($("<option/>", {
								value : key,
								text : value
							}));
				});*/
				if(responseText.data.primaryBookingContId!=undefined){
					$('select[name="'+source+'\\.contactId"]').val(responseText.data.primaryBookingContId);
				}else{
					$('select[name="'+source+'\\.contactId"]').val('');
				}
				requestForContactDetails(source);
			}
		});
	}
}

function getFormattedName(label, dept, title) {
	var names = label.split("-");
	var formattedName = "";
	var type = $.trim(names[0]);
	var fName = $.trim(names[1]);
	var lName = $.trim(names[2]);
	var lengthName=0;
	if(fName != "" || lName != "" ) {
		var name=fName+" "+lName;
		lengthName=name.length;
		if (type !="") {
			formattedName = fName + " " + lName+ "-" + type ;
		} else {
			formattedName = fName + " " + lName;
		}
	} else if(title != "" && dept != "") {
		var val=title + ', ' + dept;
		lengthName=val.length;
		if (type !="") {
			formattedName = title + ', ' + dept +"-" +type;
		} else {
			formattedName = title + ', ' + dept;
		}
	} else if(title != null && title != "") {
		var val=title;
		lengthName=val.length;
		if (type !="") {
			formattedName =   title+ "-" +type;
		} else {
			formattedName = title;
		}
	} else if(dept != null && dept != "") {
		var val=dept;
		lengthName=val.length;
		if (type !="") {
			formattedName =  dept+"-" +type;
		} else {
			formattedName = dept;
		}
	}
	var spaces='';
	var remLen=18-lengthName;
	if(remLen<14){
		spaces='%A0';
		for(var i=0;i<remLen;i++){
			spaces=spaces+'%A0';
		}	
	}
	var values=formattedName.split("-");
	var val=values[0].concat(spaces);
	formattedName=val.concat(values[1]);
	return formattedName;
}

function validateForUndefined(text) {
	if (text == undefined) {
		return "";
	} else {
		return text;
	}
}

function requestForContactDetails(source, change){
	emptyContactDetailsOnContactChange(source);
	//enableDisableContactId(source,false);
	if($('select[name="'+source+'\\.contactId"]').val()!='')
	{
		$.ajax({
			type : "POST",
			url : _context +"/booking/arole/contact",
			data : {
				addressRoleId : $('input[name="'+source+'\\.addressRoleId"]').val(),
				contactId : $('select[name="'+source+'\\.contactId"]').val()
			},
			success : function(responseText) {
				if(responseText.success)
				{
					var oneTimeCustomer = $('input[name="'+source+'\\.isOneTimeCustomer"]').val();
					//$('select[name="'+source+'\\.contact"]').val($('select[name="'+source+'\\.contactId"]').selected().val());
					$("#"+source+"").loadJSON(responseText.data);
					$('input[name="'+source+'\\.isOneTimeCustomer"]').val(oneTimeCustomer);
					if(source=='consignee')
						loadHazGrid();
					
					if(change!="N")
					{
						/*if(source=='shipper')
							addShipperAsDebtor();
						else if(source=='consignee')
							addConsigneeAsDebtor();*/
					}
				}
			}
		});
	}
	else if($('select[name="'+source+'\\.contactId"]').attr("disabled")== true
			|| $('select[name="'+source+'\\.contactId"]').attr("disabled")== 'true')
	{
		if(change!="N")
		{
			/*if(source=='shipper')
				addShipperAsDebtor();
			else if(source=='consignee')
				addConsigneeAsDebtor();*/
		}
	}
}

function emptyCityStateZip(source){
	$('input[name="'+ source +'\\.careOf"]').val('');
	$('input[name="'+ source +'\\.nameQualifier"]').val("");
	$('input[name="'+ source +'\\.city"]').val("");
	$('input[name="'+ source +'\\.state"]').val("");
	$('input[name="'+ source +'\\.zip"]').val("");
	$('input[name="'+ source +'\\.countryName"]').val("");
	$('input[name="'+ source +'\\.provinceName"]').val("");
}

function emptyContactDetails(source){
	$('select[name="'+ source +'\\.contactId"]').children().remove();
	$('select[name="'+ source +'\\.contactId"]').append("<option value='' label='Select'></option>");
	emptyContactDetailsOnContactChange(source);
}

function emptyContactDetailsOnContactChange(source){
	$('input[name="'+ source +'\\.contact"]').val("");
	$('input[name="'+ source +'\\.addressRoleContactCode"]').val("");
	
	$('input[name="'+ source +'\\.contactFaxCountryCode"]').val("");
	$('input[name="'+ source +'\\.contactFaxAreaCode"]').val("");
	$('input[name="'+ source +'\\.contactFaxExchange"]').val("");
	$('input[name="'+ source +'\\.contactFaxStation"]').val("");
	$('input[name="'+ source +'\\.contactFaxExtension"]').val("");
	
	$('input[name="'+ source +'\\.contactCellCountryCode"]').val("");
	$('input[name="'+ source +'\\.contactCellAreaCode"]').val("");
	$('input[name="'+ source +'\\.contactCellExchange"]').val("");
	$('input[name="'+ source +'\\.contactCellStation"]').val("");
	$('input[name="'+ source +'\\.contactCellExtension"]').val("");

	$('input[name="'+ source +'\\.contactPhoneAreaCode"]').val("");
	$('input[name="'+ source +'\\.contactPhoneExchange"]').val("");
	$('input[name="'+ source +'\\.contactPhoneStation"]').val("");
	$('input[name="'+ source +'\\.contactPhoneCountryCode"]').val("");
	$('input[name="'+ source +'\\.contactPhoneExtension"]').val("");

	$('input[name="'+ source +'\\.contactEmailAddress"]').val("");
	//$('input[name="'+ source +'\\.communicationMethodCode"]').val("");
	setDefaultPrefMethod(source);
	
	if(source=='consignee')
		loadHazGrid();
}

function getPrefCommMethod(fieldOwner){
	var prefCommMethod = '';
	if($('#'+fieldOwner+'Comm1').attr('checked')){
		prefCommMethod = $('#'+fieldOwner+'Comm1').val();
	}else if($('#'+fieldOwner+'Comm2').attr('checked')){
		prefCommMethod = $('#'+fieldOwner+'Comm2').val();
	}else if($('#'+fieldOwner+'Comm3').attr('checked')){
		prefCommMethod = $('#'+fieldOwner+'Comm3').val();
	}else if($('#'+fieldOwner+'Comm4').attr('checked')){
		prefCommMethod = $('#'+fieldOwner+'Comm4').val();
		$('input[name="'+fieldOwner+'\\.contactEmailAddress"]').addClass("validate[custom[email]] text-input");
	}else{
		prefCommMethod = '';
	}
	return prefCommMethod;
}
function isAccordianOpen(index){
	var retValue = '';
	var status = $($('.booking-section')[index]).accordion('option', 'active');
	//alert("status:"+status);
	if(status==undefined)
		retValue ='false';// false;
	else if(status=='false' || status==false)
		retValue ='false';// false;
	else if(status=='0')
		retValue ='true';
	//alert("retValue:"+retValue);
	return retValue;
}
function openDivBlock(){
	/*var ok = isAccordianOpen(0);
	if(ok=='false'){
		$($('.booking-section')[0]).accordion("enable");
		$($('.booking-section')[0]).accordion('option', 'active', 0);
	}*/
	document.getElementById('maintainBookingShipperConsignee').style.display = 'block';
	window.scrollTo(0, 180);
}

function orgIsPOVAndUserOnTemplate(){
}

function isContactSelectedFromDropDown(source){
	if($('select[name="'+source+'\\.contactId"] option').length==0 || $('select[name="'+source+'\\.contactId"] :selected').val()=='' || $('select[name="'+source+'\\.contactId"] :selected').val()=='Select'){
		return false;
	}
	return true;
}

function validateContactForShipperConsignee(source){
	//Defect - D020445, So the expectation when making a template such as below that there would not be a required field when pulling in the POV AROL.
	//defect - D021668 [shipper/consignee both should not required contact at template level
	if($('#bookingTypeCode').val()=='T' && $('input[name="'+source+'\\.organizationCode"]').val()=='POV'){
		return true;
	}

	var isValid = true;
	if($('input[name="'+source+'\\.organizationId"]').val()!='' && $('input[name="'+source+'\\.addressRoleId"]').val()=='')
	{
		openDivBlock();
		isValid = false;
		$('input[name="'+source+'\\.address"]').validationEngine('showPrompt', 'Please select Address Role.', 'error', 'topRight', true);
		return isValid;
	}
	if($('input[name="'+source+'\\.addressRoleId"]').val()!=''){
		if(!isContactSelectedFromDropDown(source) && $('input[name="'+source+'\\.contact"]').val()==''/* && orgIsPOVAndUserOnTemplate()*/){
			openDivBlock(); 
			isValid = true;
			if($('select[name="'+source+'\\.contactId"] option').length>1){
				// Defect 25151
				if($("#tradeCode").val()=="F"){
					return isValid;
				}else{
					$('select[name="'+source+'\\.contactId"]').validationEngine('showPrompt', 'Please select contact.', 'error', 'topRight', true);
					//D027457
					return false;
				}
			}else if($("#tradeCode").val()=="F"){
				return isValid;
			}else{
				$('input[name="'+source+'\\.contact"]').validationEngine('showPrompt', 'Please enter contact.', 'error', 'topRight', true);
				return false;
			}
		  
	}
		var prefMethod = getPrefCommMethod(source);
		if(!isContactSelectedFromDropDown(source) && $('input[name="'+source+'\\.contact"]').val()!='' && prefMethod==''){
			openDivBlock();
			$('#'+source+'Comm1').validationEngine('showPrompt', 'Please select preferred method.', 'error', 'topRight', true);
			isValid = false;
			if(!isValid)
				return isValid;
		}
		isValid = validateContactLine('P',source,'Phone');
		if(!isValid)
			return isValid;
		/*if(prefMethod=='P'){
			isValid = validateContactLine(prefMethod,source,'Phone');
			if(!isValid)
				return isValid;
		}else*/ if(prefMethod=='C'){
			isValid = validateContactLine(prefMethod,source,'Cell');
			if(!isValid)
				return isValid;
		}else if(prefMethod=='F'){
			isValid = validateContactLine(prefMethod,source,'Fax');
			if(!isValid)
				return isValid;
		}else if(prefMethod=='E' && $('input[name="'+source+'\\.contactEmailAddress"]').val()==''){
			openDivBlock();
			//$('#'+source+'Comm4').validationEngine('showPrompt', 'Preferred communication (Email) cannot be empty', 'error', 'topRight', true);
			$('input[name="'+source+'\\.contactEmailAddress"]').validationEngine('showPrompt', 'Preferred communication (Email) cannot be empty', 'error', 'topRight', true);
			isValid = false;
			if(!isValid)
				return isValid;
		}
		if(isValid){
			isValid = validateUnPref(source);
		}
	}
	return isValid;
}

function validateContactLine(prefMethod,source,contactField){
	var isValid = true;
	var areaCode = '', exchange='',station='',countryCode='', extension='';
	var isFieldPrefMethod=false;
	if(prefMethod=='P' && contactField=='Phone'){
		isFieldPrefMethod = true;
		areaCode = $('input[name="'+source+'\\.contactPhoneAreaCode"]').val();
		exchange = $('input[name="'+source+'\\.contactPhoneExchange"]').val();
		station = $('input[name="'+source+'\\.contactPhoneStation"]').val();
		countryCode = $('input[name="'+source+'\\.contactPhoneCountryCode"]').val();
		extension = $('input[name="'+source+'\\.contactPhoneExtension"]').val();
		isValid = validateFieldData(isFieldPrefMethod, areaCode, exchange, station, countryCode, extension, source, contactField);
	}else if(prefMethod=='C' && contactField=='Cell'){
		isFieldPrefMethod = true;
		areaCode = $('input[name="'+source+'\\.contactCellAreaCode"]').val();
		exchange = $('input[name="'+source+'\\.contactCellExchange"]').val();
		station = $('input[name="'+source+'\\.contactCellStation"]').val();
		countryCode = $('input[name="'+source+'\\.contactCellCountryCode"]').val();
		extension = $('input[name="'+source+'\\.contactCellExtension"]').val();
		isValid = validateFieldData(isFieldPrefMethod, areaCode, exchange, station, countryCode, extension, source, contactField);
	}else if(prefMethod=='F' && contactField=='Fax'){
		isFieldPrefMethod = true;
		areaCode = $('input[name="'+source+'\\.contactFaxAreaCode"]').val();
		exchange = $('input[name="'+source+'\\.contactFaxExchange"]').val();
		station = $('input[name="'+source+'\\.contactFaxStation"]').val();
		countryCode = $('input[name="'+source+'\\.contactFaxCountryCode"]').val();
		extension = $('input[name="'+source+'\\.contactFaxExtension"]').val();
		isValid= validateFieldData(isFieldPrefMethod, areaCode, exchange, station, countryCode, extension, source, contactField);
	}
	return isValid;
}

function validateFieldData(isFieldPrefMethod,areaCode,exchange,station,countryCode, extension, source,contactField){
	var isValid = true;
	
	// Defect 24095
    // Changed code to skip validation for trade code F
	
	if($("#tradeCode").val()=="F"){
		return isValid;
	}
	

	if(countryCode=='')
		countryCode='01';

	if(countryCode=='' || (countryCode =='1' || countryCode=='01' || countryCode=='001' || countryCode=='us' || countryCode=='united states')){

		if(areaCode == '' && isFieldPrefMethod){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'AreaCode"]').validationEngine('showPrompt', '*This field is required.', 'error', 'topRight', true);
			isValid = false;
		} 
		else if(areaCode.length!=3){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'AreaCode"]').validationEngine('showPrompt', 'Area Code is a 3 digit number.', 'error', 'topRight', true);
			isValid = false;
		}
		
		if(exchange == '' && isFieldPrefMethod){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'Exchange"]').validationEngine('showPrompt', '*This field is required.', 'error', 'topRight', true);
			isValid = false;
		} 
		else if(exchange.length != 3){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'Exchange"]').validationEngine('showPrompt', 'Exchange Code is a 3 digit number', 'error', 'topRight', true);
			isValid = false;
		}
		
		if(station == '' && isFieldPrefMethod){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'Station"]').validationEngine('showPrompt', '*This field is required.', 'error', 'topRight', true);
			isValid = false;
		}
		else if(station.length!=4){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'Station"]').validationEngine('showPrompt', 'Station Code is a 4 digit number.', 'error', 'topRight', true);
			isValid = false;
		}

		if(extension.length>7){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'Extension"]').validationEngine('showPrompt', '*Extension code cannot be more than 7 digits.', 'error', 'topRight', true);
			isValid = false;
		}
	}else{
		//D033813: 	SPX: MAINTAIN BKG - NEED TO RELAX THE PHONE# EDIT for NON-US
		if(areaCode == '' && isFieldPrefMethod){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'AreaCode"]').validationEngine('showPrompt', '*This field is required.', 'error', 'topRight', true);
			isValid = false;
		}/*else if(areaCode.length < 2 || areaCode.length > 4){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'AreaCode"]').validationEngine('showPrompt', 'Area Code is a 2 to 4 digit number.', 'error', 'topRight', true);
			isValid = false;
		}*/
		if(exchange == '' && isFieldPrefMethod){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'Exchange"]').validationEngine('showPrompt', '*This field is required.', 'error', 'topRight', true);
			isValid = false;
		}/*else if(exchange.length < 3 || exchange.length > 4){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'Exchange"]').validationEngine('showPrompt', 'Exchange Code is a 3 or 4 digit number', 'error', 'topRight', true);
			isValid = false;
		}*/
		if(station == '' && isFieldPrefMethod){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'Station"]').validationEngine('showPrompt', '*This field is required.', 'error', 'topRight', true);
			isValid = false;
		}
		/*else if(station.length!=4){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'Station"]').validationEngine('showPrompt', 'Station Code is always a 4 digit number.', 'error', 'topRight', true);
			isValid = false;
		}*/
		
		if(extension.length>7){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'Extension"]').validationEngine('showPrompt', '*Extension code cannot be more than 7 digits.', 'error', 'topRight', true);
			isValid = false;
		}

	}
	return isValid;
}

function isUnPrefDetailsEmpty(source,field){
	var isEmpty = true;
	var areaCode = $('input[name="'+source+'\\.contact'+field+'AreaCode"]').val();
	var exchange = $('input[name="'+source+'\\.contact'+field+'Exchange"]').val();
	var extension = $('input[name="'+source+'\\.contact'+field+'Extension"]').val();
	var station = $('input[name="'+source+'\\.contact'+field+'Station"]').val();
	var countryCode = $('input[name="'+source+'\\.contact'+field+'CountryCode"]').val();
	if(areaCode!='' || exchange!='' || station!='' || countryCode!=''){// || extension!=''
		isEmpty = false;
		return isEmpty;
	}
	return isEmpty;
}

function validateUnPref(source){
	var isValid = true;
	var pref = getPrefCommMethod(source);
	if(pref=='P'){
		var isEmpty = isUnPrefDetailsEmpty(source, 'Cell');
		if(!isEmpty){
			isValid = validateFieldDataUnPref(source, 'Cell');
			if(!isValid)
				return isValid;
		}
		var isEmpty = isUnPrefDetailsEmpty(source, 'Fax');
		if(!isEmpty){
			isValid = validateFieldDataUnPref(source, 'Fax');
			if(!isValid)
				return isValid;
		}
	}else if(pref=='C'){
		var isEmpty = isUnPrefDetailsEmpty(source, 'Phone');
		if(!isEmpty){
			isValid = validateFieldDataUnPref(source, 'Phone');
			if(!isValid)
				return isValid;
		}
		var isEmpty = isUnPrefDetailsEmpty(source, 'Fax');
		if(!isEmpty){
			isValid = validateFieldDataUnPref(source, 'Fax');
			if(!isValid)
				return isValid;
		}
	}else if(pref=='F'){
		var isEmpty = isUnPrefDetailsEmpty(source, 'Phone');
		if(!isEmpty){
			isValid = validateFieldDataUnPref(source, 'Phone');
			if(!isValid)
				return isValid;
		}
		var isEmpty = isUnPrefDetailsEmpty(source, 'Cell');
		if(!isEmpty){
			isValid = validateFieldDataUnPref(source, 'Cell');
			if(!isValid)
				return isValid;
		}
	}else if(pref=='E'){
		var isEmpty = isUnPrefDetailsEmpty(source, 'Phone');
		if(!isEmpty){
			isValid = validateFieldDataUnPref(source, 'Phone');
			if(!isValid)
				return isValid;
		}
		var isEmpty = isUnPrefDetailsEmpty(source, 'Cell');
		if(!isEmpty){
			isValid = validateFieldDataUnPref(source, 'Cell');
			if(!isValid)
				return isValid;
		}
		var isEmpty = isUnPrefDetailsEmpty(source, 'Fax');
		if(!isEmpty){
			isValid = validateFieldDataUnPref(source, 'Fax');
			if(!isValid)
				return isValid;
		}
	}
	return isValid;
}

function validateFieldDataUnPref(source,contactField){
	var isValid = true;
	var areaCode = $('input[name="'+source+'\\.contact'+contactField+'AreaCode"]').val();
	var exchange = $('input[name="'+source+'\\.contact'+contactField+'Exchange"]').val();
	var station = $('input[name="'+source+'\\.contact'+contactField+'Station"]').val();
	var countryCode = $('input[name="'+source+'\\.contact'+contactField+'CountryCode"]').val();
	var extension = $('input[name="'+source+'\\.contact'+contactField+'Extension"]').val();
	
	if(countryCode=='' || (countryCode =='1' || countryCode=='01' || countryCode=='001' || countryCode=='us' || countryCode=='united states')){
		if(areaCode.length!=3){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'AreaCode"]').validationEngine('showPrompt', 'Area Code is always a 3 digit number.', 'error', 'topRight', true);
			isValid = false;
		}
		if(exchange.length!=3){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'Exchange"]').validationEngine('showPrompt', 'Exchange Code is always a 3 digit number.', 'error', 'topRight', true);
			isValid = false;
		}
		if(station.length!=4){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'Station"]').validationEngine('showPrompt', 'Station Code is always a 4 digit number.', 'error', 'topRight', true);
			isValid = false;
		}
		if(extension.length>7){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'Extension"]').validationEngine('showPrompt', '*Extension code cannot be more than 7 digits.', 'error', 'topRight', true);
			isValid = false;
		}
	}else{
		//D033813: 	SPX: MAINTAIN BKG - NEED TO RELAX THE PHONE# EDIT for NON-US
		/*if(areaCode.length < 2 || areaCode.length > 4){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'AreaCode"]').validationEngine('showPrompt', 'Area Code is a 2 to 4 digit number.', 'error', 'topRight', true);
			isValid = false;
		}
		if(exchange.length < 3 || exchange.length > 4){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'Exchange"]').validationEngine('showPrompt', 'Exchange Code is a 3 or 4 digit number', 'error', 'topRight', true);
			isValid = false;
		}
		if(station.length!=4){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'Station"]').validationEngine('showPrompt', 'Station Code is always a 4 digit number.', 'error', 'topRight', true);
			isValid = false;
		}*/
		if(extension.length>7){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'Extension"]').validationEngine('showPrompt', '*Extension code cannot be more than 7 digits.', 'error', 'topRight', true);
			isValid = false;
		}
	}
	return isValid;
}

function updateShipperConsigneeNames(responseText){
	if(null==responseText.data.shipper.organizationName)
		responseText.data.shipper.organizationName="";
	if(null==responseText.data.consignee.organizationName)
		responseText.data.consignee.organizationName="";
	$("#shipperConsigneeNameDiv").html("<div style=\"float:left;\" id=\"shipperDiv\"><b>Shipper "+ responseText.data.shipper.organizationName +" </div><div id=\"consigneeDiv\" >&nbsp;&nbsp;&nbsp;&nbsp;Consignee "+ responseText.data.consignee.organizationName +"</div></b>");
}


function handleManualContact(source){
	$('select[name="'+ source +'\\.contactId"]').val("");
	$('select[name="'+ source +'\\.addressRoleContactCode"]').val("");
	
	$('input[name="'+ source +'\\.contactFaxCountryCode"]').val("");
	$('input[name="'+ source +'\\.contactFaxAreaCode"]').val("");
	$('input[name="'+ source +'\\.contactFaxExchange"]').val("");
	$('input[name="'+ source +'\\.contactFaxStation"]').val("");
	$('input[name="'+ source +'\\.contactFaxExtension"]').val("");
	
	$('input[name="'+ source +'\\.contactCellCountryCode"]').val("");
	$('input[name="'+ source +'\\.contactCellAreaCode"]').val("");
	$('input[name="'+ source +'\\.contactCellExchange"]').val("");
	$('input[name="'+ source +'\\.contactCellStation"]').val("");
	$('input[name="'+ source +'\\.contactCellExtension"]').val("");

	$('input[name="'+ source +'\\.contactPhoneAreaCode"]').val("");
	$('input[name="'+ source +'\\.contactPhoneExchange"]').val("");
	$('input[name="'+ source +'\\.contactPhoneStation"]').val("");
	$('input[name="'+ source +'\\.contactPhoneCountryCode"]').val("");
	$('input[name="'+ source +'\\.contactPhoneExtension"]').val("");

	$('input[name="'+ source +'\\.contactEmailAddress"]').val("");
	$('#'+source+'Comm1').trigger('click');
	$('#'+ source +'Comm1').attr('checked',true);
	$('#'+ source +'Comm2').attr('checked',false);
	$('#'+ source +'Comm3').attr('checked',false);
	$('#'+ source +'Comm4').attr('checked',false);
	$('#'+ source +'Comm1').trigger('change');
}

function checkAccordionHeaderForShipper()
{
	if($('input[name="shipper\\.addressRoleId"]').val()!='')
		setAccordianTabDetails("shipperNameDiv", " - "+$('input[name="shipper\\.organizationName"]').val());
	else
		setAccordianTabDetails("shipperNameDiv", "");
}

function removeBookingErrorPointers(){
	$("#bookingForm").validationEngine('hideAll');
};var isOneTimerChanged = "";
var isCustomerOverridden = false;
/*var savedCommMethodValue = "";*/
var provinces = "";	
$(function() {
	
	clearOneTimeCustomerForm();
	$('#callingPartyCode').val("");
	
	$('.trimmedField').change(function()
	{
		$(this).val($.trim($(this).val()));
	});
	if($('#oneTimeCountry').val() != null && (new String($('#oneTimeCountry').val().toLowerCase())=="ca" || new String($('#oneTimeCountry').val().toLowerCase()).ignoreCase=="canada")){
		provinces=$('#oneTimeState').val() + "-" + $('#oneTimeProvince').val();
	}
	
	$("#oneTimeCustomerDialog").dialog({
		autoOpen : false,
		width : 1000,
		modal : true,
		open : function()
		{
			tabSequence('#oneTimeCustomerDialog',false,false);
			bindTabEvents();
			$('#bkngNo').val($('#shipmentNumber').val());
			$('#bookingCommentId').val($('#commentId').val());
			$("#onetimecustomer").validationEngine('attach');
			isOneTimerChanged ="";
		},
		close : function()
		{
			removeOneTimeCustomerPopUps();
			$("#onetimecustomer").validationEngine('detach');
			clearOneTimeCustomerForm();
			$('#callingPartyCode').val("");
			tabSequence('#',true,false);
		}
	});
	
	$('#onetimecustomer :input').change(function()
	{
		if((this.type=='text' || this.type=='radio') && this.name!='dataAdminCode')
			isOneTimerChanged = "Y";
	});
	
	$('#oneTimeZip').blur(function()
	{
		usZipDisplay();
	});
	
	$('#oneTimeCountry').blur(function()
	{
		usZipDisplay();	
    });
	
	$('#oneTimeState').blur(function()
	{
		if($.trim($('#oneTimeState').val()) != '')
		{
			//$('#oneTimeCountry').val('US');
			if($('#callingParty').val() != 'party')
			{
				if($("#otCommunicationMethodCode:checked").val()=="P"
					&& $('#oneTimeContactPhoneCountryCode').val()=='')
					$('#oneTimeContactPhoneCountryCode').val('1');
				else if($("#otCommunicationMethodCode:checked").val()=="F"
					&& $('#oneTimeContactFaxCountryCode').val()=='')
					$('#oneTimeContactFaxCountryCode').val('1');
				else if($("#otCommunicationMethodCode:checked").val()=="C"
						&& $('#oneTimeContactCellCountryCode').val()=='')
						$('#oneTimeContactCellCountryCode').val('1');
			}
		}
    });
	
	/*$('#contactFirstName').blur(function()
	{
		if($.trim($('#contactFirstName').val())=='' && $('#custContactId').val()!='')
		{
			//if($('#dataAdminCode:checked').val()=="A")
			//	$('#dataAdminCode:checked').attr("checked", false);
			//$('#dataAdminCode').attr("disabled", true);
			
			$('#custContactId').val('');
			$('#contactLastName').val('');
			
			$('#oneTimeContactPhoneCountryCode').val('');
			$('#oneTimeContactPhoneAreaCode').val('');
			$('#oneTimeContactPhoneExchange').val('');
			$('#oneTimeContactPhoneStation').val('');
			$('#oneTimeContactPhoneExtension').val('');
			
			$('#oneTimeContactCellCountryCode').val('');
			$('#oneTimeContactCellAreaCode').val('');
			$('#oneTimeContactCellExchange').val('');
			$('#oneTimeContactCellStation').val('');
			$('#oneTimeContactCellExtension').val('');
			
			$('#oneTimeContactFaxCountryCode').val('');
			$('#oneTimeContactFaxAreaCode').val('');
			$('#oneTimeContactFaxExchange').val('');
			$('#oneTimeContactFaxStation').val('');
			$('#oneTimeContactFaxExtension').val('');
			
			$('#oneTimeContactEmailAddress').val('');
			
			$('.otCommunicationMethodCode').attr("checked", false);
			//$('#otCommunicationMethodCode').attr("checked", true);
		}	
    });*/

	$('#customerName').blur(function()
	{
		var defaultCustomerName = "";
		if($('#contactFirstName').val()!='' && $('#contactLastName').val()!='')
			defaultCustomerName = $('#contactFirstName').val()+ " " + $('#contactLastName').val();
		else if($('#contactFirstName').val()!='')
			defaultCustomerName = $('#contactFirstName').val();
		else if($('#contactLastName').val()!='')
			defaultCustomerName = $('#contactLastName').val();
		
		if($.trim($('#customerName').val()) != defaultCustomerName)
			isCustomerOverridden = true;
		else
			isCustomerOverridden = false;
		
		/*if($.trim($('#customerName').val())=='' && $('#customerId').val()!='')
		{
			var additionalInfo = $('#additionalInfo').val();
			clearOneTimeCustomerForm();
			$('#additionalInfo').val(additionalInfo);
		}
		if($.trim($('#customerName').val())=='')
		{
			if($('#dataAdminCode:checked').val()=="A")
				$('#dataAdminCode:checked').attr("checked", false);
			$('#dataAdminCode').attr("disabled", true);
		}
		else
			$('#dataAdminCode').attr("disabled", false);*/
    });
	
//Code changes start for Defect D028405	
/*	$('#addressLine1').change(function()
	{
	  //	if($.trim($('#addressLine1').val())=='' && $('#addressId').val()!='')
	    
		if($('#callingPartyCode').val()=='02'||$('#callingPartyCode').val()=='03'){
			$('#addressId').val('');
			$('#custAddressRoleId').val('');
			$('#customerNameQualifier').val('');
			$('#addressLine2').val('');
			$('#addressLine3').val('');
			$('#oneTimeCity').val('');
			$('#oneTimeState').val('');
			$('#oneTimeZip').val('');
			$('#oneTimeProvince').val('');
			$('#oneTimeCountry').val('');
	    }
    });*/
	//Code changes ended for D028405
	
	$('#existingOrganization').gatesAutocomplete(
	{
		source:_context+'/cas/autocomplete.do',
		name: "Customer Name",
	 	extraParams: {
	 		 method: 'searchOrg',
	 		 searchType: '229',
	 		parentSearch:  function() { return "BK|"; }
	 	},
	 	
		autoSelectWhenSingle:true,
		autoSelectFirst:true,
			autoSelectCriteria:function(item) {
			   if(item != null){
			     return 'true';
			  }
			  else {
			     return 'false';
			  }
			},
		//source : urlShipperOrg,
		formatItem : function(data) {
			return data.name + "-" + data.abbr;
		},
		formatResult : function(data) {
			return data.name + "-" + data.abbr;
		},
		select : function(data) {
			
			$('#replaceOrganizationId').val(data.id);
			if($("#dataAdminCode:checked").val()=="C")
			{
				$('#existingAddressLine1').val("");
				$('#existingAddressLine1').trigger('change');
				
				singleAddressOneTimerCall();
			}
		}
	});
	
	$('#existingOrganization').gatesPopUpSearch({
		func : function() {
			customerOrganizationPopupSearch();
		}
	});
	
	$('#existingOrganization').change(
		function() {
			if($('#existingOrganization').val()=='')
				$('#replaceOrganizationId').val('');
	});
	
$('#existingAddressLine1').gatesAutocomplete({
		source:_context+'/cas/autocomplete.do',
		name: "Customer Address",
	 	extraParams: {
	 		 method: 'searchAddRoleBK',
	 		 searchType: '234',
	 		 parentSearch:  function() { return $('#replaceOrganizationId').val(); }
	 	},
		autoSelectWhenSingle:true,
		autoSelectFirst:true,
			autoSelectCriteria:function(item) {
			   if(item != null){
			     return 'true';
			  }
			  else {
			     return 'false';
			  }
			},
		formatItem : function(data) {
			var nameQualifier = data.nameQual;
			var city = data.city;
			var state = data.state;
			var zip = data.zip;
			var finalAddress = formatAddRoleDscrForSC(nameQualifier, data.stAdd, city, state, zip);
			return finalAddress;
		},
		formatResult : function(data) {
			var nameQualifier = data.nameQual;
			var city = data.city;
			var state = data.state;
			var zip = data.zip;
			var finalAddress = formatAddRoleDscrForSC(nameQualifier, data.stAdd, city, state, zip);
			return finalAddress;
		},
		select : function(data) {
			$('#replaceAddressRoleId').val(data.addRole);
		}
	});	
	
	$('#existingAddressLine1').gatesPopUpSearch({
		func : function() {
			if($('#replaceOrganizationId').val()!='')
				customerAddressPopupSearch();
			else
				alert("Please select organization first");
		}
	});
	
	$('#existingAddressLine1').change(
		function() {
			if($('#existingAddressLine1').val()=='')
				$('#replaceAddressRoleId').val('');
	});
	
	$('#contactFirstName').change(function(){
		deriveOrganizationName();
	});
	$('#contactLastName').change(function(){
		deriveOrganizationName();
	});
	
	var url = _context +'/organization/address/autoComplete' 
	$('#oneTimeProvince').gatesAutocomplete({
		source: url ,
		autoSelectFirst:true,
		extraParams:{
			country: function () { return $('#oneTimeCountry').val(); }
		},
		formatItem: function(item) {
			provinces=""+item.code+"-"+item.name;
			return provinces;
			
		},
		formatResult: function(item) {
			return item.name;
		},
		select: function(item) {
			$('#oneTimeProvince').val(item.name);
			$('#oneTimeState').val(item.code);
			$('#oneTimeCountry').val("CA");
			provinces=""+item.code+"-"+item.name;
		}	
	});	
	$('#oneTimeCountry').gatesPopUpSearch({
		func : function() {
			oneTimeCountryPopupSearch();
		}
	});
	$('#oneTimeCountry').change(function(){
		if($('#oneTimeCountry').val() == null || (new String($('#oneTimeCountry').val().toLowerCase())!="ca" && new String($('#oneTimeCountry').val().toLowerCase()).ignoreCase!="canada")){
			provinces = "";
		}
		if($('#oneTimeCountry').val() != null){
			$('#oneTimeCountry').val( $.trim($('#oneTimeCountry').val().toUpperCase()));
		}
		else if($('#oneTimeCountry').val() == null || $('#oneTimeCountry').val() == ''){
			if($('#oneTimeState').val()!='' && $('#oneTimeProvince').val()==''){
				$('#oneTimeCountry').val('US');
			}
		}
	});
	$('#oneTimeState').change(function(){
		if($('#oneTimeCountry').val() != null && new String($('#oneTimeCountry').val().toLowerCase())!="ca" && new String($('#oneTimeCountry').val().toLowerCase()).ignoreCase!="canada"){
			provinces = "";
		}
	});
	$('#oneTimeProvince').change(function(){
		if($('#oneTimeCountry').val() != null && new String($('#oneTimeCountry').val().toLowerCase())!="ca" && new String($('#oneTimeCountry').val().toLowerCase()).ignoreCase!="canada"){
			provinces = "";
		}
	});
	
	
});

function oneTimeCountryPopupSearch() {
	removeOneTimeCustomerPopUps();	
	var oneTimeCountry = $('#oneTimeCountry').val();	
	var	actionUrl = _context + '/cas/countryNameLookup.do?filterValue1='+oneTimeCountry+'|';
	var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, 'CustomerSearch', windowStyle);
}
function countryCodeUpdate(id){
	var values = id.split("|");
	$('#oneTimeCountry').val(values[0]);
}
function openOneTimeCustomer(callingParty) {
        
        var tradeCodeBooking = document.getElementById("tradeCode");
        var tradeCodeBilling = document.getElementById("tradeCodeDesc");
        var tradeCodeValue;
        if(tradeCodeBilling) {
            tradeCodeValue = tradeCodeBilling.textContent.slice(0, 1);
        } else if(tradeCodeBooking){
            var tradeCodeValue = tradeCodeBooking.value;
        }
        
        var customerGroup = document.getElementById('customerGroupId');
        var customerGroupText;
        if(customerGroup){
            customerGroupText = customerGroup.options[customerGroup.selectedIndex].textContent;
            if("Select" == customerGroupText) {
                customerGroupText = null;
            }
        }        
        
	var xErrorCoordinate = window.pageXOffset;
	var yErrorCoordinate = window.pageYOffset;
	$("#oneTimeCustomerDialog").dialog("option", "title", 'One Timer Customer');
	$("#oneTimeCustomerDialog").dialog("option", "buttons",
		[{
			text : "Cancel",
			click : function() {
				removeOneTimeCustomerPopUps();
				if(isOneTimerChanged!="")
				{
					var r = confirm("All unsaved changes will be discarded.Continue?");
					if(r)
						$("#oneTimeCustomerDialog").dialog("close");
					else
						return;
				}
				else
					$("#oneTimeCustomerDialog").dialog("close");
			}
		},
		{
			text : "Save",
			click : function() {
				$('#oneTimeCustMsgDiv').html('');
				if(callingParty=='spotPull')
					isOneTimerChanged = "Y";
				if(isOneTimerChanged!="")
				{
					removeOneTimeCustomerPopUps();
					if ($("#onetimecustomer").validationEngine('validate') & validateContactInfo(callingParty)){
							var queryString = $('#onetimecustomer').formSerialize();
							$.ajax({
								url : _context +"/booking/onetimecust/processOneTimeCustomer",
								type : "POST",
								data : queryString,
								success : function(responseText) {
									if(callingParty=='spotPull')
										showResponseMessagesSpot('oneTimeCustMsgDiv', responseText);
									else
										showResponseMessages('oneTimeCustMsgDiv', responseText);
									if(responseText.success)
									{
										$("#oneTimerDataForm").loadJSON(responseText.data);
										/*$('input[name="dataAdminCode"]').attr("disabled", false);
										if($('#otCommunicationMethodCode:checked').val() != undefined)
											savedCommMethodValue = $('#otCommunicationMethodCode:checked').val();
										else
											savedCommMethodValue = "";*/
										isOneTimerChanged = "";
									}
								}
							});
					} 
					else
						return false;
				}
				else
					alert("No fields have been changed. Can not save.");
			}
		},
		{
			text : "Save and Apply",
			click : function() {
				$('#oneTimeCustMsgDiv').html('');
				if(callingParty=='spotPull')
					isOneTimerChanged = "Y";
				if(isOneTimerChanged!="")
				{
					removeOneTimeCustomerPopUps();
					if ($("#onetimecustomer").validationEngine('validate') & validateContactInfo(callingParty)){
							var queryString = $('#onetimecustomer').formSerialize();
							$.ajax({
								url : _context +"/booking/onetimecust/processOneTimeCustomer",
								type : "POST",
								data : queryString,
								success : function(responseText) {
									if(callingParty=='spotPull')
										showResponseMessagesSpot('oneTimeCustMsgDiv', responseText);
									else
										showResponseMessages('oneTimeCustMsgDiv', responseText);
									if(responseText.success)
									{
										$("#oneTimerDataForm").loadJSON(responseText.data);
										/*$('input[name="dataAdminCode"]').attr("disabled", false);
										if($('#otCommunicationMethodCode:checked').val() != undefined)
											savedCommMethodValue = $('#otCommunicationMethodCode:checked').val();
										else
											savedCommMethodValue = "";*/
										isOneTimerChanged = "";
										oneTimeOkFunc(callingParty);
									}
								}
							});
					} 
					else
						return false;
				}
				else
				{
					if($('#custAddressRoleId').val()!='' & $("#onetimecustomer").validationEngine('validate') & validateContactInfo(callingParty))
						oneTimeOkFunc(callingParty);
					else
						alert("Cannot save. Use cancel to return to main page.");
				}
			}
		},
		{
			text : "Clear",
			click : function() {
				if(isOneTimerChanged=="")
				{
					var isChanged = false;
					var elements = $('#onetimecustomer :input');
					for(var i=0;i<elements.length;i++)
					{
						if(elements[i].type=='text' && elements[i].value!='')
						{
							isChanged = true;
							break;
						}
					}
					if(isChanged)
						isOneTimerChanged = "Y";
				}
				clearOneTimeCustomerForm();
			}
		}, {
			text : "Send To Data Admin",
			click : function() {
				var queryString = $('#onetimecustomer').formSerialize();                                
				$('#oneTimeCustMsgDiv').html('');
				removeOneTimeCustomerPopUps();
				if (validateDataAdmin() && $("#onetimecustomer").validationEngine('validate') && validateContactInfo(callingParty)) 
				{
					$.ajax({
						url : _context +"/booking/onetimecust/sendToDataAdmin",
						type : "POST",
						data : queryString,
						success : function(responseText) {
							if(callingParty=='spotPull')
								showResponseMessagesSpot('oneTimeCustMsgDiv', responseText);
							else
								showResponseMessages('oneTimeCustMsgDiv', responseText);
						}
					});
				}
				else 
					return false;
			}
		} ]);
	if(callingParty=='shipper')
		$('#callingPartyCode').val('02');
	else if(callingParty=='consignee')
		$('#callingPartyCode').val('03');
	else if(callingParty=='party')
	{
		if($('#partyTypeCode :selected').val()!='')
			$('#callingPartyCode').val($('#partyTypeCode :selected').val());
		else
			$('#callingPartyCode').val('ALL');
	}
	else
		$('#callingPartyCode').val('ALL');
	
        
        $('#oneTimerTradeCodes').val(tradeCodeValue);
        $('#customerGroup').val(customerGroupText);
        if(callingParty != 'shipper' && callingParty != 'consignee') {
            $('#oneTimerTradeCodesDiv').attr("hidden", true);
        }
        
	isCustomerOverridden = false;
	var addressRoleId = '';
/*	savedCommMethodValue = "";*/
	if(callingParty=='shipper' && 
			$('input[name="shipper\\.isOneTimeCustomer"]').val()=='true')
		addressRoleId = $('input[name="shipper\\.addressRoleId"]').val();
	else if(callingParty=='consignee' && 
			$('input[name="consignee\\.isOneTimeCustomer"]').val()=='true')
		addressRoleId = $('input[name="consignee\\.addressRoleId"]').val();
	else if(callingParty=='party' && 
			$('input[name="isOneTimeCustomer"]').val()=='true')
		addressRoleId = $('input[name="addressRoleId"]').val();
	else if(callingParty=='spotPull' && $('input[name="addressRoleId"]').val()!='')
	{
		var nameArr = $('#contactName').val().split(" ");
		$('#contactFirstName').val(nameArr[0]);
		if(nameArr.length>1)
		{
			var lastName = nameArr[1];
			if(nameArr.length>2)
			{
				for(var i=1;i<nameArr.length;i++)
				{
					lastName = lastName + " " + nameArr[i];
				}
			}
			$('#contactLastName').val(lastName);
		}
		$('#customerName').val($('#organisations').val());
		
		var defaultCustomerName = "";
		if($('#contactFirstName').val()!='' && $('#contactLastName').val()!='')
			defaultCustomerName = $('#contactFirstName').val()+ " " + $('#contactLastName').val();
		else if($('#contactFirstName').val()!='')
			defaultCustomerName = $('#contactFirstName').val();
		else if($('#contactLastName').val()!='')
			defaultCustomerName = $('#contactLastName').val();
		
		if($.trim($('#customerName').val()) != defaultCustomerName)
			isCustomerOverridden = true;
		else
			isCustomerOverridden = false;
		//$('#addressLine1').val($('#addRolDesc').val());
		//D028385
		if($('#addressLine1').val()=='')
		{
			var str= $('#addRolDesc').val();
			if(str.length>40)
				{
				$('#addressLine1').val(str.substring(0,40));
				}
			else
				{
				$('#addressLine1').val($('#addRolDesc').val());
				}
		}
		$('#oneTimeCity').val($('#city').val());
		$('#oneTimeState').val($('#state').val());
		$('#oneTimeZip').val($('#zip').val());
		if($('#oneTimeState').val()!='' && $('#oneTimeProvince').val()=='')
			$('#oneTimeCountry').val('US');
		$('#oneTimeContactPhoneCountryCode').val($('#phone1').val());
		$('#oneTimeContactPhoneAreaCode').val($('#phone2').val());
		$('#oneTimeContactPhoneExchange').val($('#phone3').val());
		$('#oneTimeContactPhoneStation').val($('#phone4').val());
		$('#oneTimeContactPhoneExtension').val($('#phone5').val());
		
		$('#oneTimeContactCellCountryCode').val($('#cell1').val());
		$('#oneTimeContactCellAreaCode').val($('#cell2').val());
		$('#oneTimeContactCellExchange').val($('#cell3').val());
		$('#oneTimeContactCellStation').val($('#cell4').val());
		$('#oneTimeContactCellExtension').val($('#cell5').val());
		
		$('#oneTimeContactFaxCountryCode').val($('#fax1').val());
		$('#oneTimeContactFaxAreaCode').val($('#fax2').val());
		$('#oneTimeContactFaxExchange').val($('#fax3').val());
		$('#oneTimeContactFaxStation').val($('#fax4').val());
		$('#oneTimeContactFaxExtension').val($('#fax5').val());
		$('#oneTimeContactEmailAddress').val($('#email').val());
		
		
		// D028085: 	trim last name if needed.
		
		if($('#contactLastName').val().length > 32) {
			$('#contactLastName').val($('#contactLastName').val().substring(0,32));
		}
	}
	if(addressRoleId!='')
	{
		$.ajax({
			url : _context +"/booking/onetimecust/getOneTimer",
			data : {addressRoleId:addressRoleId},
			success : function(responseText) {
				$("#onetimecustomer").loadJSON(responseText);
				$("#custContactId").val(responseText.contactId);
				/*if($('#customerId').val()!='' && $('#addressId').val()!='' && $('#custAddressRoleId').val()!='')
					$('input[name="dataAdminCode"]').attr("disabled", false);*/
				var prefMethod = 0;
				for(var i=1;i<=4;i++)
				{
					if($('#'+callingParty+'Comm'+i.toString()).attr("checked"))
					{
						prefMethod = i;
						break;
					}
				}
				if(prefMethod!=0)
				{
					$('#otCommunicationMethodCode:checked').attr("checked", false);
					$('.otCommunicationMethodCode')[prefMethod-1].checked = true;
				}
				/*if($('#otCommunicationMethodCode:checked').val() != undefined)
					savedCommMethodValue = $('#otCommunicationMethodCode:checked').val();*/
				$("#oneTimeCustomerDialog").dialog('open');
			}
		});
	}
	else
		$("#oneTimeCustomerDialog").dialog('open');
	
	setTimeout(function(){
		window.scrollTo(xErrorCoordinate, yErrorCoordinate);
		}, 250);
	//return false;
}

function oneTimeOkFunc(callingParty)
{
	if(callingParty=='spotPull')
	{
		$.ajax({
			url : _context +"/booking/onetimecust/getOneTimerForSpotPull",
			data:{addressRoleId:$('#custAddressRoleId').val()},
			success : function(responseText) {
				if(responseText.success)
				{
					$("#dispatchLocationGridForm").loadJSON(responseText.data);
					$("#oneTimeCustomerDialog").dialog("close");
					$("#organisations").css('backgroundColor',"#ffffcc");
					$('#errorMsgLocationDiv').html('');
					document.getElementById('errorMsgLocationDiv').style.display = 'none';
				}
				else
					showResponseMessagesSpot('oneTimeCustMsgDiv', responseText);
			}
		});
	}
	else
	{
		$.ajax({
			url : _context +"/booking/onetimecust/getOneTimerForBooking",
			data:{addressRoleId:$('#custAddressRoleId').val()},
			success : function(responseText) {
				if(responseText.success)
				{
					//responseText.data.communicationMethodCode = savedCommMethodValue;
					responseText.data.communicationMethodCode = $("#otCommunicationMethodCode:checked").val();
					if (callingParty == 'shipper') {
						emptyCityStateZip("shipper");
						emptyContactDetails("shipper");
						$('select[name="shipper\\.contactId"]').children().remove();
						$('select[name="shipper\\.contactId"]').append("<option value=''>Select</option>");
						$.each(responseText.data.contactList,
						function(key, value) {
							$('select[name="shipper\\.contactId"]').append($("<option/>",
							{
								value : key,
								text : value
							}));
						});
						if($('input[name="shipper\\.addressRoleId"]').val() != $('#custAddressRoleId').val())
						{
							$("#shipper").loadJSON(responseText.data);
							handlePrepaidCollectIndicator('S');
						}
						else
							$("#shipper").loadJSON(responseText.data);
						setShipperCommMethodValue(responseText.data);
						//enableDisableContactId('shipper',false);
						changeShipperConsigneeColor("shipper", "Y");
						$('input[name="shipper\\.address"]').attr("readonly",true);
						$('#shipperName').val(responseText.data.organizationName);
						shipperAddress = responseText.data.address;
						
						$('#refNumOverRideForShipper').val("N");
						setAccordianTabDetails("shipperNameDiv", "- "+responseText.data.organizationName);
						checkCopyButtons();
						//addShipperAsDebtor();
						isBookingChanged = "Y";
					} else if (callingParty == 'consignee') {
						emptyCityStateZip("consignee");
						emptyContactDetails("consignee");
						
						$('select[name="consignee\\.contactId"]').children().remove();
						$('select[name="consignee\\.contactId"]').append("<option value=''>Select</option>");
						$.each(responseText.data.contactList,
						function(key, value) {
							$('select[name="consignee\\.contactId"]').append($("<option/>",
							{
								value : key,
								text : value
							}));
						});
						if($('input[name="consignee\\.addressRoleId"]').val() != $('#custAddressRoleId').val())
						{
							$("#consignee").loadJSON(responseText.data);
							handlePrepaidCollectIndicator('C');
						}
						else
							$("#consignee").loadJSON(responseText.data);
						setConsigneeCommMethodValue(responseText.data);
						changeShipperConsigneeColor("consignee", "Y");
						$('input[name="consignee\\.address"]').attr("readonly",true);
						$('#consigneeName').val(responseText.data.organizationName);
						consigneeAddress = responseText.data.address;
						
						$('#refNumOverRideForConsignee').val("N");
						$('#isChangeAcceptedAfterUnitsReceived').val("N");
						checkCopyButtons();
						setAccordianTabDetails("consigneeNameDiv", "- "+responseText.data.organizationName);
						//addConsigneeAsDebtor();
						loadHazGrid();
						isBookingChanged = "Y";
					} else if (callingParty == 'party') {
						$('input[name="organizationName"]').trigger('change');
						$('select[name="contactId"]').children().remove();
						$('select[name="contactId"]').append("<option value=''>Select</option>");
						$.each(responseText.data.contactList,
						function(key, value) {
							$('select[name="contactId"]').append($("<option/>",
							{
								value : key,
								text : value
							}));
						});
						$("#parties").loadJSON(responseText.data);
						setPartyCommMethodValue(responseText.data);
						isPartyChanged = "Y";
					}
					$("#oneTimeCustomerDialog").dialog("close");
				}
				else
					showResponseMessages('oneTimeCustMsgDiv', responseText);
			}
		});
	}
}

function deriveOrganizationName(){
	//alert("Inside oneTimeCustomer deriveOrganizationName, customerId:"+$('#customerId').val()+", isCustomerOverridden:"+isCustomerOverridden+", FirstName:"+$('#contactFirstName').val()+", lastName:"+$('#contactLastName').val());
	if( !isCustomerOverridden)
	{
		if($('#contactFirstName').val()!='' && $('#contactLastName').val()!='')
			$('#customerName').val($('#contactFirstName').val()+ " " + $('#contactLastName').val());
		else if($('#contactFirstName').val()!='')
			$('#customerName').val($('#contactFirstName').val());
		else if($('#contactLastName').val()!='')
			$('#customerName').val($('#contactLastName').val());
	}
	/*if($.trim($('#customerName').val())=='')
	{
		if($('#dataAdminCode:checked').val()=="A")
			$('#dataAdminCode:checked').attr("checked", false);
		$('#dataAdminCode').attr("disabled", true);
	}
	else
		$('#dataAdminCode').attr("disabled", false);*/
}

function removeOneTimeCustomerPopUps() {
	$("#onetimecustomer").validationEngine('hideAll');
}

//Added by for repeatContact popup.

function repeatContactPopUps() {
		
	var repeatEmail =  $("#repeatContactEmailAddress").val();	
	var repeatPhone =  $("#repeatContactPhone").val();
	var repeatCell =  $("#repeatContactCell").val();
	var repeatFax =  $("#repeatContactFax").val();	
	
	var filter = /^([\w-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;	
	
	var phoneFilter = /^[0-9-+]+$/;
			
	if ( repeatPhone.length > 0 && !phoneFilter.test(repeatPhone)) {		
		$(".error-phonemessages").text("* Numbers only").css("color", "red").fadeIn();	        
	 }
	else{
		$(".error-phonemessages").empty().fadeOut();
	}
	
	if ( repeatCell.length > 0 && !phoneFilter.test(repeatCell)) {		
		$(".error-cellmessages").text("* Numbers only").css("color", "red").fadeIn();	        
	 }
	else{
		$(".error-cellmessages").empty().fadeOut();
	}
	
	if ( repeatFax.length > 0 && !phoneFilter.test(repeatFax)) {		
		$(".error-faxmessages").text("* Numbers only").css("color", "red").fadeIn();	        
	 }
	else{
		$(".error-faxmessages").empty().fadeOut();
	}
	
	
	if ( repeatEmail.length > 0 && !filter.test(repeatEmail)) {		
		$(".error-messages").text("* Invalid email address").css("color", "red").fadeIn();	        
	 }
	else{
		$(".error-messages").empty().fadeOut();
	}
}

function validateContactInfo(callingParty)
{
	var isValid = true;
	if(!validateCountryCode('phone') | !validateCountryCode('fax') | !validateCountryCode('cell'))
		isValid = false;
	if(!validatePhoneNo('customerPhone') | !validatePhoneNo('customerCell') | !validatePhoneNo('customerFax'))
		isValid = false;
	
	var isAnyContactInfoPresent = false;
	if(checkPhoneInfo('phone') || checkPhoneInfo('fax') || 
			checkPhoneInfo('cell') || $('#oneTimeContactEmailAddress').val()!='')
		isAnyContactInfoPresent = true;
	if($('#contactFirstName').val()=='' && (callingParty == 'party' || callingParty == 'spotPull') && isAnyContactInfoPresent)
	{
		$('#contactFirstName').validationEngine('showPrompt', '* This is required for contact for info to be saved', 'error', 'topLeft', true);
		isValid = false;
	}
	else if($('#contactFirstName').val()=='' && (callingParty == 'party' || callingParty == 'spotPull') && !isAnyContactInfoPresent)
	{
		$("#otCommunicationMethodCode:checked").attr("checked", false);
	}
	
	if($("#otCommunicationMethodCode:checked").val()=="P" && !checkPhoneInfo('phone'))
	{
		// Defect 25150
		if($("#tradeCode").val()=="F"){
			isValid = true;
		}
		else {
		isValid = false;
		$($('.otCommunicationMethodCode')[0]).validationEngine('showPrompt', 'Preferred communication (Phone) cannot be empty', 'error', true);
	}}
	else if($("#otCommunicationMethodCode:checked").val()=="C" && !checkPhoneInfo('cell'))
	{
		if($("#tradeCode").val()=="F"){
			isValid = true;
		}
		else {
		isValid = false;
		$($('.otCommunicationMethodCode')[1]).validationEngine('showPrompt', 'Preferred communication (Cell) cannot be empty', 'error', true);
	}}
	else if($("#otCommunicationMethodCode:checked").val()=="F" && !checkPhoneInfo('fax'))
	{if($("#tradeCode").val()=="F"){
		isValid = true;
	}
	else {
		isValid = false;
		$($('.otCommunicationMethodCode')[2]).validationEngine('showPrompt', 'Preferred communication (Fax) cannot be empty', 'error', true);
	}}
	else if($("#otCommunicationMethodCode:checked").val()=="E" && $("#oneTimeContactEmailAddress").val()=="")
	{if($("#tradeCode").val()=="F"){
		isValid = true;
	}
	else {
		isValid = false;
		$($('.otCommunicationMethodCode')[3]).validationEngine('showPrompt', 'Preferred communication (Email) cannot be empty', 'error', 'topRight', true);
	}}
	
	if(callingParty == 'shipper' || callingParty == 'consignee')
	{
		if($('#contactFirstName').val()==''){
			//Defect 25151
			if($("#tradeCode").val()=="F"){
				isValid = true;
			}
			else{
		{
			$('#contactFirstName').validationEngine('showPrompt', '* This field is required', 'error', 'topLeft', true);
			isValid = false;
		}
			}
		}
		// D021674
		if($('#contactLastName').val()==''){
			if($("#tradeCode").val()=="F"){
				isValid = true;
			}
			else{
		{
			$('#contactLastName').validationEngine('showPrompt', '* This field is required', 'error', 'topLeft', true);
			isValid = false;
		}
			}
		}
/*		if(!checkPhoneInfo('phone'))
		{
			// Defect 25150
			if($("#tradeCode").val()=="F"){
				isValid = true;
			}
			else {
			$('#oneTimeContactPhoneAreaCode').validationEngine('showPrompt', 'Phone is required', 'error', 'topLeft', true); 
			isValid = false;  
		}}*/
		if($("#otCommunicationMethodCode:checked").val()==undefined)
		{
			// Defect 25150
			if($("#tradeCode").val()=="F"){
					isValid = true;
				}
				else{
			isValid = false;
			$("#otCommunicationMethodCode").validationEngine('showPrompt', 'Please select a preferred method', 'error', true);
		}
	}
	}
	
	return isValid;
}

function validateCountryCode(callingField)
{
	var isValid = true;
	var isUS = false;
	if($('#oneTimeCountry').val()!=null && new String($('#oneTimeCountry').val().toLowerCase())=='us')
		isUS = true;
	if(callingField == 'phone')
	{
		if(checkPhoneInfo(callingField) && $('#oneTimeContactPhoneCountryCode').val()=='')
		{
			if(isUS)
				$('#oneTimeContactPhoneCountryCode').val('1');
			else
			{
				$("#oneTimeContactPhoneCountryCode").validationEngine('showPrompt', 'Country code required if country not US', 'error', 'topRight', true);
				isValid = false;
			}
		}
	}
	else if(callingField == 'cell')
	{
		if(checkPhoneInfo(callingField) && $('#oneTimeContactCellCountryCode').val()=='')
		{
			if(isUS)
				$('#oneTimeContactCellCountryCode').val('1');
			else
			{
				$("#oneTimeContactCellCountryCode").validationEngine('showPrompt', 'Country code required if country not US', 'error', 'topRight', true);
				isValid = false;
			}
		}
	}
	else if(callingField == 'fax')
	{
		if(checkPhoneInfo(callingField) && $('#oneTimeContactFaxCountryCode').val()=='')
		{
			if(isUS)
				$('#oneTimeContactFaxCountryCode').val('1');
			else
			{
				$("#oneTimeContactFaxCountryCode").validationEngine('showPrompt', 'Country code required if country not US', 'error', 'topRight', true);
				isValid = false;
			}
		}
	}
	
	return isValid;
}

function checkPhoneInfo(callingField)
{
	if(callingField == 'phone')
	{
		if($('#oneTimeContactPhoneCountryCode').val()!='' || $('#oneTimeContactPhoneAreaCode').val()!=''
			|| $('#oneTimeContactPhoneExchange').val()!='' || $('#oneTimeContactPhoneStation').val()!='')
			return true;
		else
			return false;
	}
	else if(callingField == 'fax')
	{
		if($('#oneTimeContactFaxCountryCode').val()!='' || $('#oneTimeContactFaxAreaCode').val()!=''
			|| $('#oneTimeContactFaxExchange').val()!='' || $('#oneTimeContactFaxStation').val()!='')
			return true;
		else
			return false;
	}
	else if(callingField == 'cell')
	{
		if($('#oneTimeContactCellCountryCode').val()!='' || $('#oneTimeContactCellAreaCode').val()!=''
			|| $('#oneTimeContactCellExchange').val()!='' || $('#oneTimeContactCellStation').val()!='')
			return true;
		else
			return false;
	}
}

function validateCustomerZip(){
	var zipCode = $.trim($("#oneTimeZip").val());
	var countryName = $.trim($("#oneTimeCountry").val());
	var split = zipCode.split("-");
	if(new String(countryName.toLowerCase())=="us" || new String(countryName.toLowerCase()).ignoreCase=="united states")
	{
		if(zipCode.length != 5 && zipCode.length != 10)
		{
			return "The ZIP CODE entered is invalid (NNNNN or NNNNN-NNNN)";
		}
		else if(zipCode.length == 5 && zipCode=="00000")
		{
			return "The ZIP CODE entered is invalid (NNNNN or NNNNN-NNNN)";
		}
		else if(split.length==2 && split[1]=="0000")
		{
			return "The ZIP CODE entered is invalid (NNNNN or NNNNN-NNNN)";
		}
		var zipRegEx = new RegExp(/^(([0-9]+)([\-]([0-9]+))?)$/);
        if (!zipRegEx.test($('#oneTimeZip').val())) {
            return "The ZIP CODE entered is not numeric (NNNNN or NNNNN-NNNN)";
        }
	}
	else
	{
		if(zipCode.length == 10)
		{
			return "10th position of postal code must be blank for non US countries";
		}
	}
}
	
function usZipDisplay()
{
	var countryName = $('#oneTimeCountry').val();
	if(new String(countryName.toLowerCase())=="us" || new String(countryName.toLowerCase()).ignoreCase=="united states")
	{
		var zipCode = $.trim($("#oneTimeZip").val());
		var split = zipCode.split("-");
		
		if(split.length==1 && zipCode.length>5)
		{
			var  val = zipCode.replace(/(.{5})/g,"$1-");
			$('#oneTimeZip').val(val);
    	}
		if($('#oneTimeZip').val().length>10)
		{
			$('#oneTimeZip').val($('#oneTimeZip').val().substr(0,10));
		}
		else if($('#oneTimeZip').val().length==6)
		{
			$('#oneTimeZip').val($('#oneTimeZip').val().substr(0,5));
		}
	}
}

function validateCountryGroup() {
	  var stateCode = $.trim($("#oneTimeState").val());
	  var zipCode = $.trim($("#oneTimeZip").val());
	  var provinceName = $.trim($("#oneTimeProvince").val());
	  var countryName = $.trim($("#oneTimeCountry").val());
	  $("#oneTimeCountry").val($.trim($("#oneTimeCountry").val()));
	  
	  if(new String(countryName.toLowerCase())=="us" || new String(countryName.toLowerCase()).ignoreCase=="united states")
	  {
		  if(stateCode.length == 0 || zipCode.length == 0)
		  {
			  return "State and Zip are required if Country is US";
		  }
		  else if(provinceName.length != 0)
		  {
			  return "Province not required if Country is US";
		  }
	  }
	  else if(new String(countryName.toLowerCase())=="ca" || new String(countryName.toLowerCase()).ignoreCase=="canada")
	  {
		  if(stateCode.length == 0)
		  {
			  return "State required if country is CA";
		  }
		  if(provinces == "" && (stateCode == "" || provinceName == "")){
			  return "Please select province from predictive list if country is CA ";
		  }
		 /* if(provinceName.length == 0)
		  {
			  return "Province required if Country is CA";
		  }*/
	  }
}

//This function is already present in clause.js
/*function imposeMaxLength(Object, MaxLen) {
	return (Object.value.length <= MaxLen-1);
}*/

function openSearchOneTimerWindow()
{
	var url = _context + '/cas/onetimeCustomerSearch.do?source=Booking&callingParty='+$('#callingPartyCode').val();
	window.open(url, '', "top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0");
}

function oneTimeCustUpdate(id)
{
	var data = id.split("|");
	clearOneTimeCustomerForm();
	
	//$('#bkngNo').val(data[7]);
	$('#customerId').val(data[19]);
	$('#custContactId').val(nullCheck(data[20]));
	$('#addressId').val(data[21]);
	$('#custAddressRoleId').val(data[22]);
	$('#contactFirstName').val(nullCheck(data[10]));
	$('#contactLastName').val(nullCheck(data[11]));
	$('#customerName').val(data[0]);
	//$('#customerAbbr').val(nullCheck(data[1]));
	$('#customerNameQualifier').val(nullCheck(data[12]));
	$('#addressLine1').val(data[2]);
	$('#suite').val(nullCheck(data[13]));
	$('#addressLine2').val(nullCheck(data[8]));
	$('#addressLine3').val(nullCheck(data[9]));
	$('#oneTimeCity').val(data[3]);
	$('#oneTimeState').val(nullCheck(data[4]));
	$('#oneTimeZip').val(nullCheck(data[5]));
	$('#oneTimeProvince').val(nullCheck(data[14]));
	$('#oneTimeCountry').val(data[15]);
	$('#oneTimeContactEmailAddress').val(nullCheck(data[18]));
	
	if(data[16]!='null' && data[16]!='')
	{
		var tel = data[16].split("-");
		for(var i=0;i<tel.length;i++)
		{
			if(i==0)
				$('#oneTimeContactPhoneCountryCode').val(tel[0]);
			else if(i==1)
				$('#oneTimeContactPhoneAreaCode').val(tel[1]);
			else if(i==2)
				$('#oneTimeContactPhoneExchange').val(tel[2]);
			else if(i==3)
				$('#oneTimeContactPhoneStation').val(tel[3]);
			else if(i==4)
				$('#oneTimeContactPhoneExtension').val(tel[4]);
		}
	}
	
	if(data[17]!='null' && data[17]!='')
	{
		var tel = data[17].split("-");
		for(var i=0;i<tel.length;i++)
		{
			if(i==0)
				$('#oneTimeContactCellCountryCode').val(tel[0]);
			else if(i==1)
				$('#oneTimeContactCellAreaCode').val(tel[1]);
			else if(i==2)
				$('#oneTimeContactCellExchange').val(tel[2]);
			else if(i==3)
				$('#oneTimeContactCellStation').val(tel[3]);
			else if(i==4)
				$('#oneTimeContactCellExtension').val(tel[4]);
		}
	}
	
	if(data[23]!='null' && data[23]!='')
	{
		var tel = data[23].split("-");
		for(var i=0;i<tel.length;i++)
		{
			if(i==0)
				$('#oneTimeContactFaxCountryCode').val(tel[0]);
			else if(i==1)
				$('#oneTimeContactFaxAreaCode').val(tel[1]);
			else if(i==2)
				$('#oneTimeContactFaxExchange').val(tel[2]);
			else if(i==3)
				$('#oneTimeContactFaxStation').val(tel[3]);
			else if(i==4)
				$('#oneTimeContactFaxExtension').val(tel[4]);
		}
	}
	//$('input[name="dataAdminCode"]').attr("disabled", false);
	isOneTimerChanged = "Y";
	isCustomerOverridden = false;
}

function nullCheck(val)
{
	if(val=='null')
		return '';
	else
		return val;
}

function customerOrganizationPopupSearch() {
	removeOneTimeCustomerPopUps();
	orgCaller = 'dataAdmin';
	var orgName = $('#existingOrganization').val();
	var actionUrl = "";
	if(orgName.indexOf("-") > 0){
		splitOrgName = orgName.split("-");
		actionUrl = _context + '/cas/orgSearchLookup.do?filterValue1='+encodeURIComponent(splitOrgName[0])+'||BK|||'+encodeURIComponent(splitOrgName[1]);
	}else{
		actionUrl = _context + '/cas/orgSearchLookup.do?filterValue1='+ encodeURIComponent(orgName) + '||BK';
	}
	var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, 'CustomerSearch', windowStyle);
}

function customerAddressPopupSearch()
{
	removeOneTimeCustomerPopUps();
	orgCaller = 'dataAdmin';
	var actionUrl = _context + '/cas/addRoleBKLookup.do?filterValue1='
			+ $('#replaceOrganizationId').val();
	var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, 'AddressSearch', windowStyle);
}

function clearOneTimeCustomerForm()
{
	removeOneTimeCustomerPopUps();
	$("#onetimecustomer").clearForm();
	clearHiddenFields();
	//$('input[name="dataAdminCode"]').attr("disabled", true);
	$('#existingOrganization').attr("disabled", true);
	$('#existingAddressLine1').attr("disabled", true);
	//$('#otCommunicationMethodCode').attr("checked", true);
	$('#oneTimeCustMsgDiv').html('');
	isCustomerOverridden = false;
	//savedCommMethodValue = "";
}

function clearHiddenFields()
{
	$('#customerId').val('');
	$('#custContactId').val('');
	$('#custAddressRoleId').val('');
	$('#addressId').val('');
	$('#customerAbbr').val('');
	$('#replaceOrganizationId').val("");
	$('#replaceAddressRoleId').val("");
	$('#bkngNo').val("");
	$('#bookingCommentId').val("");
	$('#customerGroup').val("");
}

function validateDataAdmin()
{
	var isValid = true;
	
        if($("#dataAdminCode:checked").val()==undefined)
	{
		isValid = false;
		$("#dataAdminCode").validationEngine('showPrompt', 'Please select a Data Admin Mode.', 'error', true);
	}
	else if($("#dataAdminCode:checked").val()=="A")
	{
		if($('#customerName').val()=='')
		{
			isValid = false;
			$("#customerName").validationEngine('showPrompt', '* This field is required', 'error', 'topRight', true);
		}
		else
		{
			var regexp = '^[0-9a-zA-Z\ \'\&\(\)\.\/#-]+$';
			var re = new RegExp(regexp);
			if(!re.test($("#customerName").val()))
			{
				isValid = false;
				$("#customerName").validationEngine('showPrompt', '* No special characters allowed', 'error', 'topRight', true);
			}
		}
	}
	else if($("#dataAdminCode:checked").val()=="B")
	{
		if($("#replaceOrganizationId").val()=="")
		{
			isValid = false;
			$("#existingOrganization").validationEngine('showPrompt', 'Please select an existing Organization', 'error', true);
		}
		else if(!$("#dataAdminNewAddress").validationEngine('validate'))
			isValid = false;
	}
	else if($("#dataAdminCode:checked").val()=="C")
	{
		if($("#replaceOrganizationId").val()=="")
		{
			isValid = false;
			$("#existingOrganization").validationEngine('showPrompt', 'Please select an existing Organization', 'error', true);
		}
		if($("#replaceAddressRoleId").val()=="")
		{
			isValid = false;
			$("#existingAddressLine1").validationEngine('showPrompt', 'Please select an existing Address', 'error', true);
		}
		else if(!$("#dataAdminNewAddress").validationEngine('validate'))
			isValid = false;
	} 
        
        if($('#oneTimerTradeCodes') == null || $('#oneTimerTradeCodes').val() == "")
        {       
                isValid = false;
                $("#oneTimerTradeCodes").validationEngine('showPrompt', 'Please provide Trade Codes', 'error', true);
        }    
	
	return isValid;
}

function enableAddressSearch(radioObj)
{
	removeOneTimeCustomerPopUps();
	if($(radioObj).val()=="A")
	{
		$('#existingOrganization').val("");
		$('#existingOrganization').attr("disabled", true);
		$('#existingAddressLine1').val("");
		$('#existingAddressLine1').attr("disabled", true);
		/*if($('#customerName').val()=='')
		{
			alert("Please select a new or existing one time organization first");
			$(radioObj).attr("checked", false);
		}*/
	}
	else if($(radioObj).val()=="B")
	{
		$('#existingOrganization').attr("disabled", false);
		$('#existingAddressLine1').val("");
		$('#existingAddressLine1').attr("disabled", true);
		/*if($('#customerId').val()=='')
		{
			alert("Please select existing one time organization first");
			$(radioObj).attr("checked", false);
		}*/
	}
	else if($(radioObj).val()=="C")
	{
		/*if($('#customerId').val()=='')
		{
			alert("Please select existing one time organization first");
			$(radioObj).attr("checked", false);
		}
		else
		{*/
			$('#existingOrganization').attr("disabled", false);
			$('#existingAddressLine1').attr("disabled", false);
		/*}*/
	}
}

function changeShipperConsigneeColor(field, marker)
{
	var fieldArr = ['organizationName'/*, 'address', 'city', 'state', 'zip', 'contactId', 'contact',
	                'contactPhoneCountryCode', 'contactPhoneAreaCode', 'contactPhoneExchange', 'contactPhoneStation',
	                'contactCellCountryCode', 'contactCellAreaCode', 'contactCellExchange', 'contactCellStation',
	                'contactFaxCountryCode', 'contactFaxAreaCode', 'contactFaxExchange', 'contactFaxStation',
	                'contactEmailAddress'*/];
	
	for(var i=0;i<fieldArr.length;i++)
	{
		if(marker=='Y')
			$('input[name="'+field+'\\.'+fieldArr[i]+'"]').css('backgroundColor', "#ffffcc");
		else
			$('input[name="'+field+'\\.'+fieldArr[i]+'"]').css('backgroundColor', "#cfe2f3");
	}
}

function processShipperConsigneeColor(field)
{
	if($('input[name="'+field+'\\.isOneTimeCustomer"]').val()=="true"
		|| $('input[name="'+field+'\\.isOneTimeCustomer"]').val()==true)
	{
		/*Booking Security*/
		if(isShipperConsgineeModifiable){
			changeShipperConsigneeColor(field, "Y");
		}
		$('input[name="'+field+'\\.address"]').attr("readonly",true);
	}
	else
	{
		changeShipperConsigneeColor(field, "N");
		/*Booking Security*/
		if(isShipperConsgineeModifiable){
			$('input[name="'+field+'\\.address"]').attr("readonly",false);
		}
	}
}

//Use only for fields which are mandatory, otherwise for trimming use class trimmedField
function trimValue(field, rules, i, options)
{
	if(field.val()!='')
	{
		field.val($.trim(field.val()));
		var value  = field.val();
		if(value=='')
			return "* This field is required";
		//D025864
		/*else if(value.length < 5)
		{
			return "*  Invalid City";
		}*/
	}
}

function bindTabEvents()
{
	
	$('#searchOneTimer').live('keydown', function(evt){
		 var theEvent = evt || window.event;
		  var key = theEvent.keyCode || theEvent.which;
		  if(key == '9'){
			  $('#addressLine1').focus();
			  return false;
		  }
		 return true;
	});
	/*$('#oneTimeContactPhoneStation').live('keydown', function(evt){
		 var theEvent = evt || window.event;
		  var key = theEvent.keyCode || theEvent.which;
		  if(key == '9'){
			  $('#oneTimeContactCellCountryCode').focus();
			  return false;
		  }
		 return true;
	});
	$('#oneTimeContactCellStation').live('keydown', function(evt){
		 var theEvent = evt || window.event;
		  var key = theEvent.keyCode || theEvent.which;
		  if(key == '9'){
			  $('#oneTimeContactFaxCountryCode').focus();
			  return false;
		  }
		 return true;
	});
	$('#oneTimeContactFaxStation').live('keydown', function(evt){
		 var theEvent = evt || window.event;
		  var key = theEvent.keyCode || theEvent.which;
		  if(key == '9'){
			  $('#oneTimeContactEmailAddress').focus();
			  return false;
		  }
		 return true;
	});*/
	
	//code to tab out in Phone fields
	var chkPhoneCountry =true;
	var chkPhoneArea = true;
	var chkPhoneExchange = true;
	
	$('#oneTimeContactPhoneCountryCode').click(function() {
	     removeErrorPointers();
		});
	$('#oneTimeContactPhoneAreaCode').click(function() {
   	     removeErrorPointers();
   		});
	$('#oneTimeContactPhoneExchange').click(function() {
   	     removeErrorPointers();
   		});
	$("#oneTimeContactPhoneCountryCode").keydown(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if(chkPhoneCountry){
	    	 this.select();
	    	 chkPhoneCountry = false;
	     }
		});
	
	$("#oneTimeContactPhoneCountryCode").keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if($('#oneTimeContactPhoneCountryCode').val()=='1' || 
	    	$('#oneTimeContactPhoneCountryCode').val()=='01' ||  
	    	$('#oneTimeContactPhoneCountryCode').val().length == 3){
		    	//$('#IN_VOY').focus();
		    	$('#oneTimeContactPhoneAreaCode').select();
		    	chkPhoneCountry =true;
	     }
		}); 
	$("#oneTimeContactPhoneAreaCode").focus(function(evt) {
		chkPhoneArea = true;
	});
	
	$("#oneTimeContactPhoneAreaCode").keydown(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if(chkPhoneArea){
	    	 this.select();
	    	 chkPhoneArea = false;
	    	 $("#oneTimeContactPhoneAreaCode").val('');
	     }
		});
	
	$("#oneTimeContactPhoneAreaCode").keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	  	if(chkPhoneArea){
	    	 this.select();
	    	 chkPhoneArea = false;
	    	 $("#oneTimeContactPhoneAreaCode").val('');
	     }
	     if(($('#oneTimeContactPhoneAreaCode').val().length == 3 && isAmerican('oneTimeContactPhoneCountryCode')) || 
	    		 $('#oneTimeContactPhoneAreaCode').val().length == 4){
		    	//$('#IN_VOY').focus();
		    	$('#oneTimeContactPhoneExchange').select();
		    	//chkvoy = true;
	     }
		}); 
	
	$("#oneTimeContactPhoneExchange").focus(function(evt) {
		chkPhoneExchange = true;
	});
	
	$("#oneTimeContactPhoneExchange").keydown(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if(chkPhoneExchange){
	    	 this.select();
	    	 chkPhoneExchange = false;
	    	 $("#oneTimeContactPhoneExchange").val('');
	     }
		});
	
	$("#oneTimeContactPhoneExchange").keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	  	if(chkPhoneExchange){
	    	 this.select();
	    	 chkPhoneExchange = false;
	    	 $("#oneTimeContactPhoneExchange").val('');
	     }
	     if(($('#oneTimeContactPhoneExchange').val().length == 3 && isAmerican('oneTimeContactPhoneCountryCode')) || 
	    		 $('#oneTimeContactPhoneExchange').val().length == 4){
		    	//$('#IN_VOY').focus();
		    	$('#oneTimeContactPhoneStation').select();
		    	//chkvoy = true;
	     }
		}); 

	$("#oneTimeContactPhoneStation").keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if($('#oneTimeContactPhoneStation').val().length == 4){
		    	//$('#IN_VOY').focus();
		    	$('#oneTimeContactCellCountryCode').focus();
		    	//chkvessel =true;
	     }
		}); 
	
	//code to tab out in Cell fields
	var chkCellCountry =true;
	var chkCellArea = true;
	var chkCellExchange = true;
	
	$('#oneTimeContactCellCountryCode').click(function() {
	     removeErrorPointers();
		});
	$('#oneTimeContactCellAreaCode').click(function() {
   	     removeErrorPointers();
   		});
	$('#oneTimeContactCellExchange').click(function() {
   	     removeErrorPointers();
   		});
	$("#oneTimeContactCellCountryCode").keydown(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if(chkCellCountry){
	    	 this.select();
	    	 chkCellCountry = false;
	     }
		});
	
	$("#oneTimeContactCellCountryCode").keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if($('#oneTimeContactCellCountryCode').val()=='1' || 
	    	$('#oneTimeContactCellCountryCode').val()=='01' ||  
	    	$('#oneTimeContactCellCountryCode').val().length == 3){
		    	//$('#IN_VOY').focus();
		    	$('#oneTimeContactCellAreaCode').select();
		    	chkCellCountry =true;
	     }
		}); 
	$("#oneTimeContactCellAreaCode").focus(function(evt) {
		chkCellArea = true;
	});
	
	$("#oneTimeContactCellAreaCode").keydown(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if(chkCellArea){
	    	 this.select();
	    	 chkCellArea = false;
	    	 $("#oneTimeContactCellAreaCode").val('');
	     }
		});
	
	$("#oneTimeContactCellAreaCode").keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	  	if(chkCellArea){
	    	 this.select();
	    	 chkCellArea = false;
	    	 $("#oneTimeContactCellAreaCode").val('');
	     }
	     if(($('#oneTimeContactCellAreaCode').val().length == 3 && isAmerican('oneTimeContactCellCountryCode')) || 
	    		 $('#oneTimeContactCellAreaCode').val().length == 4){
		    	//$('#IN_VOY').focus();
		    	$('#oneTimeContactCellExchange').select();
		    	//chkvoy = true;
	     }
		}); 
	
	$("#oneTimeContactCellExchange").focus(function(evt) {
		chkCellExchange = true;
	});
	
	$("#oneTimeContactCellExchange").keydown(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if(chkCellExchange){
	    	 this.select();
	    	 chkCellExchange = false;
	    	 $("#oneTimeContactCellExchange").val('');
	     }
		});
	
	$("#oneTimeContactCellExchange").keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	  	if(chkCellExchange){
	    	 this.select();
	    	 chkCellExchange = false;
	    	 $("#oneTimeContactCellExchange").val('');
	     }
	     if(($('#oneTimeContactCellExchange').val().length == 3 && isAmerican('oneTimeContactCellCountryCode')) || 
	    		 $('#oneTimeContactCellExchange').val().length == 4 ){
		    	//$('#IN_VOY').focus();
		    	$('#oneTimeContactCellStation').select();
		    	//chkvoy = true;
	     }
		}); 
	
	
	$("#oneTimeContactCellStation").keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if($('#oneTimeContactCellStation').val().length == 4){
		    	//$('#IN_VOY').focus();
		    	$('#oneTimeContactFaxCountryCode').focus();
		    	//chkvessel =true;
	     }
		}); 
	
	//code to tab out in Cell fields
	var chkFaxCountry =true;
	var chkFaxArea = true;
	var chkFaxExchange = true;
	
	$('#oneTimeContactFaxCountryCode').click(function() {
	     removeErrorPointers();
		});
	$('#oneTimeContactFaxAreaCode').click(function() {
   	     removeErrorPointers();
   		});
	$('#oneTimeContactFaxExchange').click(function() {
   	     removeErrorPointers();
   		});
	$("#oneTimeContactFaxCountryCode").keydown(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if(chkFaxCountry){
	    	 this.select();
	    	 chkFaxCountry = false;
	     }
		});
	
	$("#oneTimeContactFaxCountryCode").keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if($('#oneTimeContactFaxCountryCode').val()=='1' || 
	 	    $('#oneTimeContactFaxCountryCode').val()=='01' ||  
	 	    $('#oneTimeContactFaxCountryCode').val().length == 3){
		    	//$('#IN_VOY').focus();
		    	$('#oneTimeContactFaxAreaCode').select();
		    	chkFaxCountry =true;
	     }
		}); 
	$("#oneTimeContactFaxAreaCode").focus(function(evt) {
		chkFaxArea = true;
	});
	
	$("#oneTimeContactFaxAreaCode").keydown(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if(chkFaxArea){
	    	 this.select();
	    	 chkFaxArea = false;
	    	 $("#oneTimeContactFaxAreaCode").val('');
	     }
		});
	
	$("#oneTimeContactFaxAreaCode").keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	  	if(chkFaxArea){
	    	 this.select();
	    	 chkFaxArea = false;
	    	 $("#oneTimeContactFaxAreaCode").val('');
	     }
	     if(($('#oneTimeContactFaxAreaCode').val().length == 3 && isAmerican('oneTimeContactFaxCountryCode')) || 
	    		 $('#oneTimeContactFaxAreaCode').val().length == 4){
		    	//$('#IN_VOY').focus();
		    	$('#oneTimeContactFaxExchange').select();
		    	//chkvoy = true;
	     }
		}); 
	
	$("#oneTimeContactFaxExchange").focus(function(evt) {
		chkFaxExchange = true;
	});
	
	$("#oneTimeContactFaxExchange").keydown(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if(chkFaxExchange){
	    	 this.select();
	    	 chkFaxExchange = false;
	    	 $("#oneTimeContactFaxExchange").val('');
	     }
		});
	
	$("#oneTimeContactFaxExchange").keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	  	if(chkFaxExchange){
	    	 this.select();
	    	 chkFaxExchange = false;
	    	 $("#oneTimeContactFaxExchange").val('');
	     }
	     if(($('#oneTimeContactFaxExchange').val().length == 3 && isAmerican('oneTimeContactFaxCountryCode')) || 
	    		 $('#oneTimeContactFaxExchange').val().length == 4){
		    	//$('#IN_VOY').focus();
		    	$('#oneTimeContactFaxStation').select();
		    	//chkvoy = true;
	     }
		}); 
	
	
	$("#oneTimeContactFaxStation").keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if($('#oneTimeContactFaxStation').val().length == 4){
		    	//$('#IN_VOY').focus();
		    	$('#oneTimeContactEmailAddress').focus();
		    	//chkvessel =true;
	     }
		}); 
	
}

function isAmerican(id)
{
	var val = $('#'+id).val();
	if(val=='' || val=='1' || val=='01' || val=='001')
		return true;
	else
		return false;
}

function singleAddressOneTimerCall(){
	$.ajax({
		type : "POST",
		url : _context +"/cas/autocomplete.do?method=searchSingleAddressforBK&searchType=234&parentSearch="+encodeURIComponent($('#replaceOrganizationId').val()),
		
		success : function(responseText) {
			if(responseText.length == 1){
				var nameQualifier = responseText[0].nameQual;
				var city = responseText[0].city;
				var state = responseText[0].state;
				var finalAddress = formatAddRoleDscrForSC(nameQualifier, responseText[0].stAdd, city, state);
				$('#existingAddressLine1').val(finalAddress);
				$('#replaceAddressRoleId').val(responseText[0].addRole);
				
			} else {
				customerAddressPopupSearch();
			}
		}
	});
};var repeatCaller ="";
var repeatOrgName = "";
var repeatAddress = "";

$(function() {

	clearRepeatContactForm();
	
	repeatContactOrgPredictive();
	repeatContactAddressPredictive();

	$('#repeatContactOrgName').gatesPopUpSearch({
		func : function() {
			orgPopupSearch();
		}
	});

	$('#repeatContactOrgAddress').gatesPopUpSearch({
		func : function() {
			orgAddressPopupSearch();
		}
	});

	$('#repeatContactOrgName').change(function(){
		if($('#repeatContactOrgId').val()== null || $('#repeatContactOrgId').val()==""){
			$('#repeatContactOrgName').val(""); 
			$('#repeatContactAddressRoleId').val('');
			$('#repeatContactOrgAddress').val('');
			repeatContactAddressPredictive();
		}
		else if($('#repeatContactOrgName').val()!=repeatOrgName)
		{
			$('#repeatContactOrgName').val('');
			$('#repeatContactOrgId').val("");
			$('#repeatContactAddressRoleId').val('');
			$('#repeatContactOrgAddress').val('');
			repeatContactAddressPredictive();
		}
	});
	
	$('#repeatContactOrgAddress').change(function(){
		if($('#repeatContactAddressRoleId').val()== null 
				|| $('#repeatContactAddressRoleId').val()=="")
			$('#repeatContactOrgAddress').val(""); 
		else if($('#repeatContactOrgAddress').val()!=repeatAddress)
		{
			$('#repeatContactOrgAddress').val('');
			$('#repeatContactAddressRoleId').val('');
		}
	});

	$("#repeatContactOverlay").dialog({ 
		title: 'Repeat Contact', 
		autoOpen: false , 
		width: 470, 
		height: 550, 
		modal: true,
		open : function()
		{
			$('#repeatContactOrgName').attr('disabled', true);
			$('#repeatContactOrgAddress').attr('disabled', true);
			$('#popupSearchrepeatContactOrgName').hide();
			$('#popupSearchrepeatContactOrgAddress').hide();
			$('#repeatContactOrgYes').val("Y");
			$('#repeatContactYes').val("Y");
			$('#repeatContactOverlay').validationEngine('attach');
			$('#repeatContactOrgYes').focus();
		},
		close : function()
		{
			$('#repeatContactOverlay').validationEngine('hideAll');
			$('#repeatContactOverlay').validationEngine('detach');
			clearRepeatContactForm();
			if(repeatCaller=='shipper')
				$('#shipperRepeatContact').attr("checked", false);
			else if(repeatCaller=='consignee')
				$('#consigneeRepeatContact').attr("checked", false);
			else if(repeatCaller=='parties')
				$('#partiesRepeatContact').attr("checked", false);
		},
		buttons: {
		"Cancel": function(){
			$(this).dialog('close');
		},
        "Send to Data Admin": function() {
        	if($("#bookingStatusCode").val()=='CANC'){
        		$(this).dialog('close');
        		return;
        	}
			if($('#repeatContactOrgNo').attr('checked') && ($('#repeatContactOrgName').val()=='')){
				$('#repeatContactOrgName').validationEngine('showPrompt', 'Oranization name cannot be empty', 'error', 'topRight', true);
			}else if($('#repeatContactOrgNo').attr('checked') && $('#repeatContactOrgAddress').val()==''){
				$('#repeatContactOrgAddress').validationEngine('showPrompt', 'Oranization Address cannot be empty', 'error', 'topRight', true);}
			else if($('#repeatContactOrgNo').attr('checked') && $('#repeatContactAddressRoleId').val()==$('#repeatContactOriginalAroleId').val()){
				$('#repeatContactOrgAddress').validationEngine('showPrompt', 'Please select a different address role than original', 'error', 'topRight', true);
			}else if($('#repeatContactYes').attr('checked') && $('#repeatContactId').val()==''){
				$('#repeatContactId').validationEngine('showPrompt', 'Please select contact to replace', 'error', 'topRight', true);}
			else  if($('#repeatContactYes').attr('checked') && $('#repeatContactId option:selected').text()==$('#repeatContactNameLabel').html()){
				$('#repeatContactId').validationEngine('showPrompt', 'Please select different contact to replace existing contact', 'error', 'topRight', true); 
			}else{
				
				var queryString = $('#repeatcontact').formSerialize()+"&repeatContactNameLabel="+$('#repeatContactNameLabel').text()
				+"&repeatContactName="+$('#repeatContactId option:selected').text().split("-")[0].trim();
				blockUI();
				var found =document.querySelectorAll( ".ui-button" );
					found[9].setAttribute("disabled","disabled");
				$.ajax({
					url : _context +"/booking/repeatContact/sendMail",
					data: queryString ,
					success : function(responseText) {
						$.unblockUI();
						found[9].removeAttribute("disabled");
						if(responseText.success)
						{
							if(repeatCaller == 'parties')
								alert(responseText.messages.success[0]);
							else
								showResponseMessages("msgDiv", responseText);
							
							$("#repeatContactOverlay").dialog("close");
						}
						else
							//showResponseMessages("repeatCustMsgDiv", responseText);
							alert(responseText.messages.error[0]);
					}
				});
			}
		}
	}});
	
	//toggle radio
	$('#repeatContactOrgYes').click(function(){
		$('#repeatContactOrgNo').attr('checked', false);
		$('#repeatContactOrgName').val('');
		$('#repeatContactOrgAddress').val('');
		$('#repeatContactAddressRoleId').val('');
		$('#popupSearchrepeatContactOrgName').hide();
		$('#popupSearchrepeatContactOrgAddress').hide();
		$('#repeatContactOrgName').attr('disabled', true);
		$('#repeatContactOrgAddress').attr('disabled', true);
		$('#repeatContactOrgYes').val("Y");
	});

	//toggle radio
	$('#repeatContactOrgNo').click(function(){
		$('#repeatContactOrgYes').attr('checked', false);
		$('#popupSearchrepeatContactOrgName').show();
		$('#popupSearchrepeatContactOrgAddress').show();
		$('#repeatContactOrgName').attr('disabled', false);
		$('#repeatContactOrgAddress').attr('disabled', false);
		$('#repeatContactOrgNo').val("N");
	});

	//toggle radio
	$('#repeatContactYes').click(function(){
		$('#repeatContactNo').attr('checked', false);
		$("#repeatContactId").attr("disabled", false);
		$('#repeatContactYes').val("Y");
	});

	//toggle radio
	$('#repeatContactNo').click(function(){
		$('#repeatContactYes').attr('checked', false);
		$("#repeatContactId").attr("disabled", true);
		$('#repeatContactNo').val("N");
	});

});

function repeatContactOrgPredictive()
{
	/*var urlRepeatOrg = _context
	+ '/cas/autocomplete.do?method=searchOrg&searchType=229&parentSearch=BK';
	*/
	$('#repeatContactOrgName').gatesAutocomplete({
		//source : urlRepeatOrg,
		source:_context+'/cas/autocomplete.do',
		name: "Customer Name",
	 	extraParams: {
		 		 method: 'searchOrg',
		 		 searchType: '229',
		 		 parentSearch:  function() { return 'BK'; }
	 	},
		formatItem : function(data) {
			return data.name + "-" + data.abbr;
		},
		formatResult : function(data) {
			return data.name + "-" + data.abbr;//data.abbr + "-" + data.name;
		},
		select : function(data) {
			$('#repeatContactOrgName').val(data.name + "-" + data.abbr);
			$('#repeatContactOrgId').val(data.id);
			$("#repeatContactOrgAddress").val("");
			repeatOrgName = data.name + "-" + data.abbr;
			//repeatContactAddressPredictive();
			orgAddressPopupSearch();
		}
	});
}

function repeatContactAddressPredictive()
{
	$('#repeatContactOrgAddress').gatesAutocomplete({
		//source : urlRepeatAdd,
		source:_context+'/cas/autocomplete.do',
		name: "Customer Address",
	 	extraParams: {
		 		 method: 'searchAddRoleBK',
		 		 searchType: '234',
		 		 parentSearch:  function() { return $('#repeatContactOrgId').val(); }
	 	},
		formatItem : function(data) {
			var nameQualifier = data.nameQual;
			var city = data.city;
			var state = data.state;
			var zip = data.zip;
			var finalAddress = formatAddRoleDscrForSC(nameQualifier, data.stAdd, city, state, zip);
			return finalAddress;
		},
		formatResult : function(data) {
			var nameQualifier = data.nameQual;
			var city = data.city;
			var state = data.state;
			var zip = data.zip;
			var finalAddress = formatAddRoleDscrForSC(nameQualifier, data.stAdd, city, state, zip);
			return finalAddress;
		},
		select : function(data) {
			$("#repeatContactAddressRoleId").val(data.addRole);
			var nameQualifier = data.nameQual;
			var city = data.city;
			var state = data.state;
			var zip = data.zip;
			var finalAddress = formatAddRoleDscrForSC(nameQualifier, data.stAdd, city, state, zip);
			repeatAddress = finalAddress;
		}
	});
}

function orgPopupSearch() {
	orgCaller = 'repeat';
	
	var orgName = $('#repeatContactOrgName').val();
	var splitOrgName = "";
	var actionUrl = "";
	
	if (orgName.indexOf("-") > 0){
		splitOrgName = orgName.split("-");
		actionUrl = _context + '/cas/orgSearchLookup.do?filterValue1='+encodeURIComponent(splitOrgName[0])
		+'||BK|||'+encodeURIComponent(splitOrgName[1]);
	} else {
		actionUrl = _context + '/cas/orgSearchLookup.do?filterValue1=' + 
		encodeURIComponent(orgName) + '||BK';
	}
	
	var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, 'CustomerSearch', windowStyle);
}

function orgAddressPopupSearch() {
	orgCaller = 'repeat';
	
	if ($.trim($('#repeatContactOrgId').val())=='') { 
		alert("Please select organization first");
	}else {
		/*var filterVal2ForCAS = ""; 

		if(repeatCaller=='shipper')
			filterVal2ForCAS="02";
		else if(repeatCaller=='consignee')
			filterVal2ForCAS="03";*/

		var actionUrl = _context + '/cas/addRoleBKLookup.do?filterValue1='
				+ encodeURIComponent($('#repeatContactOrgId').val()) /*+ '&filterValue2='+filterVal2ForCAS*/;
		var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
		window.open(actionUrl, 'AddressSearch', windowStyle);
	}
}

function clearRepeatContactForm()
{
	$("#repeatcontact").clearForm();
	
	$("#repeatContactNameLabel").html('');
	
	$('#repeatContactOrgId').val('');
	$('#repeatContactAddressRoleId').val('');
	$('#originalOrgName').val('');
	$('#originalOrgAddress').val('');
	$('#repeatContactShipmentNo').val('');
	$('#repeatContactOriginalAroleId').val('');
	
	repeatOrgName = "";
	repeatAddress = "";
	
	$('#repeatContactOrgYes').attr('checked',true);
	$('#repeatContactOrgNo').attr('checked',false);

	$('#repeatContactOrgName').attr('disabled', true);
	$('#repeatContactOrgAddress').attr('disabled', true);
	$('#popupSearchrepeatContactOrgName').hide();
	$('#popupSearchrepeatContactOrgAddress').hide();
	$('#repeatContactOrgYes').val("Y");

	$('#repeatContactYes').attr('checked',true);
	$('#repeatContactNo').attr('checked',false);
	$('#repeatContactYes').val("Y");
};var debtorCode = "";
var isPartyChanged = "";
var toOrderParty = false;
var toOrderFound = false;
var toOrderPartyPopulated = false;

$(document).ready(
function() {
	
	debtorCode = $('#prepaidCollectCode :selected').val();
	
	$('#parties :input').change(function()
	{
		if(this.type!='checkbox')
			isPartyChanged = "Y";
	});
	//change 18644
	$('#isToOrderParty').change(function(){
		if($('#isToOrderParty').attr('checked')) {
			setPartiesHeader();
		} else {
			if(toOrderParty) {
				alert('To Order B/L Party must be deleted first');
				$('#isToOrderParty').attr('checked', true);
			} else {
				setPartiesHeader();
			}
			
			
		}
		
	});
	//autoBillOnchangeEventFunction();
	
	$('#isAutobill').change(function(){
		if($('#billExists').val() == 'Y'){
			if($('#isAutobill :selected').val()=="true")
				$('#isAutobill').val('false');
			else
				$('#isAutobill').val('true');
			$('#msgDiv').html('<div class="message_error">Autobill cannot be changed as Bill exists</div>');
			window.scrollTo(0, 0);
			triggerErrorMessageAlert();
		}
		else {
			if($('#isAutobill :selected').val()=="true"){
				//-------------BR1 nullified because of client comments---------------
				/*if($('#loadDschServiceGroupCode').val()=="CON"){
					$('#msgDiv').html('<div class="message_error">'+'Auto Bill cannot be true for the provided load and discharge service'+'</div>');
					window.scrollTo(0, 0);
					$('#isAutobill').val(false);
				}
				//Nullified due to defect id D020081
				else if($('#totalCommodityLines').text()!='' && $('#totalCommodityLines').text()=='1'){
					if($.trim($("#tariff").val())=='' || $.trim($("#tariffCommodityDescription").val())=='' || $.trim($("#tariffItemNumber").val())=='' || $.trim($("#commodityCode").val())==''){
						$('#msgDiv').html('<div class="message_error">Tariff, Tariff Commodity Description, Item and Commodity Code are mandatory for commodity if Auto Bill indicator is Yes</div>');
						window.scrollTo(0, 0);
						$('#isAutobill').val(false);
					}
					else{
						$('#msgDiv').html("");
						setMandatoryTariffCmdDesc();
						autoBillOnchangeEventFunction();
					}
				}
				// Changed due to defect id D020446
				else */if($('#bookingTypeCode').val()=='B' /*&& $.trim($('#quoteVNConcat').val())=='' */
					&& $('#totalCommodityLines').text()!='' && $('#totalCommodityLines').text()>1){
						$('#msgDiv').html('<div class="message_error">'+'Cannot update Auto Bill Indicator as multiple commodity lines exist'+'</div>');
						window.scrollTo(0, 0);
						$('#isAutobill').val(false);
						triggerErrorMessageAlert();
				}
				// Changed due to defect id D020873
				else if($('#shipmentNumber').val() != '' && $('#bookingTypeCode').val()=='B' && 
						($.trim($('#quoteVNConcat').val())=='' || ($.trim($('#quoteVNConcat').val())!='' &&  
								$("#isConstructedQuote").val()!='Y'))){
					setMandatoryTariffCmdDesc();
					autoBillOnchangeEventFunction();
					$('#msgDiv').html('');
				}
				else{
					autoBillOnchangeEventFunction();
					$('#msgDiv').html('');
				}
			}
			else{
				resetMandatoryTariffCmdDesc();
				autoBillOnchangeEventFunction();
				$('#msgDiv').html('');
			}
			//autoBillOnchangeEventFunction();
		}
		//change 18644
		setPartiesHeader();
	});
	
	//--------------changed after discussion with nitin----------------
	/*$('#autobillOptionCode').change(function()
	{
		if($('#autobillOptionCode :selected').val()=='C')
			$('#autobillTriggerCode').val('I');
	});*/
	
	$('#autobillTriggerCode').change(function()
	{
		if($('#autobillTriggerCode :selected').val()=='I')
			$('#autobillOptionCode').val('C');
	});

	// create parties dialog at body onload
	$("#partiesDialog").dialog({
		autoOpen : false,
		width : 587,
		modal : true,
		close : function() {
			
			removePartiesPopUps();
			clearPartiesForm();
			$("#parties").validationEngine('detach');
			partyOrg = "";
			partyAddr = "";
			tabSequence('#',true,false);
		},
		open: function()
		{
			tabSequence('#partiesDialog',false,false);
			$("#parties").validationEngine('attach');
			$("#parties").validationEngine('attach');
			isPartyChanged = "";
		}
	});
	
	// create parties override dialog at body onload
	$("#partiesOverrideDialog").dialog({
		autoOpen : false,
		/*open: function()
		{
			var length = $('.ui-widget-overlay').length - 1;
			$('.ui-widget-overlay').css("background", "transparent");
		},
		close: function()
		{
			var length = $('.ui-widget-overlay').length - 1;
			$('.ui-widget-overlay').css("background", "");
		},*/
		width : 300,
		modal : true
	});
	
	$("#partiesSaveDialog").dialog({
		autoOpen : false,
		/*open: function()
		{
			var length = $('.ui-widget-overlay').length - 1;
			$('.ui-widget-overlay').css("background", "transparent");
		},
		close: function()
		{
			var length = $('.ui-widget-overlay').length - 1;
			$('.ui-widget-overlay').css("background", "");
		},*/
		width : 300,
		modal : true
	});
	//
	$('#partiesAdd').click(function() {
		/*Booking Security*/
		if(isPartiesDisplayOnly && isPartiesModifiable){
			if($('#bookingStatusCode :selected').val()!='CANC'){
				showAddPartyDialog();
			}
		}
		return false;
	});
	
	$('#partiesClear').click(function() {
		clearPartiesForm();
	});
	
	$('#prepaidCollectCode').change(function() {
				var defaultDebtor = $('#prepaidCollectCode :selected').val();
				
				if (defaultDebtor == "P"
					&& ( $('input[name="shipper\\.organizationId"]').val() == '' || 
						 $('input[name="shipper\\.addressRoleId"]').val()=='') ) {
					$('#msgDiv').html('<div class="message_error">Shipper must be specified for Prepaid payment</div>');
					window.scrollTo(0, 0);
					$('#prepaidCollectCode').val(debtorCode);
					triggerErrorMessageAlert();
					return;
				} else if (defaultDebtor == "C"
					&& ( $('input[name="consignee\\.organizationId"]').val() == '' ||
						 $('input[name="consignee\\.addressRoleId"]').val()== '') ) {
					$('#msgDiv').html('<div class="message_error">Consignee must be specified for Collect payment</div>');
					window.scrollTo(0, 0);
					$('#prepaidCollectCode').val(debtorCode);
					triggerErrorMessageAlert();
					return;
				} else if (defaultDebtor == "B"
					&& ( $('input[name="shipper\\.organizationId"]').val() == '' || 
						 $('input[name="consignee\\.organizationId"]').val() == '' || 
						 $('input[name="shipper\\.addressRoleId"]').val()=='' ||
						 $('input[name="consignee\\.addressRoleId"]').val()== '') ) {
					$('#msgDiv').html('<div class="message_error">Shipper and Consignee must be specified for Both payment</div>');
					window.scrollTo(0, 0);
					$('#prepaidCollectCode').val(debtorCode);
					triggerErrorMessageAlert();
					return;
				}
				
				var queryString = $('#bookingForm').formSerialize();
				$.ajax({
						url : _context +"/booking/party/defaultDebtors",
						type : "POST",
						data : queryString,
						success : function(responseText) {
							showResponseMessages('msgDiv', responseText);	
							$("#gridIdForParties").trigger("reloadGrid");
						}
				});
				
				debtorCode = defaultDebtor;
				setPartiesHeader();
			});
	
			/*Booking Security*/
			var hideDelbutton = true;
			if(isPartiesDisplayOnly && !isPartiesModifiable){
				hideDelbutton = false;
			}

			// party grid config
			var colNames = [ 'Id', 'Type', '', 'One Time Customer','Organization Name', 
			                 'Address', 'City', 'State', 'Zip','Country', 'Name Qualifier', 
			                 'Override', 'Cash', 'Customized', '' ];
			var colModel = [ {
				name : 'partySeqNo',
				index : 'partySeqNo',
				hidden : true
			}, {
				name : 'partyTypeDescription',
				index : 'partyTypeDescription',
				width : 200,
				formatter : 'showlink',
				formatoptions : {
					baseLinkUrl : "javascript:",
					showAction : "showEditPartyDialog('",
					addParam : "');"
				}
			}, {
				name : 'totalDeliveryParty',
				index : 'totalDeliveryParty',
				hidden : true
			},{
				name : 'isOneTimeCustomer',
				index : 'isOneTimeCustomer',
				width : 100,
				formatter : 'oneTimeViewFormatter'
			}, {
				name : 'organizationName',
				index : 'organizationName',
				width : 300
			}, {
				name : 'address',
				index : 'address',
				width : 350,
				formatter : 'addressFormatter'
			}, {
				name : 'city',
				index : 'city',
				hidden : true
			}, {
				name : 'state',
				index : 'state',
				hidden : true
			}, {
				name : 'zip',
				index : 'zip',
				hidden : true
			},{
				name : 'countryName',
				index : 'countryName',
				width : 80
			},
			{
				name : 'nameQualifier',
				index : 'nameQualifier',
				hidden : true
			}, {
				name : 'isCpPartyOverridden',
				index : 'isCpPartyOverridden',
				align : 'center',
				width : 100,
				formatter : 'overrideViewFormatter'
			}, {
				name : 'orgCreditStatus',
				index : 'orgCreditStatus',
				width : 100
			}, {
				name : 'partyAddressCustomized',
				index : 'partyAddressCustomized',
				hidden : true
			}, {
				name : 'actions',
				index : 'actions',
				width : 80,
				formatter : 'actions',
				formatoptions : {
					keys : true,
					editbutton : false,
					delbutton : hideDelbutton
					/*delOptions : {
						delData : {
							debtor : defaultDebtor
						}
					}*/
				}
			} ];
			
			jQuery.extend($.fn.fmatter,
					{
						overrideViewFormatter : function(cellvalue,
								options, rowdata) {
							if (cellvalue == true
									|| cellvalue == 'true')
								return "Yes";
							/*else if (rowdata.partyTypeDescription!='Also Notify Party'
								&& rowdata.partyTypeDescription!='To Order B/L Party' &&
									(cellvalue == false
									|| cellvalue == 'false'))
								return "No";*/
							else
								return "";
						},
						
						oneTimeViewFormatter : function(cellvalue,
								options, rowdata) {
							if (cellvalue == true
									|| cellvalue == 'true')
								return "Yes";
							else if (cellvalue == false
									|| cellvalue == 'false')
								return "No";
							else
								return "";
						},
						
						addressFormatter : function(cellvalue,
								options, rowdata) {
							
							var finalAddress = cellvalue + " - " + rowdata.city;
							
							if (rowdata.state != null && rowdata.state != "" && rowdata.state!='null') {
								finalAddress = finalAddress + ", " + rowdata.state;
							}
							if(rowdata.zip!= null && rowdata.zip !='' && rowdata.zip!='null')
								finalAddress = finalAddress + " - " + rowdata.zip;
							
							return finalAddress;
						}
					});

			var jsonReaderParties = {
				root : "rows",
				page : "page",
				total : "total",
				records : "records",
				cell : "cell",
				repeatitems : false,
				id : "partySeqNo"
			};
			
			var partiesDelData = { 
					shipperArolId : function() { return $('input[name="shipper\\.addressRoleId"]').val(); },
					consigneeArolId : function() { return $('input[name="consignee\\.addressRoleId"]').val(); },
					tradeCode : function() { return $('#tradeCode :selected').val(); }
			};
			
			/*Booking Security*/
			if(isPartiesDisplayOnly || isPartiesModifiable){
				createGrid("gridIdForParties", // grid id for party
				"pagerIdForParties", // page id for party
				_context+'/booking/party/load', // geturl
				'', // addurl
				'', // edit url
				_context+'/booking/party/deleteParty',
				_context+'/booking/party/deleteParty',// delete selected URL
				colNames, colModel, "Parties",// caption
				112,// height //113 for new Font
				4,// row num
				[ 4, 8, 12 ],// row list
				true,// multiselect
				true,// multidelete
				false,// load once
				false, // read only grid
				jsonReaderParties, // json reader
				true, // hide edit
				false, // hide delete
				true, // autowidth
				true, // rownumbers
				true, // hide custom add row
				false,// hide pager row
				null,// custom edit method
				partiesGridComplete,// custom grid complete
				partiesLoadComplete,// custom load complete
				false,// default hidden
				true,// row Color Based On status
				false,// celledit
				partiesAfterSubmit,
				false, // isSearch
				partiesDelData//delExtraParam
				);
				
				$("#gridIdForParties").jqGrid('setGridParam',{
					beforeSelectRow: function(rowId, e) {
						 var rowData = jQuery("#gridIdForParties").getRowData(rowId);
						 if((rowData.partyTypeDescription=='Prepaid Bill To Party' || rowData.partyTypeDescription=='Collect Bill To Party') 
							 && (rowData.isCpPartyOverridden==false|| rowData.isCpPartyOverridden=='false' || 
									 rowData.isCpPartyOverridden=='')) {
							 return false;
						 }
						 else
							 return true;
					 }
				});
				
				//D032363 - start
				
				// Autocompleter and lookup for PCC codes
				$('#primaryCarrierCode').gatesAutocomplete({
					source : _context + '/tm/Autocomplete/autoPccCodesPredictive',
					name: "Primary Carrier Code",
					autoSelectWhenSingle:true,
					autoSelectFirst:true,
						autoSelectCriteria:function(item) {
						   if(item != null){
						     return 'true';
						  }
						  else {
						     return 'false';
						  }
						},
					formatItem : function(item) {
						return item.pccCode;	
						
					},
					formatResult: function(item) {
						return item.pccCode;	
													
					},
					select : function(item) {
												
						$('#primaryCarrierCode').val(item.pccCode);
						isBookingChanged = "Y";
						
					}
				});
				
				//D032363 - end
		}
});


//--------Supporting Functions-----------------

var partiesLoadComplete = function()
{
	//Hides add Row
	 $("#tr_partySeqNo", "#gbox_gridIdForParties").hide();
	 
	//Clears and hides error row
	$('table[aria-labelledby="gbox_gridIdForParties"] thead tr[id="FormError"] td').html("");
	$('table[aria-labelledby="gbox_gridIdForParties"] thead tr[id="FormError"]').hide();
};

var partiesGridComplete = function()
{
	 
	 $('#pagerIdForParties .ui-pg-input').attr("readonly", true);
	 
	 var rowIDs = jQuery("#gridIdForParties").getDataIDs();
	 toOrderFound = false;
	 /*var isPrepaidDebtorCash = false;
	 var isCollectDebtorCash = false;*/
	 for (var i=0;i<rowIDs.length;i=i+1)
     { 
	   var id = $('#gridIdForParties').getCell(rowIDs[i], 'partySeqNo');
       var rowData=jQuery("#gridIdForParties").getRowData(rowIDs[i]);
       if (((rowData.partyTypeDescription=='Prepaid Bill To Party' || rowData.partyTypeDescription=='Collect Bill To Party') && 
    		   (rowData.isCpPartyOverridden == false || rowData.isCpPartyOverridden == 'false' || rowData.isCpPartyOverridden == '')) 
	    	  || $("#bookingStatusCode :selected").val()=='CANC' || !isPartiesModifiable) 
       {
    	   $(".ui-inline-del", "#gbox_gridIdForParties #"+rowIDs[i]).hide();
    	   $('#jqg_gridIdForParties_'+id).attr("checked",false);
    	   $('#jqg_gridIdForParties_'+id).hide();
    	   $('table[aria-labelledby="gbox_gridIdForParties"] tbody tr#' + rowIDs[i]).removeClass('ui-state-highlight');
       }
       if(rowData.partyAddressCustomized == 'true' || rowData.partyAddressCustomized == true) { 
    	   $('#gridIdForParties').jqGrid('setCell', i+1, 'organizationName','','',{style: 'color : green'},'');
       } else {
    	   $('#gridIdForParties').jqGrid('setCell', i+1, 'organizationName','','',{style: 'color : black'},'');
       }
       
    // debtor one timer ...change background to yellow
       if (rowData.isOneTimeCustomer=='Yes') {
    	   $('#gridIdForParties').jqGrid('setRowData',rowIDs[i],false, {background:'#ffffcc'});
       }      
       
       
       //18644
       if(rowData.orgCreditStatus== 'CASH')
	   {
	   $('#gridIdForParties').jqGrid('setCell', id, 'orgCreditStatus','','',{style: 'color : red'},'');
	   }else {
    	   $('#gridIdForParties').jqGrid('setCell', id, 'orgCreditStatus','','',{style: 'color : black'},'');
       }
       
      
     }
	
	// D026350 
	// I don't understand the delete API so I am using this.
	// Global variable if the toOrder party was ever seen:  toOrderParty
	// Local variable if it is still there now toOrderFound.
	//  if(toOrderParty && !toOrderFound) then it was just removed so uncheck the box
	// Otherwise it is checked without the party so leave it. 
	// D025889
	var userData = $("#gridIdForParties").getGridParam('userData');
		
	if(userData && userData.TOORDERFLAG) { 
	   $('#isToOrderParty').attr("checked",true);
  	   toOrderParty = true;
  	   toOrderFound = true;
	}
	 
	if(toOrderParty && !toOrderFound)  {
		// D026350 reeval, don't uncheck to order on removal.
		// Not sure all these flag make sense without this rule but should work.
		//console.log('to order party removed');
		//$('#isToOrderParty').attr("checked",false);
		toOrderParty = false;
	}
	 
	if($("#bookingStatusCode :selected").val()=='CANC' || !isPartiesModifiable)
	{
		$("#gbox_gridIdForParties .cbox").attr("disabled", true);
	}
	else
	{
		$('#jqgh_gridIdForParties_cb').html('<input type="checkbox" id="multiselect_gridIdForParties" />');
		$("#multiselect_gridIdForParties").click(function(){
			$("#gridIdForParties").resetSelection();
			
			if($("#multiselect_gridIdForParties").attr("checked")=="checked")
			{
				  var rowIDs = jQuery("#gridIdForParties").getDataIDs(); 
			      for (var i=0;i<rowIDs.length;i=i+1)
			      { 
			    	  var id = $('#gridIdForParties').getCell(rowIDs[i], 'partySeqNo');
			    	  var rowData=jQuery("#gridIdForParties").getRowData(rowIDs[i]);
			    	  /*if(rowData.partyTypeDescription=='Prepaid Bill To Party' ||   
			    			rowData.partyTypeDescription=='Collect Bill To Party')
			    	  {*/
			    	  if(((rowData.partyTypeDescription=='Prepaid Bill To Party' || rowData.partyTypeDescription=='Collect Bill To Party') && 
			    			  (rowData.isCpPartyOverridden==false || rowData.isCpPartyOverridden == 'false' || rowData.isCpPartyOverridden == '')) 
				    	  || $("#bookingStatusCode :selected").val()=='CANC' || !isPartiesModifiable) 
			    	  {
			    		  $('#jqg_gridIdForParties_'+id).attr("checked",false);
			    	  }
			    	  else
			    	  {
			    		  $('#jqg_gridIdForParties_'+id).attr("checked",true);
		 		    	  $('#gridIdForParties').setSelection(rowIDs[i], true);
			    	  }
			      }
			}
			return true;
		});
	}
	//18644
	setPartiesHeader();
	
};

var partiesAfterSubmit = function(result)
{
	if(result.success)
		isBookingChanged = "Y";
};

// clears the parties form
function clearPartiesForm() {
	removePartiesPopUps();
	$("#parties").clearForm();
	$('input[name="partySeqNo"]').val('');
	$('input[name="organizationId"]').val('');
	$('input[name="organizationCode"]').val('');
	$('input[name="isOneTimeCustomer"]').val('');
	$('input[name="addressRoleId"]').val('');
	$('select[name="partyTypeCode"]').children().remove();
	$('select[name="partyTypeCode"]').append(
			"<option value=''></option>");
	$('select[name="contactId"]').children().remove();
	$('select[name="contactId"]').append(
			"<option value=''>Select</option>");
	$('#partyComm1').attr("checked", false);
	$('#partyComm2').attr("checked", false);
	$('#partyComm3').attr("checked", false);
	$('#partyComm4').attr("checked", false);
	
	$('#partiesMsgDiv').html('');
}

function showAddPartyDialog() {
	//Cleared city/state/zip for defect D031124
	$('input[name="city"]').val('');
	$('input[name="state"]').val('');
	$('input[name="zip"]').val('');
	urlString = "/booking/party/showFormAdd";
	if($('#isTemplate').val() == 'true'){
		urlString = urlString + "?isTemplate="+ $('#isTemplate').val();
	}
	$.ajax({
		url : _context + urlString ,
		success : function(responseText) {
			clearPartiesForm();
			$.each(responseText.partyTypeList, function(key, value) {
				$('select[name="partyTypeCode"]').append($("<option/>", {
					value : key,
					text : value
				}));
			});
			$("#partiesDialog").dialog("option", "title", 'Add Party');
			$("#partiesDialog").dialog("option", "buttons", [ {
				text : "Cancel",
				click : function() {
					if(isPartyChanged!="")
					{
						var r = confirm("All unsaved changes will be discarded.Continue?");
						if(r)
							$(this).dialog("close");
						else
							return;
					}
					else
						$(this).dialog("close");
				}
			}, {
				text : "Ok",
				click : function() {
					addParty();
				}
			} ]);
			var xErrorCoordinate = window.pageXOffset;
			var yErrorCoordinate = window.pageYOffset;
			$("#partiesDialog").dialog('open');
			setTimeout(function(){
				window.scrollTo(xErrorCoordinate, yErrorCoordinate);
				}, 250);
		}
	});
}

function showEditPartyDialog(id) {
	urlString = "/booking/party/showPartyFormEdit";
	/*Booking Security*/
	if($('#isTemplate').val() == 'true'){
		urlString = urlString + "?isTemplate="+ $('#isTemplate').val();
	}
	if((isPartiesDisplayOnly && !isPartiesModifiable) || $("#bookingStatusCode :selected").val()=='CANC'){
		$("#partiesDialog").gatesDisable();
	}
	else{
		$("#partiesDialog").gatesEnable();
	}
	var seqNo = id.split('=')[1];
	$.ajax({
		url : _context +urlString,
		type : "GET",
		data : {
			partySeqNo : seqNo
		},
		success : function(responseText) {
			if(responseText.success)
			{
				clearPartiesForm();
				$.each(responseText.data.partyTypeList, function(key, value) {
					$('select[name="partyTypeCode"]').append($("<option/>", {
						value : key,
						text : value
					}));
				});
				
				$.each(responseText.data.contactList, function(key, value) {
					$('select[name="contactId"]').append($("<option/>", {
						value : key,
						text : value
					}));
				});
						
				$("#parties").loadJSON(responseText.data);
				partyOrg = responseText.data.organizationName;
				partyAddr = responseText.data.address;
				setPartyCommMethodValue(responseText.data);
				$("#partiesDialog").dialog("option", "title", 'Edit Party');
				$("#partiesDialog").dialog("option", "buttons", [ {
					text : "Cancel",
					click : function() {
						removePartiesPopUps();
						if(isPartyChanged!="")
						{
							var r = confirm("All unsaved changes will be discarded.Continue?");
							if(r)
								$(this).dialog("close");
							else
								return;
						}
						else
							$(this).dialog("close");
					}
				}, {
					text : "Ok",
					click : function() {
						if($("#bookingStatusCode").val()!='CANC'){
							updateParty();
						}else{
							$("#partiesDialog").dialog('close');
						}
					}
				} ]);
				partyOrg = $('input[name="organizationName"]').val();
				partyAddr = $('input[name="address"]').val();
				var xErrorCoordinate = window.pageXOffset;
				var yErrorCoordinate = window.pageYOffset;
				/*Booking Security*/
				if(isPartiesDisplayOnly && !isPartiesModifiable){
					disableDialogButton('partiesDialog', 'Ok');
				}
				$("#partiesDialog").dialog('open');
				setTimeout(function(){
					window.scrollTo(xErrorCoordinate, yErrorCoordinate);
				}, 250);
			}
		}
	});
	//return false;
}

function addParty() {
	removePartiesPopUps();
	if ($("#parties").validationEngine('validate') && validateContactDetails()) {
		
		var queryString = $('#parties').formSerialize();
		$.ajax({
			url : _context +"/booking/party/addParty",
			type : "POST",
			data : queryString,
			success : function(responseText) {
				if (responseText.success == true) {
					$("#gridIdForParties").trigger("reloadGrid");
					$("#partiesDialog").dialog('close');
					isBookingChanged = "Y";
				} else 
					//alert(responseText.messages.error[0]);
					showResponseMessages("partiesMsgDiv", responseText);
			}
		});
	} else
		return;
}

function updateParty() {
	removePartiesPopUps();
	if ($("#parties").validationEngine('validate') && validateContactDetails()) {
		
		var queryString = $('#parties').formSerialize();
		var selectedParty = $('select[name="partyTypeCode"]').selected().val();
		var relationshipTypeCode = "";
		var orgAroleId = "";
		
		if(selectedParty=='20')
		{
			relationshipTypeCode = "04";
			orgAroleId = $('input[name="shipper\\.addressRoleId"]').val();
		}
		else if(selectedParty=='30')
		{
			relationshipTypeCode = "12";
			orgAroleId = $('input[name="shipper\\.addressRoleId"]').val();
		}
		else if(selectedParty=='21')
		{
			relationshipTypeCode = "04";
			orgAroleId = $('input[name="consignee\\.addressRoleId"]').val();
		}
		else if(selectedParty=='22')
		{
			relationshipTypeCode = "02";
			orgAroleId = $('input[name="consignee\\.addressRoleId"]').val();
		}
		
		if(relationshipTypeCode!="")
		{
			$.ajax({
				url : _context +"/booking/party/validateOverrideUpdate?relationshipTypeCode="
						+relationshipTypeCode+"&orgAroleId="+orgAroleId
						+"&tradeCode="+$('#tradeCode').val()+"&tradeType="+domesticForeignIndicator,
				data : queryString,
				type : "POST",
				success : function(responseTextValidate) {
					
					if(responseTextValidate=="N")
					{
						updatePartyConfirm(queryString, "N", relationshipTypeCode, orgAroleId);
					}
					else
					{
						if(responseTextValidate=="OD")
							$("#partiesOverrideDialog").dialog("option", "buttons", [ {
								text : "Override",
								click : function() {
									updatePartyConfirm(queryString, "O", relationshipTypeCode, orgAroleId);
									$("#partiesOverrideDialog").dialog("close");
								}
							}, {
								text : "Default",
								click : function() {
									updatePartyConfirm(queryString, "D", relationshipTypeCode, orgAroleId);
									$("#partiesOverrideDialog").dialog("close");
								}
							},{
								text : "Cancel",
								click : function() {
									$("#partiesOverrideDialog").dialog('close');
								}
							} ]);
						else if(responseTextValidate=="O")
							$("#partiesOverrideDialog").dialog("option", "buttons", [ {
								text : "Override",
								click : function() {
									updatePartyConfirm(queryString, "O", relationshipTypeCode, orgAroleId);
									$("#partiesOverrideDialog").dialog("close");
								}
							}, {
								text : "Cancel",
								click : function() {
									$("#partiesOverrideDialog").dialog('close');
								}
							} ]);
						
						$("#partiesOverrideDialog").dialog().parents(".ui-dialog").find(".ui-dialog-titlebar").hide(); 
						var xErrorCoordinate = window.pageXOffset;
						var yErrorCoordinate = window.pageYOffset;
						$("#partiesOverrideDialog").dialog('open');
						setTimeout(function(){
							window.scrollTo(xErrorCoordinate, yErrorCoordinate);
							}, 250);
						//return false;
					}
				}
			});
		}
		else
			updatePartyConfirm(queryString, "N", relationshipTypeCode, orgAroleId);
	}
	else
		return false;
}

function updatePartyConfirm(queryString, confirm, relationshipTypeCode, orgAroleId)
{
	$.ajax({
		url : _context +"/booking/party/updateParty",
		type : "POST",
		data : queryString+"&confirm="+confirm+"&relationshipTypeCode="+relationshipTypeCode+"&orgAroleId="+orgAroleId+"&tradeCode="+$('#tradeCode').val(),
		success : function(responseText) {
			if (responseText.success == true) {
				$("#gridIdForParties").trigger("reloadGrid");
				$("#partiesDialog").dialog('close');
				showResponseMessages("msgDiv", responseText);
				isBookingChanged = "Y";
			}
			else {
				//alert(responseText.messages.error[0]);
				showResponseMessages("partiesMsgDiv", responseText);
			}
		}
	});
}

function checkDebtors()
{
	if(isTemplateFirstLoad && $("#bookingStatusCode :selected").val()!='CANC' && isPartiesModifiable)
	{
		var isShipperOverridden = false;
		var isConsigneeOverridden = false;
		var rowIDs = jQuery("#gridIdForParties").getDataIDs();
		for (var i=0;i<rowIDs.length;i=i+1)
	    { 
	      var rowData=jQuery("#gridIdForParties").getRowData(rowIDs[i]);
	      if (rowData.partyTypeDescription=='Prepaid Bill To Party' && (rowData.isCpPartyOverridden=='true'
	    	  || rowData.isCpPartyOverridden == true || rowData.isCpPartyOverridden == 'Yes'))
	      {
	    	  isShipperOverridden = true;
	      }
	      else if (rowData.partyTypeDescription=='Collect Bill To Party' && (rowData.isCpPartyOverridden=='true'
	    	  || rowData.isCpPartyOverridden == true || rowData.isCpPartyOverridden == 'Yes'))
	      {
	    	  isConsigneeOverridden = true;
	      }
	    }
		if(isShipperOverridden && !isConsigneeOverridden)
		{
			openOverrideDialog('prepaid');
		}
		else if(!isShipperOverridden && isConsigneeOverridden)
		{
			openOverrideDialog('collect');
		}
		else if(isShipperOverridden && isConsigneeOverridden)
		{
			openOverrideDialog('both');
		}
		else
			validateBooking();
	}
	else
		validateBooking();
}

function openOverrideDialog(type)
{
	$("#partiesOverrideDialogDiv").html("Bill To not default. Permanent changes in CP.");
	$("#partiesSaveDialog").dialog("option", "buttons", [ {
		text : "Override",
		click : function() {
			$("#partiesSaveDialog").dialog("close");
			blockUI();
			validateBooking();
		}
	}, {
		text : "Default",
		click : function() {
			defaultParty(type);
		}
	},{
		text : "Cancel",
		click : function() {
			$('#bookingSave').attr("disabled", false);
			$("#partiesSaveDialog").dialog('close');
		}
	} ]);
	$("#partiesSaveDialog").dialog().parents(".ui-dialog").find(".ui-dialog-titlebar").hide(); 
	$.unblockUI();
	var xErrorCoordinate = window.pageXOffset;
	var yErrorCoordinate = window.pageYOffset;
	$('#partiesSaveDialog').dialog('open');
	setTimeout(function(){
		window.scrollTo(xErrorCoordinate, yErrorCoordinate);
		}, 250);
	//return false;
}

function defaultParty(type)
{
	$.ajax({
		url : _context +"/booking/party/setDefault",
		data : {
					type:type, 
					tradeCode:$('#tradeCode :selected').val(), 
					shipperArolId:$('input[name="shipper\\.addressRoleId"]').val(), 
					consigneeArolId:$('input[name="consignee\\.addressRoleId"]').val()
				},
		success : function(responseText) {
			if (responseText.success == true) {
				$("#gridIdForParties").trigger("reloadGrid");
				$("#partiesSaveDialog").dialog("close");
				blockUI();
				validateBooking();
			}
			else 
			{
				$('#bookingSave').attr("disabled", false);
				alert("An error has occurred");
			}
		}
	});
}

function validateContactDetails()
{
	var isValid = true;
	//D018663: 	GATES : Customer field behaviour
	if($("#tradeCode").val()=="F"){
		return isValid;
	}
	if($('input[name="contact"]').val()!='' && $('select[name="contactId"] :selected').val()=='' && 
			!$('#partyComm1').attr('checked') && !$('#partyComm2').attr('checked') && !$('#partyComm3').attr('checked') && !$('#partyComm4').attr('checked'))
	{
		//$("#partyComm1").validationEngine('showPrompt', 'Please select a communication mode', 'error', true);
		isValid = true;
	}
	else if($('#partyComm1').attr('checked') && $('input[name="contactPhoneCountryCode"]').val()=='' && $('input[name="contactPhoneAreaCode"]').val()=='' && $('input[name="contactPhoneExchange"]').val()=='' && $('input[name="contactPhoneStation"]').val()=='' && $('input[name="contactPhoneExtension"]').val()=='')
	{
		$('#partyComm1').validationEngine('showPrompt', 'Preferred communication (Phone) cannot be empty', 'error', true);
		isValid = false;
	}
	else if($('#partyComm2').attr('checked') && $('input[name="contactCellCountryCode"]').val()=='' && $('input[name="contactCellAreaCode"]').val()=='' && $('input[name="contactCellExchange"]').val()=='' && $('input[name="contactCellStation"]').val()=='' && $('input[name="contactCellExtension"]').val()=='')
	{
		$('#partyComm2').validationEngine('showPrompt', 'Preferred communication (Cell) cannot be empty', 'error', true);
		isValid = false;
	}
	else if($('#partyComm3').attr('checked') && $('input[name="contactFaxCountryCode"]').val()=='' && $('input[name="contactFaxAreaCode"]').val()=='' && $('input[name="contactFaxExchange"]').val()=='' && $('input[name="contactFaxStation"]').val()=='' && $('input[name="contactFaxExtension"]').val()=='')
	{
		$('#partyComm3').validationEngine('showPrompt', 'Preferred communication (Fax) cannot be empty', 'error', true);
		isValid = false;
	}
	else if($('#partyComm4').attr('checked') && $('input[name="contactEmailAddress"]').val()=='')
	{
		$('#partyComm4').validationEngine('showPrompt', 'Preferred communication (Email) cannot be empty', 'error', 'topRight', true);
		isValid = false;
	}
	
	if(!validatePhoneNo('contactPhone'))
		isValid = false;
	if(!validatePhoneNo('contactCell'))
		isValid = false;
	if(!validatePhoneNo('contactFax'))
		isValid = false;
	/*else
	{
		$('input[name="contact"]').validationEngine('showPrompt', 'Contact is required', 'error', 'topRight', true);
		isValid = false;
	}*/	
	
	return isValid;
}

function validatePhoneNo(namePrefix)
{
	if($('input[name="'+namePrefix+'CountryCode"]').val()=='' && $('input[name="'+namePrefix+'AreaCode"]').val()=='' && $('input[name="'+namePrefix+'Exchange"]').val()=='' && $('input[name="'+namePrefix+'Station"]').val()=='' && $('input[name="'+namePrefix+'Extension"]').val()=='')
		return true;
	else
	{
		/*if(!validateForPositiveIntegers($('input[name="'+namePrefix+'CountryCode"]').val()))
		{
			$('input[name="'+namePrefix+'CountryCode"]').validationEngine('showPrompt', '* Only digits are allowed', 'error', 'topRight', true);
			return false;
		}
		else if(!validateForPositiveIntegers($('input[name="'+namePrefix+'AreaCode"]').val()))
		{
			$('input[name="'+namePrefix+'AreaCode"]').validationEngine('showPrompt', '* Only digits are allowed', 'error', 'topRight', true);
			return false;
		}
		else if(!validateForPositiveIntegers($('input[name="'+namePrefix+'Station"]').val()))
		{
			$('input[name="'+namePrefix+'Station"]').validationEngine('showPrompt', '* Only digits are allowed', 'error', 'topRight', true);
			return false;
		}
		else if(!validateForPositiveIntegers($('input[name="'+namePrefix+'Exchange"]').val()))
		{
			$('input[name="'+namePrefix+'Exchange"]').validationEngine('showPrompt', '* Only digits are allowed', 'error', 'topRight', true);
			return false;
		}
		else if($('input[name="'+namePrefix+'Extension"]').val()!='' && 
				!validateForPositiveIntegers($('input[name="'+namePrefix+'Extension"]').val()))
		{
			$('input[name="'+namePrefix+'Extension"]').validationEngine('showPrompt', '* Only digits are allowed', 'error', 'topRight', true);
		}
		else if($('input[name="'+namePrefix+'CountryCode"]').val()=='')
		{
			$('input[name="'+namePrefix+'CountryCode"]').validationEngine('showPrompt', 'Please enter country code', 'error', 'topRight', true);
			return false;
		}
		else */if($('input[name="'+namePrefix+'AreaCode"]').val()=='')
		{
			$('input[name="'+namePrefix+'AreaCode"]').validationEngine('showPrompt', 'Please enter area code', 'error', 'topRight', true);
			return false;
		}
		else if($('input[name="'+namePrefix+'Exchange"]').val()=='')
		{
			$('input[name="'+namePrefix+'Exchange"]').validationEngine('showPrompt', 'Please enter exchange code', 'error', 'topRight', true);
			return false;
		}
		else if($('input[name="'+namePrefix+'Station"]').val()=='')
		{
			$('input[name="'+namePrefix+'Station"]').validationEngine('showPrompt', 'Please enter station code', 'error', 'topRight', true);
			return false;
		}
		
		if($('input[name="'+namePrefix+'CountryCode"]').val()=='' || $('input[name="'+namePrefix+'CountryCode"]').val()=='1' 
			 || $('input[name="'+namePrefix+'CountryCode"]').val()=='01'  || $('input[name="'+namePrefix+'CountryCode"]').val()=='001')
		{
			if($('input[name="'+namePrefix+'AreaCode"]').val().length!=3)
			{
				$('input[name="'+namePrefix+'AreaCode"]').validationEngine('showPrompt', 'Area code must be of 3 digits', 'error', 'topRight', true);
				return false;
			}
			else if($('input[name="'+namePrefix+'Exchange"]').val().length!=3)
			{
				$('input[name="'+namePrefix+'Exchange"]').validationEngine('showPrompt', 'Exchange must be of 3 digits', 'error', 'topRight', true);
				return false;
			}
			else if($('input[name="'+namePrefix+'Station"]').val().length!=4)
			{
				$('input[name="'+namePrefix+'Station"]').validationEngine('showPrompt', 'Station code must be of 4 digits', 'error', 'topRight', true);
				return false;
			}
			else
				return true;
		}
		else
		{
			//D033813: 	SPX: MAINTAIN BKG - NEED TO RELAX THE PHONE# EDIT for NON-US
			/*if($('input[name="'+namePrefix+'AreaCode"]').val().length<2)
			{
				$('input[name="'+namePrefix+'AreaCode"]').validationEngine('showPrompt', 'Area code must be of 2-4 digits', 'error', 'topRight', true);
				return false;
			}
			else if($('input[name="'+namePrefix+'Exchange"]').val().length<3)
			{
				$('input[name="'+namePrefix+'Exchange"]').validationEngine('showPrompt', 'Exchange must be of 3-4 digits', 'error', 'topRight', true);
				return false;
			}
			else if($('input[name="'+namePrefix+'Station"]').val().length!=4)
			{
				$('input[name="'+namePrefix+'Station"]').validationEngine('showPrompt', 'Station code must be of 4 digits', 'error', 'topRight', true);
				return false;
			}
			else*/
				return true;
		}
	}
}

function removePartiesPopUps() {
	$("#parties").validationEngine('hideAll');
}

function setPartyCommMethodValue(party){
	if(party.communicationMethodCode=='P'){
		$('#partyComm1').attr('checked', true);
		$('#partyComm1').val("P");
	}
	else if(party.communicationMethodCode=='C'){
		$('#partyComm2').attr('checked', true);
		$('#partyComm2').val("C");
	}
	else if(party.communicationMethodCode=='F'){
		$('#partyComm3').attr('checked', true);
		$('#partyComm3').val("F");
	}
	else if(party.communicationMethodCode=='E'){
		$('#partyComm4').attr('checked', true);
		$('#partyComm4').val("E");
	}
}

function autoBillOnchangeEventFunction(){
	if($('#isAutobill :selected').val()==false || $('#isAutobill :selected').val()=='false'){
		//$('#autobillOptionCode').val('');
		//$('#autobillOptionCode').attr("disabled", true);
		$('#autobillTriggerCode').val('');
		$('#autobillTriggerCode').attr("disabled", true);
		$('#autobillCreateStatusCode').val('');
	}
	else{
		/*Booking Security*/
		if(isShipperConsgineeModifiable){
			$('#autobillOptionCode').attr("disabled", false);
			$('#autobillTriggerCode').attr("disabled", false);
			if($.trim($('#autobillCreateStatusCode').val())=='')
				$('#autobillCreateStatusCode').val('N');
		}
	}
	setAutobill();
}

function setAutobill(){
	/*$.ajax({
		url : _context +"/booking/party/setAutobill",
		data : {
			isAutoBill : $('#isAutobill :selected').val()
		}
	});*/
}

function setPartiesHeader()
{
		//18644
	//var string='';
	var rowIDs = jQuery("#gridIdForParties").getDataIDs();
	var  partyHeader='';
	var cash=false;
	 setPartyAccordianTabDetails("notifyPartyHeader","");
	 setPartyAccordianTabDetails("alsoNotifyPartyHeader","");
	 setPartyAccordianTabDetails("notifypartytext","");
	 setPartyAccordianTabDetails("alsonotifypartytext","");
	 setPartyAccordianTabDetails("fwdAgenttext","");
	 setPartyAccordianTabDetails("fwdAgentPartyHeader","");
	 if($('#isAutobill :selected').val()=='true'){
	 partyHeader=' | Auto Bill ';
	 }
	 var deliveryPartyCount = 0, count=0;
		for (var i=0;i<rowIDs.length;i=i+1)
		{ 
		 // var id = $('#gridIdForParties').getCell(rowIDs[i], 'partySeqNo');
		  var rowData=jQuery("#gridIdForParties").getRowData(rowIDs[i]);
		  if(rowData.partyTypeDescription=='Notify Party')
			  
		  {
			  setPartyAccordianTabDetails('notifypartytext', '|  Notify Party  ');
			  //string=' | '+ partytype+'-'+rowData.organizationName;
			  setPartyAccordianTabDetails('notifyPartyHeader', ' - '+rowData.organizationName);
			 
		 
		  }
		  if(rowData.partyTypeDescription=='Also Notify Party')
			  {
			  if(count<1)
			  {
			  setPartyAccordianTabDetails('alsonotifypartytext', '|  Also Notify Party  ');
			  setPartyAccordianTabDetails('alsoNotifyPartyHeader', ' - '+rowData.organizationName);
			  count++;
			// add code to display Also Notify Party in Header
			  }
			  }
		  if(rowData.partyTypeDescription=='Forwarding Agent')
		  {
		  setPartyAccordianTabDetails('fwdAgenttext', '|  Fwd Agent ');
		  setPartyAccordianTabDetails('fwdAgentPartyHeader', ' - '+rowData.organizationName);

		  }
		  if(rowData.orgCreditStatus=='CASH')
			  {
			  cash=true;
			  }
		  if(rowData.totalDeliveryParty != null && rowData.totalDeliveryParty != 0){
			  deliveryPartyCount =  rowData.totalDeliveryParty;
		  }
		}
		if(cash)
		{
			var status='<font color="red">CASH</font>';
			partyHeader=partyHeader+' | '+status;
		 }
		if( $('#isToOrderParty').attr("checked"))
		{
			var label='<font color="red">To Order B/L</font>';
			partyHeader=partyHeader+' | '+label;
		}
		//partyHeader=partyHeader+string;
		if(deliveryPartyCount != 0){
			partyHeader = ' | Delivery ('+deliveryPartyCount+') '+partyHeader;
		}
		if($('#prepaidCollectCode :selected').val()!='')
			//setAccordianTabDetails('partiesHeader', ' - '+$("#prepaidCollectCode option:selected").text()+partyHeader);
			setPartyAccordianTabDetails('partiesHeader', ' - '+$("#prepaidCollectCode option:selected").text()+partyHeader);
		else
			setPartyAccordianTabDetails('partiesHeader', partyHeader);

}
//18644
function setPartyAccordianTabDetails(id,displayText)
{
$("#"+id).html(displayText);
}

function validatePartiesSectionOnSave()
{
	var isValid = true;
	if(($('#prepaidCollectCode :selected').val()=='P' || $('#prepaidCollectCode :selected').val()=='B')
			&& $('input[name="shipper\\.addressRoleId"]').val()=='')
	{
		//if(!$('#maintainBookingParties').is(':visible'))
			expandPartiesDiv(isValid);
		$('#prepaidCollectCode').validationEngine('showPrompt', 'Shipper is required for Debtor to be Prepaid or Both', 'error', 'topRight', true);
		isValid = false;
	}
	else if(($('#prepaidCollectCode :selected').val()=='C' || $('#prepaidCollectCode :selected').val()=='B')
			&& $('input[name="consignee\\.addressRoleId"]').val()=='')
	{
		//if(!$('#maintainBookingParties').is(':visible'))
			expandPartiesDiv(isValid);
		$('#prepaidCollectCode').validationEngine('showPrompt', 'Consignee is required for Debtor to be Prepaid or Both', 'error', 'topRight', true);
		isValid = false;
	}
	if($('#bookingTypeCode').val()=='B' && $('#bookingStatusCode :selected').val()=='APPR')
	{
		if($('#prepaidCollectCode :selected').val()=='')
		{
			//if(!$('#maintainBookingParties').is(':visible'))
				expandPartiesDiv(isValid);
			$('#prepaidCollectCode').validationEngine('showPrompt', 'Debtor is required', 'error', 'topRight', true);
			isValid = false;
		}
	}
	
	if($('#isAutobill :selected').val()=='true'){
		/*if($('#loadDschServiceGroupCode').val()=="CON"){
		$('#msgDiv').html('<div class="message_error">'+'Auto Bill cannot be true for the provided load and discharge service'+'</div>');
		window.scrollTo(0, 0);
		$('#isAutobill').val(false);
		}
		else if($('#totalCommodityLines').text()!='' && $('#totalCommodityLines').text()=='1'){
			if($.trim($("#tariff").val())=='' || $.trim($("#tariffCommodityDescription").val())=='' || $.trim($("#tariffItemNumber").val())=='' || $.trim($("#commodityCode").val())==''){
				//if(!$('#maintainBookingParties').is(':visible'))
					expandPartiesDiv(isValid);
				$('#isAutobill').validationEngine('showPrompt', 'Cannot be Yes as Tariff or Tariff Commodity Description or Item or Commodity Code not present', 'error', 'topRight', true);
				isValid = false;
			}
		}
		else if($('#totalCommodityLines').text()!='' && $('#totalCommodityLines').text()>1){
			//if(!$('#maintainBookingParties').is(':visible'))
				expandPartiesDiv(isValid);
			$('#isAutobill').validationEngine('showPrompt', 'Cannot be Yes as multiple commodity lines exist', 'error', 'topRight', true);
			isValid = false;
		}*/
		if($('#autobillOptionCode :selected').val()==''){
			//if(!$('#maintainBookingParties').is(':visible'))
				expandPartiesDiv(isValid);
			$('#autobillOptionCode').validationEngine('showPrompt', 'Autobill option is required', 'error', 'topRight', true);
			isValid = false;
		}
		
		if($('#autobillTriggerCode :selected').val()==''){
			//if(!$('#maintainBookingParties').is(':visible'))
				expandPartiesDiv(isValid);
			$('#autobillTriggerCode').validationEngine('showPrompt', 'Autobill trigger event is required', 'error', 'topRight', true);
			isValid = false;
		}
	}
	//Changed due to D023185
	/*else if($('#bookingTypeCode').val()=='B' && $.trim($('#quoteVNConcat').val())!='' 
					&& $('#totalCommodityLines').text()!='' && $('#totalCommodityLines').text()>1)
	{
		//if(!$('#maintainBookingParties').is(':visible'))
			expandPartiesDiv(isValid);
		$('#isAutobill').validationEngine('showPrompt', 'Autobill cannot be No as Multiple Commodity Lines exist for booking made from quote', 'error', 'topRight', true);
		isValid = false;
	}*/
	
	//-------------- Changed after discussion with nitin not according to UI specs-------
	/*if($('#autobillOptionCode :selected').val()=='C' && $('#autobillTriggerCode :selected').val()!='I')
	{
		//if(!$('#maintainBookingParties').is(':visible'))
			expandPartiesDiv(isValid);
		$('#autobillTriggerCode').validationEngine('showPrompt', 'Trigger event must be Ingated when Autobill option is Container', 'error', 'topRight', true);
		isValid = false;
	}
	else */if($('#autobillOptionCode :selected').val()!='C' && $('#autobillTriggerCode :selected').val()=='I')
	{
		//if(!$('#maintainBookingParties').is(':visible'))
			expandPartiesDiv(isValid);
		$('#autobillOptionCode').validationEngine('showPrompt', 'Autobill option must be container when trigger event is Ingated', 'error', 'topRight', true);
		isValid = false;
	}
	
	var regexp = '^[a-zA-z0-9]+$';
	var re = new RegExp(regexp);
	
	if($('#secondaryNotifyScacCode1').val()!='')
	{
		if(!re.test($('#secondaryNotifyScacCode1').val()))
		{
			//if(!$('#maintainBookingParties').is(':visible'))
				expandPartiesDiv(isValid);
			$('#secondaryNotifyScacCode1').validationEngine('showPrompt', 'Only alphanumeric characters allowed', 'error', 'topRight', true);
			isValid = false;
		}
	}
	
	if($('#secondaryNotifyScacCode2').val()!='')
	{
		if(!re.test($('#secondaryNotifyScacCode2').val()))
		{
			//if(!$('#maintainBookingParties').is(':visible'))
				expandPartiesDiv(isValid);
			$('#secondaryNotifyScacCode2').validationEngine('showPrompt', 'Only alphanumeric characters allowed', 'error', 'topRight', true);
			isValid = false;
		}
	}
	
	return isValid;
}

function validateForPositiveIntegers(value) {
	var re = new RegExp("^[0-9]+$");
	if (value<=0) {
		return false;
	} else if (!re.test(value)) {
		return false;
	} else {
		return true;
	}
}

function expandPartiesDiv(isValid)
{
	if(isValid)
	{
		if(!$('#maintainBookingParties').is(':visible'))
		{
			$('#partiesAccordionHeader').removeClass("ui-state-default ui-corner-all").addClass("ui-state-active ui-corner-top");
			$('#partiesAccordionHeader span').removeClass('ui-icon-triangle-1-e').addClass('ui-icon-triangle-1-s');
			$('#maintainBookingParties').addClass('ui-accordion-content-active');
			$('#maintainBookingParties').css('display', 'block');
			var status = $($('.booking-section')[1]).accordion('option', 'active');
			if (typeof status == "boolean" && !status) {
				$($('.booking-section')[1]).accordion('option', 'active', 0);
			}
		}
		var offset = accordianPostionCoordinates(1);
		window.scrollTo(offset.left, offset.top);
	}
};$(function() {
	
	var partyOrg = "";
	var partyAddr = "";
	
	$('input[name="address"]').live('keydown', function(evt)
	{
		var keyCode = evt.keyCode;
		if(keyCode==32 || (48<=keyCode && keyCode<=57)
				|| (65<=keyCode && keyCode<=90) || (96<=keyCode && keyCode<=107) 
				|| (109<=keyCode && keyCode<=111))
		{
			if($('#partyTypeCode :selected').val()=='')
			{
				$('input[name="address"]').blur();
				alert("Please select Party type first");
			}
			else
				return true;
		}
		else if(keyCode == '9')
		{
			$('select[name="contactId"]').focus();
			return false;
		}
		else
			return true;
	});
	
	$('#partyTypeCode').live('keydown', function(evt){
		 var theEvent = evt || window.event;
		  var key = theEvent.keyCode || theEvent.which;
		  if(key == '9'){
			  $('input[name="organizationName"]').focus();
			  return false;
		  }
		 return true;
	});
	$('select[name="contactId"]').live('keydown', function(evt){
		 var theEvent = evt || window.event;
		  var key = theEvent.keyCode || theEvent.which;
		  if(key == '9'){
			  $('input[name="contact"]').focus();
			  return false;
		  }
		 return true;
	});
	$('#partiesRepeatContact').live('keydown', function(evt){
		 var theEvent = evt || window.event;
		  var key = theEvent.keyCode || theEvent.which;
		  if(key == '9'){
			  $('input[name="contactPhoneCountryCode"]').focus();
			  return false;
		  }
		 return true;
	});
	$('#partyComm1').live('keydown', function(evt){
		 var theEvent = evt || window.event;
		  var key = theEvent.keyCode || theEvent.which;
		  if(key == '9'){
			  $('input[name="contactCellCountryCode"]').focus();
			  return false;
		  }
		 return true;
	});
	$('#partyComm2').live('keydown', function(evt){
		 var theEvent = evt || window.event;
		  var key = theEvent.keyCode || theEvent.which;
		  if(key == '9'){
			  $('input[name="contactFaxCountryCode"]').focus();
			  return false;
		  }
		 return true;
	});
	$('#partyComm3').live('keydown', function(evt){
		 var theEvent = evt || window.event;
		  var key = theEvent.keyCode || theEvent.which;
		  if(key == '9'){
			  $('input[name="contactEmailAddress"]').focus();
			  return false;
		  }
		 return true;
	});
	
	$('input[name="contactPhoneCountryCode"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if($('input[name="contactPhoneCountryCode"]').val()=='1' || 
	    		 $('input[name="contactPhoneCountryCode"]').val()=='01' ||  
	    		 $('input[name="contactPhoneCountryCode"]').val().length == 3){
	    	 $('input[name="contactPhoneAreaCode"]').select();
	     }
	}); 
	
	$('input[name="contactPhoneAreaCode"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if(( $('input[name="contactPhoneAreaCode"]').val().length == 3 && isAmericanParty('contactPhoneCountryCode')) || 
	    		 $('input[name="contactPhoneAreaCode"]').val().length == 4){
	    		$('input[name="contactPhoneExchange"]').select();
	     }
	}); 
	
	$('input[name="contactPhoneAreaCode"]').keydown(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if(( $('input[name="contactPhoneAreaCode"]').val().length == 3 && isAmericanParty('contactPhoneCountryCode')) || 
	    		 $('input[name="contactPhoneAreaCode"]').val().length == 4){
	    	 evt.preventDefault();
	     }
	}); 
	
	$('input[name="contactPhoneExchange"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if(($('input[name="contactPhoneExchange"]').val().length == 3 && isAmericanParty('contactPhoneCountryCode')) || 
	 		$('input[name="contactPhoneExchange"]').val().length == 4){
	    	 $('input[name="contactPhoneStation"]').select();
	     }
	}); 
	
	$('input[name="contactPhoneExchange"]').keydown(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if(( $('input[name="contactPhoneExchange"]').val().length == 3 && isAmericanParty('contactPhoneCountryCode')) || 
	    		 $('input[name="contactPhoneExchange"]').val().length == 4){
	    	 evt.preventDefault();
	     }
	});

	$('input[name="contactPhoneStation"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if($('input[name="contactPhoneStation"]').val().length == 7){
	    	 $('input[name="contactPhoneExtension"]').focus();
	     }
	}); 
	
	$('input[name="contactCellCountryCode"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if($('input[name="contactCellCountryCode"]').val()=='1' || 
	    		 $('input[name="contactCellCountryCode"]').val()=='01' ||  
	    		 $('input[name="contactCellCountryCode"]').val().length == 3){
	    	 $('input[name="contactCellAreaCode"]').select();
	     }
	}); 
	
	$('input[name="contactCellAreaCode"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if(($('input[name="contactCellAreaCode"]').val().length == 3 && isAmericanParty('contactCellCountryCode')) || 
	    		 $('input[name="contactCellAreaCode"]').val().length == 4){
	    	 $('input[name="contactCellExchange"]').select();
	     }
	}); 
	
	$('input[name="contactCellAreaCode"]').keydown(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if(( $('input[name="contactCellAreaCode"]').val().length == 3 && isAmericanParty('contactCellCountryCode')) || 
	    		 $('input[name="contactCellAreaCode"]').val().length == 4){
	    	 evt.preventDefault();
	     }
	});
	
	$('input[name="contactCellExchange"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if(($('input[name="contactCellExchange"]').val().length == 3 && isAmericanParty('contactCellCountryCode')) || 
	    		 $('input[name="contactCellExchange"]').val().length == 4 ){
	    	 $('input[name="contactCellStation"]').select();
	     }
	}); 
	
	$('input[name="contactCellExchange"]').keydown(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if(( $('input[name="contactCellExchange"]').val().length == 3 && isAmericanParty('contactCellCountryCode')) || 
	    		 $('input[name="contactCellExchange"]').val().length == 4){
	    	 evt.preventDefault();
	     }
	});
	
	$('input[name="contactCellStation"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if($('input[name="contactCellStation"]').val().length == 4){
	    	 $('input[name="contactCellExtension"]').focus();
	     }
	}); 
	
	$('input[name="contactFaxCountryCode"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if($('input[name="contactFaxCountryCode"]').val()=='1' || 
	    		 $('input[name="contactFaxCountryCode"]').val()=='01' ||  
	    		 $('input[name="contactFaxCountryCode"]').val().length == 3){
	    	 $('input[name="contactFaxAreaCode"]').select();
	     }
	}); 
	
	$('input[name="contactFaxAreaCode"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if(($('input[name="contactFaxAreaCode"]').val().length == 3 && isAmericanParty('contactFaxCountryCode')) || 
	    		 $('input[name="contactFaxAreaCode"]').val().length == 4){
	    	 $('input[name="contactFaxExchange"]').select();
	     }
	}); 
	
	$('input[name="contactFaxAreaCode"]').keydown(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if(( $('input[name="contactFaxAreaCode"]').val().length == 3 && isAmericanParty('contactFaxCountryCode')) || 
	    		 $('input[name="contactFaxAreaCode"]').val().length == 4){
	    	 evt.preventDefault();
	     }
	});
	
	$('input[name="contactFaxExchange"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if(($('input[name="contactFaxExchange"]').val().length == 3 && isAmericanParty('contactFaxCountryCode')) || 
	    		 $('input[name="contactFaxExchange"]').val().length == 4){
	    	 $('input[name="contactFaxStation"]').select();
	     }
	}); 
	
	$('input[name="contactFaxExchange"]').keydown(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if(( $('input[name="contactFaxExchange"]').val().length == 3 && isAmericanParty('contactFaxCountryCode')) || 
	    		 $('input[name="contactFaxExchange"]').val().length == 4){
	    	 evt.preventDefault();
	     }
	});
	
	$('input[name="contactFaxStation"]').keyup(function(evt) {
		var theEvent = evt || window.event;
	  	var key = theEvent.keyCode || theEvent.which;
	  	if(key == '16' || key == '9' || key == '8' || key == '46')
	  		return;
	     if($('input[name="contactFaxStation"]').val().length == 4){
	    		$('input[name="contactFaxExtension"]').focus();
	     }
	}); 

	partiesOrgPredictive();
	partiesAddPredictive();
	
	// Parties Pop-Up Search
	$('input[name="organizationName"]').gatesPopUpSearch({
		func : function() {
			partiesPopupSearch();
		}
	});

	// parties address Pop-Up Search
	$('input[name="address"]').gatesPopUpSearch({
		func : function() {
			if($('#partyTypeCode :selected').val()=='')
				alert("Please select a party type first");
			else
				partiesAddressPopupSearch();
		}
	});
	
	$('input[name="organizationName"]').change(function() {
		isPartyChanged ="Y";
		if($('input[name="organizationName"]').val()!=partyOrg)
		{
			$('input[name="organizationName"]').val('');
			$('input[name="organizationCode"]').val('');
			$('input[name="organizationId"]').val('');
			$('input[name="isOneTimeCustomer"]').val("false");
			//partiesAddPredictive();
		}
		if($('#partyTypeCode :selected').val()=='22'){
			$('#isChangeAcceptedAfterUnitsReceived').val("N");
		}
		$('input[name="address"]').val("");
		$('input[name="address"]').trigger('change');
	});

	$('input[name="address"]').change(function() {
		
		if($('input[name="address"]').val()!=partyAddr)
		{
			$('input[name="address"]').val('');
			$('input[name="addressRoleId"]').val('');
		}
		isPartyChanged ="Y";
		$('input[name="city"]').val('');
		$('input[name="state"]').val('');
		$('input[name="zip"]').val('');
		$('input[name="nameQualifier"]').val('');
		$('input[name="careOf"]').val('');
		$('select[name="contactId"]').children().remove();
		$('select[name="contactId"]').append("<option value=''>Select</option>");
		$('select[name="contactId"]').val('');
		$('select[name="contactId"]').trigger('change');
		$('input[name="countryName"]').val('');
		$('input[name="provinceName"]').val('');
	});

	$('select[name="contactId"]').change(function() {
		isPartyChanged = "Y";
		
		$('input[name="contact"]').val("");
		$('input[name="addressRoleContactCode"]').val("");

		$('input[name="contactPhoneAreaCode"]').val("");
		$('input[name="contactPhoneExchange"]').val("");
		$('input[name="contactPhoneStation"]').val("");
		$('input[name="contactPhoneCountryCode"]').val("");
		$('input[name="contactPhoneExtension"]').val("");
		
		$('input[name="contactCellCountryCode"]').val("");
		$('input[name="contactCellAreaCode"]').val("");
		$('input[name="contactCellExchange"]').val("");
		$('input[name="contactCellStation"]').val("");
		$('input[name="contactCellExtension"]').val("");

		$('input[name="contactFaxCountryCode"]').val("");
		$('input[name="contactFaxAreaCode"]').val("");
		$('input[name="contactFaxExchange"]').val("");
		$('input[name="contactFaxStation"]').val("");
		$('input[name="contactFaxExtension"]').val("");

		$('input[name="contactEmailAddress"]').val("");
		$('input[name="communicationMethodCode"]').val("");
		
		$('#partyComm1').attr("checked", false);
		$('#partyComm2').attr("checked", false);
		$('#partyComm3').attr("checked", false);
		$('#partyComm4').attr("checked", false);
		
		if ($('select[name="contactId"] option').length!=0 && $('select[name="contactId"] :selected').val()!='') {
			$.ajax({
				type : "POST",
				url : _context +"/booking/arole/contact",
				data : {
					addressRoleId : $('input[name="addressRoleId"]').val(),
					contactId : $('select[name="contactId"]').val()
				},
				success : function(responseText) {
					if(responseText.success)
						$("#parties").loadJSON(responseText.data);
				}
			});
		}
	});
	
	$('input[name="contact"]').change(function() {
		if($('select[name="contactId"] :selected').val()!="" && 
				$('select[name="contactId"] option:selected').text()!=$('input[name="contact"]').val())
		{
			var contactName = $('input[name="contact"]').val();
			$('select[name="contactId"]').val("");
			$('select[name="contactId"]').trigger('change');
			$('input[name="contact"]').val(contactName);
		}
	});

	$('#partiesRepeatContact').click(function(){
		if($("#bookingStatusCode :selected").val()=='CANC'){
			$("#repeatContactOverlay").gatesDisable();
		}else{
			$("#repeatContactOverlay").gatesEnable();
		}
		if($('input[name="addressRoleId"]').val()!='')
		{
			if($('select[name="contactId"] :selected').val()=='' && 
					$('input[name="contact"]').val()!='')
			{
				repeatCaller ="parties";
				
				$('#originalOrgName').val($('input[name="organizationName"]').val());
				//$('#originalOrgAddress').val($('input[name="address"]').val());
				$('#originalOrgAddress').val(formatAddRoleDscrForSC('', $('input[name="address"]').val(), 
						$('input[name="city"]').val(), $('input[name="state"]').val(), $('input[name="zip"]').val()));
				$('#repeatContactShipmentNo').val($('#shipmentNumber').val());
				$("#repeatContactOriginalAroleId").val($('input[name="addressRoleId"]').val());
				$("#repeatContactNameLabel").html($('input[name="contact"]').val());
				$("#repeatContactId").html($('select[name="contactId"]').html());
				//$("#repeatContactId option[value='']").remove();
				$("#repeatContactId :selected").val('');
				
				$("#repeatContactOverlay").dialog('open');
			}
			else
			{
				$('#partiesRepeatContact').attr("checked", false);
				alert("Please enter a non-CP contact first");
			}
		}
		else
		{
			$('#partiesRepeatContact').attr("checked", false);
			alert("Please select party address role first");
		}
	});
});

function singleAddressPartiesCall(){
	$.ajax({
		type : "POST",
		url : _context +"/cas/autocomplete.do?method=searchSingleAddressforBK&searchType=234&parentSearch="+encodeURIComponent($('input[name="organizationId"]').val() + '|'+ $('#partyTypeCode :selected').val() +'|'+$('#tradeCode').val()),
		
		success : function(responseText) {
			if(responseText.length == 1){
				/*var nameQualifier = responseText[0].nameQual;
				var city = responseText[0].city;
				var state = responseText[0].state;
				var finalAddress = formatAddRoleDscrForSC(nameQualifier, responseText[0].stAdd, city, state);
				$('input[name="address"]').val( finalAddress);*/
				addressAutoCompleteFunction(responseText[0]);
			} else {
				partiesAddressPopupSearch();
			}
			
		}
	});
}

function partiesOrgPredictive()
{
	//var urlPartyOrg = _context + '/cas/autocomplete.do?method=searchOrg&searchType=229&parentSearch=BK|'+$('#tradeCode').val();
	$('input[name="organizationName"]').gatesAutocomplete(
	{
		//source : urlPartyOrg,
		source:_context+'/cas/autocomplete.do',
		name: "Customer Name",
	 	extraParams: {
		 		 method: 'searchOrg',
		 		 searchType: '229',
		 		 parentSearch:  function() { return "BK|"+$('#tradeCode').val(); }
	 	},
	 	autoSelectWhenSingle:true,
		autoSelectFirst:true,
			autoSelectCriteria:function(item) {
			   if(item != null){
			     return 'true';
			  }
			  else {
			     return 'false';
			  }
			},
		formatItem : function(data) {
			$('input[name="organizationId"]').val("");
			return data.name + " - " + data.abbr;
		},
		formatResult : function(data) {
			return data.name + " - " + data.abbr;//data.abbr + "-" + data.name;
		}, 
		select : function(data) {
			$('input[name="organizationName"]').val(
					data.name + " - " + data.abbr);
			partyOrg = data.name + " - " + data.abbr;
			$('input[name="organizationId"]').val(data.id);
			$('input[name="organizationCode"]').val(data.abbr);
			$('input[name="isOneTimeCustomer"]').val('false');
			$('input[name="address"]').val('');
			$('input[name="address"]').trigger('change');
			//partiesAddPredictive();
			singleAddressPartiesCall();
			//partiesAddressPopupSearch();
		}
	});
}

function partiesAddPredictive()
{
	/*var urlPartyAdd = _context
	+ '/cas/autocomplete.do?method=searchAddRoleBK&searchType=234&parentSearch='
	+ $('input[name="organizationId"]').val()
	+ '|'+getAddressRoleTypeFromParty()+'|'+$('#tradeCode').val();*/

	$('input[name="address"]').gatesAutocomplete({
		//source : urlPartyAdd,
		source:_context+'/cas/autocomplete.do',
		name: "Customer Address",
	 	extraParams: {
		 		 method: 'searchAddRoleBK',
		 		 searchType: '234',
		 		 parentSearch:  function() { return $('input[name="organizationId"]').val() + '|'+getAddressRoleTypeFromParty()+'|'+$('#tradeCode').val(); }
	 	},
	 	autoSelectWhenSingle:true,
		autoSelectFirst:true,
			autoSelectCriteria:function(item) {
			   if(item != null){
			     return 'true';
			  }
			  else {
			     return 'false';
			  }
			},
		formatItem : function(data) {
			/*var partyTypeCode = $('#partyTypeCode :selected').val();
			var addressRoleType = data.addType;
			
			if((partyTypeCode=='20' || partyTypeCode=='21' || partyTypeCode=='31') && addressRoleType!='ALL' && addressRoleType!='FREIGHT PAYABLE')
			{
				return "";
			}
			else if((partyTypeCode=='22' || partyTypeCode=='29') && addressRoleType!='ALL' && addressRoleType!='SHP TO' && addressRoleType!='NOTIFY')
			{
				return "";
			}
			else if(partyTypeCode=='30' && addressRoleType!='ALL' && addressRoleType!='SHPFRM' && addressRoleType!='FWDAGT')
			{
				return "";
			}
			else{*/
				var nameQualifier = data.nameQual;
				var city = data.city;
				var state = data.state;
				var zip = data.zip;
				var finalAddress = formatAddRoleDscrForSC(nameQualifier, data.stAdd, city, state, zip);
				return finalAddress;
			/*}*/
		},
		formatResult : function(data) {
			/*var nameQualifier = data.nameQual;
			var city = data.city;
			var state = data.state;
			var zip = data.zip;
			var finalAddress = formatAddRoleDscrForSC(nameQualifier, data.stAdd, city, state, zip);*/
			var nameQualifier = '';
			if(data.nameQual!=undefined && data.nameQual!=null && data.nameQual!='null' && data.nameQual!='')
				nameQualifier =data.nameQual+" - ";
			var finalAddress = nameQualifier+data.stAdd;
			return finalAddress;
		},
		select : function(data) {
			addressAutoCompleteFunction(data);
		}
	});
}

function partiesPopupSearch() {
	orgCaller = 'parties';
	var partiesName = $('input[name="organizationName"]').val();
	var splitpartiesName = "";
	var actionUrl = "";
	if (partiesName.indexOf("-") > 0) {
		splitpartiesName = partiesName.split("-");
		actionUrl = _context + '/cas/orgSearchLookup.do?filterValue1='+ encodeURIComponent(splitpartiesName[0]) +'|'
		+ $('#tradeCode').val() + '|BK|||'+encodeURIComponent(splitpartiesName[1]);
	} else {
		splitpartiesName = partiesName;
		actionUrl = _context + '/cas/orgSearchLookup.do?filterValue1='
				+ encodeURIComponent(partiesName) + '|'+$('#tradeCode').val() + '|BK';
	}
	var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, 'CustomerSearch', windowStyle);
}

function partiesAddressPopupSearch() {
	orgCaller = 'parties';
	
	if ($.trim($('input[name="organizationId"]').val())=='') { 
		alert("Please select organization first");
	}/*else if($('#tradeCode :selected').val()==''){
		alert("Please select Trade");
	}*/else {
		var actionUrl = _context + '/cas/addRoleBKLookup.do?filterValue1='
				+ $('input[name="organizationId"]').val() + '&filterValue2='+getAddressRoleTypeFromParty()+'&filterValue3='+$('#tradeCode').val();
		var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
		window.open(actionUrl, 'AddressSearch', windowStyle);
	}
}


function clearCityStateZip() {
	$('input[name="nameQualifier"]').val('');
	$('input[name="careOf"]').val('');
	$('input[name="city"]').val('');
	$('input[name="state"]').val('');
	$('input[name="zip"]').val('');
	$('input[name="countryName"]').val('');
	$('input[name="provinceName"]').val('');
}

function getAddressRoleTypeFromParty()
{
	var selectedParty = $('select[name="partyTypeCode"] :selected').val();
	var addressRoleTypeCode = "";
	
	if(selectedParty=='20' || selectedParty=='21' || selectedParty=='31')
		addressRoleTypeCode = "04";
	else if(selectedParty=='30')
		addressRoleTypeCode = "13";
	else if(selectedParty=='22' || selectedParty=='29')
		addressRoleTypeCode = "12";
	
	return addressRoleTypeCode;
}


function addressAutoCompleteFunction(data)
{
	/*var nameQualifier = data.nameQual;
	var city = data.city;
	var state = data.state;
	var finalAddress = formatAddRoleDscrForSC(nameQualifier, data.stAdd, city, state);*/
	var nameQualifier = '';
	if(data.nameQual!=undefined && data.nameQual!=null && data.nameQual!='null' && data.nameQual!='')
	{
		$('input[name="nameQualifier"]').val(data.nameQual);
		nameQualifier =data.nameQual+" - ";
	}
	else
		$('input[name="nameQualifier"]').val('');
	var finalAddress = nameQualifier+data.stAdd;
	partyAddr = finalAddress;
	$('input[name="address"]').val(finalAddress);
	
	$('input[name="addressRoleId"]')
			.val(data.addRole);
	$('input[name="city"]')
			.val(data.city);
	$('input[name="state"]')
			.val(data.state);
	$('input[name="zip"]').val(
			data.zip);
	if(data.coOrgName!=null && data.coOrgName!='null')
		$('input[name="careOf"]').val(data.coOrgName);
	else
		$('input[name="careOf"]').val('');
	$('input[name="countryName"]').val(data.cntry);
	$('input[name="provinceName"]').val(data.provnc);
	
	$('input[name="address"]').val(partyAddr);
	isPartyChanged = "";
	
	partiesContactUpdate();
}

function partiesAddressUpdate(data)
{
	var values = data.split("|");
	
	isPartyChanged = "Y";

	$('input[name="city"]').val(values[2]);
	$('input[name="state"]').val(values[6]);
	$('input[name="zip"]').val(values[8]);
	var nameQualifier = '';
	if(values[4]!=undefined && values[4]!=null && values[4]!='null' && values[4]!='')
	{
		$('input[name="nameQualifier"]').val(values[4]);
		nameQualifier =values[4]+" - ";
	}
	else
		$('input[name="nameQualifier"]').val('');
	if(values[3]!=null && values[3]!='null')
		$('input[name="careOf"]').val(values[3]);
	else
		$('input[name="careOf"]').val('');
	$('input[name="countryName"]').val(values[11]);
	$('input[name="provinceName"]').val(values[10]);
	//var finalAddress = formatAddRoleDscrForSC(values[4],values[7],values[2],values[6]);//nameQualifier, addressLine1, city, state)
	var finalAddress = nameQualifier+values[7];
	$('input[name="address"]').val(finalAddress);
	partyAddr = finalAddress;
	$('input[name="addressRoleId"]').val(values[9]);

	partiesContactUpdate();
}

function partiesContactUpdate()
{
	$('select[name="contactId"]').children().remove();
	$('select[name="contactId"]').append("<option value=''>Select</option>");
	$('select[name="contactId"]').val('');
	$('select[name="contactId"]').trigger('change');
	$.ajax({
			type : "POST",
			url : _context +"/booking/arole/getContactList",
			data : {
				addressRoleId : $('input[name="addressRoleId"]').val()
			},
			success : function(responseText) {
				
				$.each(responseText.data.contactList,
					function(key, value) {
						$('select[name="contactId"]').append($("<option/>",
						{
							value : key,
							text : value
						}));
				});
			}
	});
}

function isAmericanParty(name)
{
	var val = $('input[name="'+name+'"]').val();
	if(val=='' || val=='1' || val=='01' || val=='001')
		return true;
	else
		return false;
};$(document)
		.ready(
				function() {
					var isEdit=false;
					var colNamesReferenceNumber = [ 'Id', 'Process Level',
							'Copy Bill To Header', 'SHAC', 'Type',
							'Reference Number', 'Actions' ];
					var colModelReferenceNumber = [
							{
								name : 'seqNo',
								index : 'seqNo',
								width : 55,
								hidden : true
							},
							{
								name : 'processLevelCode',
								index : 'processLevelCode',
								width : 55,
								hidden : true
							},
							{
								name : 'isCopyBillToHeader',
								index : 'isCopyBillToHeader',
								width : 55,
								hidden : true
							},
							{
								name : 'shipmentAddnlChrsticIdDs',
								index : 'shipmentAddnlChrsticIdDs',
								width : 55,
								hidden : true
							},
							{
								name : 'typeCode',
								index : 'typeCode',
								width : 150,
								editable : true,
								editrules : {
									required : true,
									custom : true,
									custom_func : function(value, colname) {
										if (value == '') {
											return [ false,
													"Type cannot be blank." ];
										} else {
											return [ true, "" ];
										}
									}
								},
								formatter : 'select',
								edittype : "select",
								editoptions : {
									value : ":Select;S:Shipper;C:Consignee;B:Both S&C;F:Forwarder;I:ITN;E:ITN-Exempt;T:Military TCN;A:Alaska/Hawaii Booking;O: Original Booking"
								}
							},
							{
								name : 'referenceNumberNotation',
								index : 'referenceNumberNotation',
								width : 200,								
								editable : true,
								editrules : {									
									custom : true,
									custom_func : function(value, colname) {
										var result = true;
										if(! isEdit){
											if (value.indexOf(',') != -1) {
												if($.trim(value) == ','){
													result = false;
												}
											}
										}
										if (null == value || $.trim(value) == '' ) {
											return [ false,
													"Reference Number cannot be spaces when Reference Type is present." ];
										}
										
										if (!result) {
											return [ false,
													"Reference Number cannot be spaces when Reference Type is present." ];
										} else {
											return [ true, "" ];
										}
									}
								},
								editoptions : {
									maxlength : 20
								},
								//formatter : "textarea",
								//edittype : "textarea",								
								//editoptions : {multiple: true}
							}, {
								name : 'actions',
								index : 'actions',
								width : 100,
								align : "center",
								editable : false,
								search : false,
								sortable : false,
								formatter : 'actions',
								formatoptions : {
									keys : true,
									url: _context+'/booking/referenceNumber/update', 
									onEdit: function(rowId){										
										isEdit=true;
									},
									afterSave: function()
									{
										isBookingChanged = "Y";
										isEdit=false;
										if(!isReferenceNumberMarksDeletable)
										{
										  $(".ui-icon.ui-icon-trash").hide();
										}										
										return true;
									},
									afterRestore: function(){
										isEdit=false;										
									}
								}
							} ];

					var jsonReaderReference = {
						root : "rows",
						page : "page",
						total : "total",
						records : "records",
						repeatitems : false,
						cell : "cell",
						id : "seqNo"
					};
					
					/*Booking Security*/
					var pagerMultiDelete = true;
					//D027890:multiple blank rows in Reference & Commodity
					var refNoReadOnlyGrid = false;
					if(isReferenceNumberMarksDisplayOnly && !isReferenceNumberMarksModifiable){
						pagerMultiDelete = false;
						refNoReadOnlyGrid = true;
					}
					
					/*Booking Security*/
					if(isReferenceNumberMarksDisplayOnly || isReferenceNumberMarksModifiable){
						createGrid("referenceNumberGrid", // grid id for user
						"pagerGrid", // page id for user
						_context+'/booking/referenceNumber/load',//load URL
						_context+'/booking/referenceNumber/add',// add URL
						_context+'/booking/referenceNumber/update',// edit URL
						_context+'/booking/referenceNumber/delete',// delete URL
						_context+'/booking/referenceNumber/deleteSelected',//multidelete URL
						colNamesReferenceNumber, //colnames
						colModelReferenceNumber,//colmodel
						"Reference Number(s)", //caption
						268, //height
						10, //rownum
						[ 10, 20, 30 ], //rowlist
						true,//multiselect
						pagerMultiDelete, //multidelete
						false, // load once 
						refNoReadOnlyGrid, //read only grid
						jsonReaderReference, //Json reader
						false, //hide edit
						false, //hide delete
						true, //autowidth
						true, //row numbers
						true, //hidecustom Add row
						false, //hide pager row
						null, //custom edit method
						null, //custom grid complete
						referenceGridLoadComplete, // custom load complete
						false, //default hidden
						true, //row color based on status
						false, //cell edit
						refGridAfterSubmit // delete after submit
						);
						
					}
					
					$('#marksAndNumbers')
							.change(
									function() {
										if ($('#marksAndNumbers').val() == ''
												|| $('#marksAndNumbers').val() == null) {
											$('#marksHeaderCheckBox').attr(
													'checked', false);
										} else {
											$('#marksHeaderCheckBox').attr(
													'checked', true);
										}
									});
					/*$('#marksAndNumbers').bind('paste', function(event){
						var pastedText = undefined;
						  if (window.clipboardData && window.clipboardData.getData) { // IE
						    pastedText = window.clipboardData.getData('Text');
						  } else if (e.clipboardData && e.clipboardData.getData) {
						    pastedText = e.clipboardData.getData('text/plain');
						  }
						setTimeout(function(){
							wrapTextArea('marksAndNumbers', 20);
							}, 250);
						return true;
					});
					
					$('#marksAndNumbers').live('keyup', function(evt){
						
						var keyCode = evt.keyCode;
						if(keyCode==32 || (48<=keyCode && keyCode<=57)
								|| (65<=keyCode && keyCode<=90) || (96<=keyCode && keyCode<=107) 
								|| (109<=keyCode && keyCode<=111))
						{
				            //alert("Line Length exceeded 20 characters");
				            //evt.preventDefault(); // prevent characters from appearing
							//formatMarksAndNumbers();
							wrapTextArea('marksAndNumbers', 20);
						}
						return true;
					});*/
					
					$('#marksAndNumbers').blur(function(event){
						wrapTextArea('marksAndNumbers', 20);
						
						var noOfLines = $('#marksAndNumbers').val().split('\n');
						var marksAndNumbers = "";
						var rowCount = 1;
						var emptyRow = false;
						$.each(noOfLines, function(index, value) {
							if($.trim(value) == '') {
								rowCount += 1;
								emptyRow = true;
							} else {
								marksAndNumbers += value.replace(/^\s+/,'');
								emptyRow = false;
							}
							if(index < (noOfLines.length - rowCount) && !emptyRow) {
								marksAndNumbers += '\n';
							}
						});
						$('#marksAndNumbers').val(marksAndNumbers);
						
						return true;
					});

				});

var referenceGridLoadComplete = function() {
	//$('#pagerGrid .ui-pg-input').attr("readonly", true);
	$('#referenceNumberNotation').parent().html("<textarea multiple=\"multiple\" id=\"referenceNumberNotation\" name=\"referenceNumberNotation\" cols=\"20\" rows=\"2\" role=\"textbox\" multiline=\"true\" class=\"FormElement\" style=\"resize: none; width: 190px;\"></textarea>");
	var referenceNumberCount = $("#referenceNumberGrid").getGridParam(
			"reccount");
	if (referenceNumberCount > 0) {
		$('#referenceHeaderCheckBox').attr('checked', true);
	} else {
		$('#referenceHeaderCheckBox').attr('checked', false);
	}
	
	$('#gbox_referenceNumberGrid #sData').click(function(){
		if($("#gbox_referenceNumberGrid #referenceNumberNotation")
				.attr("readonly") == 'readonly')
			return false;
		else
		{
			isBookingChanged = "Y";
			return true;
		}
	});
	
	$("#gbox_referenceNumberGrid #typeCode").live('keydown', function(evt){
		var theEvent = evt || window.event;
		  var key = theEvent.keyCode || theEvent.which;
		  if(key == '9' && $("#gbox_referenceNumberGrid #typeCode :selected").val()==''){
			  $('#marksAndNumbers').focus();
			  return false;
		  }
		  return true;
	});
	
	
	
	referenceNumberAddRowEnableDisable();
	
	$("#gbox_referenceNumberGrid #typeCode").change(function(){
		referenceNumberAddRowEnableDisable();
		$('#referenceNumberNotation').focus();
	});
	
	resetRefAddRow();
	hideGridsEditDelete();
};

function resetRefAddRow(){
	$("#gbox_referenceNumberGrid #referenceNumberNotation").val('');
	$('#gbox_referenceNumberGrid #typeCode').selected().val('');
	$("#gbox_referenceNumberGrid #referenceNumberNotation").attr("readonly", true);
	$("#gbox_referenceNumberGrid #sData").css('background-color','#D8D8D8');
	$("#gbox_referenceNumberGrid #referenceNumberNotation").css('resize','none');
	$("#gbox_referenceNumberGrid #referenceNumberNotation").css('width','190px');
	$("#gbox_referenceNumberGrid #referenceNumberNotation").attr('rows','2');	
}

var refGridAfterSubmit = function(result)
{
	if(result.success){
		isBookingChanged = "Y";
	}
};

function referenceNumberAddRowEnableDisable()
{
	if($("#gbox_referenceNumberGrid #typeCode :selected").val()=='')
	{
		$("#gbox_referenceNumberGrid #referenceNumberNotation").val('');
		$("#gbox_referenceNumberGrid #referenceNumberNotation").attr("readonly", true);
		$("#gbox_referenceNumberGrid #sData").css('background-color','#D8D8D8');
	}
	else
	{
		$("#gbox_referenceNumberGrid #referenceNumberNotation").attr("readonly", false);
		$("#gbox_referenceNumberGrid #sData").css('background-color','#cae0f7');
	}
}

function wrapTextArea(textAreaId, maxLength)
{
	 var valToPrint = '';
	 var valArr = $('#'+textAreaId).val().split("\n");
	 var remainder = '';
	 for(var i = 0; i < valArr.length; i++) 
	 {
		 var lineLength = '';
		 if(remainder != '')
		 {
			valToPrint = valToPrint + "\n" + remainder;
			remainder = '';
		 }
		 if(valArr[i].length > maxLength)
		 {
			 var firstTime = true;
			 if(i != 0)
				 valToPrint = valToPrint + "\n";
			 var lineArr = valArr[i].split(" ");
			 for(var k=0;k<lineArr.length;k++)
			 {
				var word = remainder;
				if(lineLength != '' && word !='')
					word = lineLength + ' ' + word;
				else
					word = lineLength + word;
				
				if(word.length > maxLength)
				{
					if(firstTime)
						valToPrint = valToPrint + remainder;
					else
						valToPrint = valToPrint + "\n" + remainder;
					firstTime = false;
					remainder = '';
					lineLength = remainder;
					
					word = lineArr[k];
					if(lineLength != '' && word !='')
						word = lineLength + " " + word;
					else
						word = lineLength + word;
					
					if(word.length > maxLength)
					{
						if(lineArr[k].length > maxLength)
						{
							 var count = Math.floor(lineArr[k].length/maxLength);
							 for(var j=1; j<=count; j++)
							 {
								 if(firstTime)
									 valToPrint = valToPrint + lineArr[k].substr(0,maxLength);
								 else
									 valToPrint = valToPrint + "\n" + lineArr[k].substr(0,maxLength);
								 firstTime = false;
								 lineLength = lineArr[k].substr(0,maxLength);
								 lineArr[k] = lineArr[k].substr(maxLength);
							 }
							 remainder = lineArr[k];
						}
						else
						{
							if(firstTime)
								valToPrint = valToPrint + lineArr[k];
							else
								valToPrint = valToPrint + "\n" + lineArr[k];
							firstTime = false;
							lineLength = lineArr[k];
						}
					}
					else
					{
						if(lineLength!='' || k!=0)
						{
							valToPrint = valToPrint + " " + lineArr[k];
							lineLength = lineLength + " " + lineArr[k];
							firstTime = false;
						}
						else if(lineArr[k] != 0)
						{
							valToPrint = valToPrint + lineArr[k];
							lineLength = lineLength + lineArr[k];
							firstTime = false;
						}
					}
				}
				else
				{
					if(lineLength!='' && remainder !='')
					{
						valToPrint = valToPrint + " " + remainder;
						lineLength = lineLength + " " + remainder;
						firstTime = false;
					}
					else if(remainder !='')
					{
						valToPrint = valToPrint + remainder;
						lineLength = lineLength + remainder;
						firstTime = false;
					}
					
					word = lineArr[k];
					if(lineLength != '' && word!='')
						word = lineLength + " " + word;
					else
						word = lineLength + word;
					
					if(word.length > maxLength)
					{
						if(lineArr[k].length > maxLength)
						{
							 var count = Math.floor(lineArr[k].length/maxLength);
							 for(var j=1; j<=count; j++)
							 {
								 if(firstTime)
									 valToPrint = valToPrint + lineArr[k].substr(0,maxLength);
								 else
									 valToPrint = valToPrint + "\n" + lineArr[k].substr(0,maxLength);
								 firstTime = false;
								 lineLength = lineArr[k].substr(0,maxLength);
								 lineArr[k] = lineArr[k].substr(maxLength);
							 }
							 remainder = lineArr[k];
						}
						else
						{
							if(firstTime)
								valToPrint = valToPrint + lineArr[k];
							else
								valToPrint = valToPrint + "\n" + lineArr[k];
							firstTime = false;
							lineLength = lineArr[k];
						}
					}
					else
					{
						if(lineLength!='' || k!=0)
						{
							valToPrint = valToPrint + " " + lineArr[k];
							lineLength = lineLength + " " + lineArr[k];
							firstTime = false;
						}
						else if(lineArr[k] != '')
						{
							valToPrint = valToPrint + lineArr[k];
							lineLength = lineLength + lineArr[k];
							firstTime = false;
						}
					}
				}
			}
		 }
		 else
		 {
			if(i==0)
				valToPrint = valArr[i];
			else
				valToPrint = valToPrint + "\n" + valArr[i];
			lineLength = valArr[i];
		 }
	 }
	 if(remainder != '')
	 {
		 if(valToPrint !='')
			 valToPrint = valToPrint + "\n" + remainder;
		 else
			 valToPrint = valToPrint + remainder; 
	 }
		 
	 $('#'+textAreaId).val(valToPrint);
}

//already present in clause.js
/*function imposeMaxLength(Object, MaxLen) {
	return (Object.value.length <= MaxLen - 1);
}*/;var lastLoadService = "";
var lastDischargeService = "";

var lastOriginPortCode = "";
var lastOriginPortDescription = "";
var lastOriginPortCodeDescription = "";

var lastDestinationPortCode = "";
var lastDestinationPortDescription = "";
var lastDestinationPortCodeDescription = "";

var lastBlOriginCode = "";
var lastBlOriginDescription = "";
var lastBlOriginCodeDescription = "";

var lastBlDestinationCode = "";
var lastBlDestinationDescription = "";
var lastBlDestinationCodeDescription = "";
var zip=" ";
var zone=" ";

$(function() {
	
	getAllLoadServices();
	getAllDischargeServices();
	
	$("#convCgoApptCutoffDate").datepicker({
		dateFormat : 'mm-dd-yy',
		onSelect : function(dateText, elem)
		{
			isBookingChanged = "Y";
		}
	});

	$("#convCgoEstArrivalDate").datepicker({
		dateFormat : 'mm-dd-yy',
		onSelect : function(dateText, elem)
		{
			isBookingChanged = "Y";
		}
	});

	$("#intermodalDepartureDate").datepicker({
		dateFormat : 'mm-dd-yy',
		onSelect : function(dateText, elem)
		{
			isBookingChanged = "Y";
		}
	});
	
	$("#requiredDeliveryDate").datepicker({
		dateFormat: 'mm-dd-yy',
		onSelect : function(dateText, elem)
		{
			isBookingChanged = "Y";
			if(isMilitaryModifiable)
				$('#milRequiredDeliveryDate').val($("#requiredDeliveryDate").val());
		}
	});
	
	$("#premiumRDD").datepicker({
		dateFormat: 'mm-dd-yy',
		onSelect : function(dateText, elem)
		{
			isBookingChanged = "Y";
			/*if(isMilitaryModifiable)
				$('#milRequiredDeliveryDate').val($("#premiumRDD").val());*/
		}
	});
	
	$('#isVGMRequired').change(function(){
		setRoutingHeader();
	});
	
	$('#requiredDeliveryDate').change(function(){
		if($(this).val()=='' && isMilitaryModifiable){
			$('#milRequiredDeliveryDate').val($(this).val());
		} else if(!validateDate('requiredDeliveryDate', false)){
			$(this).validationEngine('showPrompt', '* Enter date in Format (mm-dd-yyyy)', 'error', 'topRight', true);
		} else if(isMilitaryModifiable){
			$('#milRequiredDeliveryDate').val($(this).val());
		}
	});
	
	$('#premiumRDD').change(function(){
		if(!validateDate('premiumRDD', false)){
			$(this).validationEngine('showPrompt', '* Enter date in Format (mm-dd-yyyy)', 'error', 'topRight', true);
		} /*else if(isMilitaryModifiable){
			$('#milRequiredDeliveryDate').val($(this).val());
		}*/
	});

	// Autocompleter and lookup for BL Origin
	$('#blOriginCityCodeDescription').gatesAutocomplete({
		source : _context + '/tm/Autocomplete/autoCompCityPredictive',
		name: "Origin City Code",
		autoSelectWhenSingle:true,
		autoSelectFirst:true,
			autoSelectCriteria:function(item) {
			   if(item != null){
			     return 'true';
			  }
			  else {
			     return 'false';
			  }
			},
		
		formatItem : function(item) {
			if(item.stateCode != " " && item.stateCode != undefined){
				return item.cityCode+"-"+item.cityName+","+item.stateCode;	
			}
			else{
				return item.cityCode+"-"+item.cityName;
			}
				//return item.cityCode+"-"+item.cityName+","+item.stateCode;
		},
		formatResult: function(item) {
			if(item.stateCode != " " && item.stateCode != undefined){
				return item.cityCode+"-"+item.cityName+","+item.stateCode;	
			}
			else{
				return item.cityCode+"-"+item.cityName;
			}
				//return item.cityCode+"-"+item.cityName+","+item.stateCode;
		},
		select : function(item) {
			var desc = "";
			if(item.stateCode != " " && item.stateCode != undefined){
				desc =  item.cityName+","+item.stateCode;	
			}
			else{
				desc = item.cityName;
			}
			
			$('#blOriginCityCode').val(item.cityCode);
			$('#blOriginCityDescription').val(desc);
			blOriginCityChangeFunction();
			isBookingChanged = "Y";
		}
	});

	$('#blOriginCityCodeDescription').gatesPopUpSearch({
		func : function() {
			if($('#blOriginCityCode').val()!='' && $('#bookingId').val()!='')
			{
				$.ajax({
					url: _context +"/booking/routing/validateSpotPull",
					data : {cityCode:$('#blOriginCityCode').val(), bookingId:$('#bookingId').val(), marker:'blOrigin'},
					success: function(responseText){
						showResponseMessages('msgDiv', responseText);
						if(responseText.success)
							placePopupSearch($('#blOriginCityCodeDescription').val(), 2);
					}
				});
			}
			else
				placePopupSearch($('#blOriginCityCodeDescription').val(), 2);
		}
	});

	$('#blOriginCityCodeDescription').blur(function() {
		if($('.ui-active-menuitem').length == 0 && !$('.ui-menu-item').is(':visible'))
		{
			if ($('#blOriginCityCode').val() == "")
			{
				$('#blOriginCityDescription').val('');
				$('#blOriginCityCodeDescription').val('');
			}
			else if($('#blOriginCityCodeDescription').val() == '')
			{
				$('#blOriginCityCode').val('');
				$('#blOriginCityDescription').val('');
			}
			else if($('#blOriginCityCode').val()+"-"+$('#blOriginCityDescription').val()!=$('#blOriginCityCodeDescription').val())
			{
				$('#blOriginCityCode').val('');
				$('#blOriginCityDescription').val('');
				$('#blOriginCityCodeDescription').val('');
			}
			checkPickupCarrier();
			checkPlaceOfReceiptDefaultValue();
			checkOriginPtDefaultValue();
			setRoutingHeader();
		}
		return true;
	});

	// Autocompleter and lookup for Origin Port
	$('#originPortCityCodeDescription')
			.gatesAutocomplete(
					{
						source : _context
								+ '/tm/Autocomplete/autoCompCityWithParameter?param=withPort',
						name: "Origin Port City Code",
						autoSelectWhenSingle:true,
						  autoSelectFirst:true,
							autoSelectCriteria:function(item) {
							   if(item != null){
							     return 'true';
							  }
							  else {
							     return 'false';
							  }
							},
						formatItem : function(item) {
							if(item.stateCode != " " && item.stateCode != undefined){
								return item.cityCode+"-"+item.cityName+","+item.stateCode;	
							}
							else{
								return item.cityCode+"-"+item.cityName;
							}
								//return item.cityCode+"-"+item.cityName+","+item.stateCode;
						},
						formatResult: function(item) {
							if(item.stateCode != " " && item.stateCode != undefined){
								return item.cityCode+"-"+item.cityName+","+item.stateCode;	
							}
							else{
								return item.cityCode+"-"+item.cityName;
							}
								//return item.cityCode+"-"+item.cityName+","+item.stateCode;
						},
						select : function(item) {
							var desc = "";
							if(item.stateCode != " " && item.stateCode != undefined){
								desc =  item.cityName+","+item.stateCode;	
							}
							else{
								desc = item.cityName;
							}
							
							$('#originPortCityCode').val(item.cityCode);
							$('#originPortCityDescription').val(desc);
							originPortCityChangeFunction(item.cityCode);
							isBookingChanged = "Y";
						}
					});

	$('#originPortCityCodeDescription').gatesPopUpSearch({
		func : function() {
			/*if($('#tradeCode').val()=='')
				alert("Please enter a valid trade");
			else*/
				portPopupSearch($('#originPortCityCodeDescription').val(), 3);
		}
	});

	$('#originPortCityCodeDescription').blur(function() {
		if($('.ui-active-menuitem').length == 0 && !$('.ui-menu-item').is(':visible'))
		{
			if ($('#originPortCityCode').val() == "")
			{
				$('#originPortCityCodeDescription').val('');
				$('#originPortCityDescription').val('');
				resetOriginalOrgValues();
			}
			else if($('#originPortCityCodeDescription').val() == '')
			{
				$('#originPortCityCode').val('');
				$('#originPortCityDescription').val('');
				resetOriginalOrgValues();
			}
			else if($('#originPortCityCode').val()+"-"+$('#originPortCityDescription').val()!=$('#originPortCityCodeDescription').val())
			{
				$('#originPortCityCode').val('');
				$('#originPortCityDescription').val('');
				$('#originPortCityCodeDescription').val('');
				resetOriginalOrgValues();
			}
		}
		return true;
	});

	// Autocompleter and lookup for Destination Port
	$('#destinationPortCityCodeDescription')
			.gatesAutocomplete(
					{
						source : _context
								+ '/tm/Autocomplete/autoCompCityWithParameter?param=withPort',
						name: "Destination Port City Code",
						autoSelectWhenSingle:true,
						  autoSelectFirst:true,
							autoSelectCriteria:function(item) {
							   if(item != null){
							     return 'true';
							  }
							  else {
							     return 'false';
							  }
							},
						
						formatItem : function(item) {
							if(item.stateCode != " " && item.stateCode != undefined){
								return item.cityCode+"-"+item.cityName+","+item.stateCode;	
							}
							else{
								return item.cityCode+"-"+item.cityName;
							}
								//return item.cityCode+"-"+item.cityName+","+item.stateCode;
						},
						formatResult: function(item) {
							if(item.stateCode != " " && item.stateCode != undefined){
								return item.cityCode+"-"+item.cityName+","+item.stateCode;	
							}
							else{
								return item.cityCode+"-"+item.cityName;
							}
								//return item.cityCode+"-"+item.cityName+","+item.stateCode;
						},
						select : function(item) {
							var desc = "";
							if(item.stateCode != " " && item.stateCode != undefined){
								desc =  item.cityName+","+item.stateCode;	
							}
							else{
								desc = item.cityName;
							}
							
							$('#destinationPortCityCode').val(item.cityCode);
							$('#destinationPortCityDescription').val(desc);
							destinationPortCityChangeFunction(item.cityCode);
							isBookingChanged = "Y";
						}
					});

	$('#destinationPortCityCodeDescription').gatesPopUpSearch({
		func : function() {
			/*if($('#tradeCode').val()=='')
				alert("Please enter a valid trade");
			else*/
				portPopupSearch($('#destinationPortCityCodeDescription').val(), 4);
		}
	});
	//D024236: 	Maintain Bill: TSRC
	$('#overridePickupCarrierCode').gatesPopUpSearch({
		func : function() {
			var tariff = $("#tariff").val();
			var item = $("#tariffItemNumber").val();
			if($('#1_eqpType').length)
				var type = $('#1_eqpType').val();
			if($('#1_eqpSize').length)
				var size = $('#1_eqpSize').val();
			if($('#1_eqpHeight').length)
				var height = $('#1_eqpHeight').val();
			var city = $("#blOriginCityCodeDescription").val();
			var port = $("#originPortCityCodeDescription").val();
			var currentDate = setFormattedDate($.datepicker.formatDate('mm-dd-yy',new Date()));
			
			carrierPopupSearch(currentDate, '', $('#overridePickupCarrierCode').val(), 
					tariff, item, type,  size, height, city, "O", port);
		}
	});
	
	$('#overrideDeliveryCarrierCode').gatesPopUpSearch({
		func : function() {
			var tariff = $("#tariff").val();
			var item = $("#tariffItemNumber").val();
			if($('#1_eqpType').length)
				var type = $('#1_eqpType').val();
			if($('#1_eqpSize').length)
				var size = $('#1_eqpSize').val();
			if($('#1_eqpHeight').length)
				var height = $('#1_eqpHeight').val();
			var city = $("#blDestinationCityCodeDescription").val();
			var port = $("#destinationPortCityCodeDescription").val();
			var currentDate = setFormattedDate($.datepicker.formatDate('mm-dd-yy',new Date()));
			
			carrierPopupSearch(currentDate, '', $('#overrideDeliveryCarrierCode').val(), 
					tariff, item, type,  size, height, city, "D", port);
		}
	});
	
	function setFormattedDate(fromDate){
		var d = $.datepicker.parseDate('mm-dd-yy',  fromDate);
		return $.datepicker.formatDate( "mm-dd-yy", d);
	}

	$('#destinationPortCityCodeDescription').blur(function() {
		if($('.ui-active-menuitem').length == 0 && !$('.ui-menu-item').is(':visible'))
		{
			if ($('#destinationPortCityCode').val() == "")
			{
				$('#destinationPortCityCodeDescription').val('');
				$('#destinationPortCityDescription').val('');
				resetOriginalDestValues();
			}
			else if($('#destinationPortCityCodeDescription').val() == '')
			{
				$('#destinationPortCityCode').val('');
				$('#destinationPortCityDescription').val('');
				resetOriginalDestValues();
			}
			else if($('#destinationPortCityCode').val()+"-"+$('#destinationPortCityDescription').val()!=$('#destinationPortCityCodeDescription').val())
			{
				$('#destinationPortCityCode').val('');
				$('#destinationPortCityDescription').val('');
				$('#destinationPortCityCodeDescription').val('');
				resetOriginalDestValues();
			}
		}
		return true;
	});

	// Autocompleter and lookup for BL Destination
	$('#blDestinationCityCodeDescription').gatesAutocomplete({
		source : _context + '/tm/Autocomplete/autoCompCityPredictive',
		name: "Destination City Code",
		autoSelectWhenSingle:true,
		  autoSelectFirst:true,
			autoSelectCriteria:function(item) {
			   if(item != null){
			     return 'true';
			  }
			  else {
			     return 'false';
			  }
			},
		formatItem : function(item) {
			if(item.stateCode != " " && item.stateCode != undefined){
				return item.cityCode+"-"+item.cityName+","+item.stateCode;	
			}
			else{
				return item.cityCode+"-"+item.cityName;
			}
				//return item.cityCode+"-"+item.cityName+","+item.stateCode;
		},
		formatResult: function(item) {
			if(item.stateCode != " " && item.stateCode != undefined){
				return item.cityCode+"-"+item.cityName+","+item.stateCode;	
			}
			else{
				return item.cityCode+"-"+item.cityName;
			}
				//return item.cityCode+"-"+item.cityName+","+item.stateCode;
		},
		select : function(item) {
			var desc = "";
			if(item.stateCode != " " && item.stateCode != undefined){
				desc =  item.cityName+","+item.stateCode;	
			}
			else{
				desc = item.cityName;
			}
			
			$('#blDestinationCityCode').val(item.cityCode);
			$('#blDestinationCityDescription').val(desc);
			blDestinationCityChangeFunction();
			isBookingChanged = "Y";
		}
	});

	$('#blDestinationCityCodeDescription').gatesPopUpSearch({
		func : function() {
			
			if($('#blDestinationCityCode').val()!='' && $('#bookingId').val()!='')
			{
				$.ajax({
					url: _context +"/booking/routing/validateSpotPull",
					data : {cityCode:$('#blDestinationCityCode').val(), bookingId:$('#bookingId').val(), marker:'blDestination'},
					success: function(responseText){
						showResponseMessages('msgDiv', responseText);
						if(responseText.success)
							placePopupSearch($('#blDestinationCityCodeDescription').val(), 5);
					}
				});
			}
			else
				placePopupSearch($('#blDestinationCityCodeDescription').val(), 5);
		}
	});

	$('#blDestinationCityCodeDescription').blur(function() {
		
		if($('.ui-active-menuitem').length == 0 && !$('.ui-menu-item').is(':visible'))
		{
			if ($('#blDestinationCityCode').val() == "")
			{
				$('#blDestinationCityCodeDescription').val('');
			}
			else if($('#blDestinationCityCodeDescription').val() == '')
			{
				$('#blDestinationCityCode').val('');
				$('#blDestinationCityDescription').val('');
			}
			else if($('#blDestinationCityCode').val()+"-"+$('#blDestinationCityDescription').val()!=$('#blDestinationCityCodeDescription').val())
			{
				$('#blDestinationCityCode').val('');
				$('#blDestinationCityDescription').val('');
				$('#blDestinationCityCodeDescription').val('');
			}
			checkDeliveryCarrier();
			checkPlaceOfDeliveryDefaultValue();
			setRoutingHeader();
		}
		return true;
	});
	
	// Autocompleter and lookup for Cargo Pickup
	$('#freightOriginCityCodeDescription').gatesAutocomplete({
		source : _context + '/tm/Autocomplete/autoCompCity',
		name: "Origin City Code",
		autoSelectWhenSingle:true,
		autoSelectFirst:true,
			autoSelectCriteria:function(item) {
			   if(item != null){
			     return 'true';
			  }
			  else {
			     return 'false';
			  }
			},
		formatItem : function(item) {
			if(item.stateCode != " " && item.stateCode != undefined){
				return item.cityCode+"-"+item.cityName+","+item.stateCode;	
			}
			else{
				return item.cityCode+"-"+item.cityName;
			}
				//return item.cityCode+"-"+item.cityName+","+item.stateCode;
		},
		formatResult: function(item) {
			if(item.stateCode != " " && item.stateCode != undefined){
				return item.cityCode+"-"+item.cityName+","+item.stateCode;	
			}
			else{
				return item.cityCode+"-"+item.cityName;
			}
				//return item.cityCode+"-"+item.cityName+","+item.stateCode;
		},
		select : function(item) {
			var desc = "";
			if(item.stateCode != " " && item.stateCode != undefined){
				desc =  item.cityName+","+item.stateCode;	
			}
			else{
				desc = item.cityName;
			}
			
			$('#freightOriginCityCode').val(item.cityCode);
			$('#freightOriginCityDescription').val(desc);
			checkPlaceOfReceiptDefaultValue();
			checkOriginPtDefaultValue();
			isBookingChanged = "Y";
		}
	});

	$('#freightOriginCityCodeDescription').gatesPopUpSearch({
		func : function() {
				placePopupSearch($('#freightOriginCityCodeDescription').val(), 6);
		}
	});

	$('#freightOriginCityCodeDescription').blur(function() {
		if($('.ui-active-menuitem').length == 0)
		{
			if ($('#freightOriginCityCode').val() == "")
			{
				$('#freightOriginCityCodeDescription').val('');
				checkPlaceOfReceiptDefaultValue();
				checkOriginPtDefaultValue();
			}
			else if($('#freightOriginCityCodeDescription').val() == '')
			{
				$('#freightOriginCityCode').val('');
				$('#freightOriginCityDescription').val('');
				checkPlaceOfReceiptDefaultValue();
				checkOriginPtDefaultValue();
			}
			else if($('#freightOriginCityCode').val()+"-"+$('#freightOriginCityDescription').val()!=$('#freightOriginCityCodeDescription').val())
			{
				$('#freightOriginCityCode').val('');
				$('#freightOriginCityDescription').val('');
				$('#freightOriginCityCodeDescription').val('');
				checkPlaceOfReceiptDefaultValue();
				checkOriginPtDefaultValue();
			}
		}
		return true;
	});
	
	// Autocompleter and lookup for Cargo Destination
	$('#freightDestinationCityCodeDescription').gatesAutocomplete({
		source : _context + '/tm/Autocomplete/autoCompCity',
		name: "Destination City Code",
		autoSelectWhenSingle:true,
		autoSelectFirst:true,
			autoSelectCriteria:function(item) {
			   if(item != null){
			     return 'true';
			  }
			  else {
			     return 'false';
			  }
			},
		formatItem : function(item) {
			if(item.stateCode != " " && item.stateCode != undefined){
				return item.cityCode+"-"+item.cityName+","+item.stateCode;	
			}
			else{
				return item.cityCode+"-"+item.cityName;
			}
				//return item.cityCode+"-"+item.cityName+","+item.stateCode;
		},
		formatResult: function(item) {
			if(item.stateCode != " " && item.stateCode != undefined){
				return item.cityCode+"-"+item.cityName+","+item.stateCode;	
			}
			else{
				return item.cityCode+"-"+item.cityName;
			}
				//return item.cityCode+"-"+item.cityName+","+item.stateCode;
		},
		select : function(item) {
			var desc = "";
			if(item.stateCode != " " && item.stateCode != undefined){
				desc =  item.cityName+","+item.stateCode;	
			}
			else{
				desc = item.cityName;
			}
			
			$('#freightDestinationCityCode').val(item.cityCode);
			$('#freightDestinationCityDescription').val(desc);
			isBookingChanged = "Y";
		}
	});

	$('#freightDestinationCityCodeDescription').gatesPopUpSearch({
		func : function() {
				placePopupSearch($('#freightDestinationCityCodeDescription').val(), 7);
		}
	});

	$('#freightDestinationCityCodeDescription').blur(function() {
		if($('.ui-active-menuitem').length == 0)
		{
			if ($('#freightDestinationCityCode').val() == "")
				$('#freightDestinationCityCodeDescription').val('');
			else if($('#freightDestinationCityCodeDescription').val() == '')
			{
				$('#freightDestinationCityCode').val('');
				$('#freightDestinationCityDescription').val('');
			}
			else if($('#freightDestinationCityCode').val()+"-"+$('#freightDestinationCityDescription').val()!=$('#freightDestinationCityCodeDescription').val())
			{
				$('#freightDestinationCityCode').val('');
				$('#freightDestinationCityDescription').val('');
				$('#freightDestinationCityCodeDescription').val('');
			}
		}
		return true;
	});
	
	$('#loadServiceCode').change(function() {
		var loadServiceCode = $('#loadServiceCode :selected').val();
		var dischargeServiceCode = $('#dischargeServiceCode :selected').val();
		var marker = "load";
		//D027456
		if($('#pickupZipCode').val()!=null && $('#pickupZipCode').val()!=" "){
			zip=$('#pickupZipCode').val();
			zone=$('#pickupZoneDisplay').html();
			}
		$('#dischargeServiceCode').attr("disabled", true);
		blockUI();
		
		if($('#bookingId').val()!='')
		{
			if(loadServiceCode!='' && dischargeServiceCode!='')
			{
				$.ajax({
					url: _context +"/booking/routing/beforeServiceUpdate",
					data:{
							loadService:loadServiceCode,
							dischargeService:dischargeServiceCode,
							marker:marker
						},
					success: function(responseTextFirst){
						showResponseMessages('msgDiv', responseTextFirst);
						//D027456
						if(responseTextFirst.success){
							if(loadServiceCode!="P"){
								$('#pickupZipCode').val(" ");
								$('#pickupZipCode').attr("disabled", "disabled");
								$('#pickupZoneDisplay').html(" ");
								}else{
								$('#pickupZipCode').attr("disabled",false);
								$('#pickupZipCode').val(zip);
								$('#pickupZoneDisplay').html(zone);
								}
							beforeLoadServiceUpdate(loadServiceCode, dischargeServiceCode);
					}
						else
						{
							$('#loadServiceCode').val(lastLoadService);
							$('#dischargeServiceCode').attr("disabled", false);
							$.unblockUI();
						}
					}
				});
				
				//alert("load service ro?"+($('#loadServiceCode :selected').val()=="RO")+",discharge svr ro?"+($('#dischargeServiceCode :selected').val()=="RO")+",rolling checked?"+$('#freight\\.isRoRo1').is(':checked'));
				
				if($('#loadServiceCode :selected').val()=="RO" && $('#dischargeServiceCode :selected').val()=="RO"){
					if($('#freight\\.isRoRo1').is(':checked')==false){
						alert("Rolling Stock Ind must be checked for selected Load/Discharge service.");
						//$('#freight\\.isRoRo1').attr('checked', true);
					}
				}
			}
			/*else if(loadServiceCode=='' && dischargeServiceCode=='')
			{
				$('#loadServiceCode').val(lastLoadService);
				$('#dischargeServiceCode').attr("disabled", false);
				$('#msgDiv').html('<div class="message_error">'+'Both Load and Discharge service cannot be updated to blank'+'</div>');
				window.scroll(0, 0);
			}*/
			else
				beforeLoadServiceUpdate(loadServiceCode, dischargeServiceCode); 
		}
		else
			beforeLoadServiceUpdate(loadServiceCode, dischargeServiceCode);
		
		setMandatoryPieces();
		enableDisableNote();
	});
	
	$('#dischargeServiceCode').change(function() {
		var loadServiceCode = $('#loadServiceCode :selected').val();
		var dischargeServiceCode = $('#dischargeServiceCode :selected').val();
		var marker = "discharge";
		if($('#deliveryZipCode').val()!=null && $('#deliveryZipCode').val()!=" "){
			zip=$('#deliveryZipCode').val();
			zone=$('#deliveryZoneDisplay').html();
			}
		$('#loadServiceCode').attr("disabled", true);
		blockUI();
		
		if($('#bookingId').val()!='')
		{
			if(loadServiceCode!='' && dischargeServiceCode!='')
			{
				$.ajax({
					url: _context +"/booking/routing/beforeServiceUpdate",
					data:{
							loadService:loadServiceCode,
							dischargeService:dischargeServiceCode,
							marker:marker
						},
					success: function(responseTextFirst){
						showResponseMessages('msgDiv', responseTextFirst);
						if(responseTextFirst.success)
							{
							if(loadServiceCode!="P"){
								$('#deliveryZipCode').val("");
								$('#deliveryZipCode').attr("disabled", "disabled");
								$('#deliveryZoneDisplay').html(" ");
								}else{
								$('#deliveryZipCode').attr("disabled",false);
								$('#deliveryZipCode').val(zip);
								$('#deliveryZoneDisplay').html(zone);
								}
							beforeDischargeSeviceUpdate(loadServiceCode, dischargeServiceCode);
							}
						else
						{
							$('#dischargeServiceCode').val(lastDischargeService);
							$('#loadServiceCode').attr("disabled", false);
							$.unblockUI();
						}
					}
				});
				
				//alert("load service ro?"+($('#loadServiceCode :selected').val()=="RO")+",discharge svr ro?"+($('#dischargeServiceCode :selected').val()=="RO")+",rolling checked?"+$('#freight\\.isRoRo1').is(':checked'));
				
				if($('#loadServiceCode :selected').val()=="RO" && $('#dischargeServiceCode :selected').val()=="RO"){
					if($('#freight\\.isRoRo1').is(':checked')==false){
						alert("Rolling Stock Ind must be checked for selected Load/Discharge service.");
						//$('#freight\\.isRoRo1').attr('checked', true);
					}
				}
			}
			/*else if(loadServiceCode=='' && dischargeServiceCode=='')
			{
				$('#dischargeServiceCode').val(lastDischargeService);
				$('#loadServiceCode').attr("disabled", false);
				$('#msgDiv').html('<div class="message_error">'+'Both Load and Discharge service cannot be updated to blank'+'</div>');
				window.scroll(0, 0);
			}*/
			else
				beforeDischargeSeviceUpdate(loadServiceCode, dischargeServiceCode);
		}
		else
			beforeDischargeSeviceUpdate(loadServiceCode, dischargeServiceCode);
		
		setMandatoryPieces();
		enableDisableNote();
	});

	$('#isInBond').change(function()
	{
		if($('#loadServiceCode').val()!='' && $('#dischargeServiceCode').val()!=''){
			$.ajax({
				url: _context +"/booking/routing/isInbondAllowed?inBond="+$("#isInBond option:selected").text()+"&loadServiceCode="+$('#loadServiceCode').val()+"&dischargeServiceCode="+$('#dischargeServiceCode').val(),
				success: function(responseText){
					//if(responseText.success==false)
						showResponseMessages('msgDiv', responseText);
				}
			});
		}
		
		if($('#isInBond :selected').val()==true || $('#isInBond :selected').val()=='true')
		{
			/*Booking Security*/
			if(isRoutingModifiable){
				$('#inbondNumber').attr("disabled", false);
				//add bond clause code
				$.ajax({
					url: _context +"/booking/clause/addBondClause",
					success: function(responseText){
						$("#gridIdForClauses").trigger("reloadGrid");
					}
				});
			}
		}
		else
		{
			$('#inbondNumber').val("");
			$('#inbondNumber').attr("disabled", true);
			//remove bond clause code
			$.ajax({
				url: _context +"/booking/clause/removeBondClause",
				success: function(responseText){
					$('#msgDiv').html('<div class="message_warning">BOND Clause has been deleted</div>');
					window.scroll(0, 0);
					$("#gridIdForClauses").trigger("reloadGrid");
				}
			});
		 }
	});
	
	//D026261: 	FW: Maintain booking : SIT flag to VVD Routing 
	$('#isSIT').change(function()
	{
		var data;
		var dataUrl;
		if($('#isSIT :selected').val()==true || $('#isSIT :selected').val()=='true')
		{
			$("#specialServiceMasterForm").clearForm();
			$('input[name="specialServiceFormLine1\\.specialServiceCode"]').val('SIT');
			$('select[name="specialServiceFormLine1\\.isApplyToAll"]').selected().val('Y');
			$('input[name="specialServiceFormLine1\\.source"]').val('Manual');
			$('input[name="specialServiceFormLine1\\.processLevelCode"]').val('E');
			$('input[name="specialServiceFormLine1\\.isMilTruckerRateCustomized"]').val('N');
			$('input[name="specialServiceFormLine1\\.chargeCodeExpected"]').val('SIT');
			$('input[name="specialServiceFormLine1\\.isRequireQuantity"]').val('N');
			$('input[name="specialServiceFormLine1\\.isManualCharge"]').val('N');
			data = $('#specialServiceMasterForm').formSerialize();
	    	dataUrl = _context +"/booking/specialservice/add?entityName="+$("#spSvcEntityName").val();
		} else {
			data = "";
			dataUrl = _context +"/booking/specialservice/deleteSIT?entityName="+$("#spSvcEntityName").val();
		}
		$.ajax({
    		type: "POST",
    		url: dataUrl,
    		data: data,
    		success: function(responseText){
    			if(responseText.success){
    				isBookingChanged = "Y";
    				$("#specialServiceGrid").trigger('reloadGrid');
    			}else{
    				showResponseMessages("msgDiv", responseText);
    			}
    		}
    	});
		
	});

	$('#isOverland').change(function()
	{
		$.ajax({
			url: _context +"/booking/routing/getOverland?overland="+$("#isOverland option:selected").text()+"&loadServiceCode="+$('#loadServiceCode').val()+"&dischargeServiceCode="+$('#dischargeServiceCode').val(),
			success: function(responseText){
				//if(responseText.success==false)
					showResponseMessages('msgDiv', responseText);
			}
		});
	});

	$('#overridePickupCarrierCode').change(function(){
		if($('#overridePickupCarrierCode').val()!='')
		{
			$("#overridePickupCarrierCode").val(($("#overridePickupCarrierCode").val()).toUpperCase()); 
			var carr = 'pickUp';
			$.ajax({
				url: _context +"/booking/routing/validateCarrier",
				data :{
					carrierCode :$('#overridePickupCarrierCode').val(),
					carrier : carr
				},
				success: function(responseText){
					
					showResponseMessages('msgDiv', responseText);
				}
			});
		}
	});

	$('#overrideDeliveryCarrierCode').change(function(){
		if($('#overrideDeliveryCarrierCode').val()!='')
		{
			$("#overrideDeliveryCarrierCode").val(($("#overrideDeliveryCarrierCode").val()).toUpperCase()); 
			var carr = 'delivery';
			$.ajax({
				url: _context +"/booking/routing/validateCarrier",
				data :{
					carrierCode :$('#overrideDeliveryCarrierCode').val(),
					carrier : carr
				},
				success: function(responseText){
					
					showResponseMessages('msgDiv', responseText);
				}
			});
		}
	});
	
	$('#isAutoInlandMove').change(function(){
		if($('#isAutoInlandMove :selected').val()=="true")
		{
			if($('#customerGroupId option:selected').text()!="COMMERCIAL AUTO GROUP")
			{
				$('#isAutoInlandMove').val('false');
				$('#msgDiv').html('<div class="message_error">'+'Cannot update Auto Inland Move Flag as Customer Group is not Commercial Auto Group'+'</div>');
				window.scrollTo(0, 0);
				triggerErrorMessageAlert();
			}
			else
			{
				$('#dealerAuctionLocationCode').attr("disabled", false);
				$('#msgDiv').html('');
			}
		}
		else
		{
			$('#dealerAuctionLocationCode').val("");
			$('#dealerAuctionLocationCode').attr("disabled", true);
			$('#msgDiv').html('');
		}
	});

});

/** ******** Supporting functions ********* */
function beforeLoadServiceUpdate(loadServiceCode, dischargeServiceCode)
{
	if(loadServiceCode!='' && dischargeServiceCode!='')
	{
		$.ajax({
			url: _context +"/booking/routing/getLoadDschPair",
			data:{
				loadServiceCode:loadServiceCode,
				dischargeServiceCode:dischargeServiceCode,
				customerGroup:$('#customerGroupId option:selected').text(),
				marker:"load"
			},
			success: function(responseText){
				if(responseText.success)
				{
					/*if($('#totalCommodityLines').text()!='' && $('#totalCommodityLines').text()!='0')
					{
						if($('#loadDschServiceGroupCode').val()!=$.trim(responseText.data.loadDschServiceGroupCode))
						{
							var r = confirm("Load discharge group code is being changed. Delete commodities?");
							if(r)
							{
								removeCommodities();
								setLoadDischargeGroupCode(loadServiceCode, dischargeServiceCode, responseText);
								loadServiceUpdateFunction(loadServiceCode, dischargeServiceCode);
								showFreight($.trim($('#customerGroupId :selected').text()));
							}
							else
							{
								$('#dischargeServiceCode').attr("disabled", false);
								$('#loadServiceCode').val(lastLoadService);
							}
						}
						else
						{
							setLoadDischargeGroupCode(loadServiceCode, dischargeServiceCode, responseText);
							loadServiceUpdateFunction(loadServiceCode, dischargeServiceCode);
						}
					}
					else
					{*/
						setLoadDischargeGroupCode(loadServiceCode, dischargeServiceCode, responseText);
						loadServiceUpdateFunction(loadServiceCode, dischargeServiceCode);
						/*iterated = true;
						removeCurrentCommodity();
						showFreight($.trim($('#customerGroupId :selected').text()));
						iterated = false;
					}*/
				}
				else
				{
					showResponseMessages('msgDiv', responseText);
					$('#dischargeServiceCode').attr("disabled", false);
					$.unblockUI();
					$('#loadServiceCode').val(lastLoadService);
				}
			}
		});
	}
	else
	{
		/*if($('#totalCommodityLines').text()!='' && $('#totalCommodityLines').text()!='0')
		{
			var r = confirm("Load discharge group code is being changed. Delete commodities?");
			if(r)
			{
				removeCommodities();
				setLoadDischargeGroupCode(loadServiceCode, dischargeServiceCode, null);
				loadServiceUpdateFunction(loadServiceCode, dischargeServiceCode);
			}
			else
			{
				$('#dischargeServiceCode').attr("disabled", false);
				$('#loadServiceCode').val(lastLoadService);
			}
		}
		else
		{*/
			setLoadDischargeGroupCode(loadServiceCode, dischargeServiceCode, null);
			loadServiceUpdateFunction(loadServiceCode, dischargeServiceCode);
			/*iterated = true;
			removeCurrentCommodity();
			showFreight($.trim($('#customerGroupId :selected').text()));
			iterated = false;
		}*/
	}
}

function beforeDischargeSeviceUpdate(loadServiceCode, dischargeServiceCode)
{
	if(loadServiceCode!='' && dischargeServiceCode!='')
	{
		$.ajax({
			url: _context +"/booking/routing/getLoadDschPair",
			data:{
				loadServiceCode:loadServiceCode,
				dischargeServiceCode:dischargeServiceCode,
				customerGroup:$('#customerGroupId option:selected').text(),
				marker:"discharge"
			},
			success: function(responseText){
				if(responseText.success)
				{
					if($('#loadDschServiceGroupCode').val()!=$.trim(responseText.data.loadDschServiceGroupCode))
					{
						/*if($('#totalCommodityLines').text()!='' && $('#totalCommodityLines').text()!='0')
						{
							var r = confirm("Load discharge group code is being changed. Delete commodities?");
							if(r)
							{
								removeCommodities();
								setLoadDischargeGroupCode(loadServiceCode, dischargeServiceCode, responseText);
								dischargeSeviceUpdateFunction(loadServiceCode, dischargeServiceCode);
								showFreight($.trim($('#customerGroupId :selected').text()));
							}
							else
							{
								$('#loadServiceCode').attr("disabled", false);
								$('#dischargeServiceCode').val(lastDischargeService);
							}
						}
						else
						{*/
							/*removeCurrentCommodity();*/
							setLoadDischargeGroupCode(loadServiceCode, dischargeServiceCode, responseText);
							dischargeSeviceUpdateFunction(loadServiceCode, dischargeServiceCode);
							//iterated = true;
							/*showFreight($.trim($('#customerGroupId :selected').text()));*/
							//iterated = false;
						/*}*/
					}
					else
					{
						setLoadDischargeGroupCode(loadServiceCode, dischargeServiceCode, responseText);
						dischargeSeviceUpdateFunction(loadServiceCode, dischargeServiceCode);
					}
				}
				else
				{
					showResponseMessages('msgDiv', responseText);
					$('#loadServiceCode').attr("disabled", false);
					$.unblockUI();
					$('#dischargeServiceCode').val(lastDischargeService);
				}
			}
		});
	}
	else
	{
		/*if($('#totalCommodityLines').text()!='' && $('#totalCommodityLines').text()!='0')
		{
			var r = confirm("Load discharge group code is being changed. Delete commodities?");
			if(r)
			{
				removeCommodities();
				setLoadDischargeGroupCode(loadServiceCode, dischargeServiceCode, null);
				dischargeSeviceUpdateFunction(loadServiceCode, dischargeServiceCode);
			}
			else
			{
				$('#loadServiceCode').attr("disabled", false);
				$('#dischargeServiceCode').val(lastDischargeService);
			}
		}
		else
		{*/
			setLoadDischargeGroupCode(loadServiceCode, dischargeServiceCode, null);
			dischargeSeviceUpdateFunction(loadServiceCode, dischargeServiceCode);
			/*iterated = true;
			removeCurrentCommodity();
			showFreight($.trim($('#customerGroupId :selected').text()));
			iterated = false;
		}*/
	}
}

function loadServiceUpdateFunction(loadServiceCode, dischargeServiceCode)
{
	lastLoadService = loadServiceCode;
	checkPickupCarrier();
	if(loadServiceCode!=null && loadServiceCode!='')
	{
		function callBack(responseText){
			setLoadDischargeValues(responseText.data, '#dischargeServiceCode', dischargeServiceCode);
			$('#dischargeServiceCode').attr("disabled", false);
			$.unblockUI();
			if($('#loadServiceCode option:selected').attr("title")!=undefined)
				$("#loadServiceCode").attr("title", $('#loadServiceCode option:selected').attr("title"));
			else
				$("#loadServiceCode").attr("title", '');
			setRoutingHeader();
			
			var queryString = $('#bookingForm').formSerialize();
			$.ajax({
				url: _context +"/booking/routing/validateUpdateService",
				type: "POST",
				data: queryString+"&marker=load",
				success: function(responseTextNew){
					/*if(responseTextNew.success==false)
					{*/
						showResponseMessages('msgDiv', responseTextNew);
					/*}*/
				}
			});
		}
		if(loadServiceCode=='P'){
		$('#pickupZipCode').val($('input[name="shipper\\.zip"]').val().substring(0,5));
		validateZip('pickup');
		}
		else{
		$('#pickupZipCode').val(" ");
		$('#pickupZipCode').attr("disabled", "disabled");
		$('#pickupZoneDisplay').html(" ");
		}
		
		getDischargeServicesRequest(callBack, $.trim(loadServiceCode));
	}
		else
		{
			
			function callBack(responseText) { // cheetah
				setLoadDischargeValues(responseText.data, '#dischargeServiceCode', dischargeServiceCode);
				$('#dischargeServiceCode').attr("disabled", false);
				$.unblockUI();
				if($('#loadServiceCode option:selected').attr("title")!=undefined)
					$("#loadServiceCode").attr("title", $('#loadServiceCode option:selected').attr("title"));
				else
					$("#loadServiceCode").attr("title", '');
				setRoutingHeader();
			}
			
			getAllDischargeServicesRequest(callBack); // cheetah	
			
		}
	}

function dischargeSeviceUpdateFunction(loadServiceCode, dischargeServiceCode)
{
	lastDischargeService = dischargeServiceCode;
	checkDeliveryCarrier();
	if(dischargeServiceCode!=null && dischargeServiceCode!=''){
		
		function callBack(responseText) { // cheetah
			//setLoadDischargeValues(responseText.data, '#loadServiceCode', loadServiceCode);
			$('#loadServiceCode').attr("disabled", false);
			$.unblockUI();
			if($('#dischargeServiceCode option:selected').attr("title")!=undefined)
				$("#dischargeServiceCode").attr("title", $('#dischargeServiceCode option:selected').attr("title"));
			else
				$("#dischargeServiceCode").attr("title", '');
			setRoutingHeader();
			
			var queryString = $('#bookingForm').formSerialize();
			$.ajax({
				url: _context +"/booking/routing/validateUpdateService",
				type: "POST",
				data: queryString+"&marker=discharge",
				success: function(responseTextNew){
					/*if(responseTextNew.success==false)
					{*/
						showResponseMessages('msgDiv', responseTextNew);
					/*}*/
				}
			});
		}
		if(dischargeServiceCode=='P'){
		$('#deliveryZipCode').val($('input[name="consignee\\.zip"]').val().substring(0,5));
		validateZip('delivery');
		}
		else{
		$('#deliveryZipCode').val(" ");
		$('#deliveryZipCode').attr("disabled", "disabled");
		$('#deliveryZoneDisplay').html(" ");
		}
		getLoadServicesRequest(callBack, $.trim(dischargeServiceCode));		
		
	}
	else
	{
		
		function callBack(responseText) { // cheetah
			setLoadDischargeValues(responseText.data, '#loadServiceCode', loadServiceCode);
			$('#loadServiceCode').attr("disabled", false);
			$.unblockUI();
			if($('#dischargeServiceCode option:selected').attr("title")!=undefined)
				$("#dischargeServiceCode").attr("title", $('#dischargeServiceCode option:selected').attr("title"));
			else
				$("#dischargeServiceCode").attr("title", '');
			setRoutingHeader();
		}
		
		getAllLoadServicesRequest(callBack); // cheetah	
		
	}
}

function carrierPopupSearch(rateDate, recievedDate, value, tariff, item, type,  size, height, city, source, port){
	var param =  rateDate + '|' + recievedDate + '|' + value + '|' + tariff + '|' + item + '|' + type 
				+ '|'+ size + '|' + height + '|' + city + '|' + source + '|' + port;
	var actionUrl = _context + "/cas/carrierCodeSearch.do?params=" + param + "&frtRcvdDt=" + recievedDate;
	var windowStyle = 'top=0,left=0,height=600,width=1100,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, 'CarrierCodeSearch', windowStyle);
}

function portPopupSearch(place, id) {
	var values = place.split("-");
	var param = values[0];
	_callingFunc = id;
	var actionUrl = _context + "/city/manualLookup/showFormForQT?term=" + param
			+ "|" + "Y";
	var windowStyle = 'top=50,left=100,height=500,width=600,scrollbars=0,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, 'CitySearch', windowStyle);
}

function placePopupSearch(place, id) {
	var values = place.split("-");
	var param = values[0];
	_callingFunc = id;
	var actionUrl = _context + "/city/manualLookup/showFormForQT?term=" + param;
	var windowStyle = 'top=50,left=100,height=500,width=600,scrollbars=0,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, 'CitySearch', windowStyle);
}

function cityUpdate(id) {
	var values = id.split(",");
	var cityCode = values[0];
	var cityName = values[1];
	var stateName = values[2];
	var value = '';
	if(stateName!=''){
		value=cityName+","+stateName;	
	}else{
		value=cityName;
	}
	isBookingChanged = "Y";
	if (_callingFunc == '2') {
		$('#blOriginCityCodeDescription').val(cityCode + "-" + value);
		$('#blOriginCityDescription').val(value);
		$('#blOriginCityCode').val(cityCode);
		blOriginCityChangeFunction();
	}
	if (_callingFunc == '3') {
		$('#originPortCityCodeDescription').val(cityCode + "-" + value);
		$('#originPortCityDescription').val(value);
		$('#originPortCityCode').val(cityCode);
		originPortCityChangeFunction(cityCode);
	}
	if (_callingFunc == '4') {
		$('#destinationPortCityCodeDescription').val(cityCode + "-" + value);
		$('#destinationPortCityDescription').val(value);
		$('#destinationPortCityCode').val(cityCode);
		destinationPortCityChangeFunction(cityCode);
	}
	if (_callingFunc == '5') {
		$('#blDestinationCityCodeDescription').val(cityCode + "-" + value);
		$('#blDestinationCityDescription').val(value);
		$('#blDestinationCityCode').val(cityCode);
		blDestinationCityChangeFunction();
	}
	if (_callingFunc == '6') {
		$('#freightOriginCityCodeDescription').val(cityCode + "-" + value);
		$('#freightOriginCityDescription').val(value);
		$('#freightOriginCityCode').val(cityCode);
		checkPlaceOfReceiptDefaultValue();
		checkOriginPtDefaultValue();
	}
	if (_callingFunc == '7') {
		$('#freightDestinationCityCodeDescription').val(cityCode + "-" + value);
		$('#freightDestinationCityDescription').val(value);
		$('#freightDestinationCityCode').val(cityCode);
	}
	if (_callingFunc == '8') {
		$('#cargoPickupCityCodeDesc').val(cityCode + "-" + value);
		$('#cargoPickupCityCode').val(cityCode);
	}
	if (_callingFunc == '9') {
		$('#cargoDeliveryCityCodeDesc').val(cityCode + "-" + value);
		$('#cargoDeliveryCityCode').val(cityCode);
	}
}

function setLoadDischargeGroupCode(loadServiceCode, dischargeServiceCode, responseText)
{
	if(loadServiceCode!=null && loadServiceCode!='' && dischargeServiceCode!=null && dischargeServiceCode!='')
	{
		$('#loadDschServiceGroupCode').val($.trim(responseText.data.loadDschServiceGroupCode));
		$('#isAllowBookingUnit').val(responseText.data.isAllowBookingUnit);
		$('#isRequireReceivedUnit').val(responseText.data.isRequireReceivedUnit);
		$("#specialServiceGrid").trigger("reloadGrid");
		
		if(responseText.data.defaultOverlandValue=="Y" && $('#isOverland :selected').val()=='false')
			$('#isOverland').val("true");
		else if(responseText.data.defaultOverlandValue=="N" && $('#isOverland :selected').val()=='false')
			$('#isOverland').val("false");
		
		//D033741: 	maintain booking: please match logic on maintain bill when loa/discharge servcie is changed to automatically remove place of receipt/place of delivery if no longer applicable.
		if(isRoutingModifiable && responseText.data.isRequireBlOrigin!='N'){
			$('#blOriginCityCodeDescription').attr('disabled', false);
		} else if(responseText.data.isRequireBlOrigin=='N'){
			$('#blOriginCityCode').val("");
			$('#blOriginCityDescription').val("");
			$('#blOriginCityCodeDescription').val("");
			$('#blOriginCityCodeDescription').attr('disabled', true);
		}

		if (isRoutingModifiable && responseText.data.isRequireBlDestination != 'N') {
			$('#blDestinationCityCodeDescription').attr('disabled', false);
		} else if (responseText.data.isRequireBlDestination == 'N') {
			$('#blDestinationCityCode').val("");
			$('#blDestinationCityDescription').val("");
			$('#blDestinationCityCodeDescription').val("");
			$('#blDestinationCityCodeDescription').attr('disabled', true);
		}
			
		if(isRoutingModifiable && responseText.data.isRequirePickupZipCode!='N'){
			$('#pickupZipCode').attr('disabled', false);
		} else if(responseText.data.isRequirePickupZipCode=='N'){
			$('#pickupZipCode').val("");
			$('#pickupZone').val("");
			$('#pickupZipCode').attr('disabled', true);
		}
			
		if(isRoutingModifiable && responseText.data.isRequireDeliveryZipCode!='N'){
			$('#deliveryZipCode').attr('disabled', false);
		} else if(responseText.data.isRequireDeliveryZipCode=='N'){
			$('#deliveryZipCode').val("");
			$('#deliveryZone').val("");
			$('#deliveryZipCode').attr('disabled', true);
		}
			
		
		if($('#loadDschServiceGroupCode').val()=='AU')
			$('#vvdCutOff').hide();
		else
			$('#vvdCutOff').show();
		
		if($('#loadDschServiceGroupCode').val()=='CON' || $('#loadDschServiceGroupCode').val()=='LCL')
		{
			$('#premiumRDD').val('');
			$('#premiumRDD').attr("disabled", true);
			$('#vvd_premium').hide();
			$('#vvd_conventional').show();
			if(isRoutingModifiable)
			{
				$('#convCgoApptCutoffDate').attr('disabled', false);
				$('#convCgoApptCutoffTime').attr('disabled', false);
				$('#convCgoEstArrivalDate').attr('disabled', false);
				$('#convCgoEstArrivalTime').attr('disabled', false);
				$('#requiredDeliveryDate').attr('disabled', false);
				$('#milRequiredDeliveryDate').attr('disabled', false);
			}
			/*if($('#milRequiredDeliveryDate').val()=='')
				$('#requiredDeliveryDate').val('01-01-0001');
			else*/
				$('#requiredDeliveryDate').val($('#milRequiredDeliveryDate').val());
		} 
		else
		{
			
			
			$('#vvd_conventional').hide();
			$('#convCgoApptCutoffDate').val('');
			$('#convCgoApptCutoffTime').val('');
			$('#convCgoEstArrivalDate').val('');
			$('#convCgoEstArrivalTime').val('');
			$('#requiredDeliveryDate').val('');
			//$('#milRequiredDeliveryDate').val('');
			
			$('#convCgoApptCutoffDate').attr('disabled', true);
			$('#convCgoApptCutoffTime').attr('disabled', true);
			$('#convCgoEstArrivalDate').attr('disabled', true);
			$('#convCgoEstArrivalTime').attr('disabled', true);
			$('#requiredDeliveryDate').attr('disabled', true);
			//$('#milRequiredDeliveryDate').attr('disabled', true);
		}
		
		// Setting IBS Code as mandatory incase of MBU Commenting out as per D016178
		//$('#militaryIbsStatusCode').trigger("change");
	}
	else
	{
		$('#loadDschServiceGroupCode').val('');
		$('#isAllowBookingUnit').val('');
		
		$('#vvd_conventional').hide();
		//$('#vvd_premium').hide();
		
		$('#convCgoApptCutoffDate').val('');
		$('#convCgoApptCutoffTime').val('');
		$('#convCgoEstArrivalDate').val('');
		$('#convCgoEstArrivalTime').val('');
		$('#requiredDeliveryDate').val('');
		//$('#premiumRDD').val('');
		
		$('#convCgoApptCutoffDate').attr('disabled', true);
		$('#convCgoApptCutoffTime').attr('disabled', true);
		$('#convCgoEstArrivalDate').attr('disabled', true);
		$('#convCgoEstArrivalTime').attr('disabled', true);
		$('#requiredDeliveryDate').attr('disabled', true);
		//$('#premiumRDD').attr("disabled", true);
		
		$('#vvdCutOff').show();
		
		if(isRoutingModifiable)
		{
			$('#blOriginCityCodeDescription').attr('disabled', false);
			$('#blDestinationCityCodeDescription').attr('disabled', false);
			$('#pickupZipCode').attr('disabled', false);
			$('#deliveryZipCode').attr('disabled', false);
		}
		
		// Disable freight
		/*$('#showAlertTCGLDSP').val("false");
		$($('.booking-section')[4]).accordion('option', 'active', false);*/
		//Freight
		/*disableAccordian(4);
		removeCurrentCommodity();
		$('#showAlertTCGLDSP').val("true");*/
	}
	//enableDisableCommodityIfTradeCustGrpLDGrpPresent();
	var lastCustomerGroup = $('#customerGroupId option[value='+$('#lastCustomerGroupId').val()+']').text();
	var currentCustomerGroup = $('#customerGroupId option[value='+$('#customerGroupId').val()+']').text();
	var lastLoadDschGroup = $.trim($('#lastLoadDschServiceGroupCode').val());
	var currentLoadDschGroup = $.trim($('#loadDschServiceGroupCode').val());
	
	modifyFrtOnCstmrGrpLoadDschGrpCodeChange('loadDschGroup', lastCustomerGroup, currentCustomerGroup, lastLoadDschGroup, currentLoadDschGroup, $('#isAllowBookingUnit').val());
	if(responseText!=null && responseText.data!=null && responseText.data.loadDschServiceGroupCode!=null && responseText.data.loadDschServiceGroupCode!=''){
		$('#lastLoadDschServiceGroupCode').val($.trim(responseText.data.loadDschServiceGroupCode));
	}
	if($.trim($('#lastLoadDschServiceGroupCode').val())=="CON" || $.trim($('#lastLoadDschServiceGroupCode').val())=="LCL")
		defaultHidden = true;
	else
		defaultHidden = false;
	if($('#tariff').is(':visible'))
	{
		if(!$("#equipmentGrid").is(':visible'))
		{
			if(!defaultHidden || 
				($("#equipmentGrid").getGridParam("reccount")!=undefined &&
						$("#equipmentGrid").getGridParam("reccount")>0))
			{
				$(".HeaderButton", ("#gview_equipmentGrid")).click();
			}
		}
		else if($("#equipmentGrid").is(':visible'))
		{
			if(defaultHidden && ($("#equipmentGrid").getGridParam("reccount")==undefined || 
			   $("#equipmentGrid").getGridParam("reccount")==0))
				$(".HeaderButton", ("#gview_equipmentGrid")).click();
		}
	}
}

function checkPickupCarrier()
{
	if(!isRoutingModifiable || ($('#overridePickupCarrierCode').val()=='' && $('#loadServiceCode :selected').val()!='DCY' 
		&& $('#blOriginCityCode').val()=='' && $('#pickupZone').val()==''))
		$('#overridePickupCarrierCode').attr('disabled', true);
	else if(isRoutingModifiable && ($('#loadServiceCode :selected').val()=='DCY' 
		|| $('#blOriginCityCode').val()!='' || $('#pickupZone').val()!=''))
		$('#overridePickupCarrierCode').attr('disabled', false);
}

function checkDeliveryCarrier()
{
	if(!isRoutingModifiable || ($('#overrideDeliveryCarrierCode').val()=='' && $('#dischargeServiceCode :selected').val()!='DCY' 
		&& $('#blDestinationCityCode').val()=='' && $('#deliveryZone').val()==''))
	$('#overrideDeliveryCarrierCode').attr('disabled', true);
	else if(isRoutingModifiable && $('#dischargeServiceCode :selected').val()=='DCY' 
		|| $('#blDestinationCityCode').val()!='' || $('#deliveryZone').val()!='')
		$('#overrideDeliveryCarrierCode').attr('disabled', false);
}

function validateCity(selector)
{
	setRoutingHeader();
	
	if(selector=='blOriginCity')
	{
		lastBlOriginCode = $('#blOriginCityCode').val();
		lastBlOriginDescription = $('#blOriginCityDescription').val();
		lastBlOriginCodeDescription = $('#blOriginCityCodeDescription').val();
		
		checkPickupCarrier();
		checkPlaceOfReceiptDefaultValue();
		checkOriginPtDefaultValue();
	}
	else if(selector=='originPortCity')
	{
		lastOriginPortCode = $('#originPortCityCode').val();
		lastOriginPortDescription = $('#originPortCityDescription').val();
		lastOriginPortCodeDescription = $('#originPortCityCodeDescription').val();
		
		if($.trim($('#pickupZipCode').val())!='')
			deriveZone('pickup');
		fetchTradeValue(selector);
		checkOriginPortDefaultValue();
		//setDomesticForeignIndicator();
	}
	else if(selector=='destinationPortCity')
	{
		lastDestinationPortCode = $('#destinationPortCityCode').val();
		lastDestinationPortDescription = $('#destinationPortCityDescription').val();
		lastDestinationPortCodeDescription = $('#destinationPortCityCodeDescription').val();
		
		if($.trim($('#deliveryZipCode').val())!='')
			deriveZone('delivery');
		fetchTradeValue(selector);
		checkDestinationPortDefaultValue();
		checkPlaceOfDeliveryDefaultValue();
	}
	else if(selector=='blDestinationCity')
	{
		lastBlDestinationCode = $('#blDestinationCityCode').val();
		lastBlDestinationDescription = $('#blDestinationCityDescription').val();
		lastBlDestinationCodeDescription = $('#blDestinationCityCodeDescription').val();
		
		checkDeliveryCarrier();
		checkPlaceOfDeliveryDefaultValue();
	}
	
	var queryString = $('#bookingForm').formSerialize();
	$.ajax({
		url: _context +"/booking/routing/validateCity?city="+selector,
		type : "POST",
		data : queryString,
		success: function(responseText){
				showResponseMessages('msgDiv', responseText,$('#msgDiv').html());
				if((selector == 'originPortCity' 
					|| selector == 'destinationPortCity') && $("#vvdRoutingGrid").getGridParam("reccount")!=0)
					deriveValidateVVD(selector);
			}
	});
}

function validateZip(selector)
{
	var validateZipFlag= true;
	if($.trim($('#'+selector+"ZipCode").val())!='')
	{
		var portCode = "";
		var zipcode = "";
		
		if(selector=='pickup')
		{
			portCode = $('#originPortCityCode').val();
			zipcode = $('#pickupZipCode').val();
		}
		else if(selector=='delivery')
		{
			portCode = $('#destinationPortCityCode').val();
			zipcode = $('#deliveryZipCode').val();
			
		}
		$.ajax({
			url: _context +"/booking/routing/deriveZone",
			data : {portCode:portCode, zipcode:zipcode, selector:selector},
			async: false,
			success: function(responseText){
				showResponseMessages('msgDiv', responseText);
				if(selector=='pickup')
				{
					$('#pickupZone').val(responseText.data);
					$('#pickupZoneDisplay').html(responseText.data);
					checkPickupCarrier();
				}
				else if(selector=='delivery')
				{
					$('#deliveryZone').val(responseText.data);
					$('#deliveryZoneDisplay').html(responseText.data);
					checkDeliveryCarrier();
				}
				if(responseText.success)
				{
					var queryString = $('#bookingForm').formSerialize();
					$.ajax({
						url: _context +"/booking/routing/validateZip?zip="+selector,
						type : "POST",
						async: false,
						data : queryString,
						success: function(responseTextNew){
							setRoutingHeader();   //D030791	Maintain booking: Storedoor zip not updating in routing grid
							showResponseMessages('msgDiv', responseTextNew);
						}
					});
				}
				else{
					validateZipFlag= false;
				}
			}
		});
	}
	else
	{
		if(selector=='pickup')
		{
			$('#pickupZone').val('');
			$('#pickupZoneDisplay').html('');
			checkPickupCarrier();
		}
		else if(selector=='delivery')
		{
			$('#deliveryZone').val('');
			$('#deliveryZoneDisplay').html('');
			checkDeliveryCarrier();
		}
	}
	return validateZipFlag;
}

function setLoadDischargeValues(listData, selector, value)
{
	value = $.trim(value);
	$(selector).children().remove();
	$(selector).append(
			"<option value='' title=''></option>");
	var flag = false;
	$.each(listData, function(intIndex, objValue) {
		if($.trim(objValue.code)==value)
			flag = true;
		$(selector).append($("<option/>", {
			value : $.trim(objValue.code),
			text : $.trim(objValue.code),
			title : $.trim(objValue.code)+"-"+$.trim(objValue.description)
		}));
	});
	if(flag == true)
		$(selector).val(value);
	
	if($(selector+' option:selected').attr("title")!=undefined)
		$(selector).attr("title", $(selector+' option:selected').attr("title"));
	else
		$(selector).attr("title", '');
}

function validateOnFocus(selector)
{
	/*if((selector=='#originPortCityCodeDescription' || selector=='#destinationPortCityCodeDescription') && $('#tradeCode').val()=="")
	{
		$(selector).blur();
		alert("Please enter a valid trade");
	}
	else */ if(selector=='blOrigin' || selector=='blDestination')
	{
		if($("#"+selector+"CityCode").val()!='' && $('#bookingId').val()!='')
		{
			$("#"+selector+'CityCodeDescription').attr("readonly", true);
			//alert("done");
			$.ajax({
				url: _context +"/booking/routing/validateSpotPull",
				data : {cityCode:$("#"+selector+"CityCode").val(), bookingId:$('#bookingId').val(), marker:selector},
				success: function(responseText){
					showResponseMessages('msgDiv', responseText);
					if(responseText.success==false)
					{
						$("#"+selector+'CityCodeDescription').blur();
						if(selector=='blOrigin')
							$("#"+selector+'CityCodeDescription').val(lastBlOriginCodeDescription);
						else if(selector=='blDestination')
							$("#"+selector+'CityCodeDescription').val(lastBlDestinationCodeDescription);
					}
					
					$("#"+selector+'CityCodeDescription').attr("readonly", false);
				}
			});
		}
	}
}

function validateOnKeyDown(evt, selector)
{
	var keyCode = event.keyCode;
	
	if(keyCode==32 || (48<=keyCode && keyCode<=57)
			|| (65<=keyCode && keyCode<=90) || (96<=keyCode && keyCode<=107) 
			|| (109<=keyCode && keyCode<=111))
	{
		if(selector=='#pickupZipCode' && $('#originPortCityDescription').val()=='')
		{
			$(selector).blur();
			evt.preventDefault();
			alert("Please enter port of loading first");
		}
		else if(selector=='#deliveryZipCode' && $('#destinationPortCityDescription').val()=='')
		{
			$(selector).blur();
			evt.preventDefault();
			alert("Please enter port of discharge first");
		}
		else if(selector=='#overridePickupCarrierCode' && $(selector).val()=='' && $('#blOriginCityCode').val()=='' 
			&& $('#loadServiceCode :selected').val()!='DCY' && $('#pickupZone').val()=='')
		{
			$(selector).blur();
			evt.preventDefault();
			alert("Override not allowed for pickup");
		}
		else if(selector=='#overrideDeliveryCarrierCode' && $(selector).val()=='' && $('#blDestinationCityCode').val()=='' 
			&& $('#dischargeServiceCode :selected').val()!='DCY' && $('#deliveryZone').val()=='')
		{
			$(selector).blur();
			evt.preventDefault();
			alert("Override not allowed for delivery");
		}
		else if(selector=='#dealerAuctionLocationCode' && $("#isAutoInlandMove :selected").val()=="false")
		{
			$("#dealerAuctionLocationCode").blur();
			evt.preventDefault();
			alert("Dealer Auction Code not allowed as Auto Inland Move Flag set to false");
		}
		else if((selector=='#newVessel' || selector=='#newVoyage' || selector=='#newDirection') && 
				($('#originPortCityCode').val()=='' || $('#destinationPortCityCode').val()==''))
		{
			$(selector).blur();
			evt.preventDefault();
			alert("Please select Port of Loading and Port of Discharge first");
		}
		else if((selector=='#bkdVessel' || selector=='#bkdVoyage' || selector=='#bkdDirection') && 
				($('#originPortCityCode').val()=='' || $('#destinationPortCityCode').val()==''))
		{
			$(selector).blur();
			evt.preventDefault();
			alert("Both- Port of Loading and Port of Discharge must be present to provide Booked For VVD");
		}
	}
}

function originPortCityChangeFunction(loadPortCode)
{	
	$('#msgDiv').html('');
	if($('#bookingId')!='')
	{
		var tradeCode = $('#tradeCode').val();
		var direction = $('#direction').val();
		$.ajax({
			url: _context +"/booking/routing/validateUpdateOriginPort",
			data : {originPortCityCode:loadPortCode, tradeCode:tradeCode, direction:direction},
			success: function(responseText){
				showResponseMessages('msgDiv', responseText,$('#msgDiv').html());
				if(responseText.success==false)
				{
					setOrginalOrgValues();
				}
				else
				{
					validateCity('originPortCity');
				}
			}
		});
	}
	else
	{
		
		validateCity('originPortCity');
	}
	 checkVGM();
}

function destinationPortCityChangeFunction(dischargePortCode)
{
	$('#msgDiv').html('');
	if($('#bookingId').val()!='')
	{
		$.ajax({
			url: _context +"/booking/routing/validateUpdateDestinationPort?dischargePortCode="+dischargePortCode,
			success: function(responseText){
				if(responseText.success)
				{
					validateCity('destinationPortCity');
				}
				else
				{
					var r = confirm("Received units exist for booking. Override existing destination port?");
					if(r)
					{
						validateCity('destinationPortCity');
					}
					else
						setOrginalDestValues();
				}
				//$('#isChangeAcceptedAfterUnitsReceived').val("N");
			}
		});
	}
	else
	{
		validateCity('destinationPortCity');
	}
	
	 checkVGM();
}

function blOriginCityChangeFunction()
{
	$('#msgDiv').html('');
	if($('#bookingId').val()!='')
	{
		$.ajax({
			url: _context +"/booking/routing/validateSpotPull",
			data : {cityCode:$('#blOriginCityCode').val(), bookingId:$('#bookingId').val(), marker:'blOrigin'},
			success: function(responseText){
				showResponseMessages('msgDiv', responseText);
				if(responseText.success==false)
				{
					$('#blOriginCityCode').val(lastBlOriginCode);
					$('#blOriginCityDescription').val(lastBlOriginDescription);
					$('#blOriginCityCodeDescription').val(lastBlOriginCodeDescription);
				}
				else
					validateCity('blOriginCity');
			}
		});
	}
	else
		validateCity('blOriginCity');
}

function blDestinationCityChangeFunction()
{
	$('#msgDiv').html('');
	if($('#bookingId').val()!='')
	{
		$.ajax({
			url: _context +"/booking/routing/validateSpotPull",
			data : {cityCode:$('#blDestinationCityCode').val(), bookingId:$('#bookingId').val(), marker:'blDestination'},
			success: function(responseText){
				showResponseMessages('msgDiv', responseText,$('#msgDiv').html());
				if(responseText.success==false)
				{
					$('#blDestinationCityCode').val(lastBlDestinationCode);
					$('#blDestinationCityDescription').val(lastBlDestinationDescription);
					$('#blDestinationCityCodeDescription').val(lastBlDestinationCodeDescription);
				}
				else
					validateCity('blDestinationCity');
			}
		});
	}
	else
		validateCity('blDestinationCity');
}

function setOrginalOrgValues()
{
	$('#originPortCityCode').val(lastOriginPortCode);
	$('#originPortCityDescription').val(lastOriginPortDescription);
	$('#originPortCityCodeDescription').val(lastOriginPortCodeDescription);
	$('#originPortCityCodeDescription').blur();
}

function setOrginalDestValues()
{
	$('#destinationPortCityCode').val(lastDestinationPortCode);
	$('#destinationPortCityDescription').val(lastDestinationPortDescription);
	$('#destinationPortCityCodeDescription').val(lastDestinationPortCodeDescription);
	$('#destinationPortCityCodeDescription').blur();
}

function resetOriginalOrgValues()
{
	$('#pickupZone').val('');
	$('#pickupZoneDisplay').html('');
	checkPickupCarrier();
	lastOriginPortCode = "";
	lastOriginPortDescription = "";
	lastOriginPortCodeDescription = "";
	
	checkOriginPortDefaultValue();
	setDomesticForeignIndicator();
	
	setRoutingHeader();
}

function resetOriginalDestValues()
{
	if($('#bookingId').val()!='')
	{
		$.ajax({
			url: _context +"/booking/routing/validateUpdateDestinationPort?dischargePortCode="
			+ $('#destinationPortCityCode').val(),
			success: function(responseText){
				if(responseText.success)
				{
					$('#msgDiv').html('');
					lastDestinationPortCode = "";
					lastDestinationPortDescription = "";
					lastDestinationPortCodeDescription = "";
				}
				else
				{
					$('#msgDiv').html('<div class="message_error">Destination Port cannot be updated as received units exist for booking</div>');
					window.scrollTo(0, 0);
					setOrginalDestValues();
					triggerErrorMessageAlert();
				}
				$('#deliveryZone').val('');
				$('#deliveryZoneDisplay').html('');
				checkDeliveryCarrier();
				
				checkDestinationPortDefaultValue();
				checkPlaceOfDeliveryDefaultValue();
				
				setRoutingHeader();
			}
		});
	}
	else
	{
		$('#deliveryZone').val('');
		$('#deliveryZoneDisplay').html('');
		checkDeliveryCarrier();
		lastDestinationPortCode = "";
		lastDestinationPortDescription = "";
		lastDestinationPortCodeDescription = "";
		
		checkDestinationPortDefaultValue();
		checkPlaceOfDeliveryDefaultValue();
		
		setRoutingHeader();
	}
}

function setRoutingHeader()
{
	var displayText = " ";
	
	var loadService = "";
	if($('#loadServiceCode :selected').val()!='')
		loadService = " - " + $('#loadServiceCode option:selected').text();
	var dischargeService = "";
	if($('#dischargeServiceCode :selected').val()!='')
		dischargeService = " - " + $('#dischargeServiceCode option:selected').text();
	//18644
	if(loadService==' - P'|| loadService==' - DCY' || dischargeService==' - P' ||dischargeService==' - DCY' )
	{
	if($('#deliveryZipCode').val()!='')
		//D031430:zip shown in accordian for both load/discharge service 'P' type
		if($('#deliveryZipCode').val()!='' && $('#deliveryZipCode').val()!=' '){
			dischargeService=dischargeService+"("+$('#deliveryZipCode').val()+")";
			}
		if($('#pickupZipCode').val()!='' && $('#pickupZipCode').val()!=' '){
			loadService=loadService+"("+$('#pickupZipCode').val()+")";
			}
	}
	var cities = "";
	if($('#blOriginCityCodeDescription').val()!='')
		cities = $('#blOriginCityCode').val();
	if($('#originPortCityCode').val()!='')
	{
		if(cities=='')
			cities = $('#originPortCityCode').val();
		else
			cities = cities + " - " + $('#originPortCityCode').val();
	}
	if($('#destinationPortCityCode').val()!='')
	{
		if(cities=='')
			cities = $('#destinationPortCityCode').val();
		else
			cities = cities + " - " + $('#destinationPortCityCode').val();
	}
	if($('#blDestinationCityCode').val()!='')
	{
		if(cities=='')
			cities = $('#blDestinationCityCode').val();
		else
			cities = cities + " - " + $('#blDestinationCityCode').val();
	}
	if(cities!='')
		cities = " | " + cities;
	
	var vvd = "";
	if($('#vessel').val()!='')
		vvd = " | " + $('#vessel').val() + " " + handleVoyage($('#voyage').val()) + " " + $('#direction').val();
	
	var sailDate = "";
	if($('#sailDate').val()!="")
		sailDate = " | " + $('#sailDate').val();
	
	var vgm = "";
	if($('#isVGMRequired').val() == 'true') {
		vgm = " | VGM-Y";
	} else if($('#isVGMRequired').val() == 'false') {
		vgm = "";
	} else if($('#isVgmRequiredDefault').text() == 'Yes') {
		vgm = " | VGM-Y";
	} else {
		vgm = "";
	}
	console.log("VGM header="+vgm);
	
	
	displayText = displayText + loadService + dischargeService + cities + vvd + sailDate+vgm;
	setAccordianTabDetails('routingHeader', displayText);	
}

function validateRoutingFieldsOnSave()
{
	var isValid = true;
	
	if($('#bookingTypeCode').val()=='B' && 
			$('#bookingStatusCode :selected').val()=='APPR')
	{
		if($('#loadServiceCode :selected').val()=='')
		{
			//if(!$('#maintainBookingRouting').is(':visible'))
				expandRoutingDiv(isValid);
			$('#loadServiceCode').validationEngine('showPrompt', 'Load Service is required', 'error', 'topRight', true);
			isValid = false;
		}
		
		if($('#dischargeServiceCode :selected').val()=='')
		{
			//if(!$('#maintainBookingRouting').is(':visible'))
				expandRoutingDiv(isValid);
			$('#dischargeServiceCode').validationEngine('showPrompt', 'Discharge service is required', 'error', 'topRight', true);
			isValid = false;
		}
		
		if($('#originPortCityCode').val()=='' || $('#originPortCityCodeDescription').val()=='')
		{
			//if(!$('#maintainBookingRouting').is(':visible'))
				expandRoutingDiv(isValid);
			$('#originPortCityCodeDescription').validationEngine('showPrompt', 'Origin Port is required', 'error', 'topRight', true);
			isValid = false;
		}
		
		if($('#destinationPortCityCode').val()=='' || $('#destinationPortCityCodeDescription').val()=='')
		{
			//if(!$('#maintainBookingRouting').is(':visible'))
				expandRoutingDiv(isValid);
			$('#destinationPortCityCodeDescription').validationEngine('showPrompt', 'Destination Port is required', 'error', 'topRight', true);
			isValid = false;
		}
		
		if($('#vessel').val()=='' && $('#voyage').val()=='' && $('#direction').val()=='')
		{
			//if(!$('#maintainBookingRouting').is(':visible'))
				expandRoutingDiv(isValid);
			if(!$('#routingMainDiv').is(':visible'))
				animatedcollapse.show('routingMainDiv');
			$('#vvdLabel').validationEngine('showPrompt', 'VVD is required', 'error', 'topRight', true);
			isValid = false;
		}
	}
	/*if($('#isInBond :selected').val()=='true' && $('#inbondNumber').val()=='')
	{
		//if(!$('#maintainBookingRouting').is(':visible'))
		expandRoutingDiv(isValid);
		$('#inbondNumber').validationEngine('showPrompt', 'Inbond number is required', 'error', 'topRight', true);
		isValid = false;
	}*/
	if($('#bookingTypeCode').val()=='B')
	{
		if(($('#newVessel').val()!='' || $('#newVoyage').val()!='' || $('#newDirection').val()!='')
				&& ($('#newVessel').val()=='' || $('#newVoyage').val()=='' || $('#newDirection').val()==''))
		{
			//if(!$('#maintainBookingRouting').is(':visible'))
				expandRoutingDiv(isValid);
			if(!$('#routingMainDiv').is(':visible'))
				animatedcollapse.show('routingMainDiv');
			$('#vvdLabel').validationEngine('showPrompt', 'VVD is invalid', 'error', 'topRight', true);
			isValid = false;
		}
		else if(($('#newVessel').val()!='' && $('#newVoyage').val()!='' && $('#newDirection').val()!='')
				&& ($('#newVessel').val()!=$('#vessel').val() || handleVoyage($('#newVoyage').val())!=handleVoyage($('#voyage').val())
						|| $('#newDirection').val()!=$('#direction').val()))
		{
			//if(!$('#maintainBookingRouting').is(':visible'))
				expandRoutingDiv(isValid);
			if(!$('#routingMainDiv').is(':visible'))
				animatedcollapse.show('routingMainDiv');
			$('#vvdLabel').validationEngine('showPrompt', 'VVD is invalid', 'error', 'topRight', true);
			isValid = false;
		}
		if(!$('#vvdChangeAuthPartyCode').attr("disabled") && $('#vvdChangeAuthPartyCode').attr("disabled")!="disabled"
			&& $('#vvdChangeAuthPartyCode :selected').val()=='' /*&& $('#vessel').val() !='' && 
			($('#vessel').val()+handleVoyage($('#voyage').val())+$('#direction').val()) != 
				($('#originalVesselCode').text()+handleVoyage($('#originalVoyage').text())+$('#originalDirectionSeq').text())*/)
		{
			//if(!$('#maintainBookingRouting').is(':visible'))
				expandRoutingDiv(isValid);
			if(!$('#routingMainDiv').is(':visible'))
				animatedcollapse.show('routingMainDiv');
			$('#vvdChangeAuthPartyCode').validationEngine('showPrompt', '* This is required', 'error', 'topRight', true);
			isValid = false;
		}
	}
	if($('#convCgoApptCutoffDate').val()!='' && !validateDate('convCgoApptCutoffDate', false))
	{
		//if(!$('#maintainBookingRouting').is(':visible'))
			expandRoutingDiv(isValid);
		if(!$('#routingMainDiv').is(':visible'))
			animatedcollapse.show('routingMainDiv');
		validateDate('convCgoApptCutoffDate', true);
		isValid = false;
	}
	if($('#convCgoEstArrivalDate').val()!='' && !validateDate('convCgoEstArrivalDate', false))
	{
		//if(!$('#maintainBookingRouting').is(':visible'))
			expandRoutingDiv(isValid);
		if(!$('#routingMainDiv').is(':visible'))
			animatedcollapse.show('routingMainDiv');
		validateDate('convCgoEstArrivalDate', true);
		isValid = false;
	}
	if($('#requiredDeliveryDate').val()!='' && !validateDate('requiredDeliveryDate', false))
	{
		//if(!$('#maintainBookingRouting').is(':visible'))
			expandRoutingDiv(isValid);
		if(!$('#routingMainDiv').is(':visible'))
			animatedcollapse.show('routingMainDiv');
		validateDate('requiredDeliveryDate', true);
		isValid = false;
	}
	if($('#premiumRDD').is(':visible') && 
			$('#premiumRDD').attr("disabled") != 'disabled' && $('#premiumRDD').val()=='')
	{
		//if(!$('#maintainBookingRouting').is(':visible'))
			expandRoutingDiv(isValid);
		if(!$('#routingMainDiv').is(':visible'))
			animatedcollapse.show('routingMainDiv');
		$('#premiumRDD').validationEngine('showPrompt', 'Premium RDD is required', 'error', 'topRight', true);
		isValid = false;
	}
	else if($('#premiumRDD').val()!='' && !validateDate('premiumRDD', false))
	{
		//if(!$('#maintainBookingRouting').is(':visible'))
			expandRoutingDiv(isValid);
		if(!$('#routingMainDiv').is(':visible'))
			animatedcollapse.show('routingMainDiv');
		validateDate('premiumRDD', true);
		isValid = false;
	}
	if(!validateTime('convCgoApptCutoffTime'))
	{
		//if(!$('#maintainBookingRouting').is(':visible'))
			expandRoutingDiv(isValid);
		if(!$('#routingMainDiv').is(':visible'))
			animatedcollapse.show('routingMainDiv');
		$('#convCgoApptCutoffTime').validationEngine('showPrompt', 'Time should be in 24-hr HH:mm format', 'error', 'topRight', true);
		isValid = false;
	}
	if(!validateTime('convCgoEstArrivalTime'))
	{
		//if(!$('#maintainBookingRouting').is(':visible'))
			expandRoutingDiv(isValid);
		if(!$('#routingMainDiv').is(':visible'))
			animatedcollapse.show('routingMainDiv');
		$('#convCgoEstArrivalTime').validationEngine('showPrompt', 'Time should be in 24-hr HH:mm format', 'error', 'topRight', true);
		isValid = false;
	}
	
	/*if($('#convCgoApptCutoffDate').val()!='' && $('#convCgoApptCutoffTime').val()=='')
	{
		//if(!$('#maintainBookingRouting').is(':visible'))
			expandRoutingDiv(isValid);
		if(!$('#routingMainDiv').is(':visible'))
			animatedcollapse.show('routingMainDiv');
		$('#convCgoApptCutoffTime').validationEngine('showPrompt', 'Conv Appt cutoff time required', 'error', 'topRight', true);
		isValid = false;
	}
	else */if($('#convCgoApptCutoffDate').val()=='' && $('#convCgoApptCutoffTime').val()!='')
	{
		//if(!$('#maintainBookingRouting').is(':visible'))
			expandRoutingDiv(isValid);
		if(!$('#routingMainDiv').is(':visible'))
			animatedcollapse.show('routingMainDiv');
		$('#convCgoApptCutoffDate').validationEngine('showPrompt', 'Conv Appt cutoff date required required', 'error', 'topRight', true);
		isValid = false;
	}
	
	/*if($('#convCgoEstArrivalDate').val()!='' && $('#convCgoEstArrivalTime').val()=='')
	{
		//if(!$('#maintainBookingRouting').is(':visible'))
			expandRoutingDiv(isValid);
		if(!$('#routingMainDiv').is(':visible'))
			animatedcollapse.show('routingMainDiv');
		$('#convCgoEstArrivalTime').validationEngine('showPrompt', 'Conv Cargo estimated time required', 'error', 'topRight', true);
		isValid = false;
	}
	else */if($('#convCgoEstArrivalDate').val()=='' && $('#convCgoEstArrivalTime').val()!='')
	{
		//if(!$('#maintainBookingRouting').is(':visible'))
			expandRoutingDiv(isValid);
		animatedcollapse.show('routingMainDiv');
		$('#convCgoEstArrivalDate').validationEngine('showPrompt', 'Conv Cargo estimated date required', 'error', 'topRight', true);
		isValid = false;
	}
	if($('#isAutoInlandMove :selected').val()=="true"
		&& $('#customerGroupId option:selected').text()!="COMMERCIAL AUTO GROUP")
	{
		//if(!$('#maintainBookingRouting').is(':visible'))
			expandRoutingDiv(isValid);
		if(!$('#inland').is(':visible'))
			animatedcollapse.show('inland');
		//window.scrollTo(0, 850);
		$('#isAutoInlandMove').validationEngine('showPrompt', 'Cannot be set to Y as Customer Group is not Commercial Auto Group', 'error', 'topRight', true);
		isValid = false;
	}
	if($('#intermodalDepartureDate').val()!='' && !validateDate('intermodalDepartureDate', false))
	{
		//if(!$('#maintainBookingRouting').is(':visible'))
			expandRoutingDiv(isValid);
		if(!$('#inland').is(':visible'))
			animatedcollapse.show('inland');
		//window.scrollTo(0, 850);
		validateDate('intermodalDepartureDate', true);
		isValid = false;
	}
	if($('#dealerAuctionLocationCode').val()!="" && $("#isAutoInlandMove :selected").val()=="false")
	{
		//if(!$('#maintainBookingRouting').is(':visible'))
			expandRoutingDiv(isValid);
		if(!$('#inland').is(':visible'))
			animatedcollapse.show('inland');
		//window.scrollTo(0, 850);
		$('#dealerAuctionLocationCode').validationEngine('showPrompt', 'Value not permitted as Auto Inland Move Flag = Y', 'error', 'topRight', true);
		isValid = false;
	}
	
	return isValid;
}

function expandRoutingDiv(isValid)
{
	if(isValid)
	{
		if(!$('#maintainBookingRouting').is(':visible'))
		{
			$('#routingAccordionHeader').removeClass("ui-state-default ui-corner-all").addClass("ui-state-active ui-corner-top");
			$('#routingAccordionHeader span').removeClass('ui-icon-triangle-1-e').addClass('ui-icon-triangle-1-s');
			$('#maintainBookingRouting').addClass('ui-accordion-content-active');
			$('#maintainBookingRouting').css('display', 'block');
			var status = $($('.booking-section')[3]).accordion('option', 'active');
			if (typeof status == "boolean" && !status) {
				$($('.booking-section')[3]).accordion('option', 'active', 0);
			}
		}
		var offset = accordianPostionCoordinates(3);
		window.scrollTo(offset.left, offset.top);
		//window.scrollTo(0, 400);
		//$('#routingLink').trigger('click');
	}
}

function setDomesticForeignIndicator()
{
	
	
	
	if($('#tradeCode').val()!='')
	{
		if($('#tradeCode').val()=='A') {
			$("#hazmatdiv").show();
		} else {
			$("#hazmatdiv").hide();
		}
		
		
		if($('#tradeCode').val()=='G' || $('#tradeCode').val()=='M')
		{
			domesticForeignIndicator =  "international";
			indicatorChangeEvents();
		}
		else if($('#tradeCode').val()=='F')
		{
			if($('#originPortCityCode').val()=='')
			{
				domesticForeignIndicator =  'none';
				indicatorChangeEvents();
			}
			else
			{
				$.ajax({
					url: "/gates/booking/routing/validateChinaTrade?cityCode="+$('#originPortCityCode').val(),
					success: function(responseText){
						if(responseText.data=="Y")
							domesticForeignIndicator =  "china";
						else
							domesticForeignIndicator = "international";
						
						indicatorChangeEvents();
					}
				});
			}
		}
		else
		{
			domesticForeignIndicator = "domestic";
			indicatorChangeEvents();
		}
	}
	else
	{
		domesticForeignIndicator = 'none';
		indicatorChangeEvents();
		$("#hazmatdiv").hide();
	}
}

function populateConsigneeNotify()
{
	if($('input[name="consignee\\.addressRoleId"]').val()!='')
	{
		$.ajax({
			url: _context +"/booking/party/getConsigneeNotify",
			data:{consigneeAroleId:$('input[name="consignee\\.addressRoleId"]').val(), domesticForeignIndicator:domesticForeignIndicator},
			success: function(){
				$("#gridIdForParties").trigger("reloadGrid");
			}
		});
	}
}

function indicatorChangeEvents()
{
	populateConsigneeNotify();
	checkMeasurementUnit();
	
	checkDestinationPortDefaultValue();
	checkPlaceOfDeliveryDefaultValue();
	checkOriginPtDefaultValue();
	checkIssuePtDefaultValue();
}

function checkMeasurementUnit()
{
	var isChanged = false;
	
	if(domesticForeignIndicator=="china")
	{
		//D030152
		if( $("#tradeCode").val()!='' && $("#tradeCode").val()=='F'){
			//D030789
			if($('#unitOfMeasureSourceCode').val()!='M')
			{
				$('#unitOfMeasureSourceCode').val('M');
				isChanged = true;
			}
		}else if($('#unitOfMeasureSourceCode :selected').val()=="I")
		{
			isChanged = true;
			$('#unitOfMeasureSourceCode').val('M');
		}
	}
	else
	{
		//D030152
		if( $("#tradeCode").val()!='' && $("#tradeCode").val()=='F'){
			//D030789
			if($('#unitOfMeasureSourceCode').val()!='M')
			{
				$('#unitOfMeasureSourceCode').val('M');
				isChanged = true;
			}
		}else if($('#unitOfMeasureSourceCode :selected').val()=="M")
		{
			isChanged = true;
			$('#unitOfMeasureSourceCode').val('M');
		}else{
			$('#unitOfMeasureSourceCode').val('I');
		}
	}
	
	if(isChanged)
		measurementUnitChange();
}

function validateTime(timeControl)
{
	if($('#'+timeControl).val()!='')
	{
		var time = $('#'+timeControl).val();
		if(time.length==4 && time.indexOf(':')==1)
		{
			time = "0"+time;
			return checkTime(time, timeControl);
		}
		else if(time.length==5 && time.indexOf(':')==2)
		{
			return checkTime(time, timeControl);
		}
		else
			return false;
	}
	else
		return true;
}

function validateForNonNegativeIntegers(value) {
	var re = new RegExp("^[0-9]+$");
	if (value<0) {
		return false;
	} else if (!re.test(value)) {
		return false;
	} else {
		return true;
	}
}

function checkTime(time, timeControl)
{
	var hourInt = time.split(":")[0];
	var timeInt = time.split(":")[1];
	var isValid = false;
	
	if(validateForNonNegativeIntegers(hourInt) && hourInt>=0 && hourInt<=23 && 
			validateForNonNegativeIntegers(timeInt) && timeInt>=0 && timeInt<=59)
	{
		isValid = true;
		$('#'+timeControl).val(time);
	}
		
	return isValid;
}

function fetchTradeValue(marker){
	var originPortCode = $('#originPortCityCode').val();
	var destPortCode = $('#destinationPortCityCode').val();
	if(originPortCode!='' && destPortCode!='' && originPortCode!=destPortCode){
		$.ajax({
			   type: "POST",
			   data: {
				   originPortCode : originPortCode,
				   destPortCode : destPortCode
			   },
			   url: _context + "/booking/fetchTrade?originPortCode=" + originPortCode + "&destPortCode=" + destPortCode,
			   success: function(responseText){
				   if(responseText.success)
				   {
					    $("#tradeCode").val(responseText.data);
					    var previousTradeCode = $('#previousTradeCode').val();
					    var tradeCode = $('#tradeCode :selected').val();
					    var id = $(this).attr("id");
					    
					    if(previousTradeCode != tradeCode)
					    {
							if(previousTradeCode=='' && tradeCode!=''){
								$('#previousTradeCode').val($('#tradeCode').val());
								 /*  var xCoordinate = window.pageXOffset;
								   var yCoordinate = window.pageYOffset;*/
								   enableDisableCommodityIfTradeCustGrpLDGrpPresent();
								   setTimeout(function(){
									   $('#'+id).focus();
									   //window.scrollTo(xCoordinate, yCoordinate);
									}, 1000);
							}
							else if((previousTradeCode!='G' && tradeCode=='G') || (previousTradeCode!='F' && tradeCode=='F')){
								var showMessage = false;
								if(marker == 'destinationPortCity')
									showMessage = true;
								if(validateEquipmentOnTradeAndPODChange(showMessage)){
									$('#previousTradeCode').val($('#tradeCode').val());
								}
								else{
									$('#tradeCode').val($('#previousTradeCode').val());
								}
							}
							else
								$('#previousTradeCode').val($('#tradeCode').val());
					    }
					    setDomesticForeignIndicator();
				   }
				   else
					   setDomesticForeignIndicator();
			   }
		});	
	}else{
		// $("#tradeCode").val('');
		 setDomesticForeignIndicator();
	}
}

function showToolTip(evt) {
	if($("#inbondNumber").val()!='')
	{
		$('#toolTipDiv').html($("#inbondNumber").val()); 
		//popUp(event,'toolTipDiv');
		var wp = pw(); 
		dm = document.getElementById('toolTipDiv'); 
		ds = dm.style;
		st = ds.visibility; 
		if (dm.offsetWidth)
			ew = dm.offsetWidth; 
		else if (dm.clip.width) 
			ew = dm.clip.width; 
		tv = mouseY(evt) + 20;
		lv = mouseX(evt) - (ew/4);
		if (lv < 2) 
			lv = 2;
		else if (lv + ew > wp) 
			lv = lv - (ew/2);
		lv += 'px';
		tv += 'px';
		ds.left = lv;
		ds.top = tv;
		ds.visibility = "visible";
	}
}

function hideToolTip(event) {
	/*if($("#inbondNumber").val()!='')
	{
		popUp(event,'toolTipDiv');
	}*/
	dm = document.getElementById('toolTipDiv'); 
	ds = dm.style;
	st = ds.visibility; 
	if (dm.offsetWidth)
		ew = dm.offsetWidth; 
	else if (dm.clip.width) 
		ew = dm.clip.width; 
	if (st == "visible" || st == "show") 
	{ 
		ds.visibility = "hidden"; 
	}
}

function deriveValidateVVD(selector)
{
	$.ajax({
		url: _context +"/booking/routing/deriveValidateVVD",
		type : "POST",
		data : {
			selector :selector, 
			originPort : $('#originPortCityCode').val(), 
			destinationPort : $('#destinationPortCityCode').val(), 
			vessel: $('#vessel').val(), 
			voyage : $('#voyage').val(), 
			direction : $('#direction').val(), 
			sailDate : $('#sailDate').val()
		},
		success: function(responseText){
			$("#vvdRoutingGrid").trigger("reloadGrid");
			var messageContent = '';
			if (responseText.messages) {
				var messages = responseText.messages;
				
				if (messages.error.length > 0) {
					var array = messages.error;
					var len = messages.error.length;
					for (var i=0; i<len; i++) {
						messageContent += '<div class="message_error">' + array[i] + '</div>';
						if(array[i] != undefined && $.trim(array[i]) == 'Booking Assignment Maintenance required,'){
							messageContent = '<div class="message_error">'+ array[i] + "<a href="+_context + "/bookingMaintenance/showScreen>Click Here</a>"+'</div>';;
						}
					}
				}

				if (messages.warn.length > 0) {
					var array = messages.warn;
					var len = messages.warn.length;
					for (var i=0; i<len; i++) {
						messageContent += '<div class="message_warning">' + array[i] + '</div>';
						if(array[i] != undefined && $.trim(array[i]) == 'Booking Assignment Maintenance required,'){
							messageContent = '<div class="message_warning">'+ array[i] + "<a href="+_context + "/bookingMaintenance/showScreen>Click Here</a>"+'</div>';;
						}
					}
				}
			}

			$('#msgDiv').html($('#msgDiv').html()+messageContent);
			if(messageContent!='')
				window.scrollTo(0, 0);
			
			//Dialog not opened in case of Link and validate City already opening a dialog
			/*if(responseText.messages.error.length>0)
				triggerErrorMessageAlert('msgDiv');*/
		}
	});
}

function autotab(event, object)
{
	var keyCode = event.keyCode;
	
	if(keyCode==32 || (48<=keyCode && keyCode<=57)
			|| (65<=keyCode && keyCode<=90) || (96<=keyCode && keyCode<=107) 
			|| (109<=keyCode && keyCode<=111))
	{
		if(object.value.length >= object.getAttribute("maxlength"))
		{
			if($(object).attr("id")=="newDirection" || $(object).attr("id")=="bkdDirection")
				$(object).blur();
			else if($(object).next().val()=='')
				$(object).next().focus();
		}
	}
	return true;
}

function deriveZone(selector)
{
	var portCode = "";
	var zipcode = "";
	
	if(selector=='pickup')
	{
		portCode = $('#originPortCityCode').val();
		zipcode = $('#pickupZipCode').val();
	}
	else if(selector=='delivery')
	{
		portCode = $('#destinationPortCityCode').val();
		zipcode = $('#deliveryZipCode').val();
	}
	$.ajax({
		url: _context +"/booking/routing/deriveZone",
		data : {portCode:portCode, zipcode:zipcode, selector:selector},
		success: function(responseText){
			if(selector=='pickup')
			{
				$('#pickupZone').val(responseText.data);
				$('#pickupZoneDisplay').html(responseText.data);
				checkPickupCarrier();
			}
			else if(selector=='delivery')
			{
				$('#deliveryZone').val(responseText.data);
				$('#deliveryZoneDisplay').html(responseText.data);
				checkDeliveryCarrier();
			}
		}
	});
}

function getAllLoadServices(){
	$('#loadServiceCode').attr("disabled", true);
	
	function callBack(responseText) { // cheetah
		setLoadDischargeValues(responseText.data, '#loadServiceCode', "");
		$('#loadServiceCode').attr("disabled", false);

		/*D028991** Re enforce security after DOM update Routing*/
        _enforceSecuritySection('maintainBookingRouting', 3, isRoutingDisplayOnly, isRoutingModifiable);
	}
	
	getAllLoadServicesRequest(callBack); // cheetah
}

function getAllLoadServicesRequest(callBack) { // cheetah
	var gatesCheetah = window.gatesCheetah || {};
	if (gatesCheetah && gatesCheetah.allLoadServices && gatesCheetah.allLoadServices !== null)  {
		console.log('Cheetah: getAllLoadServicesRequest from cache');
		callBack(gatesCheetah.allLoadServices);
		return;
	}
	console.log('Cheetah: getAllLoadServicesRequest from Ajax');
	$.ajax({
		url: _context +"/booking/routing/getAllLoadServices",
		success: callBack
	});
}

function getAllDischargeServices(){
	$('#dischargeServiceCode').attr("disabled", true);
	
	function callBack(responseText) { // cheetah
		setLoadDischargeValues(responseText.data, '#dischargeServiceCode', "");
		$('#dischargeServiceCode').attr("disabled", false);

		/*D028991** Re enforce security after DOM update Routing*/
        _enforceSecuritySection('maintainBookingRouting', 3, isRoutingDisplayOnly, isRoutingModifiable);
	}
	
	getAllDischargeServicesRequest(callBack); // cheetah
	
}

function getAllDischargeServicesRequest(callBack) { // cheetah
	var gatesCheetah = window.gatesCheetah || {};
	if (gatesCheetah && gatesCheetah.allDischargeServices && gatesCheetah.allDischargeServices !== null)  {
		console.log('Cheetah: getAllDischargeServicesRequest from cache');
		callBack(gatesCheetah.allDischargeServices);
		return;
	}
	console.log('Cheetah: getAllDischargeServicesRequest from Ajax');
	$.ajax({
		url: _context +"/booking/routing/getAllDischargeServices",
		success: callBack
	});
}

function getDischargeServicesRequest(callBack, serviceCode) { // cheetah
	var bookingInitData = ('bookingInitData' in (window.gatesCheetah || {}))? window.gatesCheetah.bookingInitData : {};
	var loadServiceCode = ('loadServiceCode' in bookingInitData) ? bookingInitData.loadServiceCode : '';
	var dischargeServices = ('dischargeServices' in bookingInitData) ? bookingInitData.dischargeServices : {};
	console.log('Cheetah: getDischargeServicesRequest: ' + serviceCode + ' || ' + loadServiceCode);
	if (serviceCode == loadServiceCode) {
		console.log('Cheetah: getDischargeServicesRequest from cache');
		callBack(dischargeServices);
		return;
	}
	console.log('Cheetah: getDischargeServicesRequest from Ajax');
	$.ajax({
		url: _context +"/booking/routing/getDischargeServices?loadService="+serviceCode,
		success: callBack
	});
}

function getLoadServicesRequest(callBack, serviceCode) { // cheetah
	var bookingInitData = ('bookingInitData' in (window.gatesCheetah || {}))? window.gatesCheetah.bookingInitData : {};
	var dischargeServiceCode = ('dischargeServiceCode' in bookingInitData) ? bookingInitData.dischargeServiceCode : '';
	var loadServices = ('loadServices' in bookingInitData) ? bookingInitData.loadServices : {};
	console.log('Cheetah: getLoadServicesRequest: ' + serviceCode + ' || ' + dischargeServiceCode);
	if (serviceCode == dischargeServiceCode)  {
		console.log('Cheetah: getLoadServicesRequest from cache');
		callBack(loadServices);
		return;
	}
	console.log('Cheetah: getLoadServicesRequest from Ajax');
	$.ajax({
		url: _context +"/booking/routing/getLoadServices?dischargeService="+serviceCode,
		success: callBack
	});	
}

function getLoadDischargePairRequest(callBack, loadCode, dischargeCode) { // cheetah
	var bookingInitData = ('bookingInitData' in (window.gatesCheetah || {}))? window.gatesCheetah.bookingInitData : {};
	var dischargeServiceCode = ('dischargeServiceCode' in bookingInitData) ? bookingInitData.dischargeServiceCode : '';
	var loadServiceCode = ('loadServiceCode' in bookingInitData) ? bookingInitData.loadServiceCode : '';
	var loadDischargePair = ('loadDischargePair' in bookingInitData) ? bookingInitData.loadDischargePair : {};
	console.log('Cheetah: getLoadDischargePairRequest: ' + loadCode + ' || ' + loadServiceCode + ' && ' + dischargeCode + ' || ' + dischargeServiceCode);
	if (loadCode == loadServiceCode && dischargeCode == dischargeServiceCode)  {
		console.log('Cheetah: getLoadDischargePairRequest from cache');
		callBack(loadDischargePair);
		return;
	}
	console.log('Cheetah: getLoadDischargePairRequest from Ajax');
	$.ajax({
		url: _context +"/booking/routing/getLoadDischargePair",
		data:{
			loadServiceCode : loadCode,
			dischargeServiceCode : dischargeCode
		},
		success: callBack
	});
}

function carrierCodeSearchUpdate(id){
	var values = id.split("|");
	if(values[1] == 'O' && $('#overridePickupCarrierCode').attr('disabled') != 'disabled'){
		$('#overridePickupCarrierCode').val(values[0]);
	} else if($('#overrideDeliveryCarrierCode').attr('disabled') != 'disabled') {
		$('#overrideDeliveryCarrierCode').val(values[0]);
	}
}

function checkVGM() {
	var queryString = $('#bookingForm').formSerialize();
	$.ajax({
		url: _context +"/booking/routing/getVGM",
		type : "POST",
		data : queryString,
		success: function(responseText){
				console.log(responseText.data.toString());
				if(responseText.data.toString() == 'true') {
					$('#isVgmRequiredDefault').html("Yes");
				} else {
					$('#isVgmRequiredDefault').html("No");
				}
				setRoutingHeader();
			}
	});
}
;var lastChangeSource = "";
var firstLoad;

$(function() {

	//$('#selectButtonDiv').hide();
	
	$('#vvdChangeAuthPartyCode').change(
	   function()
	   {
		  /*if($('#bookingStatusCode :selected').val()== 'INCP' || lastChangeSource=='')
		  {*/
			   if(($('#vessel').val()=='' || $('#voyage').val()=='' || $('#direction').val()=='')
					   && $('#vvdChangeAuthPartyCode :selected').val()!='')
			   {
				   $('#vvdChangeAuthPartyCode').val('');
				   $('#msgDiv').html('<div class="message_error">Change Source not allowed</div>');
				   window.scrollTo(0, 0);
				   triggerErrorMessageAlert();
			   }
			   else
			   {
				   var vvd = $('#bkdVessel').val()+handleVoyage($('#bkdVoyage').val())+$('#bkdDirection').val();
				   $.ajax({
						url : _context +"/booking/routing/validateChangeSource",
						data : {changeSource:$('#vvdChangeAuthPartyCode :selected').val(), vvd:vvd},
						success : function(responseText) {
							showResponseMessages('msgDiv', responseText);
							if(!responseText.success)
						   {
							   $('#vvdChangeAuthPartyCode').val(lastChangeSource);
							  // showResponseMessages('msgDiv', responseText);
						   }
							else
								lastChangeSource = $('#vvdChangeAuthPartyCode :selected').val();
						}
				   });
			   }
		  /*}
		  else
		  {
			  $('#vvdChangeAuthPartyCode').val(lastChangeSource);
			  $('#msgDiv').html('<div class="message_error">Change Source cannot be changed</div>');
			  window.scrollTo(0, 0);
		  }*/
	   });
	
	   
	//Create VVD Table on main page
	var colNames = [ 'Sequence No', 'Route Sequence No', 'Vessel Voyage Direction', 'Port of Loading', 'Port of Discharge', 'Sail Date', 'Arrival Date','extensionType'];
	
	var colModel = [ {
		name : 'bookingVoyageSeqNo',
		width : 70
	}, {
		name : 'routeSequenceNumber',
		hidden : true
	}, {
		name : 'vesselVoyageDirection',
		width : 170
	}, {
		name : 'loadPortCode',
		width : 130
	}, {
		name : 'dischargePortCode',
		width : 130
	},
	{
		name : 'sailDate',
		width : 100
	}, {
		name : 'arrivalDate',
		width : 100
	}, {
		name : 'extensionType',
		hidden : true
	}];
	

	var jsonReader = {
		root : "rows",
		page : "page",
		total : "total",
		records : "records",
		cell : "cell",
		repeatitems : false,
		id : "bookingVoyageSeqNo"
	};

	/*Booking Security*/
	if(isRoutingDisplayOnly || isRoutingModifiable){
		createGrid("vvdRoutingGrid", // grid id for party
		"vvdRoutingPager", // page id for party
		_context+'/booking/routing/loadVVDGrid', // geturl
		'', // addurl
		'', // edit url
		'', //delete url
		'',// delete selected URL
		colNames, colModel, "",// caption
		83,// height
		3,// row num
		[ 3, 6, 9 ],// row list
		false,// multiselect
		false,// multidelete
		false,// load once
		true, // read only grid
		jsonReader, // json reader
		true, // hide edit
		true, // hide delete
		true, // autowidth
		false, // rownumbers
		true, // hide custom add row
		false,// hide pager row
		null,// custom edit method
		vvdMainGridComplete,// custom grid complete
		null,// custom load complete
		false,// default hidden
		true);// row Color Based On status
		
		$("#vvdRoutingGrid").jqGrid('setGridParam',{
			beforeSelectRow: function(rowId, e) {
					 return false;
			 }
		});
	}
});

function createVVDSearchGrid(filter)
{
	var colNames = [ 'Trip Seq No', 'Voyage', 'Sail Date', 'Arrival Date', 'Cutoff Date'];
	
	var colModel = [ {
		name : 'tripSeqNo',
		hidden : true
	}, {
		name : 'voyageString',
		width : 300,
		align : 'center',
		formatter : 'showlink',
		formatoptions : {
			baseLinkUrl : "javascript:",
			showAction : "selectTrip('",
			addParam : ", filter="+filter+"');"
		}
	}, {
		name : 'dateOfDeparture',
		align : 'center',
		width : 200
	}, {
		name : 'dateOfArrival',
		align : 'center',
		width : 200
	}, {
		name : 'cutOffdate',
		align : 'center',
		width : 200
	}];
	

	var jsonReader = {
		root : "rows",
		page : "page",
		total : "total",
		records : "records",
		cell : "cell",
		repeatitems : false,
		id : "tripSeqNo"
	};

	createGrid("vvdResultGrid", // grid id for vvd Results
	"vvdResultPager", // page id for party
	_context+'/booking/routing/loadSearchResults', // geturl
	'', // addurl
	'', // edit url
	'', //delete url
	'',// delete selected URL
	colNames, colModel, "Search Results",// caption
	232,// height
	500,// row num
	[ 10, 20, 30 ],// row list
	false,// multiselect
	false,// multidelete
	false,// load once
	true, // read only grid
	jsonReader, // json reader
	true, // hide edit
	true, // hide delete
	false, // autowidth
	false, // rownumbers
	true, // hide custom add row
	false,// hide pager row
	null,// custom edit method
	null,// custom grid complete
	vvdSearchLoadComplete,// custom load complete
	false,// default hidden
	true);// row Color Based On status

}

var vvdMainGridComplete = function()
{
	 $('#vvdRoutingPager .ui-pg-input').attr("readonly", true);
	 $.ajax({
			url: _context +"/booking/routing/getRoutingInstructions",
			success: function(responseText){
				if($("#overrideRouteInstruction").val()!='')
				{
					if($("#overrideRouteInstruction").val()==responseText)
					{
						$('#overrideRouteInstruction').css('color','black');
						setOverridesHeader();
					}
					else
					{
						//D028751: 	**gates PROD**F trade maintain booking- DEFECT IN BKG OVERRIDES - domestic routing export instructions
						/*if($('#bookingId').val()=='')
						{
							$("#overrideRouteInstruction").val(responseText);
							$('#overrideRouteInstruction').css('color','black');
							setOverridesHeader();
						}
						else
						{*/
							$('#overrideRouteInstruction').css('color','green');
							$('#overrideHeaderCheckBox').attr('checked', true);
							setOverridesHeader();
						//}
					}
				}
				else
				{
					$("#overrideRouteInstruction").val(responseText);
					$('#overrideRouteInstruction').css('color','black');
					setOverridesHeader();
				}
			}
	 });
};

function selectTrip(params)
{
	var seqNo = params.split(',')[0].split('=')[1];
	var filter = params.split(',')[1].split('=')[1];
	
	var rowIDs = jQuery("#vvdResultGrid").getDataIDs(); 
	for (var i=0;i<rowIDs.length;i=i+1)
	{
	   var rowData=jQuery("#vvdResultGrid").getRowData(rowIDs[i]);
	   if((rowData.tripSeqNo).toString() == seqNo)
	   {
		   var vvds = rowData.voyageString.split("  --  ")[0].split(" ");
		   var selectedVessel = vvds[0];
		   var selectedVoyage = handleVoyage(vvds[1]);
		   var selectedDirection = vvds[2];
		   if(selectedVessel == $('#vessel').val() && selectedVoyage == handleVoyage($('#voyage').val())
				   && selectedDirection == $('#direction').val() && $("#sailDate").val() != '')
			   alert("VVD already present on booking");
		   else
		   {
			   $.ajax({
					url : _context +"/booking/routing/selectTripFromGrid",
					data :{
						tripSeqNo:seqNo,
						callingParty : filter,
						blOrigin: $('#blOriginCityCode').val()
					},
					success : function(responseText) {
						if(responseText.success)
						{
							if(filter=='routing'){
								selectTripSuccessFunction(responseText);
							} else if(filter=='freight'){
								freightSuccessFunction(responseText);
							}
							$("#vvdSearchDialog").dialog('close');
							var estShipDate = $('#estShip').text();
							var estimatedDropOffDate =$('#estimatedDropOffDate').val();
							if(filter=='routing' && estShipDate!='' && estimatedDropOffDate!='' && new Date($('#estimatedDropOffDate').val()).getTime() > new Date(estShipDate).getTime()){
							//$('#estimatedDropOffDate').validationEngine('showPrompt', '* Est Drop Off date cannot be greater than Est Ship date.', 'error', 'topRight', true);
							alert("Est Drop Off date cannot be greater than Est Ship date.");
							return false;
							}
						}
						else
						{
							if(responseText.data=='Sail')
							{
								var r = confirm("Sail Date for this VVD has Already Passed. Select?");
								if(r){
									selectTripAfterDateConfirmation('lookUp', filter);
								}
							}
							else
							{
								alert("An error has occurred while selecting vvd");
							}
						}
					}
				});
		   }
	   }
	}
}

function selectTripAfterDateConfirmation(callingType, filter){
	$('#msgDiv').html('');
	$.ajax({
		url : _context +"/booking/routing/selectTripAfterDateConfirmation",
		data: {
			callingParty:filter,
			blOrigin: $('#blOriginCityCode').val()
			},
		success : function(responseText) {
			if(responseText.success)
			{
				if(filter=='routing')
					selectTripSuccessFunction(responseText);
				else if(filter=='freight')
					freightSuccessFunction(responseText);
				
				if(callingType == 'lookUp')
					$("#vvdSearchDialog").dialog('close');
				else if(callingType == 'manual')
					$.unblockUI();
			}
			else
			{
				if(callingType == 'lookUp')
					alert("An error has occurred while selecting vvd");
				else if(callingType == 'manual')
				{
					$.unblockUI();
					if(filter=='routing')
						showResponseMessages('msgDiv', responseText);
					else if(filter=='freight')
						showResponseMessages('msgDivFrt', responseText);
				}
			}
		}
	});
}

function clearVoyage() {
	$('#newVoyage').val("");
	$('#newDirection').val("");
}

function clearDirection() {
	$('#newDirection').val("");
}

function validateVVD(filter)
{
	var vesselSelector = '';
	var voyageSelector = '';
	var directionSelector = '';
	
	if(filter == 'routing')
	{
		vesselSelector = "#newVessel";
		voyageSelector = "#newVoyage";
		directionSelector = "#newDirection";
	}
	else if(filter == 'freight')
	{
		vesselSelector = "#bkdVessel";
		voyageSelector = "#bkdVoyage";
		directionSelector = "#bkdDirection";
	}
	
	$(vesselSelector).val(($(vesselSelector).val()).toUpperCase()); 
	$(directionSelector).val(($(directionSelector).val()).toUpperCase()); 
	 
	if($('#originPortCityCode').val()=='' || $('#destinationPortCityCode').val()=='')
	{
		alert("Please select Port of Loading and Port of Discharge first");
	}
	else if($(vesselSelector).val()!='' && $(voyageSelector).val()!='' && $(directionSelector).val()!='')
	{
		if($(vesselSelector).val()==$('#vessel').val() && handleVoyage($(voyageSelector).val())==handleVoyage($('#voyage').val())
				&& $(directionSelector).val()==$('#direction').val() && $("#sailDate").val() != '')
		{
			alert("VVD same as already present on booking");
		}
		else
		{
			if(filter == 'routing')
				$('#msgDiv').html('');
			else if(filter == 'freight')
				$('#msgDivFrt').html('');
			blockUI();
			$.ajax({
				url: _context +"/booking/routing/validateVVDManual",
				data: { vessel: $(vesselSelector).val(),
						voyage: handleVoyage($(voyageSelector).val()), 
						direction: $(directionSelector).val(),
						originPort: $('#originPortCityCode').val(),
						destinationPort: $('#destinationPortCityCode').val(),
						callingParty : filter,
						blOrigin: $('#blOriginCityCode').val()
				  	},
				success: function(responseText){
					if(responseText.success)
					{
						selectTripSuccessFunction(responseText);
						if(filter == 'routing')
							showResponseMessages('msgDiv', responseText);
						else if(filter == 'freight')
							showResponseMessages('msgDivFrt', responseText);
						$.unblockUI();
					}
					else
					{
						if(responseText.data=='Sail')
						{
							var r = confirm("Sail Date for this VVD has Already Passed. Select?");
							if(r)
								selectTripAfterDateConfirmation('manual', filter);
							else
								$.unblockUI();
						}
						else
						{
							if(filter == 'routing')
								showResponseMessages('msgDiv', responseText);
							else if(filter == 'freight')
								showResponseMessages('msgDivFrt', responseText);
							$.unblockUI();
						}
					}
				}
			});
		}
	}
}

function selectTripSuccessFunction(responseText)
{
	$('#vvdCutOff input').val('');
	$('#vvdCutOff .cutOff').text('');
	$("#vvdRouting").loadJSON(responseText.data);
	$("#vvdCutOff").loadJSON(responseText.data);
	$("#vvdChangeAuthPartyCode").val(lastChangeSource);
	$("#vvdRoutingGrid").trigger("reloadGrid");
	checkVVDVesselDefaultValue();
	$('#overrideInitialVesselName').val(responseText.data.overrideInitialVesselName);
	checkVVDVoyageDefaultValue();
	checkIssuePtDefaultValue();
	setRoutingHeader();
	setFirstVVD();
	isBookingChanged = "Y";
	$('#msgDiv').html('');
	
	if(($('#vessel').val()+handleVoyage($('#voyage').val())+$('#direction').val()) != 
		($('#originalVesselCode').text()+handleVoyage($('#originalVoyage').text())+$('#originalDirectionSeq').text()) 
		&& $('#bookingId').val()!='' && isRoutingModifiable)
	{
		$('#vvdChangeAuthPartyCode').attr('disabled', false);
		$('#changeSourceLabel').html("Change Source<span class='mandatory'>*</span>");
	}
	else if(($('#vessel').val()+handleVoyage($('#voyage').val())+$('#direction').val()) == 
		($('#originalVesselCode').text()+handleVoyage($('#originalVoyage').text())+$('#originalDirectionSeq').text())
		&& $("#vvdChangeAuthPartyCode :selected").val()=='')
	{
		$('#vvdChangeAuthPartyCode').attr('disabled', true);
		$('#changeSourceLabel').html("Change Source");
	}
	
	$("#bkdVessel").val($('#vessel').val());
	$("#bkdVoyage").val(handleVoyage($('#voyage').val()));
	$("#bkdDirection").val($('#direction').val());
	$("#estShip").html($('#sailDate').val());
	
	isBookingChanged = "Y";
}

function freightSuccessFunction(responseText)
{
	$("#bkdVessel").val(responseText.data.vessel);
	$("#bkdVoyage").val(responseText.data.voyage);
	$("#bkdDirection").val(responseText.data.direction);
	$("#estShip").html(responseText.data.sailDate);
	
	if(($('#bkdVessel').val()+handleVoyage($('#bkdVoyage').val())+$('#bkdDirection').val()) != 
		($('#originalVesselCode').text()+handleVoyage($('#originalVoyage').text())+$('#originalDirectionSeq').text()) 
		&& $('#bookingId').val()!='' && isRoutingModifiable)
	{
		$('#vvdChangeAuthPartyCode').attr('disabled', false);
		$('#changeSourceLabel').html("Change Source<span class='mandatory'>*</span>");
	}
	else if(($('#bkdVessel').val()+handleVoyage($('#bkdVoyage').val())+$('#bkdDirection').val()) == 
		($('#originalVesselCode').text()+handleVoyage($('#originalVoyage').text())+$('#originalDirectionSeq').text())
		&& $("#vvdChangeAuthPartyCode :selected").val()=='')
	{
		$('#vvdChangeAuthPartyCode').attr('disabled', true);
		$('#changeSourceLabel').html("Change Source");
	}
	
	$('#freightVVDModified').val('Y');
	isBookingChanged = "Y";
	$('#msgDivFrt').html('');
}

function clearVVD()
{
	$.ajax({
		url: _context +"/booking/routing/removeVVD",
		success: function(responseText){
			$("#vvdRouting").loadJSON(responseText);
			lastChangeSource = "";
			$("#vvdCutOff").loadJSON(responseText);
			$("#vvdRoutingGrid").trigger("reloadGrid");
			checkVVDVesselDefaultValue();
			checkVVDVoyageDefaultValue();
			checkIssuePtDefaultValue();
			checkDomesticRoutingInstructions();
			setRoutingHeader();
		}
	});
}


function processChangeSource()
{
	$('#vvdChangeAuthPartyCode').attr('disabled', true);
	if($('#bookingId').val()!='' && isRoutingModifiable && $('#vvdChangeAuthPartyCode :selected').val()!='')
	{
		lastChangeSource = $('#vvdChangeAuthPartyCode :selected').val();
		$('#changeSourceLabel').html("Change Source<span class='mandatory'>*</span>");
	}
	else
	{
		lastChangeSource = "";
		$('#changeSourceLabel').html("Change Source");
	}
}

var vvdSearchLoadComplete = function()
{
	if(firstLoad == "Y")
	{
		$('#searchVVDButton').trigger('click');
		firstLoad = "N";
		$('#vvdResultPager .ui-pg-input').attr("readonly", true);
	}
	else
		$.unblockUI();
};

function refreshVVDInfo()
{
	/*$.ajax({
		url: _context +"/booking/routing/refreshVVDInfoAfterSave",
		success: function(responseText){
			$('#originalVVD').loadJSON(responseText);
			setRoutingHeader();*/
			$('#newVessel').val('');
			$('#newVoyage').val('');
			$('#newDirection').val('');
		/*}
	});*/
	if($('#overrideInitialLtvDate').val() =='01-01-0001')
		$('#overrideInitialLtvDate').val('');
}

function handleVoyage(voyage)
{
	if(voyage.length==1)
		voyage = "00" + voyage;
	else if(voyage.length==2)
		voyage = "0" + voyage;
	
	return voyage;
};$(function() {
	   $('#availabilityDate').datepicker({ dateFormat: 'mm-dd-yy' });
	   $('#deliveryDate').datepicker({ dateFormat: 'mm-dd-yy' });
	 
	   $('#searchVVDButton').click(function()
	   {
		   if(validateSearchVVDFields())
		   {
			   var queryString = $('#vvdSearchForm').formSerialize();
			   blockUI();
			   $.ajax({
					url: _context +"/booking/routing/searchTrip",
					data: queryString,
					type:'POST',
					success: function(responseText){
						$("#vvdResultGrid").trigger("reloadGrid");
						if(responseText.success==true)
						{
							$("#vvdResultGridDiv").show();
							$("#vvdSearchDialog").dialog({height: 730});
						}
						else
						{
							$.unblockUI();
							alert(responseText.messages.error[0]);
						}
					}
				});
		   }
	});
	   
	 //Hiding vvd_search.jsp on initial display
		$("#vvdSearchDialog").hide();
       
  });

function createVVDSearchDialog(filter){
	//alert("createVVDSearchDialog: " + filter);
	var buttons = {};
	if(filter=='multipleBooking')
	{
		buttons = {
				"Cancel":function()
				{
					$("#vvdSearchDialog").dialog('close');
				},
				"Select VVDs" :function()
				{
					var selRowIds = jQuery('#vvdResultGrid').jqGrid('getGridParam', 'selarrrow');
					if(selRowIds==null || selRowIds=='')
					{
						alert("Please select VVDs");
					}
					else
					{
						var vvds = "";
					  	for (var i=0;i<selRowIds.length;i=i+1)
					    { 
					  		var rowData=jQuery("#vvdResultGrid").getRowData(selRowIds[i]);
					  		if(i==0)
					  		{
					  			vvds = rowData.voyageString;
					  		}
					  		else
					  		{
					  			vvds = vvds+", "+rowData.voyageString;
					  		}
						}
					  	$('#vvd').val(vvds);
					  	$("#vvdSearchDialog").dialog('close');
					}
				},
				"Export To Excel":function()
				{
					var link = document.createElement("a");    
					link.id="vvdGridExport";
					$("#vvdSearchDialog").append(link);
					jQuery("#vvdGridExport").attr({
					    'download': "VVD_Search_Results",
					    'href': _context+ "/booking/routing/vvdGridExport"
					}); 
					jQuery('#vvdGridExport')[0].click();    
					$("#vvdSearchDialog").remove(link);
				}
			};
	}
	else
	{
		buttons = {
				"Cancel":function()
				{
					$("#vvdSearchDialog").dialog('close');
				},
				"Export To Excel":function()
				{
					var link = document.createElement("a");    
					link.id="vvdGridExport";
					$("#vvdSearchDialog").append(link);
					jQuery("#vvdGridExport").attr({
					    'download': "VVD_Search_Results",
					    'href': _context+ "/booking/routing/vvdGridExport"
					}); 
					jQuery('#vvdGridExport')[0].click();    
					$("#vvdSearchDialog").remove(link);
				}
		};
	}
	$("#vvdSearchDialog").dialog({
		autoOpen : false,
		width : 990,
		modal : true,
		title: "Search VVD",
		open : function()
		{
			$("#vvdSearchDialog").dialog({height: 400});
			$("#vvdSearchForm").clearForm();
			$('#duration').val("30");
			if(filter=='freight' && $('#estimatedDropOffDate').val()!==''
				&& validateDate('estimatedDropOffDate', false) && validateWithCurrentDate())
			{
				$('#availabilityDate').val($('#estimatedDropOffDate').val());
				$('.searchCriteria')[0].checked = true;
			}
			else
			{
				$('.searchCriteria')[2].checked = true;
			}
			$("#vvdResultGridDiv").hide();
			$('#vvdSearchForm').validationEngine('attach');
			firstLoad = "Y";
			createVVDSearchGrid(filter);
		},
		close : function() {
			$("#vvdSearchForm").validationEngine('hideAll');
			$('#vvdSearchForm').validationEngine('detach');
			$('#vvdResultGrid').jqGrid('GridUnload');
			firstLoad = "Y";
		},
		buttons: buttons
	});
}

function validateSearchVVDFields()
{
	$("#vvdSearchForm").validationEngine('hideAll');
	
	if($("#searchCriteria:checked").val()==undefined)
	{
		$("#searchCriteria").validationEngine('showPrompt', 'Please select a search criteria', 'error', true);
		return false;
	}
	else if($("#searchCriteria:checked").val()=='A' && ($('#availabilityDate').val()==null || $('#availabilityDate').val()==''))
	{
		$("#availabilityDate").validationEngine('showPrompt', 'Please enter arrival cutt off date', 'error', true);
		return false;
	}
	else if($("#searchCriteria:checked").val()=='D' && ($('#deliveryDate').val()==null || $('#deliveryDate').val()==''))
	{
		$("#deliveryDate").validationEngine('showPrompt', 'Please enter delivery cutt off date', 'error', true);
		return false;
	}
	else
		return true;
}

function openSearchVVD(filter)
{
	if(filter=='freight' && $('#estimatedDropOffDate').val()!==''
				&& validateDate('estimatedDropOffDate', false) && !validateWithCurrentDate())
	{
		$('#bkdVessel').validationEngine('showPrompt', '* Enter a valid Est drop off in MM-dd-yyyy format greater than\ equal to current date.', 'error', 'topRight', true);
		return false;
		//alert("Please enter a valid date in MM-dd-yyyy format gretear than equal to current date");
	}
	else
	{
		if($('#originPortCityCode').val()!='' && $('#destinationPortCityCode').val()!='')
		{
			if((filter=='routing' || filter=='freight') && ($('#originPortCityCodeDescription').val()=='' || 
					$('#destinationPortCityCodeDescription').val()==''))
				alert("Please select Port of Loading and Port of Discharge first");
			else
			{
				$.ajax({
					url: _context +"/booking/routing/showSearchForm",
					data:{pol:$('#originPortCityCode').val(), pod:$('#destinationPortCityCode').val()},
					success: function(responseText){
						createVVDSearchDialog(filter);
						$("#vvdSearchForm").loadJSON(responseText);
						$("#vvdSearchDialog").dialog('open');
					}
				});
			}
		}
		else
			alert("Please select Port of Loading and Port of Discharge first");
	}
}

function validateWithCurrentDate()
{
	/*var todaysDate = new Date();
	var enteredDate = $("#estimatedDropOffDate").datepicker("getDate");
	if(enteredDate < todaysDate)
		return false;
	else
		return true;*/
	
		var fullDate = new Date();
		//convert month to 2 digits 
		var twoDigitMonth = ((fullDate.getMonth()+1) < 10)? '0' + (fullDate.getMonth()+1) : (fullDate.getMonth()+1); 
		var twoDigitDate = ((fullDate.getDate()) < 10)? '0' + (fullDate.getDate()) : (fullDate.getDate());
		// mm-dd-yy
		var currentDate = twoDigitMonth + "-" + twoDigitDate + "-" + fullDate.getFullYear(); 
		
		if(new Date($('#estimatedDropOffDate').val()).getTime() < new Date(currentDate).getTime()){
			return false;
		}
		else{
			return true;
		}
};var iterated = false;
var freightModified = false;
var estimatedDropOffDateModified = false;
var povChanged="N";
var POV_NAME = "PERSONAL AUTO";
var ALASKA_POV_NAME = "ALASKA AUTO";
var GOVERNMENT_NAME = "GOVERNMENT";
//Create all the frieght grids

$(document).ready(function() {
	freightTabSequence();
	createEquipmentGrid();

//$("#plannedArrivalDate").datepicker({dateFormat: 'mm-dd-yy'});
$("#estimatedDropOffDate").datepicker({
	dateFormat: 'mm-dd-yy',
	onSelect : function(dateText, elem)
	{
		freightModified = true;
		isBookingChanged = "Y";
		estimatedDropOffDateModified = true;
		var validated = validateAutoEstDropOffDate();
		if(validated){
			$("#estimatedDropOffDate").validationEngine('hide');
		}
	}
});

$('#pieceCount').change(function(){
	showPieceCountWarnMsg();
	if($.trim($('#pieceCount').val())=='0' || $.trim($('#pieceCount').val())==0)
		{
		$('#pieceCount').val('');
		
		}
	//added for	D025466
	calculateCube();

	
});

/*$('#estimatedDropOffDate').change(function(){
	freightModified = true;
	var validated = validateAutoEstDropOffDate();
	if(validated && $('#estimatedDropOffDate').val()!='undefined' && $('#estimatedDropOffDate').val()!=null && $('#estimatedDropOffDate').val()!=''){
		$("#estimatedDropOffDate").validationEngine('hide');
	}
});*/

$('#tariffCommodityDescription').gatesPopUpSearch({
	func : function() {
		commPopupSearch();
	}
});

$('#tariffItemNoteNumber').gatesPopUpSearch({
	func : function() {
		notePopupSearch();
	}
});

$('#freight\\.isRoRo1').change(function(){
	freightModified = true;
	isBookingChanged = "Y";
	if($("#equipmentGrid").getGridParam("reccount")!=0 && $('#freight\\.isRoRo1').is(':checked')==true){
		var isConfirm = confirm("All the freight equiments will be deleted. Please confirm to proceed!");
		if (isConfirm) {
			$.ajax({
				url: _context+'/booking/freight/updateRollingStock',
				data: {isRoRo:$('#freight\\.isRoRo1').is(':checked'), isAllEquipDelete:true},
				success:function(responseText){
					if(!responseText.success){
						showResponseMessages('msgDivFrtEqp', responseText);
						$('#msgDivFrtEqp').show();
					}else{
						loadEquipmentGrid();
					}
				} 	
			});
		}
		else{
			$('#freight\\.isRoRo1').attr('checked', false);
		}
	}
	else{
		$.ajax({
			url: _context+'/booking/freight/updateRollingStock',
			data: {isRoRo:$('#freight\\.isRoRo1').is(':checked'), isAllEquipDelete:false}
		});
	}
	setMandatoryPieces();
});

$('#tariffCommodityDescription').change(function(){
	freightModified = true;
	isBookingChanged = "Y";
	var tariffCommodityDescription = $(this).val();
	if($("#tariffCommodityDescriptionHidden").val()==$.trim(tariffCommodityDescription)){
		$(this).val($.trim(tariffCommodityDescription));
	}
	else if($("#tariffCommodityDescriptionHidden").val()!=tariffCommodityDescription){
		// Validate Tariff details
    	if($('#tariffCommodityDescription').val()!='' && $('#tariff').val()!='' && $('#tariffItemNumber').val()!=''){
    		$("#commodityCode").attr("readonly", true);
    		$.ajax({
    			url: _context +"/booking/freight/validateTariffDetails",
    			type: 'POST',
    			data: serializeFreight() + "&trade="+$('#tradeCode').val()+"&loadServiceCode="+$("#loadServiceCode").val()+"&dischargeServiceCode="+$("#dischargeServiceCode").val()+"&blOriginCityCode="+$('#blOriginCityCode').val()+"&originPortCityCode="+$('#originPortCityCode').val()+"&destinationPortCityCode="+$('#destinationPortCityCode').val()+"&blDestinationCityCode="+$('#blDestinationCityCode').val(),
    			success: function(responseText){
    				$('#msgDivFrt').hide();
    				if(responseText.success){
    					if(responseText.data!=null){
    						$.each(responseText.data, function(key, val) {
						    	   if(key=='commodityCodes'){
						    		   populateCommodityCodeList(val);
						    	   }
						    	   else if(key=='tariffItemCmdtyDescId'){
						    		   $("#tariffItemCmdtyDescId").val(val);  
						    	   }
    						});
    					}
    				}
    				else{
    					$.unblockUI();
    					$('#bookingSave').attr("disabled", false);
    					scrollToCommodity();
    					$('#msgDivFrt').show();
						showResponseMessages('msgDivFrt', responseText);
    				}
    				$("#commodityCode").attr("readonly", false);
    				$("#tariffCommodityDescriptionHidden").val($.trim(tariffCommodityDescription));
    			}
    		});
    	}
	}
});

// code for source tariff predictive search
var tarGrpIds='';
$('#tariff').gatesAutocomplete({
	source: _context+'/cas/autocomplete.do',
	autoSelectWhenSingle:true,
	autoSelectFirst:true,
		autoSelectCriteria:function(item) {
		   if(item != null){
		     return 'true';
		  }
		  else {
		     return 'false';
		  }
		},
	name: "Tariff",
	extraParams: {
	 		 method: 'searchTariffSource',
	 		 searchType: '11',
	 		 // term: trf,
	 		 groupType:  '01'
	 },
	 formatItem: function(data) {
		 $(data).each(function(){
			 tarGrpIds=tarGrpIds+"-"+data.id+"|"+data.name;								     	    	
			});
		 //dataName=data.name;
	 	 //$('input[name="grpId"]').val(data.id);
	 	return data.name;
	 },
	 formatResult: function(data) {
	 		 return data.name;
	 },
	 select: function(data) {
		 	 // alert("Grp: " + data.id);
	 		 $('#tariff').val(data.name);
	 		 $('#tariff').trigger('change');
	 		 $('#tariffCheck').val(data.name);
	 		 //$('#tariffHidden').val(data.name);
	 		 $('#frtGrpId').val(data.id);
	 		 setMandatoryTariffItem();
	 		 if($('div.message_error', '#msgDivFrt').is(':visible')){
				$('#msgDivFrt').hide();
	 		 }
	 		 
	 }		 
});	

$('#tariff').bind('blur', function(event) {	
	if($.trim($('#tariff').val()) == '' || $.trim($('#tariffItemNumber').val()) == '') {
		$('#tariffItemNoteNumber').attr('disabled', true);
	} else {
		$('#tariffItemNoteNumber').attr('disabled', false);
	}
	//change D025868
 	setFreightAccordianTabDetails($('#totalCommodityLines').text(), $.trim($('#tariff').val()), $.trim($('#tariffItemNumber').val()),$.trim($("#commodityDescription").val()), $("#tariffCommodityDescription").val());
	
});

// Blurr the data for invalid group Id
 $('#tariff').change(function(){
    freightModified = true;
    isBookingChanged = "Y";
 	if($.trim($('#tariff').val())!='' && tarGrpIds.indexOf("-")<=0){
		var values=tarGrpIds.split("-");
		for(var i=1;i<values.length;i++){
			var val=values[i].split("|");
			if($.trim(val[1]) != '' && $.trim($('#tariff').val())==$.trim(val[1].toLowerCase())){
				$("#tariff").val(val[1]);
				//$('#tariffHidden').val(val[1]);
				$('#frtGrpId').val(val[0]);
		 		 setMandatoryTariffItem();
				break;
			}
		}
		tarGrpIds='';
 	}
 	
 	if($.trim($('#tariff').val())=='' || ($("#tariff").val()!=$('#tariffHidden').val())){
		resetMandatoryTariffCmdDesc();
		resetTariffDetails();
		if(checkIfAnyFreightFieldHasValue() && $.trim($("#commodityDescription").val())==''){
			$('#commodityDescription').validationEngine('showPrompt', '* This is required', 'error', 'topRight', true);
			$("#commodityDescription").addClass("validate[required]");
		}
		$("#primaryFreightPresent").val('N');
	} 
	else{
		resetMandatoryCustDesc();
	}
	$('#msgDivFrt').html('');
	$('#msgDivFrt').hide();
	
	if($.trim($('#tariff').val()) == '' || $.trim($('#tariffItemNumber').val()) == '') {
		$('#tariffItemNoteNumber').attr('disabled', true);
	} else {
		$('#tariffItemNoteNumber').attr('disabled', false);
	}
	
	setAutoBillMandatory();
	
	$('#tariffHidden').val($('#tariff').val());
 }); 

// code for item predictive
var itemIds='';
$('#tariffItemNumber').gatesAutocomplete({
	 source: _context+'/cas/autocomplete.do',
	 name: "Tariff Number",
	 minLength: 1,
	 autoSelectWhenSingle:true,
		autoSelectFirst:true,
			autoSelectCriteria:function(item) {
			   if(item != null){
			     return 'true';
			  }
			  else {
			     return 'false';
			  }
			},
	 extraParams: {
		 method: 'searchItemName',
	 		 searchType: '43',
	 		 // term: function(){return (request.term==null ||
				// $.trim(request.term)=='')?"ALL":request.term;},
	 		 groupType:  '01',
	 		 sourceTariff:  function(){return ($('#tariff').val()==null || $.trim($('#tariff').val())=='')?"ALL":$('#tariff').val();},
	 		 groupName:   function(){return ($('#tariff').val()==null || $.trim($('#tariff').val())=='')?"ALL":$('#tariff').val();}
	 },
	 formatItem: function(data) {
		 $(data).each(function(){
			 itemIds=itemIds+"-"+data.id+"|"+data.name;								     	    	
			});
		//dataName=data.name;
	 	return data.name;
	 },
	 formatResult: function(data) {
	 		 return data.name;
	 },
	 select: function(data) {
			if($('#tariffItemNumber').val()==data.name){
				isBookingChanged = "Y";
			}
		 	$('#tariffItemNumber').val(data.name);
		 	$('#tariffItemNumberHidden').val(data.name);
		 	$('#frtItemId').val(data.id);
		 	$('#tariffItemNoteNumber').attr('disabled', false);
		 	// Fetch Primary Commodity of current Tariff & its Item
		 	getPrimaryCommodity($('#tariff').val(), data.name);
		 	if(data.id!=null && $.trim(data.id)!='' && $.trim($('#tariffItemNoteNumber').val())!=''){
		 		validateNote1(data.id, $('#tariffItemNoteNumber').val());
		 	}
	 }		 
});	

$('#tariffItemNumber').bind('blur', function(event) {	
	if($.trim($('#tariff').val()) == '' || $.trim($('#tariffItemNumber').val()) == '') {
		$('#tariffCommodityDescription').val('');
		$('#tariffItemNoteNumber').val('');
		$('#tariffItemNoteNumber').attr('disabled', true);
	} else {
		$('#tariffItemNoteNumber').attr('disabled', false);
	}
	//change D025868
	setFreightAccordianTabDetails($('#totalCommodityLines').text(), $.trim($('#tariff').val()), $.trim($('#tariffItemNumber').val()),$.trim($("#commodityDescription").val()), $("#tariffCommodityDescription").val());
});



// Blurr the data for invalid item Id
$('#tariffItemNumber').change(function(){
	freightModified = true;
	isBookingChanged = "Y";
 	if($.trim($('#tariffItemNumber').val())!='' && itemIds.indexOf("-")<=0){
		var values=itemIds.split("-");
		for(var i=1;i<values.length;i++){
			var val=values[i].split("|");
			if($.trim($('#tariffItemNumber').val())==$.trim(val[1].toLowerCase())){
				$("#tariffItemNumber").val(val[1]);
				$('#tariffItemNumberHidden').val(val[1]);
				$('#frtItemId').val(val[0]);
				getPrimaryCommodity($('#tariff').val(), val[1]);
				break;
			}
		}
		itemIds='';
 	}
	 
	if($.trim($('#tariffItemNumber').val())=='' || ($('#tariffItemNumber').val()!=$('#tariffItemNumberHidden').val())){
		$("#tariffItemNumber").val(""); 
		$('#tariffItemNumberHidden').val("");
		$("#frtItemId").val("");
		clearCommodityCodeList();
		resetMandatoryTariffCmdDesc();
		if($.trim($('#tariff').val())!='' && ($("#tariff").val()==$('#tariffHidden').val())){
			setMandatoryTariffItem();
		}
		$("#primaryFreightPresent").val("");
		$('#msgDivFrt').html('');
		$('#msgDivFrt').hide();
	} 
		
	if($.trim($('#tariff').val()) == '' || $.trim($('#tariffItemNumber').val()) == '') {
		$('#tariffItemNoteNumber').attr('disabled', true);
	} else {
		$('#tariffItemNoteNumber').attr('disabled', false);
 	}
	
	setAutoBillMandatory();
}); 	
	 
$('#tariffItemNoteNumber').change(function(){
	freightModified = true;
	isBookingChanged = "Y";
	if($.trim($(this).val())==''){
		$(this).val(""); 
	}
	//D028014: 	PROD Error Message 
	$(this).val($(this).val().toUpperCase());
});

$('#tariffItemNoteNumber').focusout(function(){
	//D030513: 	PROD Error Message 
	$(this).val($(this).val().toUpperCase());
});
 
$('#vinNumber').change(function(){
	freightModified = true;
	isBookingChanged = "Y";
	var lastUserProvidedVinNumber = $.trim($("#lastUserProvidedVinNumber").val());
	var vin = $.trim($(this).val());
	if(lastUserProvidedVinNumber!=vin && (vin.length>0 && vin.length<=17)){
		$.ajax({
	 		 url: _context+'/booking/freight/getVehicleDetails',
	 		 data:{vinNumber:vin, measurementSource:$('#unitOfMeasureSourceCode').val()},
	 		 success: function(responseText) {
	 			 // alert(responseText.success);
	 		 		 if(responseText.success){
	 		 			if($('#bookingTypeCode').val()=='B' && !$('#vinNumberLbl span').hasClass('mandatory') /*
																												 * &&
																												 * vin.length==17
																												 */){
	 		 				// setMandatoryPOV();
	 		 				$("#freightWeightLbl").html($("#freightWeightLbl").text()+"<span class=\"mandatory\">*</span>");
	 		 				$("#weight").addClass("validate[required]");
	 		 			}

	 		 			$('#vinNumber').val(responseText.data.vehicleInfo.vinNumber);
	 		 			$('#vehicleYear').val(responseText.data.vehicleInfo.year);
	 		 			$('#vehicleMake').val(responseText.data.vehicleInfo.make);
	 		 			$('#vehicleModel').val(responseText.data.vehicleInfo.model);
	 		 			if($('#unitOfMeasureSourceCode').val()=="I"){
	 		 				$('#feetLength').val(responseText.data.length.toString().split(".")[0]);
 		 		    		$('#inchesLength').val($.trim(responseText.data.length.toString().split(".")[1])==''?0:responseText.data.length.toString().split(".")[1]);
	 		 				
 		 		    		$('#feetWidth').val(responseText.data.width.toString().split(".")[0]);
 		 		    		$('#inchesWidth').val($.trim(responseText.data.width.toString().split(".")[1])==''?0:responseText.data.width.toString().split(".")[1]);
 		 		    		
 		 		    		$('#feetHeight').val(responseText.data.height.toString().split(".")[0]);
 		 		    		$('#inchesHeight').val($.trim(responseText.data.height.toString().split(".")[1])==''?0:responseText.data.height.toString().split(".")[1]);
	 		 			}
	 		 			else{
	 		 				$('#freightConventionalAddl').loadJSON(responseText.data.vehicleInfo);
	 		 			}
	 		 			if(responseText.data.vehicleInfo.weight!= null && responseText.data.vehicleInfo.weight!='' && responseText.data.vehicleInfo.weight!='0'
							 && responseText.data.cube!= null && responseText.data.cube!='' && responseText.data.cube!='0'){
		 		 			$('#weight').val(responseText.data.vehicleInfo.weight);
		 		 			$('#cube').val(responseText.data.cube);
							}
	 		 			$('#pieceCount').val(1);
	 		 			loadHazGrid();
	 		 			
	 		 			$('#msgDivFrt').hide();
	 		 			$('#msgDivFrt').html('');
	 		 		 }
	 		 		 else{
	 		 			// resetVinNumberDetails();
	 		 			if(!($.trim($('#loadDschServiceGroupCode').val())=="AU" && ($('#customerGroupId :selected').text()==POV_NAME ||$('#customerGroupId :selected').text()==POV_NAME ))){
				    		if($('#unitOfMeasureSourceCode').val()=="M"){
				    			$("#freightWeightLbl").html("Wgt-Kgs");
				    		}
				    		else if($('#unitOfMeasureSourceCode').val()=="I"){
				    			$("#freightWeightLbl").html("Wgt-Lbs");
				    		}	
				    		
				    		if($('#bookingTypeCode').val()=='B'){
				    			$("#weight").removeClass("validate[required]");
				    		}
			    		}
	 		 			
						$('#msgDivFrt').show();
						$('#msgDivFrt').html('<div class="message_info">There is no detail available for the provided VIN.</div>');
	 		 		 }
	 		 }
	   });   
	}
	else if(vin.length==0){
		$('#msgDivFrt').hide();
		$('#msgDivFrt').html('');
		
		if(!($.trim($('#loadDschServiceGroupCode').val())=="AU" && ($('#customerGroupId :selected').text()==POV_NAME ||$('#customerGroupId :selected').text()==ALASKA_POV_NAME ))){
    		if($('#unitOfMeasureSourceCode').val()=="M"){
    			$("#freightWeightLbl").html("Wgt-Kgs");
    		}
    		else if($('#unitOfMeasureSourceCode').val()=="I"){
    			$("#freightWeightLbl").html("Wgt-Lbs");
    		}	
    		
    		if($('#bookingTypeCode').val()=='B'){
	    			$("#weight").removeClass("validate[required]");
	    		}
		}
	}
	$(this).val(vin);
	// Setting to current vin no
	$("#lastUserProvidedVinNumber").val(vin);
 });

$('#unitOfMeasureSourceCode').change(function(){
	$('#msgDiv').html('');
	measurementUnitChangeConfirmation();
});

$("a.vinsightUnitIdUrl").click(function(){
	window.open($("a.vinsightUnitIdUrl").attr("href"));
});
    
$('#nextFreight').click(function(){
	if(freightModified){
		var isConfirm = confirm("All the unsaved Changes will be discarded. Please confirm to proceed!");
		if (isConfirm) {
			getFreight(parseInt($("#freightSeqNo").val()) + 1);
		}
	}
	else{
		getFreight(parseInt($("#freightSeqNo").val()) + 1);
	}
});   

$('#previousFreight').click(function(){
	if(freightModified){
		var isConfirm = confirm("All the unsaved Changes will be discarded. Please confirm to proceed!");
		if (isConfirm) {
			if($("#freightSeqNo").val()=='1'){
				getFreight($("#freightSeqNo").val());
			}
			else{
				getFreight(parseInt($("#freightSeqNo").val()) - 1);
			}
		}
	}
	else{
		if($("#freightSeqNo").val()=='1'){
			getFreight($("#freightSeqNo").val());
		}
		else{
			getFreight(parseInt($("#freightSeqNo").val()) - 1);
		}
	}
}); 

$('#addFreight').click(function(){
	if($.trim($('#loadDschServiceGroupCode').val())=="AU" && ( $.trim($('#customerGroupId :selected').text())==POV_NAME || $.trim($('#customerGroupId :selected').text())==ALASKA_POV_NAME)){
		if($('#totalCommodityLines').text()!='' && $('#totalCommodityLines').text()!='0' && parseInt($.trim($('#totalCommodityLines').text()))>=1){
			alert("Adding more than one commodity for customer group- POV is not allowed.");
			return;
		}
	}
	var dataUrl = _context +"/booking/freight/addFreight";
	addUpdateFreight(dataUrl,null);
});

$('#updateFreight').click(function(){
	var dataUrl = _context +"/booking/freight/updateFreight";
	addUpdateFreight(dataUrl,null);
});

$('#clearFreight').click(function(){
	//var tariff = $('#tariff').val();
	var freightSeqNo=$('#freightSeqNo').val();
	var bookingFreightId=$('#bookingFreightId').val();
	//resetMandatory();
	resetMandatoryTariffCmdDesc();
	resetMandatoryCmdDesc();
	clearFreight();
	setFirstVVD();
	loadNewFreight(freightSeqNo,bookingFreightId);
	//$('#tariff').val(tariff);
});

$('#deleteFreight').click(function(){
var confirmDelete = confirm('Do you want to delete commodity?');
if(confirmDelete){
	$.ajax({
		url: _context+'/booking/freight/deleteFreight?id='+$('#freightSeqNo').val()+ '&measurementSource='+$('#unitOfMeasureSourceCode').val(),
		success: function(responseText){
			if(responseText.success){
				clearFreight();
				if(responseText.data!=null){
					getFreightJSONresponse(responseText.data);
					populateCommodityLines(responseText.data.commodityLines, responseText.data.currentCommodityLine);
					enableDisableFreightButtons(responseText.data.commodityLines.length, responseText.data.freightSeqNo);
				    afterFreightLoadComplete($('#totalCommodityLines').text(), responseText.data.tariff, responseText.data.tariffItemNumber, responseText.data.commodityDescription, responseText.data.tariffCommodityDescription);
				}
				else{
					$('#freightSeqNo').val('');
					populateCommodityLines('', '');
					enableDisableFreightButtons(0, 0);
					afterFreightLoadComplete($('#totalCommodityLines').text(), '', '', '', '');
					loadFreightGrids();
				}
				if($.trim($('#loadDschServiceGroupCode').val())=="AU" && ($.trim($('#customerGroupId :selected').text())==POV_NAME || $.trim($('#customerGroupId :selected').text())==ALASKA_POV_NAME )){
					setMandatoryPOV();
				}
				 isBookingChanged = "Y";
				$('#msgDivFrt').show();
				$('#msgDivFrt').html('<div class="message_info">Successfully deleted.</div>');
			}
		}
	});
}
});

$('#currentCommodityLine').change(function(){  
	if(freightModified){
		var isConfirm = confirm("All the unsaved Changes will be discarded. Please confirm to proceed!");
		if(isConfirm){
			getFreight($(this).val());
		}
	}
	else{
		getFreight($(this).val());
	}
});

$('#commodityHeader').click(function(){  
	if(!addFreightEnabled()){
		if($('#showAlertTCGLDSP').val()=="true"){
			addfreightEnabledAlertMessage();
			if($('#tariff').is(':visible'))
				$($('.booking-section')[4]).accordion('option', 'active', false);
			disableAccordian(4);
		}
		else{
			$('#showAlertTCGLDSP').val("true");
		}
	}
	//Added for Defect D027295
	else if (isCommodityDisplayOnly || isCommodityModifiable)
	{
		if(!iterated){
			iterated = true;
			var status = $($('.booking-section')[4]).accordion('option', 'active');
			if ((typeof status == "boolean" && !status) || (status=="0" && !$('#tariff').is(':visible'))) {
				$($('.booking-section')[4]).accordion("enable");
				$($('.booking-section')[4]).accordion('option', 'active', 0);
				
				showFreight($.trim($('#customerGroupId :selected').text()));
				//loadFreightGrids();
				
			}
		}
	}
});
$('#commodityHeader').keydown(function(event) {
	if(event.which==13) {
		jQuery(this).trigger('click');
	}
});
$('#commodityCode,#pieceCount,#pieceUnitOfMeasureCode,#weight,#cube,#commodityDescription,#freight\\.isOversize1,' + 
		//'#plannedArrivalDate,'+
		'#vehicleYear,#vehicleMake,#vehicleModel,#vehicleLicenseNumber,#vehicleLicenseStateCode,#vehicleColor,#description,#bkdVessel,#bkdVoyage,#bkdDirection,#recdVessel,#recdVoyage,#recdDirection,#specialInstruction').change(function(){ 
	freightModified = true;
	isBookingChanged = "Y";
});

$('#length,#feetLength,#inchesLength,#width,#feetWidth,#inchesWidth,#height,#feetHeight,#inchesHeight,').change(function(){ 
	freightModified = true;
	isBookingChanged = "Y";
	calculateCube();
});
	
//	D026264: 	FW: Maintain Booking - Error message with dims | booking - need to be able to enter inches greater than 11 and have system convert to feet and inches
$('#inchesLength').change(function() {
	var feets = $('#feetLength').val();
	var inches = $('#inchesLength').val();
	var extraFeets = getFeetFromInches(inches);
	var remInches = getModInches(inches);
	$('#feetLength').val(Number(feets) + Number(extraFeets));
	$('#inchesLength').val(remInches);
	$("#dimensionDiv").validationEngine('validate');
	calculateCube();
});

$('#inchesWidth').change(function() {
	var feets = $('#feetWidth').val();
	var inches = $('#inchesWidth').val();
	var extraFeets = getFeetFromInches(inches);
	var remInches = getModInches(inches);
	$('#feetWidth').val(Number(feets) + Number(extraFeets));
	$('#inchesWidth').val(remInches);
	$("#dimensionDiv").validationEngine('validate');
	calculateCube();
});

$('#inchesHeight').change(function() {
	var feets = $('#feetHeight').val();
	var inches = $('#inchesHeight').val();
	var extraFeets = getFeetFromInches(inches);
	var remInches = getModInches(inches);
	$('#feetHeight').val(Number(feets) + Number(extraFeets));
	$('#inchesHeight').val(remInches);
	$("#dimensionDiv").validationEngine('validate');
	calculateCube();
});

populateCountryPhoneCodes();

enableDisableNote();
/*
$('#commodityDescription').bind('paste', function(event){
	var pastedText = undefined;
	  if (window.clipboardData && window.clipboardData.getData) { // IE
	    pastedText = window.clipboardData.getData('Text');
	  } else if (e.clipboardData && e.clipboardData.getData) {
	    pastedText = e.clipboardData.getData('text/plain');
	  }
	setTimeout(function(){
		wrapTextArea('commodityDescription', 30);
		}, 250);
	return true;
});

$('#commodityDescription').live('keyup', function(evt){
	
	var keyCode = evt.keyCode;
	if(keyCode==32 || (48<=keyCode && keyCode<=57)
			|| (65<=keyCode && keyCode<=90) || (96<=keyCode && keyCode<=107) 
			|| (109<=keyCode && keyCode<=111))
	{
        //alert("Line Length exceeded 20 characters");
        //evt.preventDefault(); // prevent characters from appearing
		wrapTextArea('commodityDescription', 30);
	}
	return true;
});*/
	
	$('#commodityDescription').blur(function(event){
		$('#commodityDescription').val(($('#commodityDescription').val()).toUpperCase()); 
	splitCommodity();
		return true;
	});

});

function measurementUnitChangeConfirmation(){
	var isConfirm = confirm("Measurement System is being changed. Press Ok to confirm!");
	if (!isConfirm){
		if($('#unitOfMeasureSourceCode :selected').val()=="I"){
			$('#unitOfMeasureSourceCode').val("M");
		}
		else if($('#unitOfMeasureSourceCode :selected').val()=="M"){
			$('#unitOfMeasureSourceCode').val("I");
		}
		return;
	}
	else{
		measurementUnitChange();
	}
}

function measurementUnitChange(){
	setCubeWeightLengthWidthHeight($('#unitOfMeasureSourceCode').val());
	$.ajax({
		url: _context+'/booking/freight/convertFreightDimensions?measurementSource='+$('#unitOfMeasureSourceCode').val()+'&freightSeqNo='+$('#freightSeqNo').val()+'&length='+$('#length').val()+'&width='+$('#width').val()+'&height='+$('#height').val()+'&feetLength='+$('#feetLength').val()+'&inchesLength='+$('#inchesLength').val()+'&feetWidth='+$('#feetWidth').val()+'&inchesWidth='+$('#inchesWidth').val()+'&feetHeight='+$('#feetHeight').val()+'&inchesHeight='+$('#inchesHeight').val()+'&cube='+$('#cube').val()+'&weight='+$('#weight').val(),
		success: function(responseText){
			if(responseText.success){
				if($('#unitOfMeasureSourceCode').val()=="I"){
	 				$('#feetLength').val(responseText.data.feetLength);
 		    		$('#inchesLength').val(responseText.data.inchesLength);
	 				
 		    		$('#feetWidth').val(responseText.data.feetWidth);
 		    		$('#inchesWidth').val(responseText.data.inchesWidth);
 		    		
 		    		$('#feetHeight').val(responseText.data.feetHeight);
 		    		$('#inchesHeight').val(responseText.data.inchesHeight);
 		 		}
	 			else if($('#unitOfMeasureSourceCode').val()=="M"){
	 				$('#length').val(responseText.data.length);
 		    		$('#width').val(responseText.data.width);
 		    		$('#height').val(responseText.data.height);
	 			}
				
				$('#weight').val(responseText.data.weight);
				$('#cube').val(responseText.data.cube);
			}
		}
	
	});
}

// Set Cube & Weight according to Measurement Source
function setCubeWeightLengthWidthHeight(measurementSource){
	switch(measurementSource){
        case "M": 
        	$("#freightWeightLbl").html("Wgt-Kgs");
    		$("#freightCubeLbl").html("Cubic Mt");
    		$('#length').show();
    		$('#feetLengthLbl').hide();
    		$('#feetLength').hide();
    		$('#inchesLengthLbl').hide();
    		$('#inchesLength').hide();
    		
    		$('#width').show();
    		$('#feetWidthLbl').hide();
    		$('#feetWidth').hide();
    		$('#inchesWidthLbl').hide();
    		$('#inchesWidth').hide();
    		
    		$('#height').show();
    		$('#feetHeightLbl').hide();
    		$('#feetHeight').hide();
    		$('#inchesHeightLbl').hide();
    		$('#inchesHeight').hide();
    		
        break;
        case "I": 
        	$("#freightWeightLbl").html("Wgt-Lbs");
    		$("#freightCubeLbl").html("Cubic Ft");
    		
    		$('#length').hide();
    		$('#feetLengthLbl').show();
    		$('#feetLength').show();
    		$('#inchesLengthLbl').show();
    		$('#inchesLength').show();
    		
    		$('#width').hide();
    		$('#feetWidthLbl').show();
    		$('#feetWidth').show();
    		$('#inchesWidthLbl').show();
    		$('#inchesWidth').show();
    		
    		$('#height').hide();
    		$('#feetHeightLbl').show();
    		$('#feetHeight').show();
    		$('#inchesHeightLbl').show();
    		$('#inchesHeight').show();
        break;
    }
}

// Containerized
function showContainerized(){
	$('#freightEquipment').show();
	$('#freightConventionalAddl').show();
	$('#bookingAuto').hide();
	$('#freightHaz').show();
	$('#freightMBU').hide();
}

// POV
function showPOV(){
	$('#freightEquipment').hide();
	$('#freightConventionalAddl').show();
	$('#bookingAuto').show();
	$('#freightHaz').show();
	$('#freightMBU').hide();
}

// Conventional
function showConventional(){
	$('#freightEquipment').show();
	$('#freightConventionalAddl').show();
	$('#bookingAuto').show();
	$('#freightHaz').show();
	$('#freightMBU').hide();
}

// Conventional- Commercial Auto
function showConventionalCommercialAuto(){
	$('#freightEquipment').hide();
	$('#freightConventionalAddl').show();
	$('#bookingAuto').hide();
	$('#freightHaz').show();
	$('#freightMBU').hide();
}

// Conventional- MBU
function showConventionalMBU(){
	$('#freightEquipment').show();
	$('#freightConventionalAddl').show();
	$('#bookingAuto').hide();
	$('#freightHaz').show();
	$('#freightMBU').show();
}

// Setting mandatory fields for Tariff Commodity Description
function setMandatoryCmdDesc(){
	$("#commodityDescription").addClass("validate[required]");
}

function resetMandatoryCmdDesc(){
	$("#commodityDescription").removeClass("validate[required]");
}

function setMandatoryTariffCmdDesc(){
	// Tariff Commodity Desc
	$("#tariffCmdDescLbl").html("Commodity Desc<span class=\"mandatory\">*</span>");
	$("#tariffCommodityDescription").addClass("validate[required]");
	
	setMandatoryTariffItem();
	
	// Commodity Code
	$("#commodityCodeLbl").html("Com. Code<span class=\"mandatory\">*</span>");
	$("#commodityCode").addClass("validate[required]");
}

function resetMandatoryTariffCmdDesc(){
	// Tariff Commodity Desc
	$("#tariffCmdDescLbl").html("Commodity Desc");
	$("#tariffCommodityDescription").removeClass("validate[required]");
	
	resetMandatoryTariffItem();
	
	// Commodity Code
	$("#commodityCodeLbl").html("Com. Code");
	$("#commodityCode").removeClass("validate[required]");
}

function setMandatoryTariffItem(){
	// Tariff
	if($("#isAutobill").val()=="true"){
		$("#tariffLbl").html("Tariff<span class=\"mandatory\">*</span>");
		$("#tariff").addClass("validate[required]");
		
		// Item
		$("#itemLbl").html("Item<span class=\"mandatory\">*</span>");
		$("#tariffItemNumber").addClass("validate[required]");
	}
}

function resetMandatoryTariffItem(){
	// Tariff
	$("#tariffLbl").html("Tariff");
	$("#tariff").removeClass("validate[required]");
	
	// Item
	$("#itemLbl").html("Item");
	$("#tariffItemNumber").removeClass("validate[required]");
}

function setMandatoryPOV(){
	$("#freightWeightLbl").html($("#freightWeightLbl").text()+"<span class=\"mandatory\">*</span>");
	$("#vinNumberLbl").html($("#vinNumberLbl").text()+"<span class=\"mandatory\">*</span>");
	$("#vehicleYearLbl").html($("#vehicleYearLbl").text()+"<span class=\"mandatory\">*</span>");
	$("#vehicleMakeLbl").html($("#vehicleMakeLbl").text()+"<span class=\"mandatory\">*</span>");
	$("#vehicleModelLbl").html($("#vehicleModelLbl").text()+"<span class=\"mandatory\">*</span>");
	$("#vehicleLicenseNumberLbl").html($("#vehicleLicenseNumberLbl").text()+"<span class=\"mandatory\">*</span>");
	$("#vehicleLicenseStateCodeLbl").html($("#vehicleLicenseStateCodeLbl").text()+"<span class=\"mandatory\">*</span>");
	$("#vehicleColorLbl").html($("#vehicleColorLbl").text()+"<span class=\"mandatory\">*</span>");
	$("#estimatedDropOffDateLbl").html($("#estimatedDropOffDateLbl").text()+"<span class=\"mandatory\">*</span>");
	
	$("#weight").addClass("validate[required]");
	$("#vinNumber").addClass("validate[required]");
	$("#vehicleYear").addClass("validate[required]");
	$("#vehicleMake").addClass("validate[required]");
	$("#vehicleModel").addClass("validate[required]");
	$("#vehicleLicenseNumber").addClass("validate[required]");
	$("#vehicleLicenseStateCode").addClass("validate[required]");
	$("#vehicleColor").addClass("validate[required]");
	//$("#estimatedDropOffDate").removeClass("validate[funcCall[validateAutoEstDropOffDate1]]");
	//$("#estimatedDropOffDate").addClass("validate[required,funcCall[validateAutoEstDropOffDate1]]");
}

function resetMandatoryPOV(){
	// Weight
	if($('#unitOfMeasureSourceCode').val()=="M"){
		$("#freightWeightLbl").html("Wgt-Kgs");
	}
	else if($('#unitOfMeasureSourceCode').val()=="I"){
		$("#freightWeightLbl").html("Wgt-Lbs");
	}	
	
	$("#vinNumberLbl").html("VIN");
	$("#vehicleYearLbl").html("Year");
	$("#vehicleMakeLbl").html("Make");
	$("#vehicleModelLbl").html("Model");
	$("#vehicleLicenseNumberLbl").html("LIC #");
	$("#vehicleLicenseStateCodeLbl").html("State");
	$("#vehicleColorLbl").html("Color");
	$("#estimatedDropOffDateLbl").html("Est Drop Off");	
	
	$("#weight").removeClass("validate[required]");
	$("#vinNumber").removeClass("validate[required]");
	$("#vehicleYear").removeClass("validate[required]");
	$("#vehicleMake").removeClass("validate[required]");
	$("#vehicleModel").removeClass("validate[required]");
	$("#vehicleLicenseNumber").removeClass("validate[required]");
	$("#vehicleLicenseStateCode").removeClass("validate[required]");
	$("#vehicleColor").removeClass("validate[required]");
	//$("#estimatedDropOffDate").removeClass("validate[required,funcCall[validateAutoEstDropOffDate1]]");
	//$("#estimatedDropOffDate").addClass("validate[funcCall[validateAutoEstDropOffDate1]]");
}

function resetMandatoryCustDesc(){
	// Customer Commodity Description
	$("#commodityDescription").removeClass("validate[required]");
}

function resetMandatory(){
	 resetMandatoryTariffCmdDesc();
	 resetMandatoryPOV();
	 resetMandatoryCustDesc();
	 resetPiecesMandatory();
	 clearErrMsg();
	 // Reset last user provided VinNumber
	 $("#lastUserProvidedVinNumber").val("");
}

function clearErrMsg(){
	$("#freightForm").validationEngine('hideAll');
}


function formatWeight(cellvalue, options, rowObject){
	// alert("cellvalue: " + cellvalue);
	if(cellvalue!=null && !isNaN(cellvalue)){
		var measurementSource = $('#unitOfMeasureSourceCode').val();
		if(measurementSource=="I"){
			cellvalue = parseFloat(cellvalue).toFixed(0);
		}
		else if(measurementSource=="M"){
			var regExp = /^([0-9]{0,7}\.{1}[0-9]{3,})$/;
			// alert(reg1.test(cellvalue));
			if(regExp.test(cellvalue)){
				cellvalue = parseFloat(cellvalue).toFixed(3);
			}
		}
	}
	else{
		cellvalue="";
	}

return cellvalue;
}

function formatCube(cellvalue, options, rowObject){
	// alert("cellvalue: " + cellvalue);
	if(cellvalue!=null && !isNaN(cellvalue)){
		var measurementSource = $('#unitOfMeasureSourceCode').val();
		if(measurementSource=="I"){
			cellvalue = parseFloat(cellvalue).toFixed(0);
		}
		else if(measurementSource=="M"){
			var regExp = /^([0-9]{0,6}\.{1}[0-9]{4,})$/;
			// alert(reg1.test(cellvalue));
			if(regExp.test(cellvalue)){
				cellvalue = parseFloat(cellvalue).toFixed(3);
			}
		}
	}
	else{
		cellvalue="";
	}

return cellvalue;
}

function commPopupSearch() {
	var dscr = $("#tariffCommodityDescription").val();
	var tariffNo = $("#tariff").val();
	var itemNo = $("#tariffItemNumber").val();
	var trade = $("#tradeCode").val();
	var loadSrvc = $("#loadServiceCode").val();
	var dischargeSrvc = $("#dischargeServiceCode").val();
	
	var today = new Date();
	var dd = today.getDate();
	var mm = today.getMonth()+1; // January is 0!
	var yyyy = today.getFullYear();
	if(dd<10){
		dd='0'+dd;
	} 
	if(mm<10){
		mm='0'+mm;
	} 
	var today = mm+'-'+dd+'-'+yyyy;
	var estShipDate = today;
	var blOriginCityCode = $('#blOriginCityCode').val();
	var originPortCityCode = $('#originPortCityCode').val();
	var destinationPortCityCode = $('#destinationPortCityCode').val();
	var blDestinationCityCode = $('#blDestinationCityCode').val();
	
	var actionUrl = _context+'/cas/searchCommodityLookup.do?filterValue1=' +encodeURIComponent(dscr + '|' + tariffNo + '|' + itemNo + '|' + trade +
			'|' + loadSrvc + '|' + dischargeSrvc + '|' + estShipDate + '|' + blOriginCityCode + '|' + originPortCityCode + 
			'|' + destinationPortCityCode + '|' + blDestinationCityCode);
	var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, 'CustomerSearch', windowStyle);		
}

function commodityUpdate(id){
	var values = id.split("|");
	if(values[1] != null && values[1] == "**NPC**"){
		alert("NO PRIMARY COMMODITY FOUND");
	}else{
		// D026883
		if($("#tariffCommodityDescription").val() != values[1]) 
		{
			isBookingChanged = 'Y';
		} 
		
		$("#tariffCommodityDescription").val(values[1]);
		$("#tariffCommodityDescriptionHidden").val(values[1]);	
	}
	
	if($("#tariff").val() != values[3]) {isBookingChanged = 'Y'}
	$("#tariff").val(values[3]);
	
	if($("#frtGrpId").val() != values[10]) {isBookingChanged = 'Y';}
	$("#frtGrpId").val(values[10]);
	
	//D029181

	$('#tariffCheck').val(values[3]);		
	
	
	if($("#tariffItemNumber").val() != values[4]) {isBookingChanged = 'Y';}
	$("#tariffItemNumber").val(values[4]);
	
	if($("#frtItemId").val() != values[11]) {isBookingChanged = 'Y';}
	$("#frtItemId").val(values[11]);
	
	var primaryTariffItemCmdtyDescId = values[9];
	getCommodityCodes(primaryTariffItemCmdtyDescId, true);
	
	var secondaryTariffItemCmdtyDescId = values[12];
	if(primaryTariffItemCmdtyDescId!=secondaryTariffItemCmdtyDescId){
		$('#tariffItemCmdtyDescId').val(secondaryTariffItemCmdtyDescId);
	}
	
	$("#primaryFreightPresent").val("Y");
	setMandatoryTariffCmdDesc();
	resetMandatoryCustDesc();
	$('#commodityDescription').validationEngine('hidePrompt');
	
	// Reset message div- msgDivFrt
	$('#msgDivFrt').html("");
	$('#msgDivFrt').hide();
}

function getCommodityCodes(tariffItemCmdtyDescId, asyncCall){
	if (tariffItemCmdtyDescId!=null && tariffItemCmdtyDescId!=''){
		if (asyncCall) blockUI();
		$('#tariffItemCmdtyDescId').val(tariffItemCmdtyDescId);
		
		function callBack(responseText) { // cheetah
			if(responseText.success){
				populateCommodityCodeList(responseText.data);
			}
			if(asyncCall){
				$.unblockUI();
			}			
		}		
		var frtItemId = $('#frtItemId').val();
		getCommodityCodesRequest(callBack, asyncCall, tariffItemCmdtyDescId, frtItemId);
	}
}

function getCommodityCodesRequest(callBack, asyncCall, _tariffItemCmdtyDescId, _frtItemId) { // cheetah
	var bookingInitData = ('bookingInitData' in (window.gatesCheetah || {}))? window.gatesCheetah.bookingInitData : {};
	var tariffItemCmdtyDescId = ('tariffItemCmdtyDescId' in bookingInitData) ? bookingInitData.tariffItemCmdtyDescId : '';
	var frtItemId = ('frtItemId' in bookingInitData) ? bookingInitData.frtItemId : '';
	var commodityCodes = ('getCommodityCodes' in bookingInitData) ? bookingInitData.getCommodityCodes : {};
	console.log('Cheetah: getCommodityCodesRequest: ' + tariffItemCmdtyDescId + ' || ' + _tariffItemCmdtyDescId + ' && ' + frtItemId + ' || ' + _frtItemId);
	if (tariffItemCmdtyDescId == _tariffItemCmdtyDescId && frtItemId == _frtItemId)  {
		console.log('Cheetah: getCommodityCodesRequest from cache');
		callBack(commodityCodes);
		return;
	}
	console.log('Cheetah: getCommodityCodesRequest from Ajax');
	$.ajax({
		url: _context+'/booking/freight/getCommodityCodes',
		data: {commodityDescId:_tariffItemCmdtyDescId, frtItemId: _frtItemId},
		async: asyncCall,
		success: callBack
	});
}

function notePopupSearch() {
	var tariffNo = $("#tariff").val();
	var itemNo = $("#tariffItemNumber").val();
	// Need to set it
	var estShipDate = $('#estShip').text();
	if(estShipDate == null || estShipDate == ''){//D032739
		var today = new Date();
		var dd = today.getDate();
		var mm = today.getMonth()+1; // January is 0!
		var yyyy = today.getFullYear();
		if(dd<10){
			dd='0'+dd;
		} 
		if(mm<10){
			mm='0'+mm;
		} 
		var today = mm+'-'+dd+'-'+yyyy;
		estShipDate = today;
	}
	/*if($("#vvdRoutingGrid").getGridParam("reccount")>0){
		var rowData = jQuery("#vvdRoutingGrid").getRowData("1");
		estShipDate = rowData.sailDate;
	}*/
	var trade = $("#tradeCode").val();
	var loadSrvc = $("#loadServiceCode").val();
	var dischargeSrvc = $("#dischargeServiceCode").val();
	var originPortCityCode = $('#originPortCityCode').val();
	var destinationPortCityCode = $('#destinationPortCityCode').val();
	var eqType = "";
	var eqLength= "";
	var eqHeight= "";
	var origin = $('#blOriginCityCode').val();
	var destination = $('#blDestinationCityCode').val();
	//alert('shipment date ' + estShipDate);
	var actionUrl = _context+'/cas/searchNoteNoLookup.do?filterValue1=' + tariffNo + '|' + itemNo + '|' + estShipDate + '|' + eqType + 
		'|' + eqLength + '|' + eqHeight + '|' + origin + '|' + destination +
		'|' + originPortCityCode + '|' + destinationPortCityCode + '|' + loadSrvc + '|' + dischargeSrvc + '|' + trade ;
		;
	var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, 'NoteSearch', windowStyle);
}

function noteNoUpdate(id){
	var values= id.split("|");
	$("#tariffItemNoteNumber").val(values[0]);
}

function populateCommodityCodeList(list){
	$('select#commodityCode').children().remove().end().append('<option selected value="">Select</option>');
	if(list != null)
	{
		for ( var i = 0; i < list.length; i++) {
			$('select#commodityCode').append($("<option/>", {
				value : list[i].code,
				text : list[i].code + " - " +list[i].description
			}));
		}
		
		if(list.length==1){
			$('#commodityCode').val($.trim(list[0].code));
		}
	}
}

function clearCommodityCodeList(){
	$('#tariffItemCmdtyDescId').val(null);
	$('#commodityCode option').remove();
	$('#commodityCode').append('<option value="" selected="selected">Select</option>');
}

function enableDisableNextPreviousButtons(rowCount, freightSeqNo){
	if(rowCount==0 || rowCount==1){
		// alert("1");
		$('#previousFreight').attr('disabled','disabled');
		$('#nextFreight').attr('disabled','disabled');
	}
	else if(freightSeqNo==1 && rowCount > freightSeqNo){
		// alert("2");
		$('#previousFreight').attr('disabled','disabled');
		$('#nextFreight').removeAttr('disabled');
	}
	else if(freightSeqNo>1 && rowCount!=freightSeqNo){
		// alert("3");
		$('#previousFreight').removeAttr('disabled');
		$('#nextFreight').removeAttr('disabled');
	}
	else if(rowCount==freightSeqNo){
		// alert("4");
		$('#previousFreight').removeAttr('disabled');
		$('#nextFreight').attr('disabled','disabled');
	}
	// TODO: to be replaced when save will validate all validations
	/*
	 * if(rowCount == 0 || rowCount == 1){ $('#previousFreight').attr({style:
	 * 'visibility : hidden'}); $('#nextFreight').attr({style: 'visibility :
	 * hidden'}); } else if(freightSeqNo==1 && rowCount > freightSeqNo){
	 * $('#previousFreight').attr({style: 'visibility : visible'});
	 * $('#previousFreight').attr('disabled', true);
	 * $('#nextFreight').attr({style: 'visibility : visible'});
	 * $('#nextFreight').attr('disabled', false); } else if(freightSeqNo>1 &&
	 * rowCount!=freightSeqNo){ $('#previousFreight').attr({style: 'visibility :
	 * visible'}); $('#previousFreight').attr('disabled', false);
	 * $('#nextFreight').attr({style: 'visibility : visible'});
	 * $('#nextFreight').attr('disabled', false); } else
	 * if(rowCount==freightSeqNo){ $('#previousFreight').attr({style:
	 * 'visibility : visible'}); $('#previousFreight').attr('disabled', false);
	 * $('#nextFreight').attr({style: 'visibility : visible'});
	 * $('#nextFreight').attr('disabled', true); }
	 */
}

function validateTrfCmdDesc(){
	if($.trim($('#tariffCommodityDescription').val())==''){
		$('#tariffCommodityDescription').val($.trim($('#tariffCommodityDescription').val()));
	}
	else if($("#tariffCommodityDescription").val().length > 30) {
		 return "* Commodity Desc can't be more than 30. At present, the length is "+ $("#tariffCommodityDescription").val().length +".";
	}
}

function validateTariff(){
	 if($("#tariff").val().length > 6) {
		 return "* Tariff can't be more than 6 in length. At present, the length is "+ $("#tariff").val().length + ".";
	}
}

function validateItem(){
	 if($("#tariffItemNumber").val().length > 8) {
		 return "* Tariff Item can't be more than 8 in length. At present, the length is "+ $("#tariffItemNumber").val().length + ".";
	}
}

function validateNote(){
	if($.trim($('#tariffItemNoteNumber').val())==''){
		$('#tariffItemNoteNumber').val($.trim($('#tariffItemNoteNumber').val()));
		$('#msgDivFrt').html("");
		$('#msgDivFrt').hide();
	}
}

/*
 * function validateCommodityDesc(){
 * if($.trim($('#commodityDescription').val())==''){
 * $('#commodityDescription').val($.trim($('#commodityDescription').val())); }
 * else if($('#commodityDescription').val().length > 30) { return "* Customer
 * Commodity Description can't be more than 30 in length. At present, the length
 * is "+ $('#commodityDescription').val().length +"."; } }
 */

/*function validateCommodityDesc(){
	if($.trim($('#commodityDescription').val())==''){
		$('#commodityDescription').val($.trim($('#commodityDescription').val()));
	} else {
		lines = $('#commodityDescription').val().split("\n");
		var isError = false;
		var errorMsg = '';
		for(var i = 0; i <lines.length; i++) {
			if(lines[i].length > 30) {
				errorMsg = "* Customer Commodity Description cannot have more than 30 characters in one line. At present, the length is " + lines[i].length + " at line no." + (i + 1);
				isError = true;
				break;
			}
		}
		if(isError) {
			return errorMsg;
		}
	}
}*/

function validateWeight(){
	var reg7Number3DecimalPlaces = /^[0-9]{0,7}(\.[0-9]{1,3})?$/;
	var reg7Number = /^[0-9]{1,7}$/;
	
	if($.trim($("#weight").val())==''){
		$("#weight").val(($.trim($("#weight").val())));
	}
	else{
		 //pov
		 //D029596: MAINTAIN BKG: WEIGHT = ZERO ALLOWED TO BE SAVED
		 //if($('#bookingTypeCode').val()=="B" && $.trim($('#loadDschServiceGroupCode').val())=="AU" && $.trim($('#customerGroupId :selected').text())==POV_NAME) {
		 //}
		 switch($('#unitOfMeasureSourceCode').val()){
	         case "M": 
	        	 if(!reg7Number3DecimalPlaces.test($("#weight").val())) {
	        		 return "* Only 7 numbers before decimal and 3 numbers after decimal are allowed. No blank spaces allowed.";
	        	}
	         break;
	         case "I": 
	        	 if(!reg7Number.test($("#weight").val())) {
	        		 return "* Max 7 numbers are allowed. * No blank spaces allowed.";
	        	}
	         break;
	     }
	     //D029724: 	Prod Maintain Booking : Error: Zero is not a valid weight 
		$("#weight").val(parseFloat($("#weight").val()));
		if($('#bookingTypeCode').val()=="B" && $("#weight").val()==0){
			$("#weight").val('');
		}
	}
}

function validateCube(){
	var reg6Number4DecimalPlaces = /^[0-9]{0,6}(\.[0-9]{1,4})?$/;
	var reg8Number = /^[0-9]{1,8}$/;
	
	if($.trim($("#cube").val())==''){
		$("#cube").val(($.trim($("#cube").val())));
	}
	else{
		 switch($('#unitOfMeasureSourceCode').val())
	     {
	         case "M": 
	        	 if(!reg6Number4DecimalPlaces.test($("#cube").val())) {
	        		 return "* Only 6 numbers before decimal and 4 numbers after decimal are allowed. No blank spaces allowed.";
	        	}
	        	 else{
	        		 var reg4DecimalPlaces = /^\d+(?:\.\d{4})?$/;
	        		 
	        		 if(reg4DecimalPlaces.test($("#cube").val())) {
	        			 $("#cube").val(Math.round(parseFloat($("#cube").val())*Math.pow(10,3))/Math.pow(10,3));
	            	}
	        	 }
	        	 
	         break;
	         case "I": 
	        	 if(!reg8Number.test($("#cube").val())) {
	        		 return "* Max 8 numbers are allowed. * No blank spaces allowed.";
	        	}
	         break;
	     }
	}
}

function validateLengthWidthHeight(field, rules, i, options){
	var fieldName = field.attr("name");
	var reg3Number3DecimalPlaces = /^[0-9]{0,3}(\.[0-9]{1,3})?$/;
	var reg3Number = /^[0-9]{1,3}$/;
	var reg5Number = /^([0-9]{1,5})$/;
	if($.trim(field.val())==''){
		field.val($.trim(field.val()));
	}
	else{
        if($.trim($('#unitOfMeasureSourceCode').val())=="M"){
        	if(!reg3Number3DecimalPlaces.test(field.val())) {
	       		return "* Max 3 numbers and 3 decimal places are allowed. * No blank spaces allowed.";
	       	}
        } 
        else if($.trim($('#unitOfMeasureSourceCode').val())=="I"){
        	if(fieldName=='freight.feetLength' || fieldName=='freight.feetWidth' || fieldName=='freight.feetHeight'){
        		if(!reg3Number.test(field.val())) {
    	       		return "* Max 3 numbers are allowed. * No blank spaces allowed.";
    	       	}
        	}
        	else if(fieldName=='freight.inchesLength' || fieldName=='freight.inchesWidth' || fieldName=='freight.inchesHeight'){
        		if(!reg5Number.test(field.val()) || field.val()<0 ) {
    	       		return "* Numbers only. * No blank spaces allowed.";
    	       	}
        	}
        }
	}
}

function validatePieces(){
	var pcs = $.trim($('#pieceCount').val());
	/*
	 * if(pcs==''){ $('#pieceCount').val("0"); } else
	 */if(pcs=='' || pcs==0){
		if($('#freight\\.isRoRo1').is(':checked')==true){
				return "* Pieces count must be greater than zero for Rolling Stock.";
		}
		else if($('#bookingTypeCode').val()=='B' && $('#customerGroupId :selected').text()==GOVERNMENT_NAME && ($.trim($('#loadDschServiceGroupCode').val())=='CON' || $.trim($('#loadDschServiceGroupCode').val())=='LCL' )&& $('#isAllowBookingUnit').val()=="Y"){
			return "* Pieces count must be greater than zero.";
		}
	}
	else if(pcs>999999){
		return "* Pieces count can't be greater than 999999. Decrease the no by "+(parseInt(pcs) - parseInt(999999));
	}
	else if(/^[\S]+$/.test(pcs)){
		$('#pieceCount').val(pcs);
	}
}

function validateKind(){
	if($.trim($('#pieceUnitOfMeasureCode').val())==''){
		$('#pieceUnitOfMeasureCode').val($.trim($('#pieceUnitOfMeasureCode').val()));
	}
	else if($('#pieceUnitOfMeasureCode').val().length>4){
		return "* Kind can't be more than 4 in length. The current length is "+ $('#pieceUnitOfMeasureCode').val().length + ".";
	}
}

function validateVinNumber(){
	if($('#vinNumber').val().length>17){
		return "* Vin Number can't be more than 17 in length. The current length is "+ $('#vinNumber').val().length + ".";
	}
}

function validateAutoYear(){
	if($.trim($('#vehicleYear').val())==''){
		$('#vehicleYear').val($.trim($('#vehicleYear').val()));
	}
	else if($('#vehicleYear').val().length>4){
		return "* Year can't be more than 4 in length. The current length is "+ $('#vehicleYear').val().length + ".";
	}
}

function validateAutoMake(){
	if($.trim($('#vehicleMake').val())==''){
		$('#vehicleMake').val($.trim($('#vehicleMake').val()));
	}
	else if($('#vehicleMake').val().length>20){
		return "* Make can't be more than 20 in length. The current length is "+ $('#vehicleMake').val().length + ".";
	}
}

function validateAutoModel(){
	if($.trim($('#vehicleModel').val())==''){
		$('#vehicleModel').val($.trim($('#vehicleModel').val()));
	}
	else if($('#vehicleModel').val().length>20){
		return "* Model can't be more than 20 in length. The current length is "+ $('#vehicleModel').val().length + ".";
	}
}

function validateAutoLicNo(){
	if($.trim($('#vehicleLicenseNumber').val())==''){
		$('#vehicleLicenseNumber').val($.trim($('#vehicleLicenseNumber').val()));
	}
	else if($('#vehicleLicenseNumber').val().length>10){
		return "* LIC # can't be more than 10 in length. The current length is "+ $('#vehicleLicenseNumber').val().length + ".";
	}
}

function validateAutoColor(){
	if($.trim($('#vehicleColor').val())==''){
		$('#vehicleColor').val($.trim($('#vehicleColor').val()));
	}
	else if($('#vehicleColor').val().length>20){
		return "* Color can't be more than 10 in length. The current length is "+ $('#vehicleColor').val().length + ".";
	}
}

function validateAutoDesc(){
	if($.trim($('#vehicleDescription').val())==''){
		$('#vehicleDescription').val($.trim($('#vehicleDescription').val()));
	}
	else if($('#vehicleDescription').val().length>25){
		return "* Description can't be more than 25 in length. The current length is "+ $('#vehicleDescription').val().length + ".";
	}
}

function validateAutoEstDropOffDate(){
	if($('#bookingTypeCode').val()=='B'){
		if($('#estimatedDropOffDate').val()==undefined || $('#estimatedDropOffDate').val()==null || $('#estimatedDropOffDate').val()=='')
		{
			if($.trim($('#loadDschServiceGroupCode').val())=="AU" && ($('#customerGroupId :selected').text()==POV_NAME ||$('#customerGroupId :selected').text()==ALASKA_POV_NAME))
			{
				$('#estimatedDropOffDate').validationEngine('showPrompt', '* This is required', 'error', 'topRight', true);
				return false;
			}
			else{
				return true;
			}
		}
		else
		{
			var fullDate = new Date();
			// convert month to 2 digits
			var twoDigitMonth = ((fullDate.getMonth()+1) < 10)? '0' + (fullDate.getMonth()+1) : (fullDate.getMonth()+1); 
			var twoDigitDate = ((fullDate.getDate()) < 10)? '0' + (fullDate.getDate()) : (fullDate.getDate());
			// mm-dd-yy
			var currentDate = twoDigitMonth + "-" + twoDigitDate + "-" + fullDate.getFullYear(); 
			if(!validateDate('estimatedDropOffDate', false)){
				$('#estimatedDropOffDate').validationEngine('showPrompt', '* Enter date in Format (mm-dd-yyyy)', 'error', 'topRight', true);
				return false;
			}
			else if(estimatedDropOffDateModified && new Date($('#estimatedDropOffDate').val()).getTime() < new Date(currentDate).getTime()){
				$('#estimatedDropOffDate').validationEngine('showPrompt', '* Est drop off date can not be less than current date.', 'error', 'topRight', true);
				return false;
			}
			else{
				return true;
			}
		}
	}
	else{
		return true;
	}
}

function validateAutoEstDropOffDate1(){
	if($('#bookingTypeCode').val()=='B' && $('#estimatedDropOffDate').val()!='undefined' && $('#estimatedDropOffDate').val()!=null && $('#estimatedDropOffDate').val()!=''){
		var fullDate = new Date();
		// convert month to 2 digits
		var twoDigitMonth = ((fullDate.getMonth()+1) < 10)? '0' + (fullDate.getMonth()+1) : (fullDate.getMonth()+1); 
		var twoDigitDate = ((fullDate.getDate()) < 10)? '0' + (fullDate.getDate()) : (fullDate.getDate());
		// mm-dd-yy
		var currentDate = twoDigitMonth + "-" + twoDigitDate + "-" + fullDate.getFullYear(); 
		if(!validateDate('estimatedDropOffDate', false)){
			return '* Enter date in Format (mm-dd-yyyy)';
		}
		else if(estimatedDropOffDateModified && new Date($('#estimatedDropOffDate').val()).getTime() < new Date(currentDate).getTime()){
			return '* Est drop off date can not be less than current date.';
		}
	}
}

function validateAutoSplInstrcs(){
	if($.trim($('#specialInstruction').val())==''){
		$('#specialInstruction').val($.trim($('#specialInstruction').val()));
	}
	else if($('#specialInstruction').val().length>50){
		return "* Special Instructions can't be more than 50 in length. The current length is "+ $('#specialInstruction').val().length + ".";
	}
}

function saveFreight(dataUrl, ratingAttrChangeConfirmed,isSaveBooking){
	$.ajax({
		type: "POST",
		url: dataUrl,
		data: serializeFreight() + "&measurementSource=" + $('#unitOfMeasureSourceCode').val() +"&customerGroup="+$('#customerGroupId :selected').text()+"&ratingAttrChangeConfirmed="+ratingAttrChangeConfirmed+"&trade="+$('#tradeCode').val()+"&loadServiceCode="+$("#loadServiceCode").val()+"&dischargeServiceCode="+$("#dischargeServiceCode").val()+"&blOriginCityCode="+$('#blOriginCityCode').val()+"&originPortCityCode="+$('#originPortCityCode').val()+"&destinationPortCityCode="+$('#destinationPortCityCode').val()+"&blDestinationCityCode="+$('#blDestinationCityCode').val(),
		success: function(responseText){
			var showMsgDivFrt = true;
			if(responseText.success){
				if(dataUrl.search('addFreight')>0){
					if(isSaveBooking==null){
						$('#msgDivFrt').html('<div class="message_info">Successfully Added.</div>');
					}
					$('#freightSeqNo').val(responseText.data.freightSeqNo);
					populateCommodityLines(responseText.data.commodityLines, responseText.data.currentCommodityLine);
					loadHazGrid();
					enableDisableFreightButtons(responseText.data.commodityLines.length, responseText.data.freightSeqNo);
				}
				else if(dataUrl.search('updateFreight')>0){
					if($('div.message_error', '#msgDivFrt').is(':visible')){
						showMsgDivFrt = false;
						$('#msgDivFrt').hide();
					}
					if(isSaveBooking==null){
						$('#msgDivFrt').html('<div class="message_info">Successfully Updated.</div>');
					}
				}
				afterFreightLoadComplete(responseText.data.commodityLines.length, responseText.data.tariff, responseText.data.tariffItemNumber, responseText.data.commodityDescription, responseText.data.tariffCommodityDescription);
				isBookingChanged = "Y";
				enableEquipmentAddDelete();
				equipmentUpdated = false;
				freightModified = false;
				$('#tariff').focus();
				
				// Changes vvd in routing to selected vvd by user in vehicle
				changeVVD($("#bookedForVVDSeqNo").val());
				// Calling save booking after freight save
				if(isSaveBooking==true){
					checkRatingAttributes();
					//saveBooking();
				}
				loadTCNGrid();
				//changed for D025138
				loadEquipmentGrid();
			}
			else{
				$.unblockUI();
				if(isSaveBooking==true){
					$('#bookingSave').attr("disabled", false);
				}
				var messages = responseText.messages;
				var messageContent = '';
				if (messages.error.length > 0) {
					var array = messages.error;
					for (var i=0; i<messages.error.length; i++) {
						messageContent = array[i];
						if(messageContent=='Validation error(s) in equipment lines.'){
							showMsgDivFrt = false;
							if(!$('#equipmentGrid').is(':visible')){
								$(".HeaderButton", ("#gview_equipmentGrid")).click();
							}
							waitForEquipmentToLoadRows();
						}
					}
				}
		    		
				scrollToCommodity();
				if(showMsgDivFrt){
					
					$('#msgDivFrt').show();
					showResponseMessages('msgDivFrt', responseText);
				}
			}
			$("#okAlreadyPressed").val(false);
			if(showMsgDivFrt){
				$('#msgDivFrt').show();
			}
		}
	});
}

function waitForEquipmentToLoadRows(){
	if($("#equipmentGrid").getGridParam("reccount") == undefined){
	    	setTimeout(function(){
	    		waitForEquipmentToLoadRows();
	        },500);
    }
    else{
    	saveAllEquipments();
    }
}

function resetVinNumberDetails(){
	$('#vehicleYear').val("");
	$('#vehicleMake').val("");
	$('#vehicleModel').val("");
	$('#weight').val("");
	$('#pieceCount').val("");
	
	if($('#unitOfMeasureSourceCode').val()=="M"){
		$('#width').val("");
		$('#length').val("");
		$('#height').val("");
	}
	else if($('#unitOfMeasureSourceCode').val()=="I"){
		$('#feetWidth').val("");
		$('#feetLength').val("");
		$('#feetHeight').val("");
		$('#inchesWidth').val("");
		$('#inchesLength').val("");
		$('#inchesHeight').val("");
	}
}

function setFreightAccordianTabDetails(freightCount, tariffNumber, tariffItemNumber, commodityDescription, tariffCommodityDescription){
	if(freightCount==0){
		setAccordianTabDetails('maintainBookingCommodityId', "");
	}
	else if(freightCount>0){
		var commodityDisplayText = " - ";
		if(tariffNumber!='undefined' && tariffNumber!=null && $.trim(tariffNumber)!=''){
			commodityDisplayText = commodityDisplayText + tariffNumber + " | ";
		}
		
		if(tariffItemNumber!='undefined' && tariffItemNumber!=null && $.trim(tariffItemNumber)!=''){
			commodityDisplayText = commodityDisplayText + tariffItemNumber + " | ";
		}
		//D024321
		if(tariffCommodityDescription!='undefined' && tariffCommodityDescription!=null && $.trim(tariffCommodityDescription)!=''){
			commodityDisplayText = commodityDisplayText + tariffCommodityDescription + " | ";
		}			
		commodityDisplayText = commodityDisplayText + (commodityDescription!=''&& commodityDescription!=null?((commodityDescription.split("\n")[0]).toUpperCase()):'');	
		setAccordianTabDetails('maintainBookingCommodityId', commodityDisplayText);
	}
}

function changeVVD(bookedForVVDSeqNo){
	if($('#freightVVDModified').val()=='Y' && ($('#bkdVessel').val()!=$('#vessel').val() || $('#bkdVoyage').val()!=$('#voyage').val() || $('#bkdDirection').val()!=$('#direction').val())){
		$.ajax({
			url : _context +"/booking/routing/populateVVDForFreight",
			data: {blOrigin: $('#blOriginCityCode').val()},
			success : function(responseText) {
				if(responseText.success){
					selectTripSuccessFunction(responseText);
					$('#freightVVDModified').val('N');
				}
				else{
					showResponseMessages('msgDiv', responseText);
				}
			}
		});
	}
}

function resetTariffDetails(){
	resetMandatoryTariffItem();
	$("#tariffCommodityDescriptionHidden").val('');
	$('#tariffCommodityDescription').val('');
	$('#tariff').val('');
	$('#tariffHidden').val('');
	$("#frtGrpId").val('');
	$("#frtItemId").val('');
	$('#tariffItemNumber').val('');
	$('#tariffItemNumberHidden').val('');
	$('#tariffItemNoteNumber').val('');
	clearCommodityCodeList();
}

/*function validatePlannedArrivalDate(){
	if(!validateDate('plannedArrivalDate', false)){
		return "* Enter date in Format (mm-dd-yyyy)";
	}
}*/

function removeCommodities(){
	resetMandatory();
	var urlString= _context+'/booking/freight/deleteFreight?id=-1';
	$.ajax({
		url: urlString,
		async:false,
		success: function(responseText){
			if(responseText.success){
				$('#freightSeqNo').val('');
				$('select#currentCommodityLine').children().remove().end().append('<option selected value="0">0</option>');
				$('#totalCommodityLines').text(0);
				clearFreight();
				//$('#showAlertTCGLDSP').val("false");
				loadFreightGrids();
				$('#showAlertTCGLDSP').val("true");
				setAccordianTabDetails('maintainBookingCommodityId', "");
				
				enableDisableNote();
			}
			resetIBSCode();
			resetCargoPickup();
			resetCargoDelivery();
		}
	});
}

function removeCurrentCommodity(){
	resetMandatory();
	var urlString= _context+'/booking/freight/deleteFreight?id=-1';
	$.ajax({
		url: urlString,
		async:false,
		success: function(responseText){
			if(responseText.success){
				$('#freightSeqNo').val('');
				$('select#currentCommodityLine').children().remove().end().append('<option selected value="0">0</option>');
				$('#totalCommodityLines').text(0);
				clearFreight();
				loadFreightGrids();
			}
		}
	});
}

function getPrimaryCommodity(tariffNo, itemNo){
	var blOriginCityCode = $('#blOriginCityCode').val();
	var blDestinationCityCode = $('#blDestinationCityCode').val();
	var originPortCityCode = $('#originPortCityCode').val();
	var destinationPortCityCode = $('#destinationPortCityCode').val();
	var loadSrvc = $("#loadServiceCode").val();
	var dischargeSrvc = $("#dischargeServiceCode").val();
	var trade = $('#tradeCode').val();
	
	var urlComm= _context+'/cas/autocomplete.do?method=getPrimaryCommodity&searchType=281&parentSearch='+blOriginCityCode
	+'|'+blDestinationCityCode+'|'+originPortCityCode+'|'+destinationPortCityCode+'|'+loadSrvc+'|'+dischargeSrvc
	+'|'+trade+'|'+tariffNo+'|'+itemNo;
	
	$.ajax({
		url: urlComm,
		type: "POST",
		success: function(responseText){
			if(responseText!=null){
				if(responseText[0].commodityNotFound=='undefined' || responseText[0].commodityNotFound==null || responseText[0].commodityNotFound==''){
					$('#msgDivFrt').html('');
					$('#msgDivFrt').hide();
					$("#tariffCommodityDescription").val(responseText[0].desc);
					$("#tariffCommodityDescriptionHidden").val(responseText[0].desc);
					$("#frtGrpId").val(responseText[0].grpid);
					$("#frtItemId").val(responseText[0].itemid);
					
					if(responseText[0].descid!=null && responseText[0].descid!=''){
						$('#tariffItemCmdtyDescId').val(responseText[0].descid);
						blockUI();
						
						function callBack(responseText) { // cheetah
							if(responseText.success){
								populateCommodityCodeList(responseText.data);
							}
							$.unblockUI();
						}		
						var _tariffItemCmdtyDescId = responseText[0].descid;
						var _frtItemId = $('#frtItemId').val();
						getCommodityCodesRequest(callBack, true, _tariffItemCmdtyDescId, _frtItemId); // cheetah

					}
					setMandatoryTariffCmdDesc();
					$("#commodityDescription").removeClass("validate[required]");
					$("#primaryFreightPresent").val("Y");
				}
				else{
					$('#msgDivFrt').show();
					if (responseText[0].commodityNotFound =="Y"){
						$.ajax({
							url:  _context+'/booking/freight/validateEffTariffItemDetails',
							data: serializeFreight(),
							type: "POST",
							async: false,
							success: function(responseText){
								if(responseText.success){
									$('#msgDivFrt').html('<div class="message_error">Place of delivery is not valid for Tariff/Item.</div>');
								}
								else{
									$('#msgDivFrt').html('<div class="message_error">'+responseText.messages.error[0]+'</div>');
									/*$('#msgDiv').html('<div class="message_error">'+responseText.messages.error[0]+'</div>');*/
									triggerErrorMessageAlert('msgDivFrt');
								}
							}
							});
						
						resetMandatoryTariffCmdDesc();
						setMandatoryTariffItem();
						$("#tariffCommodityDescription").val("");
						$("#tariffCommodityDescriptionHidden").val("");
						clearCommodityCodeList();
					}
					if (responseText[0].commodityNotFound =="TF" || responseText[0].commodityNotFound =="IF"){
						$('#msgDivFrt').html('<div class="message_error">'+responseText[0].errmsg+'</div>');
						resetMandatoryTariffCmdDesc();
						//resetTariffDetails();
					}
					
					//resetMandatoryTariffCmdDesc();
					//setMandatoryTariffItem();
					//resetTariffDetails();
					
					//$("#tariffCommodityDescription").val("");
					//$("#tariffCommodityDescriptionHidden").val("");
					$("#primaryFreightPresent").val("N");
					//clearCommodityCodeList();
					triggerErrorMessageAlert('msgDivFrt');
				}
			}
		}
	});
}

function validateNote1(itemId, tariffItemNoteNumber){
	$.ajax({
		url: _context+'/booking/freight/validateNote',
		data: {tariffItemId:itemId, note:tariffItemNoteNumber},
		success: function(responseText){
			if(!responseText.success){
				$('#tariffItemNoteNumber').val('');
			}
		}
	});
}

function showFreight(customerGroup){
	if(addFreightEnabled()){
		// resetMandatory();
		// Set Cube & Weight according to Measurement Source
		setCubeWeightLengthWidthHeight($('#unitOfMeasureSourceCode').val());
		var loadDschGroup = $.trim($('#loadDschServiceGroupCode').val());
		
		//D026848: 	Maintain Booking / AU - AU / Expand Dimension section in Commodity section
		if(loadDschGroup=="AU" || loadDschGroup=="CON" || loadDschGroup=="LCL"){
			$("#dimensionDiv").show();
		} else {
			$("#dimensionDiv").hide();
		}
		
		// Containerized
		if(loadDschGroup=="CY"){
			// alert("Containerized");
			showContainerized();
		}
		// POV
		else if(loadDschGroup=="AU" && (customerGroup==POV_NAME || customerGroup==ALASKA_POV_NAME)){
			showPOV();
			if($('#bookingTypeCode').val()=='B'){
				setMandatoryPOV();
			}
		}
		// Conventional- Commercial Auto
		else if(loadDschGroup=="AU" && (customerGroup!=POV_NAME || customerGroup!=ALASKA_POV_NAME)){
			// alert("Conventional- Commercial Auto");
			showConventionalCommercialAuto();
		}
		// Conventional- MBU
		else if((customerGroup==GOVERNMENT_NAME) && ($.trim($('#loadDschServiceGroupCode').val())=='CON' || $.trim($('#loadDschServiceGroupCode').val())=='LCL') && $('#isAllowBookingUnit').val()=="Y"){
			// alert("Conventional- MBU");
			showConventionalMBU();
		}
		// Conventional
		else if(loadDschGroup=="CON" || loadDschGroup=="LCL"){
			// alert("Conventional");
			showConventional();
		}
		
		$("#maintainBookingCommodity").validationEngine('detach');
		
		// Set mandatory fields for different freight overlays
		/*
		 * if($('#bookingTypeCode').val()=='B'){
		 * if($("#isAutobill").val()=="true"){ setMandatoryTariffCmdDesc(); } }
		 */
		
		$("#maintainBookingCommodity").validationEngine('attach');
		
		//Changed after defect D024046
		/*if($("#bookingStatusCode :selected").val()!='' && $("#bookingStatusCode :selected").val()!='INCP'){
			$("a.bookedForVVDUrl").attr("href", "javascript:void(0)");
			$("#bkdVessel").attr("readonly", true);
			$("#bkdVoyage").attr("readonly", true);
			$("#bkdDirection").attr("readonly", true);
		}
		else{*/
			$("a.bookedForVVDUrl").attr("href", "javascript:openSearchVVD('freight');");
			$("#bkdVessel").attr("readonly", false);
			$("#bkdVoyage").attr("readonly", false);
			$("#bkdDirection").attr("readonly", false);
		/*}*/
		
		createHazGrid();
		createTCNGrid();
		loadTCNGrid(); //D030580
		if($('#vinNumber').val()!=null && $('#vinNumber').val()!=''){
			if($('#loadDschServiceGroupCode').val()=='CON' || $('#loadDschServiceGroupCode').val()=='LCL'){
				$("#freightWeightLbl").html($("#freightWeightLbl").text()+"<span class=\"mandatory\">*</span>");
				$("#weight").addClass("validate[required]");
			}
			else if(!($.trim($('#loadDschServiceGroupCode').val())=="AU" && ($.trim($('#customerGroupId :selected').text())==POV_NAME || $.trim($('#customerGroupId :selected').text())==ALASKA_POV_NAME))){
				$("#freightWeightLbl").html($("#freightWeightLbl").text());
				$("#weight").removeClass("validate[required]");
			}
		}
		
		if(!($.trim($('#loadDschServiceGroupCode').val())=="AU" && ($.trim($('#customerGroupId :selected').text())==POV_NAME || $.trim($('#customerGroupId :selected').text())==ALASKA_POV_NAME))){
			resetMandatoryPOV();
		}
		
		if($('#shipmentNumber').val()!=''){
			/*
			 * if($('#pieceCount').val()==''){ $('#pieceCount').val(0); }
			 */
			
			enableDisableFreightButtons($('#totalCommodityLines').text(),($('#totalCommodityLines').text()!='' && $('#totalCommodityLines').text()!="0"?$('select#currentCommodityLine').val():0));
		}
		
		if($('#shipmentNumber').val()==''){
			$('#msgDivFrt').hide();
			$('#msgDivFrtEqp').hide();
			$('#msgDivFrtTcn').hide();
			
			// Set default the first VVD chosen on the VVD section of booking.
			setFirstVVD();
			
			if(($.trim($('#quoteNumberLabel').text())=='') && ($.trim($('#bookingTemplateId').val())=='')){
				
				if($.trim($('#tariff').val())=='' && $.trim($('#tariffItemNumber').val())=='' && $.trim($('#tariffCommodityDescription').val())==''){
					// Default Select- Commodity Code List
					$('#commodityCode').val("");
					// Clear Commodity Code List
					clearCommodityCodeList();
				}
				if($('#totalCommodityLines').text()=='' || $('#totalCommodityLines').text()=='0'){
					enableDisableFreightButtons(0,0);
				}
				else{
					enableDisableFreightButtons($('#totalCommodityLines').text(),($('#totalCommodityLines').text()!='' && $('#totalCommodityLines').text()!="0"?$('select#currentCommodityLine').val():0));
				}
			}
		}
		
		setMandatoryPieces();
		setAutoBillMandatory();
	}
}

function serializeFreight(){
	if($.trim($('#loadDschServiceGroupCode').val())=="AU" && ($.trim($('#customerGroupId :selected').text())==POV_NAME || $.trim($('#customerGroupId :selected').text())==ALASKA_POV_NAME)){
		if($.trim($('#pieceCount').val())==""){
			$('#pieceCount').val("1");
		}
		
		if($.trim($('#pieceUnitOfMeasureCode').val())==""){
			$('#pieceUnitOfMeasureCode').val("UNIT");
		}
	}
	
	var freight = 'tariff='+$('#tariff').val();
	freight+='&frtGrpId='+$('#frtGrpId').val();
	
	freight+='&freightSeqNo='+$('#freightSeqNo').val();
	freight+='&bookingFreightId='+$('#bookingFreightId').val();
	freight+='&tariffCommodityDescription='+encodeURIComponent($('#tariffCommodityDescription').val());
	freight+='&frtItemId='+$('#frtItemId').val();
	freight+='&tariffItemNumber='+$('#tariffItemNumber').val();
	freight+='&pieceCount='+$('#pieceCount').val();
	freight+='&tariffItemNoteNumber='+$('#tariffItemNoteNumber').val();
	freight+='&pieceUnitOfMeasureCode='+$('#pieceUnitOfMeasureCode').val();
	freight+='&tariffItemCmdtyDescId='+$('#tariffItemCmdtyDescId').val();
	freight+='&commodityCode='+$('#commodityCode').val();
	freight+='&weight='+$('#weight').val();
	freight+='&cube='+$('#cube').val();
	freight+='&commodityDescription='+encodeURIComponent($('#commodityDescription').val());
	
	freight+='&length='+$('#length').val();
	freight+='&feetLength='+$('#feetLength').val();
	freight+='&inchesLength='+$('#inchesLength').val();
	freight+='&isOversize='+$('#freight\\.isOversize1').is(':checked');
	//freight+='&plannedArrivalDate='+$('#plannedArrivalDate').val();
	freight+='&width='+$('#width').val();
	freight+='&feetWidth='+$('#feetWidth').val();
	freight+='&inchesWidth='+$('#inchesWidth').val();
	freight+='&isRoRo='+$('#freight\\.isRoRo1').is(':checked');
	freight+='&height='+$('#height').val();
	freight+='&feetHeight='+$('#feetHeight').val();
	freight+='&inchesHeight='+$('#inchesHeight').val();
	
	freight+='&bookingAuto.vinNumber='+$('#vinNumber').val();
	freight+='&bookingAuto.vehicleYear='+$('#vehicleYear').val();
	freight+='&bookingAuto.vehicleMake='+$('#vehicleMake').val();
	freight+='&bookingAuto.vehicleModel='+$('#vehicleModel').val();
	freight+='&bookingAuto.vehicleLicenseNumber='+$('#vehicleLicenseNumber').val();
	freight+='&bookingAuto.vehicleLicenseStateCode='+$('#vehicleLicenseStateCode').val();
	freight+='&bookingAuto.vehicleColor='+$('#vehicleColor').val();
	freight+='&bookingAuto.description='+$('#vehicleDescription').val();
	freight+='&bookingAuto.estimatedDropOffDate='+$('#estimatedDropOffDate').val();
	freight+='&bookingAuto.bkdVessel='+$('#bkdVessel').val();
	freight+='&bookingAuto.bkdVoyage='+$('#bkdVoyage').val();
	freight+='&bookingAuto.bkdDirection='+$('#bkdDirection').val();
	freight+='&bookingAuto.recdVessel='+$('#recdVessel').val();
	freight+='&bookingAuto.recdVoyage='+$('#recdVoyage').val();
	freight+='&bookingAuto.recdDirection='+$('#recdDirection').val();
	freight+='&bookingAuto.specialInstruction='+encodeURIComponent($('#specialInstruction').val());
	
	return freight;
}

function populateCommodityLines(list, currentCommodityLine){
	$('select#currentCommodityLine').children().remove();
	for ( var i = 0; i < list.length; i++) {
		$('select#currentCommodityLine').append($("<option/>", {
			value : list[i].code,
			text : list[i].description
		}));
	}
	$('select#currentCommodityLine').val(currentCommodityLine);
	$('#totalCommodityLines').text(list.length==0?0:list.length);
	if(list.length==0){
		$('select#currentCommodityLine').children().remove().end().append('<option selected value="0">0</option>');
	}
}

function getFreight(freightSeqNo){

	// Resetting if error occured
	$("#okAlreadyPressed").val(false);
	var dataUrl = _context +"/booking/freight/getFreight?freightSeqNo="+freightSeqNo+"&measurementSource="+$('#unitOfMeasureSourceCode').val();
	$.ajax({
		url: dataUrl,
		success: function(responseText){
			clearFreight();
			getFreightJSONresponse(responseText);
			setFirstVVD();
			freightModified = false;
			$('#tariff').focus();
		}
	});
}
	
function afterFreightLoadComplete(freightCount, tariffNumber, tariffItemNumber, commodityDescription, tariffCommodityDescription){
	if(freightCount==0){
		// Reset total charges
		$('#actualTotalChargeAmount').text("");
	}
	if($("#tariff").val()!=""){
		$('#tariffHidden').val($("#tariff").val());
	}
	$('#tariffCheck').val($("#tariff").val());
	// Set description according to first commodity added in the frieght grid.
	setFreightAccordianTabDetails(freightCount, tariffNumber, tariffItemNumber, commodityDescription, tariffCommodityDescription);
	loadSpecialServiceGrid();
	loadHazGrid();//Defect-25636
	// D016178
	// validateTCNExists();
}

function addFreightEnabled(){
	var trade = $('#tradeCode option:selected').text();
	var customerGroup = $.trim($('#customerGroupId :selected').text());
	var loadService= $('#loadServiceCode :selected').val();
	var dischargeService = $('#dischargeServiceCode :selected').val();
	var isAddFreight = (trade!=null && trade!="" && customerGroup!=null && customerGroup!="" && customerGroup!='Select' && loadService!=null && loadService!="" && dischargeService!=null && dischargeService!="");
	if($('#bookingTypeCode').val()=='T' && trade!=null && trade!="" && (customerGroup==null || customerGroup=="" || customerGroup=='Select') && loadService!=null && loadService!="" && dischargeService!=null && dischargeService!="" && $.trim($('#loadDschServiceGroupCode').val())=="CY"){
		isAddFreight = true;
	}
	if(!isAddFreight){
		iterated = false;
	}
	return isAddFreight;
}

function clearFreight(){
	$('#msgDivFrt').html('');
	$('#msgDivFrtEqp').html('');
	$('#msgDivFrtTcn').html('');
	$('#msgDivFrt').hide();
	$('#msgDivFrtEqp').hide();
	$('#msgDivFrtTcn').hide();
	//D024526
	//$('#tariff').val('');
	$('#frtGrpId').val('');
	
	// $('#freightSeqNo').val('');
	// $('#bookingFreightId').val('');
	$('#tariffCommodityDescription').val('');
	$('#frtItemId').val('');
	$('#tariffItemNumber').val('');
	$('#pieceCount').val("");
	$('#tariffItemNoteNumber').val('');
	$('#pieceUnitOfMeasureCode').val('');
	$('#tariffItemCmdtyDescId').val('');
	$('select#commodityCode').children().remove().end().append('<option selected value="">Select</option>');
	$('#weight').val('');
	$('#cube').val('');
	$('#commodityDescription').val('');
		
	$('#length').val('');
	$('#feetLength').val('');
	$('#inchesLength').val('');
	$('#freight\\.isOversize1').attr('checked', false);
	//$('#plannedArrivalDate').val('');
	$('#width').val('');
	$('#feetWidth').val('');
	$('#inchesWidth').val('');
	$('#freight\\.isRoRo1').attr('checked', false);
	$('#height').val('');
	$('#feetHeight').val('');
	$('#inchesHeight').val('');
		
	if($.trim($('#vinNumber').val())!=''){
		$('#vinNumber').val('');
		$.ajax({
	 		 url: _context+'/booking/freight/getVehicleDetails',
	 		 data:{vinNumber:$('#vinNumber').val(), measurementSource:$('#unitOfMeasureSourceCode').val()},
	 		 success: function(responseText) {
	 		 }
		});
	}
	$('#vehicleYear').val('');
	$('#vehicleMake').val('');
	$('#vehicleModel').val('');
	$('#vehicleLicenseNumber').val('');
	$('#vehicleLicenseStateCode').val('');
	$('#vehicleColor').val('');
	$('#vehicleDescription').val('');
	$('#estimatedDropOffDate').val('');
	$('#bkdVessel').val('');
	$('#bkdVoyage').val('');
	$('#bkdDirection').val('');
	$('#recdVessel').val('');
	$('#recdVoyage').val('');
	$('#recdDirection').val('');
	$('#specialInstruction').val('');
	
	$("#primaryFreightPresent").val('N');
	
	
}

function loadNewFreight(freightSeqNo,bookingFreightId){
	// Clearing grid
	$('#equipmentGrid').jqGrid("clearGridData");
	equipmentUpdated = false;
	if((isCommodityDisplayOnly && !isCommodityModifiable) || $("#bookingStatusCode").val()=='CANC'){
		$("#maintainBookingCommodity").gatesDisable();
		$('#tr_equipmentSeqNo').hide();
		$('#del_equipmentGrid').hide();
		$('#gview_equipmentGrid input').attr("disabled", true);
		$('#gview_equipmentGrid select').attr("disabled", true);
	}else{
		$('#gview_equipmentGrid input').attr("disabled", false);
		$('#gview_equipmentGrid select').attr("disabled", false);
		enableEquipmentAddDelete();
	}
	resetEquipmentAddRow();
	$('#hazGrid').jqGrid("clearGridData");
	$('#tcnGrid').jqGrid("clearGridData");
	blockUI();
	$.ajax({
		type: "POST",
		url: _context +"/booking/freight/clearFreightForm",
		data: {
			freightSeqNo:freightSeqNo, 
			bookingFreightId:bookingFreightId
		},
		success: function(responseText){
			$.unblockUI();
			freightModified = true;
			isBookingChanged = "Y";
			$('#tariff').focus();
		}
	});
}

function addUpdateFreight(dataUrl, isSaveBooking){
	/* Booking Security */
	//Removed other permissions for D030668
	if( $('#bookingStatusCode').val()=='CANC'){
		return false;
	}
	
	/*
	 * if(isSaveBooking && $('#totalCommodityLines').text()=='0' &&
	 * !checkIfAnyFreightFieldHasValue()){ return true; }
	 */
	
	if($("#okAlreadyPressed").val()=="false"){
		
		
		if(isSaveBooking==true || freightModified==true){
    		if(!$('#tariff').is(':visible') && addFreightEnabled()){
				$($('.booking-section')[4]).accordion("enable");
				$('#commodityHeader').attr('aria-expanded', "true");
				$('#commodityHeader').attr('aria-selected', "true");
				$('#commodityHeader').attr('tabindex', "0");
				$('#commodityHeader').removeClass("ui-state-default ui-corner-all").addClass("ui-state-active ui-corner-top");
				$('#commodityHeader span').removeClass('ui-icon-triangle-1-e').addClass('ui-icon-triangle-1-s');
				$('#maintainBookingCommodity').removeClass('ui-accordion-disabled ui-state-disabled');
				$('#maintainBookingCommodity').addClass('ui-accordion-content-active');
				$('#maintainBookingCommodity').css('display', 'block');
				var status = $($('.booking-section')[4]).accordion('option', 'active');
				if (typeof status == "boolean" && !status) {
					$($('.booking-section')[4]).accordion('option', 'active', 0);
				}
				//loadEquipmentGrid();
				/*if($("#equipmentGrid").is(':visible')){
					hideEquipmentInlineEditDelete();
					//showSelectedCharacteristics();
    			}*/
    		}
    	}
		
		if($('#tariff').is(':visible') && !$('#equipmentGrid').is(':visible')){
			$(".HeaderButton", ("#gview_equipmentGrid")).click();
		}
		
		if($('#tariff').is(':visible') && $('#equipmentGrid').is(':visible')){
			saveAllEquipments();
			if(updateEquipmentErrorOccurred){
				return false;
			}
		}
		
		$("#okAlreadyPressed").val(true);
		
		if($.trim($('#shipmentNumber').val())!='' && $('#bookingTypeCode').val()=='B' && $("#isAutobill").val()=="true" && 
				($.trim($('#quoteVNConcat').val())=='' || ($.trim($('#quoteVNConcat').val())!='' &&  
						$("#isConstructedQuote").val()!='Y'))){
			setMandatoryTariffCmdDesc();
		}
		
    	/*
		 * if(($('#bookingTypeCode').val()=='B' &&
		 * $("#isAutobill").val()=="false") ||
		 * $('#bookingTypeCode').val()=='T'){
		 */
        	if($("#primaryFreightPresent").val()=='N' && $("#tariff").val()!='' && $("#tariffItemNumber").val()==''){
        		setMandatoryTariffItem();
				resetMandatoryCmdDesc();
        	}
    		else if($("#commodityDescription").val()=='' && $("#primaryFreightPresent").val()=='N'){
        		resetMandatoryTariffCmdDesc();
    			$("#commodityDescription").addClass("validate[required]");
        	}
        	/*
			 * else if($("#commodityDescription").val()!='' &&
			 * $("#primaryFreightPresent").val()=='N'){ resetTariffDetails(); }
			 */
        	
        	if($("#primaryFreightPresent").val()=='Y'){
        		if($("#tariffCommodityDescription").val()=='' || $("#tariff").val()=='' || $("#tariffItemNumber").val()=='' || $("#commodityCode").val()==''){
        			setMandatoryTariffCmdDesc();
        			resetMandatoryCustDesc();
        		}
        	}
    	/* } */
		
    	
    	
    	if (!$("#maintainBookingCommodity").validationEngine('validate')) {
    		validateAutoEstDropOffDate();
    		$("#okAlreadyPressed").val(false);
    		return false;
    	}
    	else{
    		if(!validateAutoEstDropOffDate()){
        		$("#okAlreadyPressed").val(false);
        		return false;
    		}
    	}
    	
    	
    	//D026005: 	FW: Maintain Booking - recvd no warning when i changed tariff item on an AUTOBILL booking 
    	if($("#isAutobill").val()=="true" && $.trim($("#bookingFreightId").val())!=''){
        	$.ajax({
				type: "POST",
				url: _context +"/booking/freight/validateRatingAttributesChanged",
				data: {tariff:$('#tariff').val(), tariffItemNumber:$('#tariffItemNumber').val(), tariffItemNoteNumber:$('#tariffItemNoteNumber').val(), commodityCode:$('#commodityCode').val()},
				success: function(responseText){
					if(responseText.success){
						var isConfirm = confirm("The change(s) to this Autobill could affect rating.  Override? (Y/N)");
						if (isConfirm) {
							$("#ratingAttributesChanged").val(true);
							saveFreight(dataUrl, true,isSaveBooking);
							return true;
						}
						else{
							$("#okAlreadyPressed").val(false);
							return false;
						}
					}
					else{
						saveFreight(dataUrl, false,isSaveBooking);
						return true;
					}
				}
        	
			});
    	}
    	else{
			saveFreight(dataUrl, false,isSaveBooking);
			return true;
		}
	}
}

function setPrimaryFreightPresent(tariff, frtGrpId, item, frtItemId, commodityCode, tariffItemCmdtyDescId){
	if($.trim(tariff)!=undefined && $.trim(tariff)!=null && $.trim(tariff)!='' && $.trim(frtGrpId)!=undefined && $.trim(frtGrpId)!=null && $.trim(frtGrpId)!='' && $.trim(item)!=undefined && $.trim(item)!=null && $.trim(item)!='' && $.trim(frtItemId)!=undefined && $.trim(frtItemId)!=null && $.trim(frtItemId)!='' && (($.trim(commodityCode)!=undefined && $.trim(commodityCode)!=null && $.trim(commodityCode)!='') || ($.trim(tariffItemCmdtyDescId)!=undefined && $.trim(tariffItemCmdtyDescId)!=null && $.trim(tariffItemCmdtyDescId)!=''))){
		$("#primaryFreightPresent").val('Y');
	}
	else{
		$("#primaryFreightPresent").val('N');
	}
}

function getFreightJSONresponse(responseText){
	equipmentUpdated = false;
	resetMandatory();
	
	if(responseText.tariffCommodityDescription!=null && responseText.tariffCommodityDescription!=''){
		$('#tariffCommodityDescriptionHidden').val(responseText.tariffCommodityDescription);
	}
	else{
		$('#tariffCommodityDescriptionHidden').val("");
	}
	
	$("#maintainBookingCommodity").loadJSON(responseText);
	$("#vehicleDescription").val(((responseText.bookingAuto!=null && responseText.bookingAuto.description!=null && responseText.bookingAuto.description!="")?responseText.bookingAuto.description:""));
	
	populateCommodityLines(responseText.commodityLines, responseText.currentCommodityLine);
	loadHazGrid();
	// Set Commodity Code List
	getCommodityCodes(responseText.tariffItemCmdtyDescId, false);
	$('#commodityCode').val(responseText.commodityCode==null?"":($('#commodityCode').val()!=''?$('#commodityCode').val():$.trim(responseText.commodityCode)));
	setPrimaryFreightPresent(responseText.tariff, responseText.frtGrpId, responseText.tariffItemNumber, responseText.frtItemId, $('#commodityCode').val(), responseText.tariffItemCmdtyDescId);
	enableDisableFreightButtons($('#totalCommodityLines').text(), responseText.freightSeqNo);
	
	if($('#isAutobill :selected').val()=="true" && $('#shipmentNumber').val() != '' && $('#bookingTypeCode').val()=='B'){
		setAutoBillMandatory();
	}
	else{
		if(responseText.tariff!=null && responseText.tariff!='' && responseText.tariffItemNumber!=null && responseText.tariffItemNumber!=''){
			// $("#tariff").val($("#tariffNumber").val());
			setMandatoryTariffItem();
		}
		else{
			/* $("#tariff").val(""); */
			resetMandatoryTariffCmdDesc();
		}
	}
	
	if(responseText.bookingAuto.vinsightNumber!=null && responseText.bookingAuto.vinsightNumber!=''){
		$("a.vinsightUnitIdUrl").attr("href", responseText.bookingAuto.vinsightWebUrl);
		$("a.vinsightUnitIdUrl").html(responseText.bookingAuto.vinsightNumber);
		
	}
	
	if(responseText.bookingAuto.vinNumber!=null && responseText.bookingAuto.vinNumber!=''){
		if($('#loadDschServiceGroupCode').val()=='CON' || $('#loadDschServiceGroupCode').val()=='LCL'){
			$("#freightWeightLbl").html($("#freightWeightLbl").text()+"<span class=\"mandatory\">*</span>");
			$("#weight").addClass("validate[required]");
		}
		else if(!($.trim($('#loadDschServiceGroupCode').val())=="AU" && ($.trim($('#customerGroupId :selected').text())==POV_NAME || $.trim($('#customerGroupId :selected').text())==ALASKA_POV_NAME))){
			$("#freightWeightLbl").html($("#freightWeightLbl").text());
			$("#weight").removeClass("validate[required]");
		}
	}
	
	if(responseText.bookingFreightId==null){
		$("#bookingFreightId").val("");
	}
	
	if(responseText.bookingAuto.estimatedAvailDate!=null && $.trim(responseText.bookingAuto.estimatedAvailDate)!=''){
		$("#estAvail").html(responseText.bookingAuto.estimatedAvailDate);
	}
	
	(responseText.isOversize)?$('#freight\\.isOversize1').attr('checked', true):$('#freight\\.isOversize1').attr('checked', false);
	(responseText.isRoRo)?$('#freight\\.isRoRo1').attr('checked', true):$('#freight\\.isRoRo1').attr('checked', false);
	
	/* Booking Security */
	/*
	 * if(isCommodityDisplayOnly && !isCommodityModifiable){
	 * disableDialogButton('conventionalDialog', 'Ok'); }
	 */

	afterFreightLoadComplete($('#totalCommodityLines').text(), responseText.tariff, responseText.tariffItemNumber, responseText.commodityDescription, responseText.tariffCommodityDescription);
	
	$('#msgDivFrt').html('');
	$('#msgDivFrt').hide();
	
	setMandatoryPieces();
	loadFreightGrids();
}

function enableDisableFreightButtons(freightCount, freightSeqNo){
	/*
	 * if(freightCount==0){ $('#updateFreight').attr('disabled', true);
	 * $('#deleteFreight').attr('disabled', true); } else if(freightCount>=1){
	 * $('#updateFreight').attr('disabled', false);
	 * $('#deleteFreight').attr('disabled', false); }
	 */
	
	// TODO: to be replaced when save will validate all validations
	if(freightCount == 0){
		$('#previousFreight').attr({style: 'visibility : hidden'});
		$('#nextFreight').attr({style: 'visibility : hidden'});
		$('#updateFreight').attr({style: 'visibility : hidden'});
		$('#deleteFreight').attr('disabled', true);
	} else if(freightCount == 1){
		$('#previousFreight').attr({style: 'visibility : hidden'});
		$('#nextFreight').attr({style: 'visibility : hidden'});
		$('#updateFreight').attr({style: 'visibility : hidden'});
		//Added for Defect D027295
		if(isCommodityModifiable)
		  $('#deleteFreight').attr('disabled', false);
	} else if(freightCount > 1){
		$('#previousFreight').attr({style: 'visibility : visible'});
		$('#nextFreight').attr({style: 'visibility : visible'});
		$('#updateFreight').attr({style: 'visibility : visible'});
		$('#updateFreight').attr('disabled', false);
		//Added for Defect D027295
		if(isCommodityModifiable)
		$('#deleteFreight').attr('disabled', false);
	}
	enableDisableNextPreviousButtons(freightCount, freightSeqNo);
}
function setMandatoryPieces(){
	if($('#bookingTypeCode').val()=='B' && ( $.trim($('#loadDschServiceGroupCode').val())=="CON" || $.trim($('#loadDschServiceGroupCode').val())=="LCL" ) && $('#freight\\.isRoRo1').is(':checked')==true){
		if($('span', $('#pieceCountLbl')).hasClass('mandatory')==false){
			setPiecesMandatory();
		}
	}
	else if($('#bookingTypeCode').val()=='B' && $('#customerGroupId :selected').text()==GOVERNMENT_NAME && ($.trim($('#loadDschServiceGroupCode').val())=='CON' || $.trim($('#loadDschServiceGroupCode').val())=='LCL') && $('#isAllowBookingUnit').val()=="Y"){
		if($('span', $('#pieceCountLbl')).hasClass('mandatory')==false){
			setPiecesMandatory();
		}
	}
	else{
		resetPiecesMandatory();
	}
}

function setPiecesMandatory(){
	$("#pieceCountLbl").html($("#pieceCountLbl").text()+"<span class=\"mandatory\">*</span>");
	$("#pieceCount").addClass("validate[required]");
}

function resetPiecesMandatory(){
	$("#pieceCountLbl").html("Pieces");
	$("#pieceCount").removeClass("validate[required]");
}

function setFirstVVD(){
	$("#bkdVessel").val($("#vessel").val());
	$("#bkdVoyage").val($("#voyage").val());
	$("#bkdDirection").val($("#direction").val());
	$("#estShip").html($('#sailDate').val());
}


function splitCommodity()
{ 
	
	var i=0;j=0,k=0;
	var commDesc = $("#commodityDescription").val();
	var newCommDesc ="";
	var splittedString;
	var finalcommDesc="";
	newCommDesc = commDesc.split('\n')
	for(k=0;k<newCommDesc.length;k++)
	{
		if(k ==0) // first line can only be 30 characters
		{
			if(newCommDesc[k].length <= 30) {
				console.log("do nothing");
				finalcommDesc = finalcommDesc + newCommDesc[k] + '\n';
			} else {
				var firstline = wordwrapfirstline(newCommDesc[k],30,30);
				console.log("firstline= "+firstline);
				finalcommDesc = finalcommDesc + firstline+ '\n';
			}
		} else 
		{
			console.log("original="+newCommDesc[k]);
			console.log("original="+newCommDesc[k].length);
			if(newCommDesc[k].length <= 30) {
				console.log("do nothing");
				finalcommDesc = finalcommDesc + newCommDesc[k] + '\n';
			} else {
				console.log("wordwrap "+wordwrap2Columns(newCommDesc[k],30));
				finalcommDesc = finalcommDesc + wordwrap2Columns(newCommDesc[k],30)+ '\n';
			}
		}
	}
	// remove trailing '\n'
	finalcommDesc = finalcommDesc.substring(0,finalcommDesc.length-1);
	//Added for D029259
	if($("#commodityDescription").val() != finalcommDesc)
		isBookingChanged ="Y";
	$("#commodityDescription").val(finalcommDesc);
}


function wordwrap2Columns( str, width ) {
	 
    var brk =  '\n';
    width = width || 75;
    var  cut = true;
 
    if (!str) { return str; }
 
    var regex = '.{1,' +width+ '}(\\s|$)' + (cut ? '|.{' +width+ '}|.+$' : '|\\S+?(\\s|$)');
 
    var result = str.match( RegExp(regex, 'g') );
    var output = "";
    for(var i=0;i<result.length;i++) {
    	console.log("i"+i+" ="+ result[i]+";");
    	result[i] = result[i].trim();
    	output += result[i];
    	if(i == (result.length-1)) {
    		// do nothing
    	} else if(i%2 == 0) {
    		output += " ";
    	} else {
    		output += "\n";
    	}
    	
    }
    
    return output;
}

// First line can only be width other lines can be second width.
function wordwrapfirstline( str, width, secondwidth) {
	 
    var brk =  '\n';
    width = width || 75;
    var  cut = true;
 
    if (!str) { return str; }
 
    var regex = '.{1,' +width+ '}(\\s|$)' + (cut ? '|.{' +width+ '}|.+$' : '|\\S+?(\\s|$)');
 
    var result = str.match( RegExp(regex, '') )[0];
    console.log(str.substring(result.length));
    
    return result.trim() + brk + wordwrap2Columns(str.substring(result.length),secondwidth);
 
}

function wordwrap( str, width ) {
	 
    var brk =  '\n';
    width = width || 75;
    var  cut = true;
 
    if (!str) { return str; }
 
    var regex = '.{1,' +width+ '}(\\s|$)' + (cut ? '|.{' +width+ '}|.+$' : '|\\S+?(\\s|$)');
 
    var result = str.match( RegExp(regex, 'g') );
    for(var i=0;i<result.length;i++) {
    	result[i] = result[i].trim();
    }
    
    return result.join( brk );
 
}


function calculateCube(){
 var reg3Number3DecimalPlaces = /^[0-9]{0,3}(\.[0-9]{1,3})?$/;
 var reg3Number = /^[0-9]{1,3}$/;
 var reg2Number = /^([0-9]{1,2})$/;
 if($.trim($('#unitOfMeasureSourceCode').val())=="M"){
	var length = $.trim($('#length').val());
    var width = $.trim($('#width').val());
    var height = $.trim($('#height').val());
 	if((length!="" && !reg3Number3DecimalPlaces.test(length)) || (width!="" && !reg3Number3DecimalPlaces.test(width)) || (height!="" && !reg3Number3DecimalPlaces.test(height))) {
       		return;
       	}
 } 
 else if($.trim($('#unitOfMeasureSourceCode').val())=="I"){
    var feetLength = $.trim($('#feetLength').val());
    var feetWidth = $.trim($('#feetWidth').val());
    var feetHeight = $.trim($('#feetHeight').val());
	if((feetLength!="" && !reg3Number.test(feetLength)) || (feetWidth!="" && !reg3Number.test(feetWidth)) || (feetHeight!="" && !reg3Number.test(feetHeight))) {
   		return;
   	}
	
	var inchesLength = $.trim($('#inchesLength').val());
    var inchesWidth = $.trim($('#inchesWidth').val());
    var inchesHeight = $.trim($('#inchesHeight').val());
	if(((inchesLength!="" && !reg2Number.test(inchesLength)) || (inchesWidth!="" && !reg2Number.test(inchesWidth)) || (inchesHeight!="" && !reg2Number.test(inchesHeight))) || ((inchesLength!="" && inchesLength<0) || (inchesWidth!="" && inchesWidth<0) || (inchesHeight!="" && inchesHeight<0)) || ((inchesLength!="" && inchesLength>11) || (inchesWidth!="" && inchesWidth>11) || (inchesHeight!="" && inchesHeight>11))) {
   		return;
   	}
 }
//added for	D025466
 $.ajax({
	url: _context+'/booking/freight/calculateCube?measurementSource='+$('#unitOfMeasureSourceCode').val()+'&length='+$('#length').val()+'&width='+$('#width').val()+'&height='+$('#height').val()+'&feetLength='+$('#feetLength').val()+'&inchesLength='+$('#inchesLength').val()+'&feetWidth='+$('#feetWidth').val()+'&inchesWidth='+$('#inchesWidth').val()+'&feetHeight='+$('#feetHeight').val()+'&inchesHeight='+$('#inchesHeight').val()+'&pieceCount='+$('#pieceCount').val(), 
	success: function(responseText){
		if(responseText.success){
			$('#cube').val(responseText.data);
		}
		else{
			$('#cube').val("");
		}
	}
 });
}

function scrollToCommodity(){
	var offset = accordianPostionCoordinates(4);
	window.scrollTo(offset.left, offset.top);
}

function addfreightEnabledAlertMessage(){
	var trade = $('#tradeCode option:selected').text();
	var customerGroup = $.trim($('#customerGroupId :selected').text());
	var loadService= $('#loadServiceCode :selected').val();
	var dischargeService = $('#dischargeServiceCode :selected').val();
	
	var message='';
	if(trade==null || trade==""){
		message+='Trade';
	}
	
	if(customerGroup==null || customerGroup=='' || customerGroup=='Select'){
		message+=(message==''?'Customer Group':', Customer Group');
	}
	
	if(loadService==null || loadService==""){
		message+=(message==''?'Load Service':' and Load Service');
	}
	
	if(dischargeService==null || dischargeService==""){
		if(message==''){
			message+='Discharge Service';
		}
		else if(message!=''){
			if(message.search('Load')>0){
				message = message.replace("Load Service", "Load");
				message+=' & Discharge Service';
			}
			else{
				if(message=='Load Service'){
					message=' Load & Discharge Service';
				}
				else{
					message+=' and Discharge Service';
				}
			}
		}
	}
	alert(message+" is required to add freight.");
}

function enableDisableCommodityIfTradeCustGrpLDGrpPresent(){
	commodityShowHide();
}

function commodityShowHide()
{
	if(!addFreightEnabled()){
		if($('#tariff').is(':visible'))
			$($('.booking-section')[4]).accordion('option', 'active', false);
		disableAccordian(4);
	}
	else
	{
		var status = $($('.booking-section')[4]).accordion('option', 'active');
		if ((typeof status == "boolean" && !status) || (status=="0" && !$('#tariff').is(':visible'))) {
			var xCoordinate = window.pageXOffset;
			var yCoordinate = window.pageYOffset;
			$($('.booking-section')[4]).accordion("enable");
			/*var disabled = $($('.booking-section')[4]).accordion("option", "disabled");
			if(disabled)
			{
				$($('.booking-section')[4]).accordion("enable");
				loadTCNGrid();			
				loadHazGrid();
				if(!equipmentUpdated)
				loadEquipmentGrid();
			}*/
			$($('.booking-section')[4]).accordion('option', 'active', 0);
			showFreight($.trim($('#customerGroupId :selected').text()));
			
			setTimeout(function(){
				if($('#tariff').is(':visible'))
				{
					if(!$("#equipmentGrid").is(':visible'))
					{
						if(!defaultHidden || 
							($("#equipmentGrid").getGridParam("reccount")!=undefined &&
									$("#equipmentGrid").getGridParam("reccount")>0))
						{
							$(".HeaderButton", ("#gview_equipmentGrid")).click();
							//hideEquipmentInlineEditDelete();
							//showSelectedCharacteristics();
						}
					}
					else if($("#equipmentGrid").is(':visible'))
					{
						if(defaultHidden && ($("#equipmentGrid").getGridParam("reccount")==undefined || 
								$("#equipmentGrid").getGridParam("reccount")==0))
							$(".HeaderButton", ("#gview_equipmentGrid")).click();
						/*else
						{
							//hideEquipmentInlineEditDelete();
							//showSelectedCharacteristics();
						}*/
					}
				}
				window.scrollTo(xCoordinate, yCoordinate);
			}, 250);
		}
	}
}

function loadFreightGrids()
{
	var xCoordinate = window.pageXOffset;
	var yCoordinate = window.pageYOffset;
	
	loadEquipmentGrid();
	loadTCNGrid();			
	loadHazGrid();
	
	setTimeout(function(){
		if($('#tariff').is(':visible'))
		{
			if(!$("#equipmentGrid").is(':visible'))
			{
				if(!defaultHidden || 
					($("#equipmentGrid").getGridParam("reccount")!=undefined &&
							$("#equipmentGrid").getGridParam("reccount")>0))
				{
					$(".HeaderButton", ("#gview_equipmentGrid")).click();
					//hideEquipmentInlineEditDelete();
					//showSelectedCharacteristics();
				}
			}
			else if($("#equipmentGrid").is(':visible'))
			{
				if(defaultHidden && ($("#equipmentGrid").getGridParam("reccount")==undefined || 
						$("#equipmentGrid").getGridParam("reccount")==0))
					$(".HeaderButton", ("#gview_equipmentGrid")).click();
				/*else
				{
					hideEquipmentInlineEditDelete();
					//showSelectedCharacteristics();
				}*/
			}
		}
		window.scrollTo(xCoordinate, yCoordinate);
	}, 250);
}

function validateFreightFieldsOnSave(){
	// Commodity Accordion has already been expanded in booking save section
	if($('#estimatedDropOffDate').is(':visible')){
		var estShipDate = $('#estShip').text();
		if(estShipDate!='' && new Date($('#estimatedDropOffDate').val()).getTime() > new Date(estShipDate).getTime()){
			$('#maintainBookingRouting').hide();
			$('#estimatedDropOffDate').validationEngine('showPrompt', '* Est Drop Off date cannot be greater than Est Ship date.', 'error', 'topRight', true);
			return false;
		}
	}
	
	if($('#tariff').val() != $('#tariffCheck').val() && $("#isAutobill").val()=="true") {
		$('#tariff').validationEngine('showPrompt', 'Tariff did not load correctly, please re-enter', 'error', 'topRight', true);
		return false;
	}
	
	return true;
}
 
function freightTabSequence()			
{
	
	$('#tariff').bind('keydown', function(evt) {
		 var theEvent = evt || window.event;
		  var key = theEvent.keyCode || theEvent.which;
		  if(evt.shiftKey && (key == 9 || key=='9')){
			  $('#loadServiceCode').focus();
		  }
		  else if(key == '9'){
			  if($.trim($('#tariff').val()) == '' || $.trim($('#tariffItemNumber').val()) == '') {
					$('#tariffItemNoteNumber').attr('disabled', true);
				} else {
					$('#tariffItemNoteNumber').attr('disabled', false);
					//$('#tariff').trigger('change');
				}
				  $('#tariffCommodityDescription').focus();
				  return false;			  				 
		  }
		  return true;
	});
	$('#tariffCommodityDescription').bind('keydown', function(evt) {
		 var theEvent = evt || window.event;
		  var key = theEvent.keyCode || theEvent.which;
		  if(theEvent.shiftKey && key == '9'){
			  $('#tariff').focus();
			  return false;
		  }
		  else if(key == '9'){
			  $('#tariffItemNumber').focus();
			  return false;
		  }
		  return true;
	});
	
	$('#tariffItemNumber').bind('keydown', function(evt) {
		 var theEvent = evt || window.event;
		  var key = theEvent.keyCode || theEvent.which;
		  if(theEvent.shiftKey && key == '9'){
			  $('#tariffCommodityDescription').focus();
			  return false;
		  }
		  else if(key == '9'){
			  if($.trim($('#tariff').val()) == '' || $.trim($('#tariffItemNumber').val()) == '') {
					$('#tariffItemNoteNumber').attr('disabled', true);
				} else {
					$('#tariffItemNoteNumber').attr('disabled', false);
				}
			  if($('#tariffItemNoteNumber').is('disabled') || $('#tariffItemNoteNumber').attr('disabled')==true  || $('#tariffItemNoteNumber').attr('disabled') == 'disabled')
				  $('#commodityCode').focus();
			  else
				  $('#tariffItemNoteNumber').focus();
			  return false;
		  }
		  return true;
	});
	
	$('#tariffItemNoteNumber').bind('keydown', function(evt) {
		 var theEvent = evt || window.event;
		  var key = theEvent.keyCode || theEvent.which;
		  if(theEvent.shiftKey && key == '9'){
			  $('#tariffItemNumber').focus();
			  return false;
		  }
		  else if(key == '9'){
			  $('#commodityCode').focus();
			  return false;
		  }
		  return true;
	});
	$('#commodityCode').bind('keydown', function(evt) {
		 var theEvent = evt || window.event;
		  var key = theEvent.keyCode || theEvent.which;
		  if(theEvent.shiftKey && key == '9'){
			  if($('#tariffItemNoteNumber').is('disabled') || $('#tariffItemNoteNumber').attr('disabled')==true  || $('#tariffItemNoteNumber').attr('disabled') == 'disabled')
				  $('#tariffItemNumber').focus();
			  else
				  $('#tariffItemNoteNumber').focus();
			  return false;
		  }
		  else if(key == '9'){
			  $('#pieceCount').focus();
			  return false;
		  }
		  return true;
	});
	$('#pieceCount').bind('keydown', function(evt) {
		 var theEvent = evt || window.event;
		  var key = theEvent.keyCode || theEvent.which;
		  if(theEvent.shiftKey && key == '9'){
			  $('#commodityCode').focus();
			  return false;
		  }
		  else if(key == '9'){
			  $('#pieceUnitOfMeasureCode').focus();
			  return false;			  				 
		  }
		  return true;
	});
	$('#pieceUnitOfMeasureCode').bind('keydown', function(evt) {
		 var theEvent = evt || window.event;
		  var key = theEvent.keyCode || theEvent.which;
		  if(theEvent.shiftKey && key == '9'){
			  $('#pieceCount').focus();
			  return false;
		  }
		  else if(key == '9'){
			  $('#weight').focus();
			  return false;			  				 
		  }
		  return true;
	});
	$('#weight').bind('keydown', function(evt) {
		 var theEvent = evt || window.event;
		  var key = theEvent.keyCode || theEvent.which;
		  if(theEvent.shiftKey && key == '9'){
			  $('#pieceUnitOfMeasureCode').focus();
			  return false;
		  }
		  else if(key == '9'){
			  $('#cube').focus();
			  return false;			  				 
		  }
		  return true;
	});
	$('#cube').bind('keydown', function(evt) {
		 var theEvent = evt || window.event;
		  var key = theEvent.keyCode || theEvent.which;
		  if(theEvent.shiftKey && key == '9'){
			  $('#weight').focus();
			  return false;
		  }
		  else if(key == '9'){
			  $('#commodityDescription').focus();
			  return false;			  				 
		  }
		  return true;
	});
	$('#commodityDescription').bind('keydown', function(evt) {
		 var theEvent = evt || window.event;
		  var key = theEvent.keyCode || theEvent.which;
		  if(theEvent.shiftKey && key == '9'){
			  $('#cube').focus();
			  return false;
		  }
		  else if(key == '9'){
			  $('#unitOfMeasureSourceCode').focus();
			  return false;			  				 
		  }
		  return true;
	});
	$('#currentCommodityLine').bind('keydown', function(evt){		
		var theEvent = evt || window.event;
		  var key = theEvent.keyCode || theEvent.which;
		  if(theEvent.shiftKey && key == '9'){
			  $('#unitOfMeasureSourceCode').focus();
			  return false;			  				 
		  }
		  else if(key == '9') {
			   if($('#totalCommodityLines').text() > 1) {
					  $('#previousFreight').focus();
				  } else {
					  $('#clearFreight').focus();
				  }
			  return false;
		  }
		  
		 return true;
	});
	$('#clearFreight').bind('keydown', function(evt) {			
		var theEvent = evt || window.event;
		  var key = theEvent.keyCode || theEvent.which;
		  if(evt.shiftKey && (key == 9 || key=='9')){			
			  if($('#totalCommodityLines').text() > 1) {
				  $('#updateFreight').focus();
			  } else {
				  $('#currentCommodityLine').focus();
			  }
			  return false;
		  }
		 return true;
	});
	$('#deleteFreight').bind('keydown', function(evt) {			
		var theEvent = evt || window.event;
		  var key = theEvent.keyCode || theEvent.which;
		  if(evt.shiftKey && (key == 9 || key=='9')){			
			  $('#addFreight').focus();
			  return false;
		  }
		  else if(key == '9'){
			  if($('#equipmentGrid').is(':visible')){
				  $('#cb_equipmentGrid').focus();
			  }
			  else{
				 /* $('#equipmentGrid').focus();*/
				  $(".ui-jqgrid-titlebar-close",$("#equipmentGrid")[0].grid.cDiv).focus();
			  }
			  return false;			  				 
		  }
		 return true;
	});
}

function openRateBase(){
	window.open('https://matson.ratebase.net/rateBASE/servlet/loginServlet?user_id=matspass&password=mats01');
}

function enableDisableNote() {
	
	if($.trim($('#tariff').val()) == '' || $.trim($('#tariffItemNumber').val()) == '') {
		$('#tariffItemNoteNumber').attr('disabled', true);
	} else {
		$('#tariffItemNoteNumber').attr('disabled', false);
	}
}

function checkIfAnyFreightFieldHasValue(){
	
	if($("#equipmentGrid").getGridParam("reccount")>0){
		return true;
	}
	
	if($("#tcnGrid").getGridParam("reccount")>0){
		return true;
	}
	
	if($("#hazGrid").getGridParam("reccount")>0){
		return true;
	}
	
	if($.trim($('#tariff').val())!=''){
		return true;
	}
	
	if($.trim($('#tariffCommodityDescription').val())!=''){
		return true;
	}
	
	if($.trim($('#tariffItemNumber').val())!=''){
		return true;
	}
	
	if($.trim($('#tariffItemNumber').val())!=''){
		return true;
	}
	
	if($.trim($('#tariffItemNoteNumber').val())!=''){
		return true;
	}
	
	if($.trim($('#commodityCode').val())!=''){
		return true;
	}
	
	if($.trim($('#pieceCount').val())!=''){
		return true;
	}
	
	if($.trim($('#pieceUnitOfMeasureCode').val())!=''){
		return true;
	}
	
	if($.trim($('#weight').val())!=''){
		return true;
	}
	
	if($.trim($('#cube').val())!=''){
		return true;
	}
	
	if($.trim($('#commodityDescription').val())!=''){
		return true;
	}
	
	if($.trim($('#unitOfMeasureSourceCode').val())=='I'){
		if($.trim($('#feetLength').val())!=''){
			return true;
		}
		
		if($.trim($('#inchesLength').val())!=''){
			return true;
		}
		
		if($.trim($('#feetWidth').val())!=''){
			return true;
		}
		
		if($.trim($('#inchesWidth').val())!=''){
			return true;
		}
		
		if($.trim($('#feetHeight').val())!=''){
			return true;
		}
		
		if($.trim($('#inchesHeight').val())!=''){
			return true;
		}
	}
	else if($.trim($('#unitOfMeasureSourceCode').val())=='M'){
		if($.trim($('#length').val())!=''){
			return true;
		}
		
		if($.trim($('#width').val())!=''){
			return true;
		}
		
		if($.trim($('#height').val())!=''){
			return true;
		}
	}
	
	if($('#freight\\.isOversize1').is(':checked')){
		return true;
	}
	
	if($('#freight\\.isRoRo1').is(':checked')){
		return true;
	}
	
	/*if($.trim($('#plannedArrivalDate').val())!=''){
		return true;
	}*/
	
	if($.trim($('#vinNumber').val())!=''){
		return true;
	}
	
	if($.trim($('#vehicleYear').val())!=''){
		return true;
	}
	
	if($.trim($('#vehicleMake').val())!=''){
		return true;
	}
	
	if($.trim($('#vehicleModel').val())!=''){
		return true;
	}
	
	if($.trim($('#vehicleLicenseNumber').val())!=''){
		return true;
	}
	
	if($.trim($('#vehicleLicenseStateCode').val())!=''){
		return true;
	}
	
	if($.trim($('#vehicleColor').val())!=''){
		return true;
	}
	
	if($.trim($('#vehicleDescription').val())!=''){
		return true;
	}
	
	if($.trim($('#estimatedDropOffDate').val())!=''){
		return true;
	}
	
	/*if($.trim($('#bkdVessel').val())!=''){
		return true;
	}
	
	if($.trim($('#bkdVoyage').val())!=''){
		return true;
	}
	
	if($.trim($('#bkdDirection').val())!=''){
		return true;
	}*/
	
	if($.trim($('#specialInstruction').val())!=''){
		return true;
	}
	
	return false;
}

function setAutoBillMandatory(){
	if($('#shipmentNumber').val() != '' && $('#bookingTypeCode').val()=='B' && 
			($.trim($('#quoteVNConcat').val())=='' || ($.trim($('#quoteVNConcat').val())!='' &&  
					$("#isConstructedQuote").val()!='Y'))){
		if($('#isAutobill :selected').val()=="true"){
			if($('#totalCommodityLines').text()!='' && $('#totalCommodityLines').text()!="0"){
				setMandatoryTariffCmdDesc();
			}
			/*else{
				resetMandatoryTariffCmdDesc();
				resetTariffDetails();
			}*/
			
		}
	}
}

function modifyFrtOnCstmrGrpLoadDschGrpCodeChange(changeSource, lastCustomerGroup, currentCustomerGroup, lastLoadDschGroup, currentLoadDschGroup, isAllowBookingUnit){
	if(commodityTypeChanged(changeSource, lastCustomerGroup, currentCustomerGroup, lastLoadDschGroup, currentLoadDschGroup, isAllowBookingUnit) && (($('#totalCommodityLines').text()!='' 
		&& $('#totalCommodityLines').text()!='0') || (($('#totalCommodityLines').text()=='' || $('#totalCommodityLines').text()=='0') && checkIfAnyFreightFieldHasValue()))){
		if(!addFreightEnabled()){
			if ($('#tariff').is(':visible')) {
				$($('.booking-section')[4]).accordion('option', 'active', false);
			}
			//var disabled = $($('.booking-section')[4]).accordion("option", "disabled");
			//if (!disabled) {
				disableAccordian(4);
			//}
			return;
		}
		else{
			if ($('#tariff').is(':visible')) {
				$($('.booking-section')[4]).accordion('option', 'active', false);
			}
		}
		blockUI();
		$.ajax({
			url: _context +"/booking/freight/modifyFrtOnCstmrGrpLoadDschGrpCodeChange?customerGroup="+$('#customerGroupId :selected').text()+"&loadDschGroup="+$.trim($('#loadDschServiceGroupCode').val())+"&isAllowBookingUnit="+$('#isAllowBookingUnit').val(),
			success: function(responseText){
				if(responseText.success){
					if(povChanged=="Y"){//Defect-25516
						clearFreight();
						$('#hazGrid').html('');
						$('#maintainBookingCommodityId').html('');
						$('#actualTotalChargeAmount').html('');
						$('#actualTotalChargeAmount').html('');
						}
					$('#equipmentGrid').trigger("reloadGrid");
					$('#hazGrid').trigger("reloadGrid");
					$('#tcnGrid').trigger("reloadGrid");
					
					var isPOV = (($('#customerGroupId :selected').text()==POV_NAME ||$('#customerGroupId :selected').text()==ALASKA_POV_NAME )&& $.trim($('#loadDschServiceGroupCode').val())=="AU");
					var isConventional = ($.trim($('#loadDschServiceGroupCode').val())=="CON" || $.trim($('#loadDschServiceGroupCode').val())=="LCL");
					if(!isPOV && !isConventional){
						$('#vinNumber').val('');
						$('#vehicleYear').val('');
						$('#vehicleMake').val('');
						$('#vehicleModel').val('');
						$('#vehicleLicenseNumber').val('');
						$('#vehicleLicenseStateCode').val('');
						$('#vehicleColor').val('');
						$('#vehicleDescription').val('');
						$('#estimatedDropOffDate').val('');
						$('#bkdVessel').val('');
						$('#bkdVoyage').val('');
						$('#bkdDirection').val('');
						$('#recdVessel').val('');
						$('#recdVoyage').val('');
						$('#recdDirection').val('');
						$('#specialInstruction').val('');
					}
				}
				else{
					//iterated = true;
					//$($('.booking-section')[4]).accordion("enable");
					$('#msgDiv').html('<div class="message_error">'+responseText.messages.error[0]+'</div>');
					triggerErrorMessageAlert('msgDiv');
				}
				iterated = false;
				$.unblockUI();
			}
		});
	}
	else{
		var status = checkIfAnyFreightFieldHasValue();
		//alert("Status: " + status);
		if (!status) {
			if ($('#tariff').is(':visible')) {
				if (!addFreightEnabled()) {
					$($('.booking-section')[4]).accordion('option', 'active', false);
					disableAccordian(4);
				} else {
					showFreight($.trim($('#customerGroupId :selected').text()));
				}
			}
			if (!$('#tariff').is(':visible')) {
				commodityShowHide();
			}
		}
	}
	$('#lastCustomerGroupId').val($('#customerGroupId').val());
	
	if((currentCustomerGroup==GOVERNMENT_NAME) && (currentLoadDschGroup=='CON' || currentLoadDschGroup=='LCL') && isAllowBookingUnit=="Y"){
		if($("#tcnGrid").getGridParam("records")!=0)
		setIBSCodeMandatory();
	}
	else{
		resetIBSCode();
	}
}

function commodityTypeChanged(changeSource, lastCustomerGroup, currentCustomerGroup, lastLoadDschGroup, currentLoadDschGroup, isAllowBookingUnit){
	if(changeSource=='customerGroup'){
		if(lastCustomerGroup!='Select' && currentCustomerGroup=='Select'){
			return true;
		}
		if((lastCustomerGroup!=POV_NAME && currentCustomerGroup==POV_NAME && currentLoadDschGroup=="AU")
		|| (lastCustomerGroup!=ALASKA_POV_NAME && currentCustomerGroup==ALASKA_POV_NAME && currentLoadDschGroup=="AU")){
			povChanged="Y";//Defect-25516
			return true;
		}
		if((lastCustomerGroup==POV_NAME && currentCustomerGroup!=POV_NAME && currentLoadDschGroup=="AU")
		|| (lastCustomerGroup==ALASKA_POV_NAME && currentCustomerGroup!=ALASKA_POV_NAME && currentLoadDschGroup=="AU")){
			povChanged="Y";
			return true;
		}
		if(lastCustomerGroup!=GOVERNMENT_NAME && currentCustomerGroup==GOVERNMENT_NAME && (currentLoadDschGroup=='CON'||currentLoadDschGroup=='LCL' ) && isAllowBookingUnit=="Y"){
			return true;
		}
		if(lastCustomerGroup==GOVERNMENT_NAME && currentCustomerGroup!=GOVERNMENT_NAME && (currentLoadDschGroup=='CON'||currentLoadDschGroup=='LCL') && isAllowBookingUnit=="Y"){
			return true;
		}
	}
	else if(changeSource=='loadDschGroup'){
		if(lastLoadDschGroup!='' && currentLoadDschGroup==''){
			return true;
		}
		if(lastLoadDschGroup!='' && lastLoadDschGroup!='CY' && currentLoadDschGroup=='CY'){
			return true;
		}
		if(lastLoadDschGroup!='' && lastLoadDschGroup!='CON' && currentLoadDschGroup=='CON'){
			return true;
		}
		if(lastLoadDschGroup!='' && lastLoadDschGroup!='LCL' && currentLoadDschGroup=='LCL'){
			return true;
		}
		if(lastLoadDschGroup!='' && lastLoadDschGroup!='AU' && currentLoadDschGroup=='AU' && (currentCustomerGroup==POV_NAME || currentCustomerGroup==ALASKA_POV_NAME )){
			//Defect-25528-to clear commodity grid vlaues on changing the booking to POV booking
			povChanged="Y";
			return true;
		}
		if(lastLoadDschGroup!='' && lastLoadDschGroup!='AU' && currentLoadDschGroup=='AU' && (currentCustomerGroup!=POV_NAME ||currentCustomerGroup!=ALASKA_POV_NAME  )){
			return true;
		}
	}
	return false;
}

function freightDeleteCheckOnBookingSave(){
	
	if(povCheckOnBookingSave()=='failure'){
		return 'failure';
	}
	
	var freightDeleteCheckStatus = 'success';
	var isCustomerGroupValueSelect = $('#customerGroupId option[value='+$('#customerGroupId').val()+']').text()=='Select'?true:false;
	var isLoadDschGroupBlank = $.trim($('#loadDschServiceGroupCode').val())==''?true:false;
	if(((isCustomerGroupValueSelect)||(isLoadDschGroupBlank)) && $('#totalCommodityLines').text()!='' && $('#totalCommodityLines').text()!='0'){
	var confirmMessage = '';
	if(isCustomerGroupValueSelect){
		confirmMessage = "Commodity(s) will be deleted as no customer group is present. Please confirm to proceed!";
	}
	else if(isLoadDschGroupBlank){
		confirmMessage = "Commodity(s) will be deleted as no load dischargde group is present. Please confirm to proceed!";
	}
	var isConfirm = confirm(confirmMessage);
	if(isConfirm){
		removeCommodities();
		if (!$('#tariff').is(':visible')) {
			disableAccordian(4);
		}
	}
	else{
		freightDeleteCheckStatus = 'failure';
	}
	return freightDeleteCheckStatus;
	}
}

function povCheckOnBookingSave(){
	var status = 'success';
	if($.trim($('#loadDschServiceGroupCode').val())=="AU"
	&& ($.trim($('#customerGroupId :selected').text())==POV_NAME || $.trim($('#customerGroupId :selected').text())==ALASKA_POV_NAME)){
		if($('#totalCommodityLines').text()!='' && $('#totalCommodityLines').text()!='0' && parseInt($.trim($('#totalCommodityLines').text()))>1){
			$('#msgDiv').html('<div class="message_error">Adding more than one commodity for customer group- POV is not allowed.</div>');
			triggerErrorMessageAlert('msgDiv');
			status = 'failure';
		}
	}
	return status;
}

function getFeetFromInches(inches) {
	if (inches == "") {
		inches = 0;
	}

	var extraFeet = 0;
	if (inches >=12) {
		remainingInches = inches % 12;
		extraFeet = Math.round((inches-remainingInches)/ 12);
	}
	return extraFeet;
}

function getModInches(inches) {
	if (inches == "") {
		inches = 0;
	}

	if (inches >=12) {
		inches = Math.round(inches % 12);
	}
	return inches;
};var currentRowId='';
var updateEquipmentErrorOccurred = false;
var equipmentUpdated = false;
/* Users will not add equipment to most conventional bookings. Collapse equipment grid as the standard and user will expand as needed */
var defaultHidden = false;
var somethingChanged; // Added this to remove grid delete error, can remove it if it is in the way.

$(function() {
	$("#maintain_characteristics").dialog({
		autoOpen : false,
		width : 540,
		modal : true,
		title: "Maintain Equipment Characteristics",
		open : function()
		{
			createEquipmentCharacteristicGrid();
		},
		close : function() {
			$('#currentEquipmentChars').val('');
			$('#characteristicsMsgDiv').html('');
			$('#gridIdForCharacteristic').jqGrid('GridUnload');
		}
	});
});
//D031125: 	Implement design for KFF Temperature and Dual Temperature Refers for the Alaska trade
function createEquipmentGrid(){
	equipmentUpdated = false;
	currentRowId='';
	var equipmentColNames = ['Id', 'Quantity', 'Type', 'Size','Height', 'E/F', 'Temp', 'F/C', 'Temp2', 'Characteristics', 'Actions'];
	var equipmentColModels = [
	               {name:'equipmentSeqNo', index:'equipmentSeqNo', editable:false, hidden:true},	     
	               {name:'quantityRequested', index:'quantityRequested', width:70, editable:true, 
	            	   editoptions: {
	            		   maxlength: 5,
	            		   dataEvents: [
	            		                {
	            		                    type: 'change',
	            		                    fn: function(e) {
	            		                    	//var newCodeValue = $(e.target).val();
            		                            // inline editing
            		                            var row = $(e.target).closest('tr.jqgrow');
            		                            var rowId = row.attr('id');
	            		                    	disableAddDelete(rowId);
	            		                    	if(rowId==undefined){
	            		                    		if($.trim($('#quantityRequested').val())==''){
	            		                    			$('#quantityRequested').val('');
		            		                    	}
            		                            }
	            		                    	else{
	            		                    		if($.trim($('#'+rowId+'_quantityRequested').val())==''){
	            		                    			$('#'+rowId+'_quantityRequested').val('');
		            		                    	}
	            		                    	}
	            		                    }
	            		                }
	            		            ]
	            	   }, 
	            	   editrules:{
	            		   custom:true,
	            		   custom_func:function (value, colname) {
	            				   if($.trim(value)!='undefined' && $.trim(value)!=null && $.trim(value)!=''){
	            					   if($.trim(value)<0){
			            				   return [false, colname+": Must be zero or greater than zero."];
			            			   }
		            				   else if(!/^[0-9\ ]+$/.test($.trim(value)) || $.trim(value)>32767){
			            				   return [false, colname+": Only numerics allowed between range[0-32767]."];
			            			   }
			            			   else{
			            				   return [true,""];
			            			   }
	            				   }
	            				   else{
		            				   return [true,""];
		            			   }
	            			   /*}*/
	            		   }
            	}},
	               {name:'eqpType',index:'eqpType', width:45, editable:true, 
            		editoptions: {
         			   size:1, 
         			   maxlength: 1,
         			   			   dataEvents: [
	            		                {
	            		                    type: 'change',
	            		                    fn: function(e) {
	            		                    	var row = $(e.target).closest('tr.jqgrow');
            		                            var rowId = row.attr('id');
	            		                    	disableAddDelete(rowId);
	            		                    }
	            		                },
	            		                    {
 	            		                	type: 'keyup', fn: function(event){
 	            		                		var el = $(this);
 	            		                		  		
 	            		                		var keyCode=event.keyCode;
 	            		                		if(keyCode==32 || (48<=keyCode && keyCode<=57)
	 	            		                				|| (65<=keyCode && keyCode<=90) || (96<=keyCode && keyCode<=107) 
	 	            		                				|| (109<=keyCode && keyCode<=111))
	 	            		                		{
 	            		                			  	var maxlength = $(el).attr('maxlength'); // get maxlength value
 	            		                			     var inputlength = $(el).val().length; // get the length of the text
 	            		                			     
 	            		                			     if ( inputlength >= maxlength ){ // if the text is equal of more than the max length
 	            		                			    
 	            		                			    $(event.target).closest('td').next().find('input').focus();
 	            		                			    	 	
 	            		                			     } 
 	            		                			}
 	            		                	}
 	            		                    }
	            		            ]
         			   },
	            	   editrules:{
	                		required:true,
	                		custom:true,
	                		custom_func:function (value, colname) {
	                			if(!/^[a-zA-Z]+$/.test($.trim(value))){
	                				return [false, colname+": Only alphabets allowed."];
	                			}
	                			else{
									return [true,""];
								}
	                		}
	                	}},
	               {name:'eqpSize',index:'eqpSize', width:45, editable:true, 
	                		editoptions: {
	                			size:2, 
	                			maxlength:2,
	                			dataEvents: [
	 	            		                {
	 	            		                    type: 'change',
	 	            		                    fn: function(e) {
	 	            		                    	var row = $(e.target).closest('tr.jqgrow');
	            		                            var rowId = row.attr('id');
	 	            		                    	disableAddDelete(rowId); 
	 	            		                    }
	 	            		                	},
	 	            		                    {
	 	            		                	type: 'keyup', fn: function(event){
	 	            		                		var el = $(this);
	 	            		                		
	 	            		                		var keyCode=event.keyCode;
	 	            		                		if(keyCode==32 || (48<=keyCode && keyCode<=57)
		 	            		                				|| (65<=keyCode && keyCode<=90) || (96<=keyCode && keyCode<=107) 
		 	            		                				|| (109<=keyCode && keyCode<=111))
		 	            		                		{	
	 	            		                		var maxlength = $(el).attr('maxlength'); // get maxlength value
	 	            		                			     var inputlength = $(el).val().length; // get the length of the text
	 	            		                			     
	 	            		                			     if ( inputlength >= maxlength ){ // if the text is equal of more than the max length
	 	            		                			    
	 	            		                			    $(event.target).closest('td').next().find('input').focus();
	 	            		                			    	 	
	 	            		                			     } 
	 	            		                		}
	 	            		                	}
	 	            		                    }
	 	            		                
	 	            		            ]
	                			},  
		                	editrules:{
		                		/*required:true,*/
		                		custom:true,
		                		custom_func:function (value, colname) {
		                			if(($('#bookingTypeCode').val()=='B' && $.trim($('#shipmentNumber').val())=='' && $.trim(value)!='') || ($('#bookingTypeCode').val()=='B' && $.trim($('#shipmentNumber').val())!='') || ($('#bookingTypeCode').val()=='T' && $.trim(value)!='')){
			                			var tradeCode = $('#tradeCode').val();
			                			var portOfDischarge = $('#destinationPortCityCode').val();
			                			if($.trim(value)==''){
			                				return [false, colname+": Field is required."];
			                			}
			                			else if(!/^[0-9]+$/.test($.trim(value))){
			                				return [false, colname+": Only numerics allowed between range[0-99]."];
			                			}
			                			else if($.trim(value)==24 && (tradeCode=='G' || tradeCode=='F')){
				            				return [false, colname+": 24' equipment length is not allowed when the trade is G or F."];
										}
			                			else if($.trim(value)==45 && (portOfDischarge=='PUX' || portOfDischarge=='YAP'|| portOfDischarge=='UUK' || portOfDischarge=='PNP')){
			                				return [false, colname+": 45' equipment length is not allowed for port of discharge- PUX, YAP, UUK or PNP."];
			                			}
			                			else{
											return [true,""];
										}
		                			}
		                			else{
										return [true,""];
									}
		                		}
		                	}, formatter:formatZeroToSpace},
		            {name:'eqpHeight', index:'eqpHeight', width:50, editable:true, 
		                		editoptions: {
		                			size:1, 
		                			maxlength: 1,
		                			dataEvents: [
		 	            		                {
		 	            		                    type: 'change',
		 	            		                    fn: function(e) {
		 	            		                    	this.value = this.value.replace(/\s/g, "");
		 	            		                    	var row = $(e.target).closest('tr.jqgrow');
		            		                            var rowId = row.attr('id');
		 	            		                    	disableAddDelete(rowId);
		 	            		                    }
		 	            		                },
		            		                    {
		 	            		                	type: 'keyup', fn: function(event){
		 	            		                		var el = $(this);
		 	            		                		//D029611: Do not allow space char
		 	            		                		var keyCode=event.keyCode;
		 	            		                		if(keyCode == 32){
		 	            		                			this.value = this.value.replace(/\s/g, "");
		 	            		                			return false;
		 	            		                		}
		 	            		                		if((48<=keyCode && keyCode<=57)
 		 	            		                				|| (65<=keyCode && keyCode<=90) || (96<=keyCode && keyCode<=107) 
 		 	            		                				|| (109<=keyCode && keyCode<=111))
 		 	            		                		{	
		 	            		                		var maxlength = $(el).attr('maxlength'); // get maxlength value
		 	            		                			     var inputlength = $(el).val().length; // get the length of the text
		 	            		                			     
		 	            		                			     if ( inputlength >= maxlength ){ // if the text is equal of more than the max length
		 	            		                			    $(event.target).closest('td').next().find('select').focus();
		 	            		                			    	 	
		 	            		                			     } 
		 	            		                		}
		 	            		                	}
		 	            		                    }
		 	            		            ]
		                			}},
		            {name:'emptyFullCode', index:'emptyFullCode', width:50, editable:true, editrules:{required:true}, edittype:"select", formatter:'select', 
		                				editoptions:{
		                					value:"F:F;E:E", 
		                					defaultValue:'F',
		                					dataEvents: [
		         	            		                {
		         	            		                    type: 'change',
		         	            		                    fn: function(e) {
		         	            		                    	var row = $(e.target).closest('tr.jqgrow');
		                    		                            var rowId = row.attr('id');
		         	            		                    	disableAddDelete(rowId);
		         	            		                    }
		         	            		                }
		         	            		            ]
		                				}},
		            {name:'temperature', index:'temperature', width:70, editable:true, 
    					editoptions: {
		                	maxlength: 5,
		                	dataEvents: [
	 	            		                {
	 	            		                    type: 'change',
	 	            		                    fn: function(e) {
	 	            		                    	var row = $(e.target).closest('tr.jqgrow');
	            		                            var rowId = row.attr('id');
	 	            		                    	disableAddDelete(rowId);
	 	            		                    }
	 	            		                }
	 	            		            ]
		                }, 
		                formatter:'spaceFormatter',
		            	editrules:{
	                		custom:true,
	                		custom_func:function (value, colname) {
	                			var tradeCode = $('#tradeCode').val();
	                			//Defect-25116-Added code to validate temperature when booking created from template
	                			if($('#bookingTypeCode').val()=='B' && ($.trim($('#bookingTemplateId').val())=='' || $.trim($('#shipmentNumber').val())!=''||$.trim($('#bookingTemplateId').val())!='')){
	                				var equipType = $.trim($("#"+currentRowId+"eqpType").val()).toUpperCase();
	                				if(tradeCode == 'A' && $.trim(value).toUpperCase()=='KFF' 
	                					&& (equipType == 'R' || equipType == 'D' || equipType == 'I')){
	                					return [true,""];
	                				}
	                				if(equipType != 'R' && $.trim(value)!=''){// && tradeCode != 'A'){
			            				return [false, colname+": This is valid only for refrigerated equipment."];
									}
	                				/*if(tradeCode == 'A' && $.trim($("#"+currentRowId+"eqpType").val()).toUpperCase()!='R' 
	                					&& $.trim(value)!='' && $.trim(value).toUpperCase()!='KFF'){
	                					return [false, colname+": This is valid only for refrigerated equipment."];
	                				}*/
	                				
	                				if($.trim(value).toUpperCase()=='AMB' || $.trim(value).toUpperCase()=='WA'){
	                					return [true,""];
	                				}
	                				
	                				var invalidTempMsg = "This is invalid.";
		                			var isTempFirstLetterPlusMinusDot = /^[+-.]$/;
		                			var isTempFirstLetterPlusDot = /^[+-](\.)$/;
		                			//alert("isTempFirstLetterPlusDot: " + isTempFirstLetterPlusDot.test(value));
		                			var regTemp = /^[+-]?[0-9]{0,2}(\.[0-9]{0,1})?$/;
		                			//alert("regTemp: " + regTemp.test(value));
		                			if(isTempFirstLetterPlusMinusDot.test($.trim(value))){
		                				return [false, colname+": "+invalidTempMsg];
		                			}
		                			if(isTempFirstLetterPlusDot.test($.trim(value))){
		                				return [false, colname+": "+invalidTempMsg];
		                			}
		                			if(!regTemp.test($.trim(value))){
		                				return [false, colname+": "+invalidTempMsg];
		                			}
		                			if($.trim($("#"+currentRowId+"eqpType").val())!='' && $.trim($("#"+currentRowId+"eqpType").val()).toUpperCase()=='R' && $("#"+currentRowId+"emptyFullCode").val()=='F' && $.trim(value)==''){
			            				return [false, colname+": This must be specified for refrigerated equipment."];
									}
			            			else{
										return [true,""];
									}
	                			}
	                			else{
	                				return [true,""];
	                			}
	                		}
	                	}
		            },
		            {name:'temperatureUnitOfMeasureCd', index:'temperatureUnitOfMeasureCd', width:50, editable:true, edittype:"select", 
		            	editoptions:{
		            		value:":;C:C;F:F",
		            		dataEvents: [
	 	            		                {
	 	            		                    type: 'change',
	 	            		                    fn: function(e) {
	 	            		                    	var row = $(e.target).closest('tr.jqgrow');
	            		                            var rowId = row.attr('id');
	 	            		                    	disableAddDelete(rowId);
	 	            		                    }
	 	            		                }
	 	            		            ]
		            	},
		            	editrules:{
	                		custom:true,
	                		custom_func:function (value, colname) {
	                			var tradeCode = $('#tradeCode').val();
	                			// D030132 removed exception for new booking from template
	                			if( $('#bookingTypeCode').val()=='B' ){
		                			var temp = $.trim($("#"+currentRowId+"temperature").val());
		                			var tempDual = $.trim($("#"+currentRowId+"temperatureDual").val());
		                			
		                			if(tradeCode != 'A' ){
	                					if($.trim(temp).toUpperCase()=='AMB' || $.trim(temp).toUpperCase()=='WA'){
		                					return [true,""];
		                				}
	                				}
		                			if(tradeCode == 'A'){
		                				if(((temp!='' && $.trim(temp).toUpperCase()!='AMB' && $.trim(temp).toUpperCase()!='WA' && $.trim(temp).toUpperCase()!='KFF' ) || 
		                						(tempDual!='' && $.trim(tempDual).toUpperCase()!='AMB' && $.trim(tempDual).toUpperCase()!='WA' && $.trim(tempDual).toUpperCase()!='KFF' )) && value==''){
				            				return [false, colname+": This must be specified for Temperature."];
										}
			                			else if((temp=='') && value!=''){
			                				return [false, colname+": This is valid only if Temperature is provided."];
			                			}
				            			else{
											return [true,""];
										}
		                			} else {
		                				if(temp!='' && value==''){
				            				return [false, colname+": This must be specified for Temperature."];
										}
			                			else if(temp=='' && value!=''){
			                				return [false, colname+": This is valid only if Temperature is provided."];
			                			}
				            			else{
											return [true,""];
										}
		                			}
	                			}
	                			else{
									return [true,""];
								}
	                		}
	                	}
		            },
		            {name:'temperatureDual', index:'temperatureDual', width:70, editable:true, 
    					editoptions: {
		                	maxlength: 5,
		                	dataEvents: [
	 	            		                {
	 	            		                    type: 'change',
	 	            		                    fn: function(e) {
	 	            		                    	var row = $(e.target).closest('tr.jqgrow');
	            		                            var rowId = row.attr('id');
	 	            		                    	disableAddDelete(rowId);
	 	            		                    }
	 	            		                }
	 	            		            ]
		                }, 
		                formatter:'spaceFormatter',
		            	editrules:{
	                		custom:true,
	                		custom_func:function (value, colname) {
	                			var tradeCode = $('#tradeCode').val();
	                			//Defect-25116-Added code to validate temperature when booking created from template
	                			if($('#bookingTypeCode').val()=='B' && ($.trim($('#bookingTemplateId').val())=='' || $.trim($('#shipmentNumber').val())!=''||$.trim($('#bookingTemplateId').val())!='')){
	                				var equipType = $.trim($("#"+currentRowId+"eqpType").val()).toUpperCase();
	                				if(tradeCode == 'A' && $.trim(value).toUpperCase()=='KFF' 
	                					&& (equipType == 'R' || equipType == 'D' || equipType == 'I')){
	                					return [true,""];
	                				}
	                				if(tradeCode == 'A' && equipType != 'R' && $.trim(value)!='' ){
	                					return [false, colname+": This is valid only for refrigerated equipment."];
	                				}
	                				
	                				if($.trim(value).toUpperCase()=='AMB' || $.trim(value).toUpperCase()=='WA'){
	                					return [true,""];
	                				}
	                				
	                				var invalidTempMsg = "This is invalid.";
		                			var isTempFirstLetterPlusMinusDot = /^[+-.]$/;
		                			var isTempFirstLetterPlusDot = /^[+-](\.)$/;
		                			//alert("isTempFirstLetterPlusDot: " + isTempFirstLetterPlusDot.test(value));
		                			var regTemp = /^[+-]?[0-9]{0,2}(\.[0-9]{0,1})?$/;
		                			//alert("regTemp: " + regTemp.test(value));
		                			if(isTempFirstLetterPlusMinusDot.test($.trim(value))){
		                				return [false, colname+": "+invalidTempMsg];
		                			}
		                			if(isTempFirstLetterPlusDot.test($.trim(value))){
		                				return [false, colname+": "+invalidTempMsg];
		                			}
		                			if(!regTemp.test($.trim(value))){
		                				return [false, colname+": "+invalidTempMsg];
		                			}
									return [true,""];
	                			}
	                			else{
	                				return [true,""];
	                			}
	                		}
	                	}
		            },
		            {name:'characteristics', index:'characteristics', width:310, editable:true, 
	                	/*edittype:'select', editoptions:{dataUrl:_context+'/booking/freight/getEqpRqtChars', multiple:true, style:'height:20px', defaultValue:' ',
		            	buildSelect:function(data){
			            		//alert("responseText: " + data);
			            		var responseText = jQuery.parseJSON(data);
			            		var s = '<select>';
			            		s += '<option value="Select">Select</option>';
			            		if (responseText.data && responseText.data.length) {
				            		for (var i = 0, l = responseText.data.length; i < l; i++) {
					            		var tariffTranslateCode = responseText.data[i].id.tariffTranslateCode;
					            		s += '<option value="' + tariffTranslateCode + '">' + tariffTranslateCode + '</option>';
				            		}
			            		}
			            		return s + "</select>";
		            		},*/
	                		editoptions:{readonly:true, 
		            		dataEvents: [
	 	            		                {
	 	            		                    type: 'change',
	 	            		                    fn: function(e) {
	 	            		                    	var row = $(e.target).closest('tr.jqgrow');
	            		                            var rowId = row.attr('id');
	 	            		                    	disableAddDelete(rowId);
	 	            		                    }
	 	            		                },
	 	            		                {
		 	            		                type: 'keydown',
			 	      		                    fn: function(event) {
			 	      		                    	  if (event.keyCode == 8) {
			 	      		                  	    	event.preventDefault();
			 	      		                  	    	return false;
			 	      		                  	    }
			 	      		                    }
	 	            		                }
	 	            		            ]	
		            	}/*,
		            	editrules:{
	                		custom:true,
	                		custom_func:function (value, colname) {
	                			if($('#bookingTypeCode').val()=='B' && ($.trim($('#bookingTemplateId').val())=='' || $.trim($('#shipmentNumber').val())!='')){
	                				var countSTOW = 0;
	                				var countVENT = 0;
	                				$.each(value.split(','), function(index, value1) {
	                				    if(value1.search('STOW')>=0){
	                				    	countSTOW = countSTOW + 1;
	                				    }
	                				    else if(value1.search('VENT')>=0){
	                				    	countVENT = countVENT + 1;
	                				    }
	                				});
	                				
	                				if(countSTOW>1){
	                					return [false, colname+": Only one of the STOWAD/STOWBD characteristic is allowed."];
	                				}
	                				else if(countVENT>1){
	                					return [false, colname+": Multiple VENT characteristics are not allowed."];
	                				}
	                				else{
	                					return [true,""];
	                				}
	                			}
	                			else{
									return [true,""];
								}
	                		}
	                	}*/
		            },
			   		{name:'actions', index:'actions', width:70, align:"center", editable:false, search:false, sortable:false, formatter:'actions', 
		            	formatoptions:{keys:false,
		            	delbutton : false, 
		            	editbutton:false,
			   		}}
			   	];
	
	jQuery.extend($.fn.fmatter , {
		spaceFormatter : function(cellvalue, options, rowdata) {
			return $.trim(cellvalue);
		}
	});

	var jsonReaderReference = {
			root:"rows",
			page:"page",
			total:"total",
			records:"records",
			repeatitems:false,
			cell:"cell",
			id:"equipmentSeqNo"
		};
	
	var lazy = false;
	
	var gatesCheetah = window.gatesCheetah || {};
	
	if (gatesCheetah && gatesCheetah.lazyLoadGrid === true) {
		var arrayLength = gatesCheetah.lazyGrids.length;
		for (var i = 0; i < arrayLength; i++) {
		    if (gatesCheetah.lazyGrids[i] === 'equipmentGrid') {
		    	lazy = true;
		    }
		}
	} 
	//D027890:multiple blank rows in Reference & Commodity
	var equipReadOnlyGrid = false;
	if(isCommodityDisplayOnly && !isCommodityModifiablePE){
		equipReadOnlyGrid = true;
	}
	
	$('#equipmentGrid').gatesGrid({
		lazy : lazy,
		caption: "Equipment",
		colNames: equipmentColNames,
		colModel: equipmentColModels,
		jsonReader: jsonReaderReference,
		height: "100%",
		autowidth: true,
		multiselect:true,
		hiddengrid: false,
		pager: '#equipmentGridPager',
		gatesOptions: {
			urls: {load: _context+'/booking/freight/loadEquipmentGrid', add: _context+'/booking/freight/addEquipment', 
				   edit: _context+'/booking/freight/updateEquipment', del: _context+'/booking/freight/deleteEquipment', 
				   delMultiple: _context+'/booking/freight/deleteEquipment'},
				   controls: {
						navBarAdd: false,
						navBarEdit: false,
						navBarDelete:true
				   },
				   readOnly:equipReadOnlyGrid,
				   loadComplete: equipmentGridLoadComplete,
				   delFunction: function() {
					   console.log('del function');
					   saveAllEquipments();
				   }
		}
	});
	
	$("#equipmentGrid").jqGrid({
	    ajaxRowOptions: {async:false}
	});
	
	/*$("#editAllEquipments").click(function(){
		editAllEquipments();
	});
	
	$("#saveAllEquipments").click(function(){
		saveAllEquipments();
	});*/
	
	$(".HeaderButton", ("#gview_equipmentGrid")).click(function(){
		$('table[aria-labelledby="gbox_equipmentGrid"] thead tr[id="FormError"] td').html("");
		$('table[aria-labelledby="gbox_equipmentGrid"] thead tr[id="FormError"]').hide();
		/*var xErrorCoordinate = window.pageXOffset;
		var yErrorCoordinate = window.pageYOffset;
		window.scrollTo(xErrorCoordinate, yErrorCoordinate);
		setTimeout(function(){
			if($("#equipmentGrid").is(':visible')){
				showSelectedCharacteristics();
			}
		}, 250);*/
	});
}

function unloadEquipmentGrid(){
	$('#equipmentGrid').jqGrid('GridUnload');
}

function loadEquipmentGrid(){
	$('#equipmentGrid').trigger("reloadGrid");
}
var addBound = false;
var deleteAddedRow = false;
var errorRowId;
var errorRowData;
var equipmentGridLoadComplete = function(){
	$('table[aria-labelledby="gbox_equipmentGrid"] thead tr[id="FormError"] td').html("");
	$('table[aria-labelledby="gbox_equipmentGrid"] thead tr[id="FormError"]').hide();
	currentRowId='';
	var tradeCode = $('#tradeCode').val();
	var grid = $("#equipmentGrid");
	var pos=getColumnIndexByName(grid,'temperatureDual');
	if(tradeCode != 'A'){	
		grid.jqGrid('hideCol', grid.getGridParam("colModel")[pos].name);
		$("#tr_equipmentSeqNo td:nth-child(11)").hide();
	} else {
		grid.jqGrid('showCol', grid.getGridParam("colModel")[pos].name);
		$("#tr_equipmentSeqNo td:nth-child(11)").show();
	}
	
	/*Booking Security*/
	if((isCommodityDisplayOnly && !isCommodityModifiablePE) || $("#bookingStatusCode").val()=='CANC'){
		$("#maintainBookingCommodity").gatesDisable();
		$('#tr_equipmentSeqNo').hide();
		$('#del_equipmentGrid').hide();
		$('#gview_equipmentGrid input').attr("disabled", true);
		$('#gview_equipmentGrid select').attr("disabled", true);
	}else{
		$('#gview_equipmentGrid input').attr("disabled", false);
		$('#gview_equipmentGrid select').attr("disabled", false);
		enableEquipmentAddDelete();
	}
	var xCoordinate = window.pageXOffset;
	var yCoordinate = window.pageYOffset;
	editAllEquipments();
	
	equipmentUpdated = false;
	if(!deleteAddedRow){
		resetEquipmentAddRow();
	}
	if(!addBound){
		$("#gbox_equipmentGrid #sData").click(function(e){
			if(!$('table[aria-labelledby="gbox_equipmentGrid"] thead tr[id="tr_equipmentSeqNo"] td a[id="sData"]').is(':visible'))
				e.preventDefault();
			else
			{
				//Call saveAllEquipments this only when there are no errors 
				if($('table[aria-labelledby="gbox_equipmentGrid"] thead tr[id="FormError"]').css('display') != 'table-row'){
					saveAllEquipments();
				}
				if(updateEquipmentErrorOccurred){
					deleteAddedRow = true;
				} else {
					deleteAddedRow = false;
				}
				freightModified = true;
				isBookingChanged = "Y";
				currentRowId = '';
				return true;
			}
		});
		addBound = true;
	}
	//D025714: 	Booking - adding and updating equipment not fully working - pressing + Add - error msgs not displaying for refrigerated equip
	//Delete added row when there is error in existing records.
	if(deleteAddedRow){
		var rowIDs = jQuery("#equipmentGrid").getDataIDs();
		var rowId = $('#equipmentGrid').getCell(rowIDs[rowIDs.length - 1], 'equipmentSeqNo');
		
		 var isSuccess = $('#equipmentGrid').jqGrid(
			   'saveRow', 
			   rowId, 
			   null, //onsuccessfunc
			   _context+'/booking/freight/deleteEquipment' //Url
	      );
		  if(isSuccess){
			$('#equipmentGrid').jqGrid('delRowData',rowId);
		  }
		//Restore error record data
		$("#"+errorRowId+"_quantityRequested").val(errorRowData[0]);
		$("#"+errorRowId+"_eqpType").val(errorRowData[1]);
		$("#"+errorRowId+"_eqpSize").val(errorRowData[2]);
		$("#"+errorRowId+"_eqpHeight").val(errorRowData[3]);
		$("#"+errorRowId+"_emptyFullCode").val(errorRowData[4]);
		$("#"+errorRowId+"_temperature").val(errorRowData[5]);
		$("#"+errorRowId+"_temperatureUnitOfMeasureCd").val(errorRowData[6]);
		$("#"+errorRowId+"_temperatureDual").val(errorRowData[7]);
		$("#"+errorRowId+"_characteristics").val(errorRowData[8]);
		//Re validate row
		var isSuccess = $('#equipmentGrid').jqGrid(
			   'saveRow', 
			   errorRowId, 
			   null, //onsuccessfunc
			   _context+'/booking/freight/updateEquipment' //Url
	    );
	}
	$('#equipmentGridPager .ui-pg-div').click(function(e){
		freightModified = true;
		isBookingChanged = "Y";
		currentRowId = '';
		return true;
	});
	
	$('#1_quantityRequested').blur();
	window.scrollTo(xCoordinate, yCoordinate);
	
	// Set accordian
	var rows = $('#equipmentGrid').jqGrid('getDataIDs');
	var display = "";
	var stowSelected = false;
	if($('#bookingTypeCode').val()!='B'){
		stowSelected = true;
	}
	for(var index=0;index<rows.length;index++) {
		var qnty = $("#"+rows[index]+"_quantityRequested").val();
		var type = $("#"+rows[index]+"_eqpType").val();
		var size = $("#"+rows[index]+"_eqpSize").val();
		var height = $("#"+rows[index]+"_eqpHeight").val();
		var charArray = $("#"+rows[index]+"_characteristics").val().split(", ");
		if(index != 0) display += ", ";
		display += qnty+"x "+type+size+height;
		//+$(dataFromTheRow.eqpSize).val()+$(dataFromTheRow.eqpHeight).val();
		if(tradeCode != 'A'){
			$("#"+rows[index]+"_temperatureDual").val("");
			//D031169: 	Priority Stow to have a new selection list only for Alaska
			var newChar = "";
			for (var i = 0; i < charArray.length; i++) {
				if (!$.trim(charArray[i]).match("STOW") ||  $.trim(charArray[i]) == "STOWAD" ||
						$.trim(charArray[i]) == "STOWBD") {
					if(newChar == ""){
						newChar = charArray[i];
					} else {
						newChar = newChar + ", " + charArray[i];
					}
				}
			}
			$("#"+rows[index]+"_characteristics").val(newChar);
		} else if(!stowSelected){
			for (var i = 0; i < charArray.length; i++) {
				if ($.trim(charArray[i]).match("STOW")
						//D033747: 	STOW on equipment line not updating top of booking page!
						//&& $.trim(charArray[i]) != "STOWAD"
						&& $.trim(charArray[i]) != "STOWBD") {
					$('#stowCharAlaska option[value="'+charArray[i]+'"]').attr('selected', 'selected');
					stowSelected = true;
					break;
				}
			}
		}
	}
	if(!stowSelected){
		$('#stowCharAlaska option[value=""]').attr('selected', 'selected');
	}
	
	if(display.length > 0) {
		$("#maintainBookingEquipmentId").html(" | "+display);
	} else {
		$("#maintainBookingEquipmentId").html("");
	}
	
	return true;
};

function typeValidation(value){
	if(!/^[a-zA-Z]+$/.test($.trim(value))){
		return false;
	}
	else{
		return true;
	}
}

function sizeValidation(value){
	var tradeCode = $('#tradeCode').val();
	var portOfDischarge = $('#destinationPortCityCode').val();
	if(!/^[0-9]+$/.test($.trim(value))){
		return false;
	}
	else if($.trim(value)==24 && (tradeCode=='G' || tradeCode=='F')){
		return false;
	}
	else if($.trim(value)==45 && (portOfDischarge=='PUX' || portOfDischarge=='YAP'|| portOfDischarge=='UUK' || portOfDischarge=='PNP')){
		return false;
	}
	else{
		return true;
	}
}

function editAllEquipments(){
	var rowIDs = jQuery("#equipmentGrid").getDataIDs();
	for (var i=0;i<rowIDs.length;i=i+1)
    { 
	   var rowId = $('#equipmentGrid').getCell(rowIDs[i], 'equipmentSeqNo');
	   $('#equipmentGrid').jqGrid('editRow', rowId, false, equipmentOnEdit);
    }
}

function saveAllEquipments(){
	updateEquipmentErrorOccurred = false;
	$('table[aria-labelledby="gbox_equipmentGrid"] thead tr[id="FormError"] td').html("");
	$('table[aria-labelledby="gbox_equipmentGrid"] thead tr[id="FormError"]').hide();
	var rowIDs = jQuery("#equipmentGrid").getDataIDs();
	for (var i=0;i<rowIDs.length;i=i+1)
    { 
	   var rowId = $('#equipmentGrid').getCell(rowIDs[i], 'equipmentSeqNo');
	   currentRowId = rowId+'_';
	   var isSuccess = $('#equipmentGrid').jqGrid(
			   'saveRow', 
			   rowId, 
			   null, //onsuccessfunc
			   _context+'/booking/freight/updateEquipment' //Url
	   );
	   
	   if(!isSuccess){
		   updateEquipmentErrorOccurred = true;
		   //Store error record
		   currentRowId = '';
		   errorRowId = rowId;
		   errorRowData = [$("#"+rowId+"_quantityRequested").val(),
							$("#"+rowId+"_eqpType").val(),
							$("#"+rowId+"_eqpSize").val(),
							$("#"+rowId+"_eqpHeight").val(),
							$("#"+rowId+"_emptyFullCode").val(),
							$("#"+rowId+"_temperature").val(),
							$("#"+rowId+"_temperatureUnitOfMeasureCd").val(),
							$("#"+rowId+"_temperatureDual").val(),
							$("#"+rowId+"_characteristics").val()];
		   break;
		}
	   else
		   $('#equipmentGrid').jqGrid('editRow', rowId, false, equipmentOnEdit);
    }
	if(!updateEquipmentErrorOccurred){
		equipmentUpdated = false;
	}
}

var equipmentOnEdit = function(rowId){ 
	$('#'+rowId+'_characteristics').css('width', '263px');
	$('#'+rowId+'_characteristics').gatesPopUpSearch({
		func : function() {
			openEquipmentSelectDialog(rowId);
		}
	});
};

/** D024154, try to allow both add and update */
function disableAddDelete(rowId){
	if(rowId!=null && rowId!='' && rowId!=undefined){
		//$('table[aria-labelledby="gbox_equipmentGrid"] thead tr[id="FormError"] td').html("");
		//$('table[aria-labelledby="gbox_equipmentGrid"] thead tr[id="FormError"]').hide();
		equipmentUpdated = true;
		//$('#tr_equipmentSeqNo').hide();
		//$('#del_equipmentGrid').hide();
		freightModified = true;
		isBookingChanged = "Y";
	}
	
	/*if($('#msgDivFrt div').hasClass('message_error')==true && $('#msgDivFrt div').html()=='Validation error(s) in equipment lines.'){
		$('#msgDivFrt').hide();
		$('#msgDivFrt').html('');
	}*/
}

function hideEquipmentInlineEditDelete(){
	$("div.ui-pg-div.ui-inline-edit", "#equipmentGrid").hide();
	$("div.ui-pg-div.ui-inline-del", "#equipmentGrid").hide();
}

function enableEquipmentAddDelete(){
		$('#tr_equipmentSeqNo').show();
		$('#del_equipmentGrid').show();
}

function resetEquipmentAddRow(){
	$('#quantityRequested').val('');
	$('#eqpType').val('');
	$('#eqpSize').val('');
	$('#eqpHeight').val('');
	$('#emptyFullCode').val('F');
	$('#temperature').val('');
	$('#temperatureUnitOfMeasureCd').val('');
	$('#temperatureDual').val('');
	$('#characteristics').val("");
	$('#characteristics').css('width', '263px');
	/*if($('#clr').length==0)
	{
		var $clearButton = $("<a href=\"javascript:void(0)\" id=\"clr\" class=\"fm-button ui-state-default ui-corner-all\" style=\"margin-left:8px;\" onclick=\"$('#characteristics').val('');\">x</a>");
		$('#characteristics').after($clearButton);
	}*/
	$('#characteristics').gatesPopUpSearch({
		func : function() {
			openEquipmentSelectDialog(0);
		}
	});
}

function validateEquipmentOnTradeAndPODChange(showMessage){
	var validation = false;
	$.ajax({
		url: _context+'/booking/freight/validateEquipmentOnTradeAndPODChange?trade='+$('#tradeCode').val()+'&pod='+$('#destinationPortCityCode').val(),
		async:false,
		success: function(responseText){
			if(!responseText.success){
				if(showMessage)
				{
					window.scrollTo(0, 0);
					$('#msgDiv').show();
					$('#msgDiv').html("<div class=\"message_error\">"+responseText.messages.error[0]+"</div>");
					triggerErrorMessageAlert();
				}
				validation = false;
			}
			else{
				validation = true;
			}
		}
	});
	return validation;
}

function formatZeroToSpace(cellvalue, options, rowObject){
	if($.trim(cellvalue)=='0'){
		cellvalue='';
	}
return cellvalue;
}

function autotab(event, object)
{
	var keyCode = event.keyCode;
	
	if(keyCode==32 || (48<=keyCode && keyCode<=57)
			|| (65<=keyCode && keyCode<=90) || (96<=keyCode && keyCode<=107) 
			|| (109<=keyCode && keyCode<=111))
	{
		if(object.value.length >= object.getAttribute("maxlength"))
		{
			if($(object).attr("id")=="newDirection" || $(object).attr("id")=="bkdDirection")
				$(object).blur();
			else
				$(object).next().focus();
		}
	}
	return true;
}

function showSelectedCharacteristics(){
	/*//$('#characteristics').scrollTop(0);
	var rowIDs = jQuery("#equipmentGrid").getDataIDs(); 
    for (var i=1;i<=rowIDs.length;i=i+1){ 
    	var $s = $('#'+i+'_characteristics');///selector of multilselect of row
    	if($s.val() != undefined){
	    	var indexTop = $s.find('[value="'+$s.val()[0]+'"]').index();
	    	$s.scrollTop((17*indexTop)+8.5);
    	}
    	//else
    	//	$s.scrollTop(0);
    }*/
	
	var rowIDs = jQuery("#equipmentGrid").getDataIDs(); 
    for (var i=0;i<rowIDs.length;i=i+1){ 
    	var id = '#'+rowIDs[i]+'_characteristics';
    	if($(id).val() != undefined){
    		var valArr = $(id).val();
    		$(id+' option').attr('selected', false);
    		for(var j= valArr.length-1; j>=0; j--)
			{
    			$(id+' option[value="'+valArr[j]+'"]').attr('selected', 'selected');
			}
    	}
    }
}

function openEquipmentSelectDialog(rowId)
{
	$('#equipmentGrid').setSelection(rowId, true);
	var idPrefix = "";
	if(rowId!=0)
		idPrefix = rowId+"_";
	$('#currentEquipmentChars').val($('#'+idPrefix+"characteristics").val());
	$("#maintain_characteristics").dialog("option", "buttons",
	[{
		text : "Cancel",
		click : function() {
			$("#maintain_characteristics").dialog("close");
		}
	},
	{
		text : "Ok",
		click : function() {
			var selRowIds = jQuery('#gridIdForCharacteristic').jqGrid('getGridParam', 'selarrrow');
			var characts = "";
		  	for (var i=0;i<selRowIds.length;i=i+1)
		    { 
		  		var rowData=jQuery("#gridIdForCharacteristic").getRowData(selRowIds[i]);
		  		if(i==0)
		  		{
		  			characts = rowData.description;
		  		}
		  		else
		  		{
		  			characts = characts+", "+rowData.description;
		  		}
			}
		  	var countSTOW = 0;
			var countVENT = 0;
			$.each(characts.split(', '), function(index, value1) {
			    if(value1.search('STOW')>=0){
			    	countSTOW = countSTOW + 1;
			    }
			    else if(value1.search('VENT')>=0){
			    	countVENT = countVENT + 1;
			    }
			});
			
			if(countSTOW>1){
				$('#characteristicsMsgDiv').html('<div class="message_error">Only one of the STOW characteristic is allowed</div>');
			}
			else if(countVENT>1){
				$('#characteristicsMsgDiv').html('<div class="message_error">Multiple VENT characteristics are not allowed</div>');
			}
			else{
				if($('#'+idPrefix+"characteristics").val()!=characts && idPrefix!='')
					disableAddDelete(rowId);
				$('#'+idPrefix+"characteristics").val(characts);
				$('#'+idPrefix+"characteristics").closest('td').attr('title', characts);
				//D031169: 	Priority Stow to have a new selection list only for Alaska
				var rows = $('#equipmentGrid').jqGrid('getDataIDs');
				var stowSelected = false;
				if($('#bookingTypeCode').val()!='B'){
					stowSelected = true;
				}
				for(var index=0;index<rows.length;index++) {
					var charArray = $("#"+rows[index]+"_characteristics").val().split(", ");
					if($('#tradeCode').val() == 'A' && !stowSelected){
						for (var i = 0; i < charArray.length; i++) {
							if ($.trim(charArray[i]).match("STOW")
									//D033747: 	STOW on equipment line not updating top of booking page!
									//&& $.trim(charArray[i]) != "STOWAD"
									&& $.trim(charArray[i]) != "STOWBD") {
								$('#stowCharAlaska option[value="'+charArray[i]+'"]').attr('selected', 'selected');
								stowSelected = true;
								break;
							}
						}
					} else {
						break;
					}
				}
				if(!stowSelected){
					$('#stowCharAlaska option[value=""]').attr('selected', 'selected');
				}
				$("#maintain_characteristics").dialog("close");
			}
		}
	}]);
	var xErrorCoordinate = window.pageXOffset;
	var yErrorCoordinate = window.pageYOffset;
	$("#maintain_characteristics").dialog('open');
	setTimeout(function(){
		window.scrollTo(xErrorCoordinate, yErrorCoordinate);
		var offset = {left:$('div[aria-labelledby="ui-dialog-title-maintain_characteristics"]').offset().left, top:yErrorCoordinate+100};
			$('div[aria-labelledby="ui-dialog-title-maintain_characteristics"]').offset(offset);
		}, 250);
}

function createEquipmentCharacteristicGrid(){
	//Create VVD Table on main page
	var colNames = ['Code', 'Characteristics'];
	
	var colModel = [ {
		name : 'code',
		hidden : true
	}, {
		name : 'description',
		width : 100
	}];
	

	var jsonReader = {
		root : "rows",
		page : "page",
		total : "total",
		records : "records",
		cell : "cell",
		repeatitems : false,
		id : "code"
	};

	/*Booking Security*/
		createGrid("gridIdForCharacteristic", // grid id for party
		"pagerIdForCharacteristic", // page id for party
		_context+'/booking/freight/loadEquipmentCharacteristicsGrid?tradeCode='+$('#tradeCode').val(), // geturl
		'', // addurl
		'', // edit url
		'', //delete url
		'',// delete selected URL
		colNames, 
		colModel, 
		"Select Characteristics",// caption
		'auto',// height
		25,// row num
		[25],// row list
		true,// multiselect
		false,// multidelete
		false,// load once
		true, // read only grid
		jsonReader, // json reader
		true, // hide edit
		true, // hide delete
		true, // autowidth
		false, // rownumbers
		true, // hide custom add row
		false,// hide pager row
		null,// custom edit method
		characteristicGridComplete,// custom grid complete
		null,// custom load complete
		false,// default hidden
		true);// row Color Based On status
		
}

var characteristicGridComplete = function()
{
	$('td[aria-describedby="gridIdForCharacteristic_description"]').css('text-align','center');
	 var rowIDs = jQuery("#gridIdForCharacteristic").getDataIDs();
	 var charArr = $('#currentEquipmentChars').val().split(", ");
	 
	 for (var j=0;j<rowIDs.length;j++)
     {
		 var rowData=jQuery("#gridIdForCharacteristic").getRowData(rowIDs[j]);
		 var id = $('#gridIdForCharacteristic').getCell(rowIDs[j], 'code');
		 
		 for(var i=0; i<charArr.length; i++)
		 {
			if($.trim(charArr[i])==rowData.description)
			{
				$('#jqg_gridIdForCharacteristic_'+id).trigger("click");
				$('#jqg_gridIdForCharacteristic_'+id).attr("checked", true);
				break;
			}
		 }
     }
};

var getColumnIndexByName = function(grid,columnName) {
	var cm = grid.jqGrid('getGridParam','colModel');
	for (var i=0,l=cm.length; i<l; i++) {
	    if (cm[i].name===columnName) {
	        return i;
	    }
	}
	return -1;
	};

function clearEquipRow(rowId)
{
	if($("#"+rowId+"_characteristics").val()!='')
		disableAddDelete(rowId);
	$("#"+rowId+"_characteristics").val('');
	$("#"+rowId+"_characteristics").closest('td').attr('title', '');
};var countryPhoneCodes = null;
var emergencyPhoneCountryCode="";
function createHazGrid(){
	var currentRowId='';
	var colNames = ['Id','HazCleared','UN/ NA', 'Hzd Code', 'Hzd Class', 'Flash Pt', 'F/C', 'Package Group', 'Country Code', 'Area Code', 'Exchange Code', 'Station Code', 'Ext','Actions'];
	var colModels = [
	               {name:'hazSeqNo', index:'hazSeqNo', hidden:true},	
	               {name:'hazCleared', index:'hazCleared', hidden:true},
	               {name:'hazardousFreightPrefixCode',index:'hazardousFreightPrefixCode', width:33, editable:true, editoptions: {maxlength: 2},
	            	   editrules:{
	            		   required:true,
	            		   custom: true,
	            		   custom_func:function(value,colname) {
	                			if($('#currentCommodityLine').val() == 0) {
	                				return [false,"Add commodity line before adding hazards"];
	                			} 
	                			return [true,""];
	            		   }
	            		   
	            		  /* custom:true,
	            		   custom_func:function (value, colname) {
	            			   //alert("hazardousFreightPrefixCode: " + value);
	            			   if($.trim(value)=='' && $.trim($("#"+currentRowId+"hazardousFreightCode").val())=='' && $.trim($("#"+currentRowId+"hazardousFreightClassCode").val())==''){
	            				   return [false, colname+": UN/NA or Hzd Class is required."];
	            			   }
	            			   else if($.trim(value)=='' && $.trim($("#"+currentRowId+"hazardousFreightCode").val())!='' && $.trim($("#"+currentRowId+"hazardousFreightClassCode").val())==''){
	            				   return [false, colname+": UN is required."];
	            			   }
	            			   return [true,""];
	            		   }*/
	            	   }
	               },
	               {name:'hazardousFreightCode',index:'hazardousFreightCode', width:43, editable:true, editoptions: {maxlength: 4}, 
	            	   editrules:{
	            		   required:false
	            		  /* custom:true,
	            		   custom_func:function (value, colname) {
	            			   //alert("hazardousFreightCode: " + value);
	            			   if($.trim(value)=='' && $.trim($("#"+currentRowId+"hazardousFreightPrefixCode").val())!='' && $.trim($("#"+currentRowId+"hazardousFreightClassCode").val())==''){
	            				   return [false, colname+": NA is required."];
	            			   }
	            			   return [true,""];
	            		   }*/
	            	   }
	               },	
	               {name:'hazardousFreightClassCode',index:'hazardousFreightClassCode', width:125, editable:true, editoptions: {maxlength: 10}, editrules:{required:false}},
	               {name:'hazardousFlashPointTemp',index:'hazardousFlashPointTemp', width:60, editable:true, editoptions: {maxlength: 5},
	            	   editrules:{
	                		custom:true,
	                		custom_func:function (value, colname) {
	                			//alert("flashPt: " + value);
	                			if($.trim(value)==''){
	                				return [true,""];
	                			}
	                			if(!/^([0-9]){1,5}?$/.test($.trim(value))){
	                				return [false, colname+": This should be numeric."];
	                			}
	                			return [true,""];
	                		}
	                	}},
		           {name:'hazardousFlashPointUomCode', index:'hazardousFlashPointUomCode', width:55, editable:true, edittype:"select", 
		            	editoptions:{value:":;C:C;F:F"},
		            	editrules:{
	                		custom:true,
	                		custom_func:function (value, colname) {
	                			var temp = $.trim($("#"+currentRowId+"hazardousFlashPointTemp").val());
	                			if(temp!='' && value==''){
		            				return [false, colname+": This must be specified for Flash Pt."];
								}
	                			else if(temp=='' && value!=''){
	                				return [false, colname+": This is valid only if Flash Pt is provided."];
	                			}
		            			else{
									return [true,""];
								}
	                		}
	                	}},
	               {name:'hazardousPackageGroupCode',index:'hazardousPackageGroupCode', width:60, editable:true, editoptions: {maxlength: 3}},
	              /* {name:'emergencyPhoneCountryCode', index:'emergencyPhoneCountryCode', width:150, editable:true, 
	            	   editrules:{
	            		   custom:true,
	            		   custom_func:function (value, colname) {
	            			   	 //alert("emergencyPhoneCountryCode: " + value);
	            			   	 emergencyPhoneCountryCode = value;
	            				 //alert("checkForDefaultValue:" + value);
	            			   
		        				 if($.trim(value)=='' && ($("#"+currentRowId+"emergencyPhoneAreaCode").val()!='' || $("#"+currentRowId+"emergencyPhoneExchange").val()!=''|| $("#"+currentRowId+"emergencyPhoneStation").val()!='')){
		        					 $("#"+currentRowId+"emergencyPhoneCountryCode").val("1");
		        					 emergencyPhoneCountryCode = 1;
		        					 //return [false, colname+": This is required."];
		        				 }
		        				 return [true,""];
	            		   }}, edittype:"select", formatter:'select', editoptions:{value: countryPhoneCodes, defaultValue:'default'}},*/
	               {name:'emergencyPhoneCountryCode', index:'emergencyPhoneCountryCode', width:60, editable:true, 
	            	   editrules:{
	            		   custom:true,
	            		   custom_func:function (value, colname) {
	            			   	/* emergencyPhoneCountryCode = value;
	            			   
		        				 if($.trim(value)=='' && ($("#"+currentRowId+"emergencyPhoneAreaCode").val()!='' || $("#"+currentRowId+"emergencyPhoneExchange").val()!=''|| $("#"+currentRowId+"emergencyPhoneStation").val()!='')){
		        					 $("#"+currentRowId+"emergencyPhoneCountryCode").val($('input[name="consignee\\.contactPhoneCountryCode"]').val());
		        					 emergencyPhoneCountryCode = $('input[name="consignee\\.contactPhoneCountryCode"]').val();
		        					 //return [false, colname+": This is required."];
		        				 }*/
	            			   
	            			   if($.trim(value)=='' && ($("#"+currentRowId+"emergencyPhoneAreaCode").val()!='' || $("#"+currentRowId+"emergencyPhoneExchange").val()!=''|| $("#"+currentRowId+"emergencyPhoneStation").val()!=''))
	            				   return [false, colname+": This is required."];
		        			   return [true,""];
	            		   }}, editoptions:{maxlength:3}},
	               
				   {name:'emergencyPhoneAreaCode', index:'emergencyPhoneAreaCode', width:60,editable:true, 
	            			   editrules:{number: true,
	            				   custom:true,
	            				   custom_func:function (value, colname) {
	            					   //alert("emergencyPhoneAreaCode: " + value);
	            					   	if($.trim(value)=='' && (/*$.trim($("#"+currentRowId+"emergencyPhoneCountryCode").val())!='' ||*/ $("#"+currentRowId+"emergencyPhoneExchange").val()!=''|| $("#"+currentRowId+"emergencyPhoneStation").val()!='')){
	            							 return [false, colname+": This is required."];
	            						}
	            						else if($.trim(value)!=''){
	            							if(emergencyPhoneCountryCode=='1' && value.length != 3){
	            								 return [false, colname+": For domestic phone numbers, this must be 3 in length."];
	            							}
	            							else if(emergencyPhoneCountryCode!='1' && (value.length < 2 || value.length > 4)){
	            								 return [false, colname+": For foreign phone numbers, this must be between 2 and 4 in length."];
	            							}
	            						}
	            						return [true,""];
	    	            		   }}, editoptions:{size:5,maxlength:4}},
				   {name:'emergencyPhoneExchange', index:'emergencyPhoneExchange', width:60,editable:true, 
					   editrules:{number: true,
					   custom:true,
					   custom_func:function (value, colname) {
						   //alert("emergencyPhoneExchange: " + value);
						   if($.trim(value)=='' && (/*$.trim($("#"+currentRowId+"emergencyPhoneCountryCode").val())!='' ||*/ $("#"+currentRowId+"emergencyPhoneAreaCode").val()!=''|| $("#"+currentRowId+"emergencyPhoneStation").val()!='')){
								 return [false, colname+": This is required."];
							 }
							else if($.trim(value)!=''){
								 if(emergencyPhoneCountryCode=='1' && value.length != 3)
								 {
									 return [false, colname+": For domestic phone numbers, this must be 3 in length."];
								 }
								 else if(emergencyPhoneCountryCode !='1' && value.length != 3 && value.length != 4)
								 {
									 return [false, colname+": For foreign phone numbers, this must be 3 or 4 in length."];
								 } 
							 }
							 return [true,""];
					   }}, editoptions:{size:5,maxlength:4}},
				   {name:'emergencyPhoneStation', index:'emergencyPhoneStation', width:60,editable:true, 
						   editrules:{number: true,
							   custom:true,
							   custom_func:function (value, colname) {
								   //alert("emergencyPhoneStation: " + value);
								   if($.trim(value)=='' && (/*$.trim($("#"+currentRowId+"emergencyPhoneCountryCode").val())!='' ||*/ $("#"+currentRowId+"emergencyPhoneAreaCode").val()!=''|| $("#"+currentRowId+"emergencyPhoneExchange").val()!='')){
										 return [false, colname+": This is required."];
								   }
								   else if($.trim(value)!=''){
										if(value.length != 4){
											 return [false, colname+": This must be 4 in length."];
										}
								   }
								   return [true,""];
							   }}, editoptions:{size:5,maxlength:4}},
				   {name:'emergencyPhoneExtension',index:'emergencyPhoneExtension', width:60,editable:true, 
						   editrules:{number: true,
							   custom:true,
							   custom_func:function (value, colname) {
								   //alert("emergencyPhoneStation: " + value);
								   if($.trim(value)!='' && (/*$.trim($("#"+currentRowId+"emergencyPhoneCountryCode").val())=='' ||*/ $("#"+currentRowId+"emergencyPhoneAreaCode").val()==''|| $("#"+currentRowId+"emergencyPhoneExchange").val()=='')){
										 return [false, colname+": The country code, area code, exchange and station must be entered if extension is provided."];
									 }
									/*else if($.trim(value)!=''){
										 if(value.length != 4)
										 {
											 return [false, colname+": This must be 4 in length."];
										 }
									 }*/
									 return [true,""];
							   }
						   }, editoptions:{size:5,maxlength:4}},
				   {name:'actions', index:'actions', width:70, align:"center", editable:false, search:false, sortable:false, formatter:'actions', 
					   formatoptions:{keys:true,
							onEdit: function(rowId){ 
								//alert("onEdit rowId: " + rowId);
								currentRowId = rowId+"_";
							},
							onSuccess:function(jqXHR){
								//alert("onSuccess");
								//alert("onSuccess currentRowId before: " + currentRowId);
								currentRowId='';
								//alert("onSuccess currentRowId after: " + currentRowId);
								return true;
							},
							afterRestore:function(){
								//alert("afterRestore before: " + currentRowId);
								currentRowId='';
								//alert("afterRestore after: " + currentRowId);
							},
							afterSave:function(){
								//alert("afterSave");
								freightModified = true;
								isBookingChanged = "Y";
								loadHazGrid();
								return true;
							}
				   	}}
			   	];

	var jsonReaderReference = {
			root : "rows",
			page : "page",
			total : "total",
			records : "records",
			repeatitems : false,
			cell : "cell",
			id : "hazSeqNo"
		};
		
	//D027890:multiple blank rows in Reference & Commodity
	var hazReadOnlyGrid = false;
	if(isCommodityDisplayOnly && !isCommodityModifiable){
		hazReadOnlyGrid = true;
	}
	
	createGrid(
			"hazGrid", // grid id for TCN
			"hazGridPager", // page id for TCN
			_context+'/booking/freight/loadHazGrid', 
			_context+'/booking/freight/addHaz', 
			_context+'/booking/freight/updateHaz', 
			_context+'/booking/freight/deleteHaz', 
			_context+'/booking/freight/deleteHaz',
			colNames, 
			colModels, 
			"Hazardous",
			83,
			3,
			[3,6,9],
			true,
			true,
			false, //load once
			hazReadOnlyGrid, jsonReaderReference, false, false, true, true, 
			false, false, false, false, hazGridLoadComplete, false, true, false, hazardousAfterSubmit);
}

var hazGridLoadComplete = function(){
	/*Booking Security*/
	if((isCommodityDisplayOnly && !isCommodityModifiable) || $("#bookingStatusCode").val()=='CANC'){
		//$("div.ui-pg-div.ui-inline-del").hide();
		//$("div.ui-pg-div.ui-inline-edit").hide();
		$("div.ui-pg-div.ui-inline-edit", "#hazGrid").hide();
		$("div.ui-pg-div.ui-inline-del", "#hazGrid").hide();
		$('table[aria-labelledby="gbox_hazGrid"] thead tr[id="tr_hazSeqNo"] td a[id="sData"]').hide();
		$('#del_hazGrid').hide();
		$('#gview_hazGrid input').attr("disabled", true);
		$('#gview_hazGrid select').attr("disabled", true);
	}else{
		//$("div.ui-pg-div.ui-inline-del").show();
		//$("div.ui-pg-div.ui-inline-edit").show();
		$("div.ui-pg-div.ui-inline-edit", "#hazGrid").show();
		$("div.ui-pg-div.ui-inline-del", "#hazGrid").show();
		$('table[aria-labelledby="gbox_hazGrid"] thead tr[id="tr_hazSeqNo"] td a[id="sData"]').show();
		$('#gview_hazGrid input').attr("disabled", false);
		$('#gview_hazGrid select').attr("disabled", false);
		$('#del_hazGrid').show();
	}
	
	$('#gbox_hazGrid #sData').click(function(){
			freightModified = true;
			isBookingChanged = "Y";
		
	});
	
	resetAddRow();
	$("#hazGrid").resetSelection();
	};

function unloadHazGrid(){
	$('#hazGrid').jqGrid('GridUnload');
}

function loadHazGrid(){
	//alert("loadEquipmentGrid");
	$('#hazGrid').trigger("reloadGrid");
}

function makeHazExpandCollapsed(){
	if($("#hazGrid").getGridParam("reccount")>0){
		if(!$('#hazGrid').is(':visible')){
			$(".ui-jqgrid-titlebar-close",$("#hazGrid")[0].grid.cDiv).click();
		}
	}else{
		if($('#hazGrid').is(':visible')){
			$(".ui-jqgrid-titlebar-close",$("#hazGrid")[0].grid.cDiv).click();
		}
	}
}

function populateCountryPhoneCodes(){
	
	function callBack(responseText){
		if(responseText.success){
			countryPhoneCodes = responseText.data;
			//alert("countryPhoneCodes: " + countryPhoneCodes);
		}
	}
	
	populateCountryPhoneCodesRequest(callBack);
}

function populateCountryPhoneCodesRequest(callBack){
	var gatesCheetah = window.gatesCheetah || {};
	if (gatesCheetah && gatesCheetah.countryPhoneCodes && gatesCheetah.countryPhoneCodes !== null)  {
		console.log('Cheetah: populateCountryPhoneCodesRequest from cache');
		callBack(gatesCheetah.countryPhoneCodes);
		return;
	}	
	console.log('Cheetah: populateCountryPhoneCodesRequest from Ajax');
	$.ajax({
		url: _context +"/booking/freight/getCountryPhoneCodes",
		success: callBack
	});
}

function resetAddRow(){
	$('#hazardousFreightPrefixCode').val('');
	$('#hazardousFreightCode').val('');
	$('#hazardousFreightClassCode').val('');
	$('#hazardousFlashPointTemp').val('');
	$('#hazardousFlashPointUomCode').val('');
	$('#hazardousPackageGroupCode').val('');
	$('#emergencyPhoneCountryCode').val($('input[name="consignee\\.contactPhoneCountryCode"]').val());
	if($('input[name="consignee\\.contactPhoneCountryCode"]').val()=='' && $('input[name="consignee\\.contactPhoneAreaCode"]').val()!='')
		$('#emergencyPhoneCountryCode').val('1');
	$('#emergencyPhoneAreaCode').val('');
	$('#emergencyPhoneExchange').val('');
	$('#emergencyPhoneStation').val('');
	$('#emergencyPhoneExtension').val('');
}

var hazardousAfterSubmit = function(result){
	if(result.success){
		freightModified = true;
		isBookingChanged = "Y";
	}
};var isOperDoneOnce = false;
var GOVERNMENT_NAME = "GOVERNMENT";

function createTCNGrid(){
	isOperDoneOnce = false;
	var currentRowId = null;
	var currentTCN = "";
	var colNames = ['Id','TCN', 'TcnExists', 'Actions'];
	var colModels = [
	               {name:'tcnSeqNo', index:'tcnSeqNo',hidden:true},	                               
	               {name:'militaryTcn',index:'militaryTcn', width:300, editable:true, editoptions: {maxlength: 17}, formatter:'upperCaseFormatter', editrules:{
	            		custom:true,
	            		required:true,
	            		custom_func:function (value, colname) {
		            			if(!/^[0-9A-Za-z$]+$/.test($.trim(value))){
	                				return [false, colname+": This contains invalid characters."];
	                			}
		            			else{
		            				if($.trim(value).length == 17){
		            					return [true,""];
		            				}
		            				else{
		            					return [false, colname+": This must be 17 characters long."];
		            				}
								}
		            		}
	            	}},
	               {name:'tcnExists', index:'tcnExists', hidden:true},	
			   	   {name:'actions', index:'actions', width:100, align:"center", editable:false, search:false, sortable:false, formatter:'actions', formatoptions : {
						keys : true,
						onEdit: function(rowId, value){ 
							//alert("onEdit rowId1: " + rowId);
							currentRowId = rowId;
							currentTCN = $("#"+currentRowId+"_militaryTcn").val();
						},
						onSuccess:function(jqXHR){ 
							//alert("onSuccess jqXHR: " + jqXHR.responseText);
							var result = eval('(' + jqXHR.responseText + ')');
							var rows = result.rows;
							//alert("rows: " + rows);
							//alert("currentRowId: " + currentRowId);
							showPieceCountWarnMsg();
							if (rows!=null) {
								var success = true;
								for (var i = 0, l = rows.length; i < l; i++) {
				            		if(rows[i].tcnSeqNo==currentRowId && rows[i].tcnExists==true){
				            			success = false;
				            			var isConfirm = confirm("TCN is not unique, override?");
				        				if (!isConfirm) {
				        					//alert("isConfirm: " + isConfirm);
				        					$.ajax({
				        						type: "POST",
				        						url: _context +"/booking/freight/updateTCN",
				        						data: {id:currentRowId, militaryTcn:currentTCN, tcnExists:false, validate:false},
				        						success:function(responseText){
				        							//loadTCNGrid();
				        						}
				        					});
				        				}
				        				else{
				        					$.ajax({
				        						type: "POST",
				        						url: _context +"/booking/freight/updateTCN",
				        						data: {id:currentRowId, militaryTcn:rows[i].militaryTcn, tcnExists:false, validate:false},
				        						success:function(responseText){
				        							loadTCNGrid();
				        						}
				        					});
				        				}
				        				break;
				            		}
				            		/*else{
			        					return true;
			        				}*/
								}
								
								if(success){
									return true; 
								}
							} 
							else{
								if(result.success==false){
									if(result.messages!=null){
										var errorMsgs = result.messages;
										var str= "";
										for (var i = 0; i < errorMsgs.length; i++) {
											str += errorMsgs[i];
										}
										$('table[aria-labelledby="gbox_tcnGrid"] thead tr[id="FormError"] td').html(str);
										$('table[aria-labelledby="gbox_tcnGrid"] thead tr[id="FormError"]').show();
									}
								}
							}
						},
						afterRestore:function(){
							//alert("afterRestore before: " + currentRowId);
							//alert("afterRestore before: " + currentTCN);
							currentRowId='';
							currentTCN="";
							$('table[aria-labelledby="gbox_tcnGrid"] thead tr[id="FormError"] td').html("");
							$('table[aria-labelledby="gbox_tcnGrid"] thead tr[id="FormError"]').hide();
							//alert("afterRestore after: " + currentRowId);
						},
						afterSave:function(){
							isBookingChanged = "Y";
							return true;
						}
					}}
			   	];
	
	jQuery.extend($.fn.fmatter , {
		upperCaseFormatter : function(cellvalue, options, rowdata) {
			return cellvalue.toUpperCase();
		}
	});

	var jsonReaderReference = {
			root : "rows",
			page : "page",
			total : "total",
			records : "records",
			repeatitems : false,
			cell : "cell",
			id : "tcnSeqNo"
		};

	/*createGrid(
			"tcnGrid", // grid id for user
			"tcnGridPager", // page id for user
			_context+'/booking/freight/loadTCNGrid', 
			_context+'/booking/freight/addTCN', 
			_context+'/booking/freight/updateTCN', 
			_context+'/booking/freight/deleteTCN', 
			_context+'/booking/freight/deleteTCN',
			colNames, 
			colModels, 
			"TCN",
			90,
			3,
			[3,6,9],
			true,
			true,
			false, //load once
			false, jsonReaderReference, false, false, true, true, false, false,
			null, false);*/
	
	createGrid(
			"tcnGrid", // grid id for TCN
			"tcnGridPager", // page id for TCN
			_context+'/booking/freight/loadTCNGrid', 
			_context+'/booking/freight/addTCN', 
			_context+'/booking/freight/updateTCN?validate='+true, 
			_context+'/booking/freight/deleteTCN', 
			_context+'/booking/freight/deleteTCN',
			colNames, 
			colModels, 
			"TCN",
			83,
			3,
			[3,6,9],
			true,
			true,
			false, //load once
			false, jsonReaderReference, false, false, false, true, 
			false, false, false, false, tcnGridLoadComplete, false, true, false, tcnAfterSubmit);
	
	$("#tcnGrid").jqGrid('setGridParam',{
		afterInsertRow: function(rowid, rowdata, rowelem){
			//alert(rowdata.tcnExists);
			isOperDoneOnce = true;
			if(rowdata.tcnExists!=null && rowdata.tcnExists==true){
				var isConfirm = confirm("TCN is not unique, override?");
				if (!isConfirm) {
					$.ajax({
						type: "POST",
						url: _context +"/booking/freight/deleteTCN",
						data: {id:rowid},
						success:function(responseText){
							loadTCNGrid();
							isOperDoneOnce = false;
						}
					});
				}
			}
			//alert("rowdata.totalTcnCount: " + rowdata.totalTcnCount);
		}
	});
	
	/*$('#gbox_tcnGrid #sData').click(function(e){
			if($("#equipmentGrid").getGridParam("reccount")!=0){
				$('#msgDivFrt').html('<div class="message_error">*** Equipment and TCN grid are mutually exclusive.</div>');
				triggerErrorMessageAlert('msgDivFrt');
				e.preventDefault();
				return false;
			}
	});*/
}

function unloadTCNGrid(){
	$('#tcnGrid').jqGrid('GridUnload');
}

function loadTCNGrid(){
	//alert("loadEquipmentGrid");
	$('#tcnGrid').trigger("reloadGrid");
}

var tcnGridLoadComplete = function(){
	//alert("isOperDoneOnce: " + isOperDoneOnce);
	if(isOperDoneOnce){
		showPieceCountWarnMsg();
	}
	
	//$('#bookingForm').validationEngine('validate');
	//$('#bookingForm').validationEngine('attach');
	$('table[aria-labelledby="gbox_tcnGrid"] thead tr[id="FormError"] td').html("");
	$('table[aria-labelledby="gbox_tcnGrid"] thead tr[id="FormError"]').hide();
	
	resetTCNAddRow();
	
	if($("#tcnGrid").getGridParam("reccount")>0){
		//setIBSCodeMandatory();
		if($('#militaryIbsStatusCode option:selected').text()!=''){
			setCargoPickupDeliveryMandatory($('#militaryIbsStatusCode option:selected').text().split(":")[1]);
		}
	}
	else{
		if($('#totalCommodityLines').text()!='' && $('#totalCommodityLines').text()!='0' && $('#totalCommodityLines').text()!='1'){
			validateTCNExists();
		}
		else{
			//resetIBSCode();
			resetCargoPickup();
			resetCargoDelivery();
		}
	}
	
	$('#gbox_tcnGrid #sData').click(function(){
		isBookingChanged = "Y";
	});
};


function showPieceCountWarnMsg(){
	if($("#tcnGrid").getGridParam("records")!=0 && $("#tcnGrid").getGridParam("records")!=$('#pieceCount').val()){
		$('#msgDivFrtTcn').html('<div class="message_warning">Pieces Count does not equal number of TCNs</div>');
		$('#msgDivFrtTcn').show();
	}
	else{
		$('#msgDivFrtTcn').html('');
		$('#msgDivFrtTcn').hide();
	}
}

//D016178- Sets/resets IBS code for MBU commodity
function validateTCNExists(){
	if($.trim($('#customerGroupId :selected').text())==GOVERNMENT_NAME && ($.trim($('#loadDschServiceGroupCode').val())=='CON' || $.trim($('#loadDschServiceGroupCode').val())=='LCL') && $('#isAllowBookingUnit').val()=="Y"){
		$.ajax({
			url: _context +"/booking/freight/validateTCNExists",
			async: false,
			success: function(responseText){
				if(responseText.success){
					//setIBSCodeMandatory();
					if($('#militaryIbsStatusCode option:selected').text()!=''){
						setCargoPickupDeliveryMandatory($('#militaryIbsStatusCode option:selected').text().split(":")[1]);
					}
				}
				else{
					 //resetIBSCode();
					 resetCargoPickup();
					 resetCargoDelivery();
				}
					
			}
		
		});
	}
}

function resetTCNAddRow(){
	$('#militaryTcn').val('');
}

var tcnAfterSubmit = function(result){
	if(result.success){
		isBookingChanged = "Y";
	}
};$(function() {
	
	$("#milRequiredDeliveryDate").datepicker({
		dateFormat : 'mm-dd-yy',
		onSelect : function(dateText, elem)
		{
			isBookingChanged = "Y";
			if(!$('#requiredDeliveryDate').attr("disabled"))
				$('#requiredDeliveryDate').val($("#milRequiredDeliveryDate").val());
			/*if(!$('#premiumRDD').attr("disabled"))
				$('#premiumRDD').val($("#milRequiredDeliveryDate").val());*/
				militaryHeader();
		}
	});
	
	$("#milRequiredDeliveryDate").change(function(){
		if($("#milRequiredDeliveryDate").val()=='' && $('#requiredDeliveryDate').attr("disabled") != 'disabled'){
			$('#requiredDeliveryDate').val($("#milRequiredDeliveryDate").val());
		} else if(!validateDate('milRequiredDeliveryDate', false)){
			$(this).validationEngine('showPrompt', '* Enter date in Format (mm-dd-yyyy)', 'error', 'topRight', true);
		} else{
			 if($('#requiredDeliveryDate').attr("disabled") != 'disabled'){
					$('#requiredDeliveryDate').val($("#milRequiredDeliveryDate").val());
				}
			 /*if($('#premiumRDD').attr("disabled") != 'disabled'){
					$('#premiumRDD').val($("#milRequiredDeliveryDate").val());
				}*/
		}
		militaryHeader();
	});

// Autocompleter and lookup for Cargo Pickup
	$('#cargoPickupCityCodeDesc').gatesAutocomplete({
		source : _context + '/tm/Autocomplete/autoCompCity',
		name: "Cargo Pickup City Code",
		autoSelectWhenSingle:true,
		autoSelectFirst:true,
			autoSelectCriteria:function(item) {
			   if(item != null){
			     return 'true';
			  }
			  else {
			     return 'false';
			  }
			},
		formatItem : function(item) {
			if(item.stateCode != " " && item.stateCode != undefined){
				return item.cityCode+"-"+item.cityName+","+item.stateCode;	
			}
			else{
				return item.cityCode+"-"+item.cityName;
			}
			//return item.cityCode + " " + item.cityName;
		},
		formatResult : function(item) {
			if(item.stateCode != " " && item.stateCode != undefined){
				return item.cityCode+"-"+item.cityName+","+item.stateCode;	
			}
			else{
				return item.cityCode+"-"+item.cityName;
			}
			//return item.cityCode + "-" + item.cityName;
		},
		select : function(item) {
			$('#cargoPickupCityCode').val(item.cityCode);
			isBookingChanged = "Y";
		}
	});
	
	$('#cargoDeliveryCityCodeDesc').gatesAutocomplete({
		source : _context + '/tm/Autocomplete/autoCompCity',
		name: "Cargo Delivery City Code",
		autoSelectWhenSingle:true,
		autoSelectFirst:true,
			autoSelectCriteria:function(item) {
			   if(item != null){
			     return 'true';
			  }
			  else {
			     return 'false';
			  }
			},
		formatItem : function(item) {
			if(item.stateCode != " " && item.stateCode != undefined){
				return item.cityCode+"-"+item.cityName+","+item.stateCode;	
			}
			else{
				return item.cityCode+"-"+item.cityName;
			}
			//return item.cityCode + " " + item.cityName;
		},
		formatResult : function(item) {
			if(item.stateCode != " " && item.stateCode != undefined){
				return item.cityCode+"-"+item.cityName+","+item.stateCode;	
			}
			else{
				return item.cityCode+"-"+item.cityName;
			}
			//return item.cityCode + "-" + item.cityName;
		},
		select : function(item) {
			$('#cargoDeliveryCityCode').val(item.cityCode);
			isBookingChanged = "Y";
		}
	});
	
	$('#cargoPickupCityCodeDesc').blur(function() {
		if ($('#cargoPickupCityCode').val() == "")
		{
			$('#cargoPickupCityCodeDesc').val('');
		}
		else if($('#cargoPickupCityCodeDesc').val() == '')
		{
			$('#cargoPickupCityCode').val('');
		}
	});
	
	$('#cargoDeliveryCityCodeDesc').blur(function() {
		if ($('#cargoDeliveryCityCode').val() == "")
		{
			$('#cargoDeliveryCityCodeDesc').val('');
		}
		else if($('#cargoDeliveryCityCodeDesc').val() == '')
		{
			$('#cargoDeliveryCityCode').val('');
		}
	});
	
	// function- cityUpdate is in routing.js for pickup and delivery
	$('#cargoPickupCityCodeDesc').gatesPopUpSearch({
		func : function() {
				placePopupSearch($('#cargoPickupCityCode').val(), 8);
		}
	});
	
	$('#cargoDeliveryCityCodeDesc').gatesPopUpSearch({
		func : function() {
				placePopupSearch($('#cargoDeliveryCityCode').val(), 9);
		}
	});
	
	$('#militaryIbsStatusCode').change(function(){
		//Commenting out as per D016178
		//alert("militaryIbsStatusCode change");
		/*if(($('#customerGroupId :selected').text()=="GOVERNMENT") && $.trim($('#loadDschServiceGroupCode').val())=='CON' && $('#isAllowBookingUnit').val()=="Y"){
			setIBSCodeMandatory();
			var ibsCodeText='';
			if($('#militaryIbsStatusCode option:selected').text()!=''){
				ibsCodeText = $('#militaryIbsStatusCode option:selected').text().split(":")[1];
			}
			setCargoPickupDeliveryMandatory(ibsCodeText);
		}
		else{
			//$(this).val("");
			resetIBSCode();
			resetCargoPickup();
			resetCargoDelivery();
		}*/
		/*&& $('#militaryIbsStatusCode').val()!=""*/
		if($('#militaryIbsStatusCode option:selected').text()!='')
			setCargoPickupDeliveryMandatory($('#militaryIbsStatusCode option:selected').text().split(":")[1]);
		validateIBSCode();
	});
	
	$('#milRequiredDeliveryDate').change(function(){
		$('#requiredDeliveryDate').val($(this).val());
		
		militaryHeader();
	});
	
	$('#militaryPortCallFileNumber').change(function(){
		/*if($.trim($(this).val())==''){
			setAccordianTabDetails('maintainBookingMilitaryId', '');
		}
		else{
			setAccordianTabDetails('maintainBookingMilitaryId', ' - '+$.trim($(this).val()));
		}
		$.trim($(this).val());*/
		militaryHeader();
	});
	
	militaryHeader();
	
	
});
//18644
function militaryHeader(){
	var header='';
	if($('#militaryPortCallFileNumber').val()!=' ' &&$('#militaryPortCallFileNumber').val()!='' ){
		header=header+'PCFN- '+$('#militaryPortCallFileNumber').val();
	}
	if($('#milRequiredDeliveryDate').val()!='')
		{
		header=header+' | RDD- '+$('#milRequiredDeliveryDate').val();
		}
	if(header==''){
		setAccordianTabDetails('maintainBookingMilitaryId', '');
	}
	else{
		setAccordianTabDetails('maintainBookingMilitaryId', ' - '+header);
	}
}

function setIBSCodeMandatory(){
	// IBSCode Code
	$("#ibsCodeLbl").html("IBS Code<span class=\"mandatory\">*</span>");
	$("#militaryIbsStatusCode").addClass("validate\[required\]");
}

function resetIBSCode(){
	// IBSCode Code
	$("#ibsCodeLbl").html("IBS Code");
	$("#militaryIbsStatusCode").removeClass("validate\[required\]");
}

function setCargoPickupDeliveryMandatory(ibsStatusCode){
	//alert("ibsStatusCode: " + ibsStatusCode);
	if(ibsStatusCode!=undefined && ibsStatusCode!="" && ibsStatusCode.substr(0, 4)=='DOOR'){
		 setCargoPickupMandatory();
	}
	else{
		resetCargoPickup();
	}
	
	if(ibsStatusCode!=undefined && ibsStatusCode!="" && ibsStatusCode.substr(5, 9)=='DOOR'){
		setCargoDeliveryMandatory();
	}
	else{
		resetCargoDelivery();
	}
}

function setCargoPickupMandatory(){
	$('#cargoPickupCityCodeDesc').removeAttr("disabled");
	$("#cargoPickupLbl").html("Cargo Pickup<span class=\"mandatory\">*</span>");
	$("#cargoPickupCityCodeDesc").addClass("validate\[required\]");
}

function resetCargoPickup(){
	$('#cargoPickupCityCodeDesc').attr("disabled", true);
	$("#cargoPickupLbl").html("Cargo Pickup");
	$("#cargoPickupCityCodeDesc").removeClass("validate\[required\]");
	$('#cargoPickupCityCodeDesc').val("");
	$('#cargoPickupCityCode').val("");
}

function setCargoDeliveryMandatory(){
	$('#cargoDeliveryCityCodeDesc').removeAttr("disabled");
	$("#cargoDeliveryLbl").html("Cargo Delivery<span class=\"mandatory\">*</span>");
	$("#cargoDeliveryCityCodeDesc").addClass("validate\[required\]");
}

function resetCargoDelivery(){
	$('#cargoDeliveryCityCodeDesc').attr("disabled", true);
	$("#cargoDeliveryLbl").html("Cargo Delivery");
	$("#cargoDeliveryCityCodeDesc").removeClass("validate\[required\]");
	$('#cargoDeliveryCityCodeDesc').val("");
	$('#cargoDeliveryCityCode').val("");
}

/*function validateRDD(){
	var conventionalRDD = $('#requiredDeliveryDate').val();
	var rdd = $('#milRequiredDeliveryDate').val();
	//alert("conventionalRDD: "+rdd);
	//alert("rdd: "+conventionalRDD);
	if(conventionalRDD!=null && conventionalRDD!='' && rdd!= null && rdd!='' && conventionalRDD!=rdd){
		return "VVD Routing's Conventional RDD and Military's RDD should match.";
	}
}*/

function validateMilitaryFieldsOnSave(){
	var isValid = true;
	if(!$("#militaryIbsStatusCode").hasClass('validate[required]') && $('#militaryIbsStatusCode').val()!=null && $('#militaryIbsStatusCode').val()!="" && $("#tcnGrid").getGridParam("records")==0){
		if(!$('#maintainBookingMilitary').is(':visible')){
			expandMilitaryDiv();
			$('#militaryIbsStatusCode').validationEngine('showPrompt', '* IBS code is not valid for this booking as no TCN exists.', 'error', 'topRight', true);
		}
		else{
			$('#militaryIbsStatusCode').validationEngine('showPrompt', '* IBS code is not valid for this booking as no TCN exists.', 'error', 'topRight', true);
		}
		isValid = false;
   	}
	else if($("#militaryIbsStatusCode").hasClass('validate[required]')&& !$("#tcnGrid").getGridParam("records")==0){
		if($('#militaryIbsStatusCode').val()==""){
			if(!$('#maintainBookingMilitary').is(':visible')){
				expandMilitaryDiv();
			}
			$('#militaryIbsStatusCode').validationEngine('showPrompt', '* This field is required', 'error', 'topRight', true);
			isValid = false;
		}
		if($("#cargoPickupCityCodeDesc").hasClass('validate[required]') && $('#cargoPickupCityCodeDesc').val()==""){
			if(!$('#maintainBookingMilitary').is(':visible')){
				expandMilitaryDiv();
			}
			$('#cargoPickupCityCodeDesc').validationEngine('showPrompt', '* This field is required', 'error', 'topRight', true);
			isValid = false;
		}
		if($("#cargoDeliveryCityCodeDesc").hasClass('validate[required]') && $('#cargoDeliveryCityCodeDesc').val()==""){
			if(!$('#maintainBookingMilitary').is(':visible')){
				expandMilitaryDiv();
			}
			$('#cargoDeliveryCityCodeDesc').validationEngine('showPrompt', '* This field is required', 'error', 'topRight', true);
			isValid = false;
		}
	}
	return isValid;
}

function validateIBSCode(){
	//alert("IBS: " + $('#militaryIbsStatusCode').val());
	if($("#tcnGrid").getGridParam("records")==0 && $('#militaryIbsStatusCode').val()!=null && $('#militaryIbsStatusCode').val()!=""){
		$("#militaryTcn").addClass("validate\[required\]");
   	}else{
   		$("#militaryTcn").removeClass("validate\[required\]");
   	}
}

function expandMilitaryDiv(){
	//collapseAll();
	expandSection(5);
	/*$('.ui-accordion-header.ui-helper-reset.ui-state-default.ui-corner-all')[5].className = "ui-accordion-header ui-helper-reset ui-state-active ui-corner-top";
	$('.ui-accordion-header.ui-helper-reset.ui-state-active.ui-corner-top span').removeClass('ui-icon-triangle-1-e').addClass('ui-icon-triangle-1-s');
	//window.scrollTo(0, 0);
	$('#maintainBookingMilitary').css('display', 'block');*/
}
;$(document).ready(function () {

	var colNames = ['Id', 'DODAAC', 'Actions'];
	var colModels = [
	               {name:'dodaacSeqNo', index:'dodaacSeqNo',hidden:true},	                               
	               {name:'dodaacCode',index:'dodaacCode', width:150, editable:true, editoptions: {maxlength: 6}, editrules:{required:true}},
			   	   {name:'actions', index:'actions', width:70, align:"center", editable:false, search:false, sortable:false, formatter:'actions',
	            	   formatoptions : {keys : true,
	            		   afterSave:function()
	                	   {
	                		   isBookingChanged = "Y";
	                		   return true;
	                	   }
	               }}
			   	];

	var jsonReaderReference = {
			root : "rows",
			page : "page",
			total : "total",
			records : "records",
			repeatitems : false,
			cell : "cell",
			id : "dodaacSeqNo"
		};
	
	/*createGrid(
			"dodaacGrid", // grid id for DODAAC
			"dodaacGridPager", // page id for DODAAC
			_context+'/booking/loadDODAACGrid', 
			_context+'/booking/addDODAAC', 
			_context+'/booking/updateDODAAC', 
			_context+'/booking/deleteDODAAC', 
			_context+'/booking/deleteDODAAC',
			colNames, 
			colModels, 
			"DODAAC",
			83,
			3,
			[3,6,9],
			true,
			true,
			false, //load once
			false, jsonReaderReference, false, false, false, true, 
			false, false, false, false, false, false, true);*/
	
	/*Booking Security*/
	var pagerMultiDelete = true;
	if(isMilitaryDisplayOnly && !isMilitaryModifiable){
		pagerMultiDelete = false;
	}
	
	/*Booking Security*/
	if(isMilitaryDisplayOnly || isMilitaryModifiable){
		/*$('#dodaacGrid').gatesGrid({
			caption: "DODAAC",
			colNames: colNames,
			colModel: colModels,
			jsonReader: jsonReaderReference,
			pager: '#dodaacGridPager',
			rowNum: 3,
			rowList: [ 3, 6, 9 ],
			height: 83,
			multiselect:true,
			gatesOptions: {
				urls: {load:_context+'/booking/loadDODAACGrid', add:_context+'/booking/addDODAAC', edit:_context+'/booking/updateDODAAC', del: _context+'/booking/deleteDODAAC', delMultiple:_context+'/booking/deleteDODAAC'},
				extraData: {
					some: 'thing',
					trade: function() {
						return $('#tradeCode').val();
					}
				},
				controls: {
					navBarAdd: false,
					navBarEdit: false,
					navBarDelete:pagerMultiDelete
				},
				loadComplete: dodaacLoadComplete,
				deleteAfterSubmit: dodaacAfterSubmit
			}
		});*/
		
		createGrid("dodaacGrid", // grid id for party
				"dodaacGridPager", // page id for party
				_context+'/booking/loadDODAACGrid', // geturl
				_context+'/booking/addDODAAC', // addurl
				_context+'/booking/updateDODAAC', // edit url
				_context+'/booking/deleteDODAAC', //delete URL
				_context+'/booking/deleteDODAAC',// delete selected URL
				colNames, colModels, "DODAAC",// caption
				83,// height
				3,// row num
				[ 3, 6, 9 ],// row list
				true,// multiselect
				pagerMultiDelete,// multidelete
				false,// load once
				false, // read only grid
				jsonReaderReference, // json reader
				false, // hide edit
				false, // hide delete
				true, // autowidth
				true, // rownumbers
				true, // hide custom add row
				false,// hide pager row
				null,// custom edit method
				null,// custom grid complete
				dodaacLoadComplete,// custom load complete
				false,// default hidden
				true,// row Color Based On status
				false,// celledit
				dodaacAfterSubmit);//After submit function on delete
	}
});

var dodaacLoadComplete = function(){
	/*Booking Security*/
	if((isMilitaryDisplayOnly && !isMilitaryModifiable)  || $('#bookingStatusCode').val()=='CANC'){
		$("div.ui-pg-div.ui-inline-del").hide();
		$("div.ui-pg-div.ui-inline-edit").hide();
		$('#gview_dodaacGrid input').attr("disabled", true);
		$('table[aria-labelledby="gbox_dodaacGrid"] thead tr[id="tr_dodaacSeqNo"] td a[id="sData"]').hide();
	}else{
		$("div.ui-pg-div.ui-inline-del").show();
		$("div.ui-pg-div.ui-inline-edit").show();
		$('#gview_dodaacGrid input').attr("disabled", false);
		$('table[aria-labelledby="gbox_dodaacGrid"] thead tr[id="tr_dodaacSeqNo"] td a[id="sData"]').show();
	}
	
	$('#gbox_dodaacGrid #sData').click(function(){
		isBookingChanged = "Y";
	});
	
	return true;
};

var dodaacAfterSubmit = function(result)
{
	if(result.success)
		isBookingChanged = "Y";
};
var _SpecialServiceGridCount = -1;
var POV_NAME = "PERSONAL AUTO";
var ALASKA_POV_NAME = "ALASKA AUTO";

function createSpecialServiceGrid(entityName) {
	$("#spSvcEntityName").val(entityName);
	var defaultHidden=false;
	//alert(entityName);
	//alert("spSvcEntityName :- "+$("#spSvcEntityName").val());
	//25729
	var specialServiceCol = [ 'NO','Special Service','Level','All','Equipment/<br>VINSight#','Units','Rate','Rate<br>Basis', 'Special Service Date', 'User', 'Last Update','Payee','Amount'];
	
	var specialServiceMod = [
	                         {name:'seqNo',index:'seqNo', width:0,editable:false, editoptions:{readonly:true,size:10}, hidden:true},
	                         {name:'specialServiceCode',index:'specialServiceCode', width:70,editable:false, formatter:'showlink', formatoptions : {
	                   				baseLinkUrl : "javascript:",
	                				showAction: "editSpecialService('",
	                				addParam: "');" }
	                               }, 
	                         {name:'processLevelCode',index:'processLevelCode', width:40,editable:false},
	                         {name:'isApplyToAll',index:'isApplyToAll', width:20,editable:false}, 
	                         {name:'equipmentVinsight',index:'equipmentVinsight', width:95,editable:false}, //Increased width for D028038 
	                         {name:'numberOfUnit',index:'numberOfUnit', width:40,editable:false}, 
	                         {name:'manualUserRate',index:'manualUserRate', width:100,editable:false,align:'right',//aligned to the right D026538
	                        	 formatter:'currency', 
	                        	 formatoptions:{decimalSeparator:".", thousandsSeparator: ",", decimalPlaces: 2, prefix: "$"}
	                        	 }, 
	                         {name:'rateBasisCode',index:'rateBasisCode', width:40,editable:false}, 
	                         {name:'specialServiceDate',index:'specialServiceDate', width:60,editable:false, hidden:true}, 
	                       //Added code to create User,Date and Time grids in Special Service overlay 25729
	                         {name:'lastUpdateUser',index:'lastUpdateUser', width:60,editable:false},
	                         {name:'lastUpdateDate',index:'lastUpdateDate', width:90,editable:false},
	                         {name:'payee',index:'payee', width:185,editable:false}, //Decreased width for D028038
	                         {name:'amount',index:'amount', width:100,editable:false,align:'right',//aligned to the right D026538
	                        	 formatter:'currency', 
	                        	 formatoptions:{decimalSeparator:".", thousandsSeparator: ",", decimalPlaces: 2, prefix: "$"}
                        	 }
	                        ];
	
	var jsonReaderSpSvc = {
			root : "rows",
			page : "page",
			total : "total",
			records : "records",
			repeatitems : false,
			cell : "cell",
			id : "seqNo"
		};
	
	/*Booking Security*/
	var pagerMultiDelete = true;
	if(isSpecialServiceDisplayOnly && !isSpecialServiceModifiable){
		pagerMultiDelete = false;
	}
	
	if(entityName=='container'){
		//In case of container(maintenance/international maintenance)
		defaultHidden=true;
	}

	/*Booking Security*/
	
	if(isSpecialServiceDisplayOnly || isSpecialServiceModifiable){
		//commented below block for Defect 028731
	/*	if ($('#optionToReplicate').val() == "Commodity" || $('#optionToReplicate').val() == "Customer") {
			createGrid(
					"specialServiceGrid", // grid id for user
					"specialServicePager", // page id for user
					_context+'/booking/specialservice/load?entityName='+entityName,
					_context+'/booking/specialservice/add?entityName='+entityName,
					_context+'/booking/specialservice/update?entityName='+entityName, 
					_context+'/booking/specialservice/delete?entityName='+entityName, 
					_context+'/booking/specialservice/delete?entityName='+entityName,
					specialServiceCol, 
					specialServiceMod, 
					"Special Services",
					93,
					4,
					[4,8,12],
					true,
					pagerMultiDelete,
					false, //load once
					true, jsonReaderSpSvc,true,true,true,true,true,false,false,isSpecialServiceGridEdited,
					specialServiceGridLoadComplete,defaultHidden,true,false, specialServAfterSubmit);
		} else { */
			createGrid(
					"specialServiceGrid", // grid id for user
					"specialServicePager", // page id for user
					_context+'/booking/specialservice/load?entityName='+entityName,
					_context+'/booking/specialservice/add?entityName='+entityName,
					_context+'/booking/specialservice/update?entityName='+entityName, 
					_context+'/booking/specialservice/delete?entityName='+entityName, 
					_context+'/booking/specialservice/delete?entityName='+entityName,
					specialServiceCol, 
					specialServiceMod, 
					"Special Services",
					93,
					4,
					[4,8,12],
					true,
					pagerMultiDelete,
					false, //load once
					true, jsonReaderSpSvc,true,true,true,true,true,false,false,isSpecialServiceGridEdited,
					specialServiceGridLoadComplete,defaultHidden,true,false, specialServAfterSubmit);
	//	}
	}
	 $( "#specialServiceDialog" ).dialog({ autoOpen: false , width: 990 ,height:600, modal: true
			 ,
			 open: function()
			 {
				 tabSequence('#specialServiceDialog',false,false);
			 },
			close: function(){
			 tabSequence('#',true,false);	         	
			 }
		    , buttons: {
		         Cancel: function(){
		        	 	var xErrorCoordinate = window.pageXOffset;
			    		var yErrorCoordinate = window.pageYOffset;
		            	$( this ).dialog( "close" );
		            	isSpecialServiceChanged=false;
		            	removeErrorPointersSPSV();
		            	setTimeout(function(){
							window.scrollTo(xErrorCoordinate, yErrorCoordinate);
							}, 250);
		          },
		          Ok: function(){
		        	  /*Booking Security*/
		        	disableDialogButtonSPSV('specialServiceDialog', 'Ok');
		        	if((isSpecialServiceDisplayOnly && !isSpecialServiceModifiable) || $('#bookingStatusCode').val()=='CANC'){
		        		var xErrorCoordinate = window.pageXOffset;
			    		var yErrorCoordinate = window.pageYOffset;
		        		$("#specialServiceDialog").dialog( "close" );
		        		isSpecialServiceChanged=false;
		        		setTimeout(function(){
							window.scrollTo(xErrorCoordinate, yErrorCoordinate);
							}, 250);
		        		enableDialogButton('specialServiceDialog', 'Ok');
		        		return;
		        	}
		        	
		        	if(!isSpecialServiceChanged){
		        		if($("#isSpecialServiceAdd").val()=="true"){
		        			alert('Please add a Special Service before you Click Ok');
		        			isSpecialServiceChanged=false;
		        		}else{
		        			alert('Special Service cannot be updated since no fields have been changed');
		        			isSpecialServiceChanged=false;
		        		}
		        		enableDialogButton('specialServiceDialog', 'Ok');
			        	return;
		        	}
		        	
		        	
		        	if(validateSpecialServiceFields()){
		        		
	        			$("#specialServiceMasterForm").validationEngine('detach');
	        			$("#specialServiceMasterForm").validationEngine('attach');
	        			if ($("#specialServiceMasterForm").validationEngine('validate')) {
	        				removeErrorPointersSPSV();
			        	var specialService = $('#specialServiceMasterForm').formSerialize();
			        	var dataUrl = _context +"/booking/specialservice/add?entityName="+entityName;
			        	if($("#isSpecialServiceAdd").val()=="false"){
			        		dataUrl = _context +"/booking/specialservice/edit?entityName="+entityName;
			        	}
			        	if(entityName == 'quote' ){
			        		//D028494
			        		if(isRatingAssociated('add','0')){
			        		 if( !checkTargetProcessRating()){
			        			isSpecialServiceChanged=true;
			        			enableDialogButton('specialServiceDialog', 'Ok');
			        			return;
			        		}	}
			        	}
			        	blockUI();
			        	
			        	$.ajax({
			        		type: "POST",
			        		url: dataUrl,
			        		data: specialService,
			        		success: function(responseText){
			        			if(responseText.success){
			        				$('#msgDivSplSrv').hide();
			        				isBookingChanged = "Y";
			        				var xErrorCoordinate = window.pageXOffset;
						    		var yErrorCoordinate = window.pageYOffset;
			        				$("#specialServiceDialog").dialog( "close" );
			        				setTimeout(function(){
										window.scrollTo(xErrorCoordinate, yErrorCoordinate);
										}, 250);
			        				isSpecialServiceChanged=false;
			        				$("#specialServiceGrid").trigger('reloadGrid');
			        				
			        				var entityName=$("#spSvcEntityName").val();
			        				if(entityName == 'booking'){
			        					checkPremPovRDDPresent();
			        				}
			        				//D025855: Maintain Booking / Special Services Ok Button not working
			        				enableDialogButton('specialServiceDialog', 'Ok');
			        			}else{
			        				$('#msgDivSplSrv').hide();
			        				showSpSVMessages('msgDivSplSrv', responseText);
									$('#msgDivSplSrv').show();
									//D025855: Maintain Booking / Special Services Ok Button not working
									enableDialogButton('specialServiceDialog', 'Ok');
			        			}
			        		}
			        	});
			        	$.unblockUI();
	        		} else {
	        		    //D025855: Maintain Booking / Special Services Ok Button not working
	        			enableDialogButton('specialServiceDialog', 'Ok');
	        		}
		          } else{
		        	  enableDialogButton('specialServiceDialog', 'Ok');
		        	  $("#specialServiceMasterForm").validationEngine('detach');
		        	  $("#specialServiceMasterForm").validationEngine('attach');
		        	  $("#specialServiceMasterForm").validationEngine('validate');
		          }
	        } 
	 }});
	 
	 $('div[aria-labelledby="ui-dialog-title-specialServiceDialog"] .ui-icon-closethick').click(function(){
		var xErrorCoordinate = window.pageXOffset;
		var yErrorCoordinate = window.pageYOffset;
		setTimeout(function(){
			window.scrollTo(xErrorCoordinate, yErrorCoordinate);
			}, 250);
	 });
	 
	 $("#specialSerivceAdd").click(function(){
		 var entityName=$("#spSvcEntityName").val();
		 if(entityName == 'quote'){
			 jQuery('#quoteForm').validationEngine('hideAll');	 
		 }		 
		 specialServiceAddClick();
		 
		 return false;
	 });
	 
	 $('div[aria-labelledby="ui-dialog-title-specialServiceDialog"] div span[class="ui-icon ui-icon-closethick"]').click(function(){
		 removeErrorPointersSPSV();
	 });
	 
	/* tabSequence("#tabSequenceSPSV");*/
}

function checkPremPovRDDPresent(){
	
	
		var isPremPovPresent = false;
		if($("#isSpecialServiceAdd").val()=='true'){
			if($('input[name="specialServiceFormLine1\\.specialServiceCode"]').val()=="PREM-POV"){
				isPremPovPresent=true;
			}
			if($('input[name="specialServiceFormLine2\\.specialServiceCode"]').val()=="PREM-POV"){
				isPremPovPresent=true;
			}
			if($('input[name="specialServiceFormLine3\\.specialServiceCode"]').val()=="PREM-POV"){
				isPremPovPresent=true;
			}
			if($('input[name="specialServiceFormLine4\\.specialServiceCode"]').val()=="PREM-POV"){
				isPremPovPresent=true;
			}
			if($('input[name="specialServiceFormLine5\\.specialServiceCode"]').val()=="PREM-POV"){
				isPremPovPresent=true;
			}
		}
		if(isPremPovPresent){
			$('#msgDiv').html('<div class="message_warning">Added Special Service required Delivery date to be provided.</div>');
			$('#msgDiv').show();
		}
}


function removeErrorPointersSPSV()
{
	$("#specialServiceMasterForm").validationEngine('hideAll');
}

function specialServiceAddClick(){	
	var entityName=$("#spSvcEntityName").val();
	 var bookingStatusCode=$('#bookingStatusCode').val();
	 $('#msgDivSplSrv').hide();
	 //If have permission then only allowed to check for entity status
	 /*Booking Security*/
	 if(isSpecialServiceDisplayOnly && isSpecialServiceModifiable){
		 if(entityName == 'quote'){					 
			if(!($('#statusCode').val()=="" || $('#statusCode').val()=="PEND" || $('#statusCode').val()=="APPR")) {
				alert("Special Services cannot be added for this quote status");
				return;
			}else{
				 if($('#statusCode').val()=="" || $('#statusCode').val()=="PEND" || $('#statusCode').val()=="APPR"){
					 tabSequence("#tabSequenceSPSV");
					 openSpecialServices();
				}
			}	
		}else if(entityName == 'booking'){			
			if(bookingStatusCode==undefined || bookingStatusCode==null || bookingStatusCode=='' || bookingStatusCode!='CANC'){
				tabSequence("#tabSequenceSPSV");
				openSpecialServices();
			}
		}else if(entityName == 'container'){
			var shipmentStatus=$('#shipmentStatus').val();
			if( shipmentStatus==undefined || shipmentStatus==null || shipmentStatus=='' || (shipmentStatus !='ISSD' && shipmentStatus!='CORR')) {
				tabSequence("#tabSequenceSPSV");
				openSpecialServices();
			}else{
				//alert("Special Services cannot be added as Container has been ISSD or CORR.");
			}
		}
 	}
}
	 
var specialServAfterSubmit = function(result)
{
	
	if(result.success) {
		isBookingChanged = "Y";
	} else {
		result.messages = result.messagesMap;
		showSpSVMessages("msgDiv", result);
		
		console.log(result.messagesMap.error);
	}
};

var specialServiceGridLoadComplete = function(){
	var entityName=$("#spSvcEntityName").val();
	//$('#specialServicePager .ui-pg-input').attr("readonly", true);
	var specialServiceNumberCount = $("#specialServiceGrid").getGridParam("reccount");
	var specialServiceDisplayText = "  ";
	var isPreiumServicePresent = false;
	var premiumRDD = '';
	//18644
	var arrayServices="";
	var specialServiceDisplayText1 = "  ";
	if(specialServiceNumberCount>0){
		for(var i=1;i<=specialServiceNumberCount;i++){
			var specialService = $("#specialServiceGrid").jqGrid('getCell', i , "specialServiceCode" );
			if(i==1){
				if(null!=specialService && specialService!=undefined && specialService!=false){
					//specialServiceDisplayText=specialServiceDisplayText+' - '+specialService;
					arrayServices=specialService;
				}
			}else{
				if(null!=specialService && specialService!=undefined && specialService!=false){
					//specialServiceDisplayText=specialServiceDisplayText+', '+specialService;
					arrayServices=arrayServices+','+specialService;
					
				}
			}
			
			//For Premium RDD
			if(specialService=='PREM-POV'){
				isPreiumServicePresent = true;
				premiumRDD =  $("#specialServiceGrid").jqGrid('getCell', i , "specialServiceDate" );
			}
		}
		var array1 =new Array();
		array1 = arrayServices.split(',');
		
		var array2 = new Array();
		
		for(var i=0; i<array1.length; i++) 
		{
		      var xx = true;
			for(var j=i+1; j<array1.length; j++)
			{
				if(array1[i] == array1[j])
					xx = false;					
			}	
			if(xx == true)
				{				
					array2.push(array1[i]);		
				}
		}
		for(var i=0; i<array2.length; i++)
			{
				var count=0;		
			for (var j=0;j<array1.length;j++)
				
				{
				if(array2[i]==array1[j])
					{
					count++;
					}
				}
			if(count>1)
				{				
				specialServiceDisplayText=specialServiceDisplayText+' | '+array2[i]+'('+count+')';
				}
			else
				{				
			specialServiceDisplayText=specialServiceDisplayText+' | '+array2[i];
			}
					
			}
		
	}
	if(isPreiumServicePresent && $.trim($('#loadDschServiceGroupCode').val()) == "AU" && isRoutingModifiable 
			&& ($.trim($('#customerGroupId :selected').text()) == POV_NAME || $.trim($('#customerGroupId :selected').text()) == ALASKA_POV_NAME))
	{
		$('#vvd_premium').show();
		$('#premiumRDD').attr("disabled", false);
		if(premiumRDD != null && premiumRDD != 'null' && premiumRDD != ''){
			$('#premiumRDD').val(premiumRDD);
		}
		/*if($('#milRequiredDeliveryDate').val()=='')
			$('#premiumRDD').val('01-01-0001');
		else
			$('#premiumRDD').val($('#milRequiredDeliveryDate').val());*/
	} 
	else 
	{
		$('#premiumRDD').val('');
		$('#premiumRDD').attr("disabled", true);
		$('#vvd_premium').hide();
	}
	
	
	if(entityName == 'quote'){
		setAccordianTabDetails('splServicesHeader',specialServiceDisplayText);
	}
	if(entityName=='booking' || entityName == 'quote'){
		
		
		$('#gridIdForClauses').trigger("reloadGrid");
		var userData = $("#specialServiceGrid").getGridParam('userData');
		// D029646: 	Haz Dray/special service on Container Maintenance 
		if(userData && userData.ACCORDIANDISPLAY) { 
			setAccordianTabDetails('splServicesHeader', userData.ACCORDIANDISPLAY);
		} else {
			setAccordianTabDetails('splServicesHeader',specialServiceDisplayText);
		}
		//D026261: 	FW: Maintain booking : SIT flag to VVD Routing 
		
		if(userData && userData.SITEXISTS) { 
			$('#isSIT').val("true");
		} else {
			$('#isSIT').val("false");
		}
		
	}
	if(entityName=='container'){
		setAccordianTabDetails('splServicesHeader',specialServiceDisplayText);
		$('div[id="gview_specialServiceGrid"] div span[class="ui-jqgrid-title"]').html("Special Services"+specialServiceDisplayText);
	}
	if(entityName == 'quote'){
		var allRows=$('#specialServiceGrid').children().children();
		for(var i=1;i<allRows.length;i++) {
			$($($('#specialServiceGrid').children().children()[i]).children()[3]).css('font-weight','bold');
		}
	}
	
};


function openSpecialServices(){
	//getRateBasisList();
	$("#specialServiceDialog" ).dialog( "option", "title", 'Special Services' );
	$("#specialServiceDialog" ).dialog('open'); 
	
	$("#specialServiceFormLine2").show();
	$("#specialServiceFormLine3").show();
	$("#specialServiceFormLine4").show();
	$("#specialServiceFormLine5").show();
	//defect 25729
	$("#useranddateHeader").hide();
	$("#useranddate").hide();
	$("#specialServiceDialog").height(550);
	$("#specialServiceMasterForm").clearForm();
	removeClassesForSpecialServiceForm();
	populateDefaultPageOptions();
	removeErrorPointersSPSV();
	$("#isSpecialServiceAdd").val("true");
	isSpecialServiceChanged=false;
	
}  

function isSpecialServiceGridEdited() {
	var numOfSpecialServices = $("#specialServiceGrid").getGridParam("reccount");
	var entityName=$("#spSvcEntityName").val();
	if(entityName == 'quote'){
		if(_SpecialServiceGridCount==-1){
			_SpecialServiceGridCount = numOfSpecialServices;
		}else if(_SpecialServiceGridCount > numOfSpecialServices){
			_isQuoteChanged = true;			
		}
		if(_SpecialServiceGridCount != numOfSpecialServices){
			passthru = false;
		}
	}	
	_SpecialServiceGridCount = numOfSpecialServices;
}

function canSpecialServiceGridDeleted(entityName){
	if(entityName != undefined && entityName == 'quote'){
		if(checkTargetProcessRating()){
			return _context+'/booking/specialservice/delete?entityName='+entityName;
		}else
			return null;
	}else{
		return _context+'/booking/specialservice/delete?entityName='+entityName;
	}
	
}



//Check if Target Process has FRT Charges, if yes prompt the user that FRT Charges will be deleted, Inaddition Delete non-Genric Charges
//D026514 Point 5
function  checkTargetProcessRating(){
	var isValid = true;
	$.ajax({
		type : "POST",
		url : _context + "/quote/charge/checkTargetProcess",
		async : false,
		success :  function(responseText){
			if(responseText.success){
				if(null!=responseText.data && undefined!=responseText.data){
					if(responseText.data){
						var r=confirm("All Charges will be deleted. Would you like to continue ");
						if (r==true)
						  {
							$.ajax({
								type : "POST",
								url: _context + "/quote/charge/deleteFRTCharges",
								async : false,
						        success: function(responseText){
						        	$("#quoteChargeLineGrid").trigger("reloadGrid");
						        }
						       
							});
							isValid = true;
						  }
						else
						  {
							isValid = false;
						  }
					}
				}
			}
		}
		
	});
	
	return isValid;
	
}

//D028494
function  isRatingAssociated(action,id){
	var isValid = false;
	var specialService = $('#specialServiceMasterForm').formSerialize();
	var entityName='quote';
	$.ajax({
		type : "POST",
		data : specialService,
		url : _context + "/booking/specialservice/isRatingAssociated?entityName="+entityName+'&action='+action+'&id='+id,
		async : false,
		success :  function(responseText){
			if(responseText.success){
				if(null!=responseText.data && undefined!=responseText.data){
					if(responseText.data){
							isValid = true;
						  }
						else
						  {
							isValid = false;
						  }
					}
				}
			}
		});
	return isValid;
}


function editSpecialService(id) {
	//getRateBasisList();
	var seqNo = id.split('=')[1];
	var bookingStatusCode=$('#bookingStatusCode').val();
	var entityName=$("#spSvcEntityName").val();
	if(entityName == 'quote'){
		if(!($('#statusCode').val()=="" || $('#statusCode').val()=="PEND" || $('#statusCode').val()=="APPR")) {
			$("#specialServiceDialog").gatesDisable();
		}
	}else if(entityName == 'booking'){
		/*Booking Security*/
		if((isSpecialServiceDisplayOnly && !isSpecialServiceModifiable) || bookingStatusCode=='CANC'){
			$("#specialServiceDialog").gatesDisable();
		}
		else if(bookingStatusCode==undefined || bookingStatusCode==null || bookingStatusCode=='' || bookingStatusCode!='CANC'){
			$("#specialServiceDialog").gatesEnable();
		}
	}
	showSpecialServiceDialog(seqNo);
}

function showSpecialServiceDialog(seqNo){
	var entityName=$("#spSvcEntityName").val();
	isSpecialServiceChanged=false;
	var dataUrl = _context +"/booking/specialservice/getSpecialService?seqNo="+seqNo+'&entityName='+entityName;
	$("#specialServiceMasterForm").clearForm();
	$.ajax({
		url: dataUrl,
		success: function(responseText){
			$("#specialServiceDialog").gatesEnable();
			enableDialogButton('specialServiceDialog', 'Ok');
			
			removeClassesForSpecialServiceForm();
			populateDefaultPageOptions();
			$('#msgDivSplSrv').hide();
			$("#specialServiceDialog").dialog('open');
			$("#isSpecialServiceAdd").val("false");
			$("#specialServiceFormLine2").hide();
			$("#specialServiceFormLine3").hide();
			$("#specialServiceFormLine4").hide();
			$("#specialServiceFormLine5").hide();
			//defect 25729
			$("#useranddateHeader").show();
			$("#useranddate").show();
			$("#specialServiceMasterForm").loadJSON(responseText);
			$('input[name="specialServiceFormLine1\\.specialServiceCode"]').val(responseText.specialServiceFormLine1.specialServiceCode);
			$('input[name="specialServiceFormLine1\\.commodityLineNumber"]').val(responseText.specialServiceFormLine1.commodityLineNumber);
			$('input[name="specialServiceFormLine1\\.equipmentVinsight"]').val(responseText.specialServiceFormLine1.equipmentVinsight);
			$('input[name="specialServiceFormLine1\\.numberOfUnit"]').val(responseText.specialServiceFormLine1.numberOfUnit);
			$('input[name="specialServiceFormLine1\\.manualUserRate"]').val(responseText.specialServiceFormLine1.manualUserRate);
			$('select[name="specialServiceFormLine1\\.rateBasisCode"]').val(responseText.specialServiceFormLine1.rateBasisCode);
			$('input[name="specialServiceFormLine1\\.payee"]').val(responseText.specialServiceFormLine1.payee);
			$('#passThruCharge1').val(responseText.specialServiceFormLine1.passThruCharge);
			$('#passThruPayable1').val(responseText.specialServiceFormLine1.passThruPayable);
			var amountReadOnly = responseText.specialServiceFormLine1.amountReadOnly;
			if(amountReadOnly !=null && amountReadOnly !='' && ! isNaN(amountReadOnly) && amountReadOnly != undefined){
				amountReadOnly = parseFloat(amountReadOnly);
				$('input[name="specialServiceFormLine1\\.amountReadOnly"]').val(amountReadOnly.toFixed(2));
			}
			
			$("#specialServiceDialog").height(180);
			
			populateHiddenFields(1);
			applyUIValidations(1);
			checkRateBasisRequired(1);
			changeValueToDecimalFormat(1);
			var entityName=$("#spSvcEntityName").val();
			
			$('#msgDivSplSrv').hide();
			
			
			if(isSpecialServiceDisplayOnly && !isSpecialServiceModifiable){
				$("#specialServiceDialog").gatesDisable();
				disableDialogButtonSPSV('specialServiceDialog', 'Ok');
			}else if(isSpecialServiceDisplayOnly && isSpecialServiceModifiable) {
				
				if(entityName == 'quote'){
					if(!($('#statusCode').val()=="" || $('#statusCode').val()=="PEND" || $('#statusCode').val()=="APPR")) {
						$("#specialServiceDialog").gatesDisable();
						disableDialogButtonSPSV('specialServiceDialog', 'Ok');
					}
				}else if(entityName == 'booking'){
					var bookingStatusCode=$('#bookingStatusCode').val();
					if(bookingStatusCode=='CANC'){
						$("#specialServiceDialog").gatesDisable();
						disableDialogButtonSPSV('specialServiceDialog', 'Ok');
					}
				}else if(entityName == 'container'){
					var shipmentStatus=$('#shipmentStatus').val();
					if(shipmentStatus =='ISSD' || shipmentStatus=='CORR') {
						$("#specialServiceDialog").gatesDisable();
						disableDialogButtonSPSV('specialServiceDialog', 'Ok');
					}
				}
			}
			
			removeErrorPointersSPSV();
			isSpecialServiceChanged=false;
		}
	});
}

function disableDialogButtonSPSV(dialogId, buttonName){
	$("#"+dialogId+"~ .ui-dialog-buttonpane").contents().find("button:contains('"+buttonName+"')").button("disable");
}

function enableDialogButton(dialogId, buttonName){
	$("#"+dialogId+"~ .ui-dialog-buttonpane").contents().find("button:contains('"+buttonName+"')").button("enable");
}

function validateOkButton(){
	/*var isSuccessful=true;
	for(var i=1;i<=5;i++){
		var specialServiceCode= $('input[name="specialServiceFormLine'+i+'\\.specialServiceCode"]').val();
		var hiddenSpecialServiceCode= $('#specialServiceCode'+i).val();
		if((specialServiceCode!=null || specialServiceCode!="") && (hiddenSpecialServiceCode!=null || hiddenSpecialServiceCode!="") ){
			isSuccessful=false;
			break;
		}
	}
	return isSuccessful;*/
	
	if(isSpecialServiceChanged){
		return true;
	}
	return false;
}

function unloadSpecialServiceGrid(){
	$('#specialServiceGrid').jqGrid('GridUnload');
}

function loadSpecialServiceGrid(){
	$('#specialServiceGrid').trigger("reloadGrid");
}

function showSpSVMessages(msgDivId, responseText)  { 
  	if (responseText.messages) {

		var messages = responseText.messages;
		var messageContent = '';
		if (messages.error.length > 0) {
			var array = messages.error;
			var len = messages.error.length;
			for (var i=0; i<len; i++) {
				
				messageContent += '<div class="message_error">' + array[i] + '</div>';
			}
		}

		if (messages.warn.length > 0) {
			var array = messages.warn;
			var len = messages.warn.length;
			for (var i=0; i<len; i++) {
				messageContent += '<div class="message_warning">' + array[i] + '</div>';
			}
		}
		
		if (messages.info.length > 0) {
			var array = messages.info;
			var len = messages.info.length;
			for (var i=0; i<len; i++) {
				messageContent += '<div class="message_info">' + array[i] + '</div>';
			}
		}

		if (messages.success.length > 0) {
			var array = messages.success;
			var len = messages.success.length;
			for (var i=0; i<len; i++) {
				messageContent += '<div class="message_success">' + array[i] + '</div>';
			}
		}

		console.log('messageContent='+messageContent);
		$('#'+msgDivId).html(messageContent);
		
		if(messageContent!='')
			window.scrollTo(0, 0);
  	}
};var isSpecialServiceChanged=false;
$(document).ready(function () {
		
	var spsvCodeLineNumber=0;
	var truckerLineNumber=0;
	var payeeLineNumber=0;
	var equipmentVinsightLineNumber=0;
	
	var entityName=$("#spSvcEntityName").val();	
	/*$('input[name="specialServiceFormLine1\\.specialServiceCode"]').change(function(){
		var index=1;
		checkForSpecialServiceCdChg(index);
		if(entityName=='quote'){
			_isQuoteChanged = true;
		}
		isSpecialServiceChanged = true;
	});*/
	/*$('input[name="specialServiceFormLine2\\.specialServiceCode"]').change(function(){
		var index=2;
		checkForSpecialServiceCdChg(index);
		if(entityName=='quote'){
			_isQuoteChanged = true;
		}
		isSpecialServiceChanged = true;
	});
	$('input[name="specialServiceFormLine3\\.specialServiceCode"]').change(function(){
		var index=3;
		checkForSpecialServiceCdChg(index);
		if(entityName=='quote'){
			_isQuoteChanged = true;		
		}
		isSpecialServiceChanged = true;
	});
	$('input[name="specialServiceFormLine4\\.specialServiceCode"]').change(function(){
		var index=4;
		checkForSpecialServiceCdChg(index);
		if(entityName=='quote'){
			_isQuoteChanged = true;
		}
		isSpecialServiceChanged = true;
	});
	$('input[name="specialServiceFormLine5\\.specialServiceCode"]').change(function(){
		var index=5;
		checkForSpecialServiceCdChg(index);
		if(entityName=='quote'){
			_isQuoteChanged = true;
		}
		isSpecialServiceChanged = true;
	});*/
	
	//your custom button is #bDelete
	$('#del_specialServiceGrid').click(function(){ 

	    // Get the currently selected rows
	    toDelete = $("#specialServiceGrid").jqGrid('getGridParam','selarrrow');
	    // You'll get a pop-up confirmation dialog, and if you say yes,
	    // it will call "delete.php" on your server.
	    if(entityName != undefined && entityName == 'quote'){
	    	$('#delmodspecialServiceGrid').hide();
	    	if (confirm('Are you sure you want to delete?')) {
	    		//D028494
				if(isRatingAssociated('delete',toDelete))
				{
					if(checkTargetProcessRating())
					{
				      $('#dData').trigger('click');
				    }
					else{
						$('#eData').trigger('click');
					}
		        }
				else
				{
				$('#dData').trigger('click');	
				} 
	    	}
	    	else{
	    		$('#eData').trigger('click');
	    	}
	    }else{
	    	
	    }
	});


	
	
	$("#specialServiceFormLine1 input").change(function() {
		checkForSpecialServiceCdChg(1);
		if(entityName=='quote'){
			_isQuoteChanged = true;
		}
		isSpecialServiceChanged = true;
	});

	$("#specialServiceFormLine1 select").change(function() {
		if(entityName=='quote'){
			_isQuoteChanged = true;
		}
		isSpecialServiceChanged = true;
	});
	
	$("#specialServiceFormLine2 input").change(function() {
		checkForSpecialServiceCdChg(2);
		if(entityName=='quote'){
			_isQuoteChanged = true;
		}
		isSpecialServiceChanged = true;
	});

	$("#specialServiceFormLine2 select").change(function() {
		if(entityName=='quote'){
			_isQuoteChanged = true;
		}
		isSpecialServiceChanged = true;
	});
	
	$("#specialServiceFormLine3 input").change(function() {
		checkForSpecialServiceCdChg(3);
		if(entityName=='quote'){
			_isQuoteChanged = true;
		}
		isSpecialServiceChanged = true;
	});

	$("#specialServiceFormLine3 select").change(function() {
		if(entityName=='quote'){
			_isQuoteChanged = true;
		}
		isSpecialServiceChanged = true;
	});
	
	$("#specialServiceFormLine4 input").change(function() {
		checkForSpecialServiceCdChg(4);
		if(entityName=='quote'){
			_isQuoteChanged = true;
		}
		isSpecialServiceChanged = true;
	});

	$("#specialServiceFormLine4 select").change(function() {
		if(entityName=='quote'){
			_isQuoteChanged = true;
		}
		isSpecialServiceChanged = true;
	});
	
	$("#specialServiceFormLine5 input").change(function() {
		checkForSpecialServiceCdChg(5);
		if(entityName=='quote'){
			_isQuoteChanged = true;
		}
		isSpecialServiceChanged = true;
	});

	$("#specialServiceFormLine5 select").change(function() {
		if(entityName=='quote'){
			_isQuoteChanged = true;
		}
		isSpecialServiceChanged = true;
	});
	
	
	
	$('#imgSpecialServiceCodeLine1').click(function(){
		var index=1;
		casSpSvcCodeLookup(index);
	});
	$('#imgSpecialServiceCodeLine2').click(function(){
		var index=2;
		casSpSvcCodeLookup(index);
	});
	$('#imgSpecialServiceCodeLine3').click(function(){
		var index=3;
		casSpSvcCodeLookup(index);
	});
	$('#imgSpecialServiceCodeLine4').click(function(){
		var index=4;
		casSpSvcCodeLookup(index);
	});
	$('#imgSpecialServiceCodeLine5').click(function(){
		var index=5;
		casSpSvcCodeLookup(index);
	});
	
	$('#imgTruckerRateLine1').click(function(){
		var index=1;
		casTruckerLookup(index);
	});
	$('#imgTruckerRateLine2').click(function(){
		var index=2;
		casTruckerLookup(index);
	});
	$('#imgTruckerRateLine3').click(function(){
		var index=3;
		casTruckerLookup(index);
	});
	$('#imgTruckerRateLine4').click(function(){
		var index=4;
		casTruckerLookup(index);
	});
	$('#imgTruckerRateLine5').click(function(){
		var index=5;
		casTruckerLookup(index);
	});
	
	$('#imgPayeeLine1').click(function(){
		var index=1;
		casPayeeLookup(index);
	});
	$('#imgPayeeLine2').click(function(){
		var index=2;
		casPayeeLookup(index);
	});
	$('#imgPayeeLine3').click(function(){
		var index=3;
		casPayeeLookup(index);
	});
	$('#imgPayeeLine4').click(function(){
		var index=4;
		casPayeeLookup(index);
	});
	$('#imgPayeeLine5').click(function(){
		var index=5;
		casPayeeLookup(index);
	});
	
	$('select[name="specialServiceFormLine1\\.rateBasisCode"]').change(function(){
		var index=1;
		processRateBasis(index);
		checkForAHCustomization(index);
	});
	$('select[name="specialServiceFormLine2\\.rateBasisCode"]').change(function(){
		var index=2;
		processRateBasis(index);
		checkForAHCustomization(index);
	});
	$('select[name="specialServiceFormLine3\\.rateBasisCode"]').change(function(){
		var index=3;
		processRateBasis(index);
		checkForAHCustomization(index);
	});
	$('select[name="specialServiceFormLine4\\.rateBasisCode"]').change(function(){
		var index=4;
		processRateBasis(index);
		checkForAHCustomization(index);
	});
	$('select[name="specialServiceFormLine5\\.rateBasisCode"]').change(function(){
		var index=5;
		processRateBasis(index);
		checkForAHCustomization(index);
	});
	
	$('select[name="specialServiceFormLine1\\.isDropOrPull"]').change(function(){
		var index=1;
		checkForAHCustomization(index);
	});
	$('select[name="specialServiceFormLine2\\.isDropOrPull"]').change(function(){
		var index=2;
		checkForAHCustomization(index);
	});
	$('select[name="specialServiceFormLine3\\.isDropOrPull"]').change(function(){
		var index=3;
		checkForAHCustomization(index);
	});
	$('select[name="specialServiceFormLine4\\.isDropOrPull"]').change(function(){
		var index=4;
		checkForAHCustomization(index);
	});
	$('select[name="specialServiceFormLine5\\.isDropOrPull"]').change(function(){
		var index=5;
		checkForAHCustomization(index);
	});

	$('input[name="specialServiceFormLine1\\.manualUserRate"]').change(function(){
		var index=1;
		checkForAHCustomization(index);
	});
	$('input[name="specialServiceFormLine2\\.manualUserRate"]').change(function(){
		var index=2;
		checkForAHCustomization(index);
	});
	$('input[name="specialServiceFormLine3\\.manualUserRate"]').change(function(){
		var index=3;
		checkForAHCustomization(index);
	});
	$('input[name="specialServiceFormLine4\\.manualUserRate"]').change(function(){
		var index=4;
		checkForAHCustomization(index);
	});
	$('input[name="specialServiceFormLine5\\.manualUserRate"]').change(function(){
		var index=5;
		checkForAHCustomization(index);
	});
	
	//Cas search Integration
	casPredictiveSearchOnAllLines();
	casPredictiveSearchOnAllPayee();
	
	//BR 5 All indicator implementation
	$('select[name="specialServiceFormLine1\\.isApplyToAll"]').change(function(){
		var index=1;
		validateApplyToAllInd(index);
	});
	$('select[name="specialServiceFormLine2\\.isApplyToAll"]').change(function(){
		var index=2;
		validateApplyToAllInd(index);
	});
	$('select[name="specialServiceFormLine3\\.isApplyToAll"]').change(function(){
		var index=3;
		validateApplyToAllInd(index);
	});
	$('select[name="specialServiceFormLine4\\.isApplyToAll"]').change(function(){
		var index=4;
		validateApplyToAllInd(index);
	});
	$('select[name="specialServiceFormLine5\\.isApplyToAll"]').change(function(){
		var index=5;
		validateApplyToAllInd(index);
	});
	
	$('#equipmentVinsight1').click(function(){
		var index="1";
		casEquipmentVinsightLookup(index);
	});
	$('#equipmentVinsight2').click(function(){
		var index="2";
		casEquipmentVinsightLookup(index);
	});
	$('#equipmentVinsight3').click(function(){
		var index="3";
		casEquipmentVinsightLookup(index);
	});
	$('#equipmentVinsight4').click(function(){
		var index="4";
		casEquipmentVinsightLookup(index);
	});
	$('#equipmentVinsight5').click(function(){
		var index="5";
		casEquipmentVinsightLookup(index);
	});

	getRateBasisList();

	populateDefaultPageOptions();
	if($('#bookingStatusCode').val()!='CANC')
		removeClassesForSpecialServiceForm();
	$('#msgDivSpSv').hide();
	
	$("#specialServiceMasterForm").validationEngine('attach');
	
	$('input[name="specialServiceFormLine1\\.manualUserRate"]').change(function(){
		var index="1";
		checkRateBasisRequired(index);
		changeValueToDecimalFormat(index);
	});
	$('input[name="specialServiceFormLine2\\.manualUserRate"]').change(function(){
		var index="2";
		checkRateBasisRequired(index);
		changeValueToDecimalFormat(index);
	});
	$('input[name="specialServiceFormLine3\\.manualUserRate"]').change(function(){
		var index="3";
		checkRateBasisRequired(index);
		changeValueToDecimalFormat(index);
	});
	$('input[name="specialServiceFormLine4\\.manualUserRate"]').change(function(){
		var index="4";
		checkRateBasisRequired(index);
		changeValueToDecimalFormat(index);
	});
	$('input[name="specialServiceFormLine5\\.manualUserRate"]').change(function(){
		var index="5";
		checkRateBasisRequired(index);
		changeValueToDecimalFormat(index);
	});
	
	$("#specialServiceMasterForm").validationEngine('detach');
	$("#specialServiceMasterForm").validationEngine('attach');

	
	$('input[name="specialServiceFormLine1\\.payee"]').change(function(){
		var index="1";
		validatePayee(index);
	});
	$('input[name="specialServiceFormLine2\\.payee"]').change(function(){
		var index="2";
		validatePayee(index);
	});
	$('input[name="specialServiceFormLine3\\.payee"]').change(function(){
		var index="3";
		validatePayee(index);
	});
	$('input[name="specialServiceFormLine4\\.payee"]').change(function(){
		var index="4";
		validatePayee(index);
	});
	$('input[name="specialServiceFormLine5\\.payee"]').change(function(){
		var index="5";
		validatePayee(index);
	});
	
	$('input[name="specialServiceFormLine1\\.equipmentVinsight"]').change(function(){
		var index="1";
		checkEquipmentContainer(index);
	});
	$('input[name="specialServiceFormLine2\\.equipmentVinsight"]').change(function(){
		var index="2";
		checkEquipmentContainer(index);
	});
	$('input[name="specialServiceFormLine3\\.equipmentVinsight"]').change(function(){
		var index="3";
		checkEquipmentContainer(index);
	});
	$('input[name="specialServiceFormLine4\\.equipmentVinsight"]').change(function(){
		var index="4";
		checkEquipmentContainer(index);
	});
	$('input[name="specialServiceFormLine5\\.equipmentVinsight"]').change(function(){
		var index="5";
		checkEquipmentContainer(index);
	});
	
	$('input[name="specialServiceFormLine1\\.commodityLineNumber"]').change(function(){
		var index="1";
		validateCommodityLineNumber(index);
	});
	$('input[name="specialServiceFormLine2\\.commodityLineNumber"]').change(function(){
		var index="2";
		validateCommodityLineNumber(index);
	});
	$('input[name="specialServiceFormLine3\\.commodityLineNumber"]').change(function(){
		var index="3";
		validateCommodityLineNumber(index);
	});
	$('input[name="specialServiceFormLine4\\.commodityLineNumber"]').change(function(){
		var index="4";
		validateCommodityLineNumber(index);
	});
	$('input[name="specialServiceFormLine5\\.commodityLineNumber"]').change(function(){
		var index="5";
		validateCommodityLineNumber(index);
	});
	//tabSequence('#specialServiceMasterForm',false,false);
	
	
});


function checkEquipmentContainer(index){
	var entityName=$("#spSvcEntityName").val();
	if(entityName=='booking'){
		var isRequiredUnit=$('#isRequireReceivedUnit').val();
		var shipmentNumber=$('#shipmentNumberHidden').val();
		var bookingId=$('#bookingId').val();
		var equipmentVinsight=$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').val();
		if(!(equipmentVinsight == undefined || equipmentVinsight=='' || equipmentVinsight==null)){
			$.ajax({
				type : "POST",
				url : _context +"/booking/specialservice/getUnitOrEquipment",
				data : {
					
					vinsightequipment: equipmentVinsight,
					isRequiredUnit: isRequiredUnit,
					bookingId: bookingId
				},
				success : function(responseText) {	
					if(responseText.success){
						$('#msgDivSplSrv').hide();
						if(isRequiredUnit=='Y'){
							if(null!=responseText.data && undefined!=responseText.data && ''!=responseText.data ){
								$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').val(responseText.data[0]); 
								$("#equipmentVinsightHidden"+index).val(responseText.data[0]);
								$('input[name="specialServiceFormLine'+index+'\\.receivedUnitId"]').val(responseText.data[0]);
							}else{
								showErrorMessage('VINsight ID# '+equipmentVinsight+' was not found.  Please select from Received unit search');
							}
							
						}else{
							if(null!=responseText.data && undefined!=responseText.data && ''!=responseText.data ){
								$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').val(responseText.data[2]);
								$("#equipmentVinsightHidden"+index).val(responseText.data[2]);
								$('input[name="specialServiceFormLine'+index+'\\.equipmentId"]').val(responseText.data[2]);
								$('input[name="specialServiceFormLine'+index+'\\.receivedFreightId"]').val(responseText.data[0]);
							}else{
								showErrorMessage('Equipment Nbr# '+equipmentVinsight+' is not found.  Please select from variance by booking');
								//showErrorMessage('Container '+equipmentVinsight+' either not associated to booking '+shipmentNumber+' or doesnt exist.');
							}
						}
					validateCommodityLineNumber(index);
					}else{
						if(responseText.messages.error.length>0){
							$('#msgDivSplSrv').hide();
	        				showSpSVMessages('msgDivSplSrv', responseText);
							$('#msgDivSplSrv').show();
							
						}else{
							if(isRequiredUnit=='Y'){
								showErrorMessage('VINsight ID# '+equipmentVinsight+' was not found.  Please select from Received unit search');
								//showErrorMessage('VinSight# '+equipmentVinsight+' doesnt exist.');
							}else{
								showErrorMessage('Equipment Nbr# '+equipmentVinsight+' is not found.  Please select from variance by booking');
								//showErrorMessage('Container '+equipmentVinsight+' either not associated to booking '+shipmentNumber+' or doesnt exist.');
							}
						}
						
						$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').val(""); 
						$('input[name="specialServiceFormLine'+index+'\\.receivedUnitId"]').val("");
						$('input[name="specialServiceFormLine'+index+'\\.equipmentId"]').val("");
						$('input[name="specialServiceFormLine'+index+'\\.receivedFreightId"]').val("");
						$("#equipmentVinsightHidden"+index).val("");
						validateEquipmentVinsight(index);
					}
				}
			});
		}else{
			$('#msgDivSplSrv').hide();
		}
	}
}

function validateCommodityLineNumber(index){
	var entityName=$("#spSvcEntityName").val();
	if(entityName=='booking'){
		var freightCount = $('#totalCommodityLines').text()!='' && $('#totalCommodityLines').text()!="0"?parseInt($('#totalCommodityLines').text()):0;
		var applyToAllInd=$('select[name="specialServiceFormLine'+index+'\\.isApplyToAll"] option:selected').text();
		if(applyToAllInd=='N'){
			if(freightCount!=null && freightCount!=undefined && freightCount!=''){
				if(freightCount==1){
					$('input[name="specialServiceFormLine'+index+'\\.commodityLineNumber"]').val(1);
				}
			}
		}
	}
}


function validateEquipmentVinsight(index){
	var equipmentVinsight=$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').val();
	var equipmentVinsightHidden=$("#equipmentVinsightHidden"+index).val();
	var receivedUnitId=$('input[name="specialServiceFormLine'+index+'\\.receivedUnitId"]').val();
	var equipmentId=$('input[name="specialServiceFormLine'+index+'\\.equipmentId"]').val();
	if($.trim(equipmentVinsight)==''){
		$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').val(""); 
		$('input[name="specialServiceFormLine'+index+'\\.receivedUnitId"]').val("");
		$('input[name="specialServiceFormLine'+index+'\\.equipmentId"]').val("");
		$('input[name="specialServiceFormLine'+index+'\\.receivedFreightId"]').val("");
	}else if(receivedUnitId=='undefined' || receivedUnitId==null || receivedUnitId==""){				
		$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').val("");  
    }else if(equipmentId=='undefined' || equipmentId==null || equipmentId==""){				
		$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').val("");
		$('input[name="specialServiceFormLine'+index+'\\.receivedFreightId"]').val("");
    }else if(equipmentVinsight!=equipmentVinsightHidden){
		$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').val(""); 
		$("#equipmentVinsightHidden"+index).val("");
		$('input[name="specialServiceFormLine'+index+'\\.receivedUnitId"]').val("");
		$('input[name="specialServiceFormLine'+index+'\\.equipmentId"]').val("");
		$('input[name="specialServiceFormLine'+index+'\\.receivedFreightId"]').val("");
	}
}

function validatePayee(index){
	var payee=$('input[name="specialServiceFormLine'+index+'\\.payee"]').val();
	var payeeHidden=$("#payeeHidden"+index).val();
	var organisationId=$('input[name="specialServiceFormLine'+index+'\\.organisationId"]').val();
	if($.trim(payee)==''){
		$('input[name="specialServiceFormLine'+index+'\\.organisationId"]').val("");
		$('input[name="specialServiceFormLine'+index+'\\.payee"]').val(""); 
		$('input[name="specialServiceFormLine'+index+'\\.addressRoleId"]').val("");
		$('input[name="specialServiceFormLine'+index+'\\.note"]').val("");
		$("#payeeHidden"+index).val("");
	} 
	else if(organisationId=='undefined' || organisationId==null || organisationId==""){ 
		$('input[name="specialServiceFormLine'+index+'\\.organisationId"]').val("");
		$("#payeeHidden"+index).val("");
		$('input[name="specialServiceFormLine'+index+'\\.payee"]').val(""); 
		$('input[name="specialServiceFormLine'+index+'\\.note"]').val("");
	}
	else if(payee!=payeeHidden){
		$('input[name="specialServiceFormLine'+index+'\\.payee"]').val(""); 
		$("#payeeHidden"+index).val("");
		$('input[name="specialServiceFormLine'+index+'\\.organisationId"]').val("");
		$('input[name="specialServiceFormLine'+index+'\\.addressRoleId"]').val("");
		$('input[name="specialServiceFormLine'+index+'\\.note"]').val("");
	}
}




function checkRateBasisRequired(index){
	var manualUserRate=$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').val();
	var isManualCharge=$('input[name="specialServiceFormLine'+index+'\\.isManualCharge"]').val();
	if(manualUserRate!=''){
		if($('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"] option:selected').text()==''){
			$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').addClass('validate[required]');
		}else{
			$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').removeClass('validate[required]');
		}
	}else if(manualUserRate==''){
		if(isManualCharge=='N' || isManualCharge==''){
			$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').removeClass('validate[required]');
			$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').removeClass('validate[required]');
		}
	}
	if($('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').val()!='' && 
			$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"] option:selected').text()!=''){
		$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').addClass('validate[required]');
	}
	
	/* 
	// D025727, remove this code.  Does not seem to match requirments or be working.
	var truckerRateId=$('input[name="specialServiceFormLine'+index+'\\.milTruckerRateId"]').val();
	var isMilTruckerCustomised=$('input[name="specialServiceFormLine'+index+'\\.isMilTruckerRateCustomized"]').val();
	
	if(null!=truckerRateId && truckerRateId!='' && isMilTruckerCustomised=='N' ){
		var truckerRateAmount=$('truckerAmount'+index).val();
		if(manualUserRate!=truckerRateAmount){
			console.log("AH "+manualUserRate+" "+truckerRateAmount);
			$('input[name="specialServiceFormLine'+index+'\\.source"]').val("AH Customized");
			$('input[name="specialServiceFormLine'+index+'\\.isMilTruckerRateCustomized"]').val('Y');
			//Defect : D018102
			$('label[for="specialServiceFormLine'+index+'\\.sourceReadOnly"]').text("AH Customized");
		}
	}
	*/
}

/*
 * Rules for Defaulting and Clearing Special Services
 */

function populateDefaultPageOptions(){
	var entityName=$("#spSvcEntityName").val();
	if(entityName=='container'){
		$('select[name*="isApplyToAll"]').selected().val('N');
		$('input[name*="equipmentVinsight"]').attr("disabled", true);
		$('select[name*="isApplyToAll"]').attr("disabled", true);
		$('input[name*="commodityLineNumber"]').attr("disabled", true);
		//$('input[name*="equipmentVinsight"]').attr("readonly", true);
	}else if(entityName=='booking'){
		$('select[name*="isApplyToAll"]').selected().val('Y');
		$('select[name*="isDropOrPull"]').selected().val(' ');
		$('input[name*="commodityLineNumber"]').attr("disabled", true);
		var shipmentNumber=$('#shipmentNumberHidden').val();
		if(null==shipmentNumber || shipmentNumber==''){
			$('input[name*="equipmentVinsight"]').removeClass("validate[required]");
			$('input[name*="equipmentVinsight"]').attr("disabled", true);
			$('#equipmentVinsight1').hide();
			$('#equipmentVinsight2').hide();
			$('#equipmentVinsight3').hide();
			$('#equipmentVinsight4').hide();
			$('#equipmentVinsight5').hide();
		}
	}else if(entityName=='quote'){
		$('select[name*="isApplyToAll"]').selected().val('N');
		$('input[name*="equipmentVinsight"]').attr("disabled", true);
		$('select[name*="isApplyToAll"]').attr("disabled", true);
		$('#equipmentVinsight1').hide();
		$('#equipmentVinsight2').hide();
		$('#equipmentVinsight3').hide();
		$('#equipmentVinsight4').hide();
		$('#equipmentVinsight5').hide();
	}
	
}

function removeClassesForSpecialServiceForm(){
	$('input[name*="manualUserRate"]').removeClass("validate[required]");
	$('select[name*="rateBasisCode"]').removeClass("validate[required]");
	$('input[name*="numberOfUnit"]').removeClass("validate[required]");
	$('input[name*="numberOfUnit"]').removeClass("validate[noZero]");
	$('input[name*="commodityLineNumber"]').removeClass("validate[required]");
	$('input[name*="payee"]').removeClass("validate[required]");
	//$('input[name*="specialServiceDate"]').removeClass("validate[required]");
	clearSpecialServiceRow(1);
	clearSpecialServiceRow(2);
	clearSpecialServiceRow(3);
	clearSpecialServiceRow(4);
	clearSpecialServiceRow(5);
}

function checkForSpecialServiceCdChg(index){
	if($("#bookingStatusCode").val()!='CANC'){
		if($('input[name=specialServiceFormLine'+index+'\\.specialServiceCode]').val()=='' || 
				$('input[name=specialServiceFormLine'+index+'\\.specialServiceCode]').val()!=$('#specialServiceCode'+index).val()){
			//D026787
			clearSpecialServiceRow(index);
		}else{
			if($("#isSpecialServiceAdd").val()=="true"){
				isSpecialServiceChanged = true;
			}
		}		
	}
}

// D025727
function checkForAHCustomization(index,id){
	var truckerRateId=$('input[name="specialServiceFormLine'+index+'\\.milTruckerRateId"]').val();
	if(truckerRateId==null || truckerRateId=='' || truckerRateId==undefined){ 
		// no trucker rate, skip
	} else {
			$('input[name="specialServiceFormLine'+index+'\\.source"]').val("AH Customized");
			$('input[name="specialServiceFormLine'+index+'\\.isMilTruckerRateCustomized"]').val('Y');
			//Defect : D018102
			$('label[for="specialServiceFormLine'+index+'\\.sourceReadOnly"]').text("AH Customized");
	}
}



function clearSpecialServiceRow(index){
	// Hidden field
	$('input[name="specialServiceFormLine'+index+'\\.isManualCharge"]').val("");
	$('input[name="specialServiceFormLine'+index+'\\.isRequireDate"]').val("");
	$('input[name="specialServiceFormLine'+index+'\\.isRequireQuantity"]').val("");
	$('input[name="specialServiceFormLine'+index+'\\.milTruckerRateId"]').val("");
	$('input[name="specialServiceFormLine'+index+'\\.chargeCodeExpected"]').val("");
	$('input[name="specialServiceFormLine'+index+'\\.isMilTruckerRateCustomized"]').val("");
	$('input[name="specialServiceFormLine'+index+'\\.addressRoleId"]').val("");
	$('input[name="specialServiceFormLine'+index+'\\.shipmentAddnlChrsticIdDs"]').val("");
	
	
	// Form Fields
	$('input[name="specialServiceFormLine'+index+'\\.specialServiceCode"]').val("");
	$('input[name="specialServiceFormLine'+index+'\\.commodityLineNumber"]').val("");
	//Process level code - Apply to All Indicator
	$('input[name="specialServiceFormLine'+index+'\\.processLevelCode"]').val("");
	//Defect : D018102
	$('label[for="specialServiceFormLine'+index+'\\.processLevelCodeReadOnly"]').text("");
	
	//Equipment/Vinsight -- SpecialServiceDate
	$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').val("");
	//$('input[name="specialServiceFormLine'+index+'\\.specialServiceDate"]').val("");
	//Number Of Unit - Drop Pull
	$('input[name="specialServiceFormLine'+index+'\\.numberOfUnit"]').val("");
	//$('select[name="specialServiceFormLine'+index+'\\.isDropOrPull"]').attr("selectedIndex",0);
	$('select[name="specialServiceFormLine'+index+'\\.isDropOrPull"]').selected().val(" ");
	//rate -- Amount
	$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').val("");
	$('input[name="specialServiceFormLine'+index+'\\.amount"]').val("");
	//Defect : D018102
	$('label[for="specialServiceFormLine'+index+'\\.amountReadOnly"]').text("");
	
	//RateBasis -- Source
	$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').selected().val(" ");
	$('input[name="specialServiceFormLine'+index+'\\.source"]').val("");
	//Defect : D018102
	$('label[for="specialServiceFormLine'+index+'\\.sourceReadOnly"]').text("");
	
	//Payee Routing Text
	$('input[name="specialServiceFormLine'+index+'\\.payee"]').val("");
	$('input[name="specialServiceFormLine'+index+'\\.note"]').val("");
	
	//Removing the classes
	$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').removeClass("validate[required]");
	$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').removeClass("validate[required]");
	$('input[name="specialServiceFormLine'+index+'\\.numberOfUnit"]').removeClass("validate[required]");
	$('input[name="specialServiceFormLine'+index+'\\.numberOfUnit"]').removeClass("validate[noZero]");
	$('input[name="specialServiceFormLine'+index+'\\.commodityLineNumber"]').removeClass("validate[required]");
	$('input[name="specialServiceFormLine'+index+'\\.payee"]').removeClass("validate[required]");
	//$('input[name="specialServiceFormLine'+index+'\\.specialServiceDate"]').removeClass("validate[required]");
	
	//Remove the read only fields
	//$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').attr("disabled", false);
	//$('input[name="specialServiceFormLine'+index+'\\.commodityLineNumber"]').attr("disabled", false);
	$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').attr("disabled", false);
	$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').attr('disabled',false);
	$('input[name="specialServiceFormLine'+index+'\\.numberOfUnit"]').attr('disabled',false);
	$('input[name="specialServiceFormLine'+index+'\\.payee"]').attr("disabled", false);
	$('input[name="specialServiceFormLine'+index+'\\.note"]').attr('disabled',false);
	//$('input[name="specialServiceFormLine'+index+'\\.specialServiceDate"]').attr('disabled',false);
	
	$('input[name="specialServiceFormLine'+index+'\\.commodityLineNumber"]').attr("disabled", true);
	$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').attr("disabled", true);
	// D028465 - Added to reset the value of ApplyToAll Flag.
	var entityName=$("#spSvcEntityName").val();
	//D028930: 	Booking Spcl Svc 'Apply-to-All' should default to Y
	if(entityName != 'booking'){
		$('select[name="specialServiceFormLine'+index+'\\.isApplyToAll"]').selected().val("N");
	}
	
	$('input[name="specialServiceFormLine'+index+'\\.isMilTruckerRateCustomized"]').val('');
	$('input[name="specialServiceFormLine'+index+'\\.organisationId"]').val('');
	$('input[name="specialServiceFormLine'+index+'\\.equipmentId"]').val('');
	$('input[name="specialServiceFormLine'+index+'\\.receivedUnitId"]').val('');

	$('#specialServiceCode'+index).val('');
	$('#truckerAmount'+index).val('');
	$('#payeeHidden'+index).val('');
	$('#equipmentVinsightHidden'+index).val('');
	
	$('#imgPayeeLine'+index).show();
	$('#imgTruckerRateLine'+index).show();
	$('#specialServiceFormLine'+index).validationEngine('hideAll');
	
	$('#passThruCharge'+index).val('');
	$('#passThruPayable'+index).val('');
	
}

/*
 * Rules for applied when Special Service Code is selected from Predictive or Lookup
 */

function applyUIValidations(index){
	
	var truckerRateId=$('input[name="specialServiceFormLine'+index+'\\.milTruckerRateId"]').val();
	var entityName=$("#spSvcEntityName").val();
	hideErrorMessage();
	if(entityName!='quote'){
		if(truckerRateId==null || truckerRateId=='' || truckerRateId==undefined){
			processPayeeRequired(index);
		}
	}
	processRateRateBasis(index);
	processUnits(index);
	//processSpecialServicedate(index);
	processProcessLevelCode(index);
	$("#specialServiceMasterForm").validationEngine('detach');
	$("#specialServiceMasterForm").validationEngine('attach');
}

function processPayeeRequired(index){
	
	var passThruCharge=	$('#passThruCharge'+index).val();
	var passThruPayable=$('#passThruPayable'+index).val();
	var spSvChargeCode= $('input[name="specialServiceFormLine'+index+'\\.chargeCodeExpected"]').val();
	var milTruckerRateId= $('input[name="specialServiceFormLine'+index+'\\.milTruckerRateId"]').val();
	var isDefaultFrtPayableCharge='';
	var accessorialAllowanceCode='';
	//Added PassthruPayable=="null" condition for Defect D026932
	if(/*(passThruCharge=='' || passThruCharge==null || passThruCharge==undefined) 
		&&*/ passThruPayable=='' || passThruPayable=="null" || passThruPayable==undefined || passThruPayable==null){
		$('input[name="specialServiceFormLine'+index+'\\.payee"]').val('');
		$('input[name="specialServiceFormLine'+index+'\\.note"]').val('');
		$('input[name="specialServiceFormLine'+index+'\\.payee"]').removeClass("validate[required]");
		$('input[name="specialServiceFormLine'+index+'\\.payee"]').attr('disabled',true);
		$('#imgTruckerRateLine'+index).hide();
		$('#imgPayeeLine'+index).hide();
		return;
	}
	/*if(passThruCharge!='' && passThruCharge!=null){
		spSvChargeCode=passThruCharge;
	}else*/ if(passThruPayable!='' && passThruPayable!=null){
		spSvChargeCode=passThruPayable;
	}
	if($('input[name="specialServiceFormLine'+index+'\\.isManualCharge"]').val()!='N'){
	$.ajax({
		type : "POST",
		url : _context +"/booking/specialservice/getChargeCode",
		data : {
			// ChargeCode
			chargeCode: spSvChargeCode
		},
		success : function(responseText) {			
			isDefaultFrtPayableCharge = responseText.data.isDefaultFrtPayableCharge;
			accessorialAllowanceCode = responseText.data.accessorialAllowanceCode;
			if(isDefaultFrtPayableCharge=='Y' ){
				$('input[name="specialServiceFormLine'+index+'\\.payee"]').addClass("validate[required]");
				$('input[name="specialServiceFormLine'+index+'\\.payee"]').attr('disabled',false);
				$('#imgPayeeLine'+index).show();
			}else if(isDefaultFrtPayableCharge=='N' && (milTruckerRateId=='')){
				$('input[name="specialServiceFormLine'+index+'\\.payee"]').val('');
				$('input[name="specialServiceFormLine'+index+'\\.note"]').val('');
				$('input[name="specialServiceFormLine'+index+'\\.payee"]').removeClass("validate[required]");
				$('input[name="specialServiceFormLine'+index+'\\.payee"]').attr('disabled',true);
				$('#imgPayeeLine'+index).hide();
			}else{
				$('input[name="specialServiceFormLine'+index+'\\.payee"]').removeClass("validate[required]");
				$('input[name="specialServiceFormLine'+index+'\\.payee"]').attr('disabled',false);
				$('#imgPayeeLine'+index).show();
			}
			if(null==accessorialAllowanceCode && accessorialAllowanceCode!=''){
				if(accessorialAllowanceCode=='A'){
					$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').removeClass("validate[required]");
					$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').removeClass("validate[required]");
					$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').val('');
					$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').attr("selectedIndex",0);
					$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').attr('disabled',true);
					$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').attr('disabled',true);
					$('#imgTruckerRateLine'+index).hide();
				}else if(accessorialAllowanceCode=='C'){
					$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').attr('disabled',false);
					$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').attr('disabled',false);
					$('#imgTruckerRateLine'+index).show();
				}
			}
			if(isDefaultFrtPayableCharge!='Y'){
				var rateBasis=$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').selected().val();
				if($('input[name="specialServiceFormLine'+index+'\\.isManualCharge"]').val()!='Y' && 
						$('input[name="specialServiceFormLine'+index+'\\.isManualCharge"]').val()!='N' && (rateBasis==null || rateBasis=='') ){
					
					$('input[name="specialServiceFormLine'+index+'\\.payee"]').removeClass("validate[required]");
					$('input[name="specialServiceFormLine'+index+'\\.payee"]').attr('disabled',false);
					$('input[name="specialServiceFormLine'+index+'\\.routingText"]').attr('disabled',false);
					$('#imgPayeeLine'+index).show();
				}
			}
			
		}
	});
	}
}

function processRateRateBasis(index){
	//Rate Basis/Rate Check :BR 15, BR2, BR5
	if($('input[name="specialServiceFormLine'+index+'\\.isManualCharge"]').val()=='Y'){
		$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').attr('disabled',false);
		$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').attr('disabled',false);
		$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').addClass("validate[required]");
		$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').addClass("validate[required]");
		$('#imgTruckerRateLine'+index).show();
	}else if($('input[name="specialServiceFormLine'+index+'\\.isManualCharge"]').val()=='N') {
		$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').val("");
		$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').val("");
		$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').attr('disabled',true);
		$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').attr('disabled',true);
		$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').removeClass("validate[required]");
		$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').removeClass("validate[required]");
		$('#imgTruckerRateLine'+index).hide();
	}else {
		$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').attr('disabled',false);
		$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').attr('disabled',false);
		$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').removeClass("validate[required]");
		$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').removeClass("validate[required]");
		$('#imgTruckerRateLine'+index).show();
	}
}

function processUnits(index){
	if($('input[name="specialServiceFormLine'+index+'\\.isRequireQuantity"]').val()=='N'){
		$('input[name="specialServiceFormLine'+index+'\\.numberOfUnit"]').val("");
		$('input[name="specialServiceFormLine'+index+'\\.numberOfUnit"]').attr('disabled',true);
		$('input[name="specialServiceFormLine'+index+'\\.numberOfUnit"]').removeClass("validate[required]");
		$('input[name="specialServiceFormLine'+index+'\\.numberOfUnit"]').removeClass("validate[noZero]");
	}else if($('input[name="specialServiceFormLine'+index+'\\.isRequireQuantity"]').val()=='Y'){
		$('input[name="specialServiceFormLine'+index+'\\.numberOfUnit"]').attr('disabled',false);
		$('input[name="specialServiceFormLine'+index+'\\.numberOfUnit"]').addClass("validate[required]");
		$('input[name="specialServiceFormLine'+index+'\\.numberOfUnit"]').addClass("validate[noZero]");
	}else{
		$('input[name="specialServiceFormLine'+index+'\\.numberOfUnit"]').attr('disabled',false);
		$('input[name="specialServiceFormLine'+index+'\\.numberOfUnit"]').removeClass("validate[required]");
		$('input[name="specialServiceFormLine'+index+'\\.numberOfUnit"]').addClass("validate[noZero]");
	}
}


function processProcessLevelCode(index){
	var processLvlCode=$('input[name="specialServiceFormLine'+index+'\\.processLevelCode"]').val();
	var entityName=$("#spSvcEntityName").val();
	switch(processLvlCode){
		case "S":
				validateApplyToAllInd(index);
				break;
		case "C":
				validateApplyToAllInd(index);
				break;
		case "E":
				validateApplyToAllInd(index);
				break;
	}
}



function validateApplyToAllInd(index){
	var shipmentNumber=$('#shipmentNumberHidden').val();
	var entityName=$("#spSvcEntityName").val();
	if($('select[name="specialServiceFormLine'+index+'\\.isApplyToAll"] option:selected').text()=='N'){
		if($('input[name="specialServiceFormLine'+index+'\\.processLevelCode"]').val()=='S'){
			$('input[name="specialServiceFormLine'+index+'\\.commodityLineNumber"]').removeClass("validate[required]");
			$('input[name="specialServiceFormLine'+index+'\\.commodityLineNumber"]').attr("disabled", true);
			$('#equipmentVinsight'+index).hide();
		}
		if($('input[name="specialServiceFormLine'+index+'\\.processLevelCode"]').val()=='C'){
			if('booking'==entityName){
				processLevelC(index,entityName);
			}else if('quote'==entityName){
				processLevelC(index,entityName);
			}
		}
		if($('input[name="specialServiceFormLine'+index+'\\.processLevelCode"]').val()=='E'){
			if('quote'==entityName){
				$('select[name="specialServiceFormLine'+index+'\\.isApplyToAll"]').selected().val("N");
				processLevelC(index,entityName);
			}else{
				processLevelE(index,shipmentNumber);
			}
		}
	}else if($('select[name="specialServiceFormLine'+index+'\\.isApplyToAll"] option:selected').text()=='Y'){
		if('booking'==entityName){
			processForBooking(index);
		}else if('container'==entityName){
			processForBooking(index);
		}
	}
}
function processForBooking(index){
	$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').attr("disabled", true);
	$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').removeClass("validate[required]");
	$('input[name="specialServiceFormLine'+index+'\\.commodityLineNumber"]').removeClass("validate[required]");
	$('input[name="specialServiceFormLine'+index+'\\.commodityLineNumber"]').attr("disabled", true);
	$('input[name="specialServiceFormLine'+index+'\\.commodityLineNumber"]').val('');
	$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').val('');
	$('input[name="specialServiceFormLine'+index+'\\.receivedUnitId"]').val('');
	$('input[name="specialServiceFormLine'+index+'\\.bookingFreightId"]').val('');
	$('input[name="specialServiceFormLine'+index+'\\.equipmentId"]').val('');
	$("#equipmentVinsightHidden"+index).val('');
	$('#equipmentVinsight'+index).hide();
}

function processLevelC(index,entityName){
	if(entityName=='booking'){
		var freightCount = $('#totalCommodityLines').text()!='' && $('#totalCommodityLines').text()!="0"?parseInt($('#totalCommodityLines').text()):0;
		if(freightCount!=null && freightCount!=undefined && freightCount!=''){
			if(freightCount==1){
				$('input[name="specialServiceFormLine'+index+'\\.commodityLineNumber"]').val(1);
			}
		}
		$('input[name="specialServiceFormLine'+index+'\\.commodityLineNumber"]').addClass("validate[required]");
		$('input[name="specialServiceFormLine'+index+'\\.commodityLineNumber"]').attr("disabled", false);
		$('#equipmentVinsight'+index).hide();
	}else if(entityName=='quote'){
		var freightCount = $("#quoteCommodityGrid").getGridParam("reccount");
		if(freightCount!=null && freightCount!=undefined && freightCount!=''){
			if(freightCount==1){
				$('input[name="specialServiceFormLine'+index+'\\.commodityLineNumber"]').val(1);
			}
		}
		$('input[name="specialServiceFormLine'+index+'\\.commodityLineNumber"]').addClass("validate[required]");
		$('input[name="specialServiceFormLine'+index+'\\.commodityLineNumber"]').attr("disabled", false);
		$('#equipmentVinsight'+index).hide();
	}
}

function processLevelE(index,shipmentNumber){
	
	var entityName=$("#spSvcEntityName").val();
	
	if('booking'==entityName){
		if(null==shipmentNumber || shipmentNumber==''){
			$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').removeClass("validate[required]");
			$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').attr("disabled", true);
			$('#equipmentVinsight'+index).hide();
		}else{
			$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').removeClass("validate[required]");
			$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').attr("disabled", false);
			$('#equipmentVinsight'+index).show();
		}
	}else if('container'==entityName){
		$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').addClass("validate[required]");
		$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').attr("disabled", false);
		$('select[name="specialServiceFormLine'+index+'\\.isApplyToAll"]').selected().val("N");
		
		$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').val(getEquipmentId());
		$('input[name="specialServiceFormLine'+index+'\\.equipmentId"]').val(getEquipmentId());
		$('input[name="specialServiceFormLine'+index+'\\.receivedFreightId"]').val(getReceivedFreightId());
	}
	
	
}

/*
 java object structure
special_service_code
process_level_code
is_manual_charge
is_available_on_picklist
charge_code_expected
is_require_quantity
description
is_require_date

CAS returned fields
data.level -- Process level code
data.userspcd -- Lookup screen concatenated values	
data.chgres -- Charge Code
data.desc -- special service description
data.clcode -- Clause Code
data.reqdt -- IS REQUIRED DATE
data.reqqty -- IS REQUIRED QTNY
data.manchrg -- is manual charge
*/



function processRateBasis(index){
	var rateBasisCd=$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').selected().val();
	
	if(rateBasisCd!=''){
		$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').addClass('validate[required]');
	}else if(rateBasisCd==''){
		if(isManualCharge=='N' || isManualCharge==''){
			$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').removeClass('validate[required]');
			$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').removeClass('validate[required]');
		}
	}
	
	/* not using this, going to look for changes
	var truckerRateId=$('input[name="specialServiceFormLine'+index+'\\.milTruckerRateId"]').val();
	var isMilTruckerCustomised=$('input[name="specialServiceFormLine'+index+'\\.isMilTruckerRateCustomized"]').val();
	if(null!=truckerRateId && truckerRateId!='' && isMilTruckerCustomised=='N'){
		if(rateBasisCd!='E'){
			$('input[name="specialServiceFormLine'+index+'\\.source"]').val("AH Customized");
			$('input[name="specialServiceFormLine'+index+'\\.isMilTruckerRateCustomized"]').val('Y');
			//Defect : D018102
			$('label[for="specialServiceFormLine'+index+'\\.sourceReadOnly"]').text("AH Customized");
		}
	}
	*/
}

/*
 * Populate fields on Special Service Predictive Search
 */

function populateFields(data,index){
	var entityName = $("#spSvcEntityName").val();
	//Process level code
	$('input[name="specialServiceFormLine'+index+'\\.processLevelCode"]').val(data.level);
	//Defect : D018102
	$('label[for="specialServiceFormLine'+index+'\\.processLevelCodeReadOnly"]').text(data.level);
	
	// is manual charge
	$('input[name="specialServiceFormLine'+index+'\\.isManualCharge"]').val(data.manchrg);
	// Charge Code
	$('input[name="specialServiceFormLine'+index+'\\.chargeCodeExpected"]').val(data.rticmr);
	// is required qty
	$('input[name="specialServiceFormLine'+index+'\\.isRequireQuantity"]').val(data.reqqty);
	// is required date
	$('input[name="specialServiceFormLine'+index+'\\.isRequireDate"]').val(data.reqdt);
	$('input[name="specialServiceFormLine'+index+'\\.source"]').val("Manual");
	//Defect : D018102
	$('label[for="specialServiceFormLine'+index+'\\.sourceReadOnly"]').text("Manual");
	
	$('input[name="specialServiceFormLine'+index+'\\.isMilTruckerRateCustomized"]').val("N");
	
	$('#passThruCharge'+index).val(data.chgres);
	$('#passThruPayable'+index).val(data.passpay);
	
	if(entityName=='container'){
		$('select[name="specialServiceFormLine'+index+'\\.isApplyToAll"]').selected().val("N");
		$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').val(getEquipmentId());
		$('input[name="specialServiceFormLine'+index+'\\.equipmentId"]').val(getEquipmentId());
		$('input[name="specialServiceFormLine'+index+'\\.receivedFreightId"]').val(getReceivedFreightId());
	}
}

function getReceivedFreightId(){
	var receivedFrtId=$('input[name="currentContainer.receivedFreightId"]').val();
	if(receivedFrtId ==null || receivedFrtId==undefined || receivedFrtId==''){
		receivedFrtId=$('input[name="receivedFreightId"]').val();
	}
	return receivedFrtId;
}

function getEquipmentId(){
	var equipmentId=$('select[name="currentContainer.equipmentId"]').selected().val();
	if(equipmentId ==null || equipmentId==undefined || equipmentId==''){
		
		equipmentId=$('input[name="containerNum"]').val();
	}
	if(equipmentId.indexOf('-')>0){
		equipmentId = equipmentId.substring(0, equipmentId.indexOf('-'));
	}

	
	return equipmentId;
}

/*
 * populating Edit Row
 */
function populateHiddenFields(index){
	//Hidden fields population	
	$('#specialServiceCode'+index).val($('input[name="specialServiceFormLine'+index+'\\.specialServiceCode"]').val());
	$('#truckerAmount'+index).val($('input[name="specialServiceFormLine'+index+'\\.amount"]').val());
	$('#payeeHidden'+index).val($('input[name="specialServiceFormLine'+index+'\\.payee"]').val());
	$('#equipmentVinsightHidden'+index).val($('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').val());
}

function casPredictiveSearchOnAllPayee(){
	var orgId='';
	$('input[name="specialServiceFormLine1\\.payee"]').gatesAutocomplete({
		//source: url,
		source:_context+'/cas/autocomplete.do',
		name: "Payee",
	 	extraParams: {
	 			 method: 'getPayeeSearch',
		 		 searchType: '289'
	 	},
	 	timeout: 20000,
	 	autoSelectWhenSingle:true,
		autoSelectFirst:true,
		autoSelectCriteria:function(item) {
		   if(item != null){
			     return 'true';
		  }else{
			  return 'false';
		  }
		},
	 	formatItem : function(item) {
	 		if(item.carr!='' && item.carr!='undefined' && item.carr!=undefined){
	 			return item.name+"-"+item.abbr+"-"+item.carr;	
	 		}else{
	 			return item.name+"-"+item.abbr;
	 		}
				
	 	},
	 	formatResult: function(item) {
	 		if(item.carr!='' && item.carr!='undefined' && item.carr!=undefined){
	 			return item.name+"-"+item.abbr+"-"+item.carr;	
	 		}else{
	 			return item.name+"-"+item.abbr;
	 		}
	 	},
	 	select : function(item) {
	 		if(validateSelectedPayee(item)){
	 			hideErrorMessage();
	 			orgId=item.orgid;	
		 		$("#payeeHidden1").val($('input[name="specialServiceFormLine1\\.payee"]').val());
		 		$('input[name="specialServiceFormLine1.organisationId"]').val(orgId);
		 		if(item.count==1 || (item.carr!='' && item.carr!='undefined' && item.carr!=undefined)){
		 			console.log(item.arolid);
		 			console.log(item.addid);
		 			fetchAddresssDetails(item,1);
		 		}else if(item.count>1){
		 			casPayeeLookup(1);
		 			//checkForPayableCarrier(orgId,1,item);
		 		}
	 		} else {
	 			showErrorMessage("Trucker is not compliant for Military move");
	 			$('input[name="specialServiceFormLine1.organisationId"]').val('');
	 			window.setTimeout(function(){ $('input[name="specialServiceFormLine1\\.payee"]').val(''); }, 250);
	 		}
	 		isSpecialServiceChanged=true;
	 	}
	});
	$('input[name="specialServiceFormLine2\\.payee"]').gatesAutocomplete({
		//source: url,
		source:_context+'/cas/autocomplete.do',
		name: "Payee",
	 	extraParams: {
	 			 method: 'getPayeeSearch',
		 		 searchType: '289'
	 	},
	 	timeout: 20000,
	 	autoSelectWhenSingle:true,
		autoSelectFirst:true,
		autoSelectCriteria:function(item) {
		   if(item != null){
			     return 'true';
		  }else{
			  return 'false';
		  }
		},
	 	formatItem : function(item) {
	 		if(item.carr!='' && item.carr!='undefined' && item.carr!=undefined){
	 			return item.name+"-"+item.abbr+"-"+item.carr;	
	 		}else{
	 			return item.name+"-"+item.abbr;
	 		}
				
	 	},
	 	formatResult: function(item) {
	 		if(item.carr!='' && item.carr!='undefined' && item.carr!=undefined){
	 			return item.name+"-"+item.abbr+"-"+item.carr;	
	 		}else{
	 			return item.name+"-"+item.abbr;
	 		}
	 	},
	 	select : function(item) {
	 		if(validateSelectedPayee(item)){
	 			hideErrorMessage();
	 			orgId=item.orgid;	
		 		$("#payeeHidden2").val($('input[name="specialServiceFormLine2\\.payee"]').val());
		 		$('input[name="specialServiceFormLine2.organisationId"]').val(orgId);
		 		if(item.count==1 || (item.carr!='' && item.carr!='undefined' && item.carr!=undefined)){
		 			console.log(item.arolid);
		 			console.log(item.addid);
		 			fetchAddresssDetails(item,2);
		 		}else if(item.count>1){
		 			casPayeeLookup(2);
		 			//checkForPayableCarrier(orgId,2,item);
		 		}
	 		} else {
	 			showErrorMessage("Trucker is not compliant for Military move");
	 			$('input[name="specialServiceFormLine2.organisationId"]').val('');
	 			window.setTimeout(function(){ $('input[name="specialServiceFormLine2\\.payee"]').val(''); }, 250);
	 		}
	 		isSpecialServiceChanged=true;
	 	}
	});	
	$('input[name="specialServiceFormLine3\\.payee"]').gatesAutocomplete({
		//source: url,
		source:_context+'/cas/autocomplete.do',
		name: "Payee",
	 	extraParams: {
	 			 method: 'getPayeeSearch',
		 		 searchType: '289'
	 	},
	 	timeout: 20000,
	 	autoSelectWhenSingle:true,
		autoSelectFirst:true,
		autoSelectCriteria:function(item) {
		   if(item != null){
			     return 'true';
		  }else{
			  return 'false';
		  }
		},
	 	formatItem : function(item) {
	 		if(item.carr!='' && item.carr!='undefined' && item.carr!=undefined){
	 			return item.name+"-"+item.abbr+"-"+item.carr;	
	 		}else{
	 			return item.name+"-"+item.abbr;
	 		}
				
	 	},
	 	formatResult: function(item) {
	 		if(item.carr!='' && item.carr!='undefined' && item.carr!=undefined){
	 			return item.name+"-"+item.abbr+"-"+item.carr;	
	 		}else{
	 			return item.name+"-"+item.abbr;
	 		}
	 	},
	 	select : function(item) {
	 		if(validateSelectedPayee(item)){
	 			hideErrorMessage();
	 			orgId=item.orgid;
		 		$("#payeeHidden3").val($('input[name="specialServiceFormLine3\\.payee"]').val());
		 		$('input[name="specialServiceFormLine3.organisationId"]').val(orgId);
		 		if(item.count==1 || (item.carr!='' && item.carr!='undefined' && item.carr!=undefined)){
		 			console.log(item.arolid);
		 			console.log(item.addid);
		 			fetchAddresssDetails(item,3);
		 		}else if(item.count>1){
		 			casPayeeLookup(3);
		 			//checkForPayableCarrier(orgId,3,item);
		 		}
	 		} else {
	 			showErrorMessage("Trucker is not compliant for Military move");
	 			$('input[name="specialServiceFormLine3.organisationId"]').val('');
	 			window.setTimeout(function(){ $('input[name="specialServiceFormLine3\\.payee"]').val(''); }, 250);
	 		}
	 		isSpecialServiceChanged=true;
	 	}
	});	
	$('input[name="specialServiceFormLine4\\.payee"]').gatesAutocomplete({
		//source: url,
		source:_context+'/cas/autocomplete.do',
		name: "Payee",
	 	extraParams: {
	 			 method: 'getPayeeSearch',
		 		 searchType: '289'
	 	},
	 	timeout: 20000,
	 	autoSelectWhenSingle:true,
		autoSelectFirst:true,
		autoSelectCriteria:function(item) {
		   if(item != null){
			     return 'true';
		  }else{
			  return 'false';
		  }
		},
	 	formatItem : function(item) {
	 		if(item.carr!='' && item.carr!='undefined' && item.carr!=undefined){
	 			return item.name+"-"+item.abbr+"-"+item.carr;	
	 		}else{
	 			return item.name+"-"+item.abbr;
	 		}
				
	 	},
	 	formatResult: function(item) {
	 		if(item.carr!='' && item.carr!='undefined' && item.carr!=undefined){
	 			return item.name+"-"+item.abbr+"-"+item.carr;	
	 		}else{
	 			return item.name+"-"+item.abbr;
	 		}
	 	},
	 	select : function(item) {
	 		if(validateSelectedPayee(item)){
	 			hideErrorMessage();
	 			orgId=item.orgid;
		 		$("#payeeHidden4").val($('input[name="specialServiceFormLine4\\.payee"]').val());
		 		$('input[name="specialServiceFormLine4.organisationId"]').val(orgId);
		 		if(item.count==4 || (item.carr!='' && item.carr!='undefined' && item.carr!=undefined)){
		 			console.log(item.arolid);
		 			console.log(item.addid);
		 			fetchAddresssDetails(item,4);
		 		}else if(item.count>1){
		 			casPayeeLookup(4);
		 			//checkForPayableCarrier(orgId,4,item);
		 		}
	 		} else {
	 			showErrorMessage("Trucker is not compliant for Military move");
	 			$('input[name="specialServiceFormLine4.organisationId"]').val('');
	 			window.setTimeout(function(){ $('input[name="specialServiceFormLine4\\.payee"]').val(''); }, 250);
	 		}
	 		isSpecialServiceChanged=true;
	 	}
	});	
	$('input[name="specialServiceFormLine5\\.payee"]').gatesAutocomplete({
		//source: url,
		source:_context+'/cas/autocomplete.do',
		name: "Payee",
	 	extraParams: {
	 			 method: 'getPayeeSearch',
		 		 searchType: '289'
	 	},
	 	timeout: 20000,
	 	autoSelectWhenSingle:true,
		autoSelectFirst:true,
		autoSelectCriteria:function(item) {
		   if(item != null){
			     return 'true';
		  }else{
			  return 'false';
		  }
		},
	 	formatItem : function(item) {
	 		if(item.carr!='' && item.carr!='undefined' && item.carr!=undefined){
	 			return item.name+"-"+item.abbr+"-"+item.carr;	
	 		}else{
	 			return item.name+"-"+item.abbr;
	 		}
				
	 	},
	 	formatResult: function(item) {
	 		if(item.carr!='' && item.carr!='undefined' && item.carr!=undefined){
	 			return item.name+"-"+item.abbr+"-"+item.carr;	
	 		}else{
	 			return item.name+"-"+item.abbr;
	 		}
	 	},
	 	select : function(item) {
	 		if(validateSelectedPayee(item)){
	 			hideErrorMessage();
	 			orgId=item.orgid;	
		 		$("#payeeHidden5").val($('input[name="specialServiceFormLine5\\.payee"]').val());
				$('input[name="specialServiceFormLine5.organisationId"]').val(orgId);
		 		if(item.count==1 || (item.carr!='' && item.carr!='undefined' && item.carr!=undefined)){
		 			console.log(item.arolid);
		 			console.log(item.addid);
		 			fetchAddresssDetails(item,5);
		 		}else if(item.count>1){
		 			casPayeeLookup(5);
		 			//checkForPayableCarrier(orgId,5,item);
		 			
		 		}
	 		} else {
	 			showErrorMessage("Trucker is not compliant for Military move");
	 			$('input[name="specialServiceFormLine5.organisationId"]').val('');
	 			window.setTimeout(function(){ $('input[name="specialServiceFormLine5\\.payee"]').val(''); }, 250);
	 		}
	 		isSpecialServiceChanged=true;
	 	}
	});	
}

function casPredictiveSearchOnAllLines(){
	//var url = _context+'/cas/autocomplete.do?method=getSpclSrvcBK&searchType=256';
	var entityName=$('#spSvcEntityName').val();
	var procLvlCd='ALL';
	if(entityName=='container'){
		procLvlCd='E';
	}/*else if(entityName=='quote'){
		procLvlCd='C';
	}*/
	$('input[name="specialServiceFormLine1\\.specialServiceCode"]').gatesAutocomplete({
		//source: url,
		source:_context+'/cas/autocomplete.do',
		name: "Special Service Code",
	 	extraParams: {
	 			 method: 'getSpclSrvcBK',
		 		 searchType: '256',
		 		 param : function(){return procLvlCd;}
	 	},
	 	timeout: 20000, 
		formatItem: function(data) {
			return data.id+"-"+data.desc;
		},
		formatResult: function(data) {
			return data.id;
		}, 
		select: function(data) {
			var index=1;
			//$('#specialServiceFormLine1\\.specialServiceDesc').val(data.id+'-'+data.desc);
			clearSpecialServiceRow(index);
			$('input[name="specialServiceFormLine1\\.specialServiceCode"]').val(data.id);
			$('#specialServiceCode1').val(data.id);
			//clearSpecialServiceRow(index);
			populateFields(data,index);
			applyUIValidations(index);
			if(entityName=='quote'){
				_isQuoteChanged = true;
			}
			isSpecialServiceChanged = true;
		},
		onChange:function(){
			var index=1;
			checkForSpecialServiceCdChg(index);
			if(entityName=='quote'){
				_isQuoteChanged = true;
			}
			/*isSpecialServiceChanged = true;*/
		},
		autoSelectFirst:true,
		autoSelectCriteria :function(item){
			if(item.id.toUpperCase()==$('#'+thisId).val().toUpperCase()) {
				return true;
			}
			else {
				return false;
			}
		}
	});	
	$('input[name="specialServiceFormLine2\\.specialServiceCode"]').gatesAutocomplete({
		//source: url,
		source:_context+'/cas/autocomplete.do',
		name: "Special Service Code",
	 	extraParams: {
		 		 method: 'getSpclSrvcBK',
		 		 searchType: '256',
		 		param : function(){return procLvlCd;}
	 	},
	 	timeout: 20000,
		formatItem: function(data) {
			return data.id+"-"+data.desc;
		},
		formatResult: function(data) {
			return data.id;
		}, 
		select: function(data) {
			var index=2;
			clearSpecialServiceRow(index);
			$('input[name="specialServiceFormLine2\\.specialServiceCode"]').val(data.id);
			$('#specialServiceCode2').val(data.id);
			//clearSpecialServiceRow(index);
			populateFields(data,index);
			applyUIValidations(index);
			if(entityName=='quote'){
				_isQuoteChanged = true;
			}
			isSpecialServiceChanged = true;
		},
		onChange:function(){
			var index=2;
			checkForSpecialServiceCdChg(index);
			if(entityName=='quote'){
				_isQuoteChanged = true;
			}
			/*isSpecialServiceChanged = true;*/
		},
		autoSelectFirst:true,
		autoSelectCriteria :function(item){
			if(item.id.toUpperCase()==$('#'+thisId).val().toUpperCase()) {
				return true;
			}
			else {
				return false;
			}
		}
	});	
	$('input[name="specialServiceFormLine3\\.specialServiceCode"]').gatesAutocomplete({
		//source: url,
		source:_context+'/cas/autocomplete.do',
		name: "Special Service Code",
	 	extraParams: {
		 		 method: 'getSpclSrvcBK',
		 		 searchType: '256',
			     param : function(){return procLvlCd;}
	 	},
	 	timeout: 20000,
		formatItem: function(data) {
			return data.id+"-"+data.desc;
		},
		formatResult: function(data) {
			return data.id;
		}, 
		select: function(data) {
			var index=3;
			clearSpecialServiceRow(index);
			$('input[name="specialServiceFormLine3\\.specialServiceCode"]').val(data.id);
			$('#specialServiceCode3').val(data.id);
			//clearSpecialServiceRow(index);
			populateFields(data,index);
			applyUIValidations(index);
			if(entityName=='quote'){
				_isQuoteChanged = true;
			}
			isSpecialServiceChanged = true;
		},
		onChange:function(){
			var index=3;
			checkForSpecialServiceCdChg(index);
			if(entityName=='quote'){
				_isQuoteChanged = true;
			}
			/*isSpecialServiceChanged = true;*/
		},
		autoSelectFirst:true,
		autoSelectCriteria :function(item){
			if(item.id.toUpperCase()==$('#'+thisId).val().toUpperCase()) {
				return true;
			}
			else {
				return false;
			}
		}
	});	
	$('input[name="specialServiceFormLine4\\.specialServiceCode"]').gatesAutocomplete({
		//source: url,
		source:_context+'/cas/autocomplete.do',
		name: "Special Service Code",
	 	extraParams: {
		 		 method: 'getSpclSrvcBK',
		 		 searchType: '256',
			 	 param : function(){return procLvlCd;}
		 		
	 	},
	 	timeout: 20000,
		formatItem: function(data) {
			return data.id+"-"+data.desc;
		},
		formatResult: function(data) {
			return data.id;
		}, 
		select: function(data) {
			var index=4;
			clearSpecialServiceRow(index);
			$('input[name="specialServiceFormLine4\\.specialServiceCode"]').val(data.id);
			$('#specialServiceCode4').val(data.id);
			//clearSpecialServiceRow(index);
			populateFields(data,index);
			applyUIValidations(index);
			if(entityName=='quote'){
				_isQuoteChanged = true;
			}
			isSpecialServiceChanged = true;
		},
		onChange:function(){
			var index=4;
			checkForSpecialServiceCdChg(index);
			if(entityName=='quote'){
				_isQuoteChanged = true;
			}
			/*isSpecialServiceChanged = true;*/
		},
		autoSelectFirst:true,
		autoSelectCriteria :function(item){
			if(item.id.toUpperCase()==$('#'+thisId).val().toUpperCase()) {
				return true;
			}
			else {
				return false;
			}
		}
	});	
	$('input[name="specialServiceFormLine5\\.specialServiceCode"]').gatesAutocomplete({
		//source: url,
		source:_context+'/cas/autocomplete.do',
		name: "Special Service Code",
	 	extraParams: {
		 		 method: 'getSpclSrvcBK',
		 		 searchType: '256',
			     param : function(){return procLvlCd;}
	 	},
	 	timeout: 20000, 
		formatItem: function(data) {
			return data.id+"-"+data.desc;
		},
		formatResult: function(data) {
			return data.id;
		}, 
		select: function(data) {
			var index=5;
			clearSpecialServiceRow(index);
			$('input[name="specialServiceFormLine5\\.specialServiceCode"]').val(data.id);
			$('#specialServiceCode5').val(data.id);
			//clearSpecialServiceRow(index);
			populateFields(data,index);
			applyUIValidations(index);
			if(entityName=='quote'){
				_isQuoteChanged = true;
			}
			isSpecialServiceChanged = true;
		},
		onChange:function(){
			var index=5;
			checkForSpecialServiceCdChg(index);
			if(entityName=='quote'){
				_isQuoteChanged = true;
			}
			/*isSpecialServiceChanged = true;*/
		},
		autoSelectFirst:true,
		autoSelectCriteria :function(item){
			if(item.id.toUpperCase()==$('#'+thisId).val().toUpperCase()) {
				//Commented for Defect D029266
				//specialServiceSelectFunction(item,5);
				return true;
			}
			else {
				return false;
			}
		}
	});	
}




function casEquipmentVinsightLookup(index){
	var entityName=$('#spSvcEntityName').val();
	/*Booking Security*/
	if(isSpecialServiceDisplayOnly && !isSpecialServiceModifiable){
		return;
	}
	//Here we checking the Entity status for allowing update in Special Service
	if(!checkEntityStatusForDisplay()){
		return;
	}
	
	if(entityName!='container'){
		equipmentVinsightLineNumber=index;
		var isRequiredUnit=$('#isRequireReceivedUnit').val();
		var shipmentNumber=$('#shipmentNumberHidden').val();
		var actionUrl =null;
		var header='Recieved Unit List';
		 if(isRequiredUnit=='N' || isRequiredUnit==null || isRequiredUnit==undefined || isRequiredUnit==''){
			actionUrl = _context + '/cas/containerListbyBKPopUpSearch.do?bookingId='+shipmentNumber;
			header="Container List";
		}else if(isRequiredUnit=='Y'){
			actionUrl = _context + '/cas/receivedUnitsLookupSearch.do?bookingId='+shipmentNumber;	
			header="Recieved Unit List";
		}
		var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
		window.open(actionUrl, '', windowStyle);
	}
}

function receivedUnits(id){
	var myData=id.split('|');
	var shipmentNumber=$('#shipmentNumberHidden').val();
	var errorMessageString="Unit is not linked to Booking "+ $("#shipmentNumberHidden").val();
	if(myData.length>1){
		if(shipmentNumber==myData[1]){
			$('input[name="specialServiceFormLine'+equipmentVinsightLineNumber+'\\.equipmentVinsight"]').val(myData[0]); 
			$("#equipmentVinsightHidden"+equipmentVinsightLineNumber).val(myData[0]);
			$('input[name="specialServiceFormLine'+equipmentVinsightLineNumber+'\\.receivedUnitId"]').val(myData[0]);
			checkEquipmentContainer(equipmentVinsightLineNumber);
		}else{
			
			showErrorMessage(errorMessageString);
		}	
	}else{
		showErrorMessage(errorMessageString);
	}
}
function setContFields(id){
	var myData=id.split('|');
	$('input[name="specialServiceFormLine'+equipmentVinsightLineNumber+'\\.equipmentVinsight"]').val(myData[0]);
	$("#equipmentVinsightHidden"+equipmentVinsightLineNumber).val(myData[0]);
	$('input[name="specialServiceFormLine'+equipmentVinsightLineNumber+'\\.equipmentId"]').val(myData[0]);
	$('input[name="specialServiceFormLine'+equipmentVinsightLineNumber+'\\.receivedFreightId"]').val(myData[1]);
	checkEquipmentContainer(equipmentVinsightLineNumber);
}


function casSpSvcCodeLookup(index) {
	var entityName=$('#spSvcEntityName').val();
	/*Booking Security*/
	if(isSpecialServiceDisplayOnly && !isSpecialServiceModifiable){
		return ;
	}
	//Here we checking the Entity status for allowing update in Special Service
	if(!checkEntityStatusForDisplay()){
		return;
	}
	
	
	spsvCodeLineNumber=index;
	var proclvlCd='ALL';
	if(entityName=='container'){
		proclvlCd='E';
	}
	//Code commented as all special services are visible at quote.
	/*else if(entityName=='quote'){
		proclvlCd='C';
	}*/
	var specialServiceCode = $('input[name="specialServiceFormLine'+index+'\\.specialServiceCode"]').val();
	var actionUrl = _context + '/cas/spclSrvBKLookup.do?filterValue1='+encodeURIComponent(specialServiceCode)+'|'+proclvlCd+'|'+'&srcScreen=QT';
	
	var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, '', windowStyle);
}
//"CDE,PLC,UPLD,RTICMR,DESCRIPTION,CLCDE,PASSPAY,RTIPMR,PASSCHRG"
// 0    1   2     3     4           5      6       7        8
//ADMINFEE|S|N--Y|ACC|ADMINISTRATIVE FEE|null|||ACC
function spclServiceUpdate(id){
	var entityName=$('#spSvcEntityName').val();
	var values = id.split("|");
	var rateQuantityDate = values[2].split("-");
	clearSpecialServiceRow(spsvCodeLineNumber);
	$('#specialServiceFormLine'+spsvCodeLineNumber+'\\.specialServiceDesc').val(values[0]+'-'+values[4]);
	$('#specialServiceCode'+spsvCodeLineNumber).val(values[0]);
	$('input[name="specialServiceFormLine'+spsvCodeLineNumber+'\\.specialServiceCode"]').val(values[0]);
	//Process level code
	$('input[name="specialServiceFormLine'+spsvCodeLineNumber+'\\.processLevelCode"]').val(values[1]);
	//Defect : D018102
	$('label[for="specialServiceFormLine'+spsvCodeLineNumber+'\\.processLevelCodeReadOnly"]').text(values[1]);
	
	// is manual charge
	$('input[name="specialServiceFormLine'+spsvCodeLineNumber+'\\.isManualCharge"]').val(rateQuantityDate[2]);
	// Charge Code
	$('input[name="specialServiceFormLine'+spsvCodeLineNumber+'\\.chargeCodeExpected"]').val(values[3]);
	// is required qty
	$('input[name="specialServiceFormLine'+spsvCodeLineNumber+'\\.isRequireQuantity"]').val(rateQuantityDate[1]);
	// is required date
	$('input[name="specialServiceFormLine'+spsvCodeLineNumber+'\\.isRequireDate"]').val(rateQuantityDate[0]);
	$('input[name="specialServiceFormLine'+spsvCodeLineNumber+'\\.source"]').val("Manual");
	//Defect : D018102
	$('label[for="specialServiceFormLine'+spsvCodeLineNumber+'\\.sourceReadOnly"]').text("Manual");
	
	$('input[name="specialServiceFormLine'+spsvCodeLineNumber+'\\.isMilTruckerRateCustomized"]').val("N");
	
	//D025911: 	Maintain Billing: Adding special service HHAGTLH from pop-up protects the payee field 
	$('#passThruCharge'+spsvCodeLineNumber).val(values[8]);
	$('#passThruPayable'+spsvCodeLineNumber).val(values[6]);
	
	
	checkForSpecialServiceCdChg(spsvCodeLineNumber);
	if(entityName=='quote'){
		_isQuoteChanged = true;
	}
	isSpecialServiceChanged = true;
	applyUIValidations(spsvCodeLineNumber);
	
}

/*
 * QUOTE|TRUCKER|HHGM_ALL|PHONE|TRUCKER_ORIGIN|TRUCKER_RAMP|DIRECTION|RATE|ZIP|BASE_RATE|DROP_PULL|FREE_TIME|
 * OVER_TIME|CHASE_RATE|CITY|STATE|ZIP_CODE|FUEL_SURTY|FUEL_SUR
*/


function casTruckerLookup(index) {
	var entityName=$('#spSvcEntityName').val();
	/*Booking Security*/
	if(isSpecialServiceDisplayOnly && !isSpecialServiceModifiable){
		return;
	}
	//Here we checking the Entity status for allowing update in Special Service
	if(!checkEntityStatusForDisplay()){
		return;
	}
	
	truckerLineNumber=index;
	var actionUrl = _context + '/cas/bookingtruckerRateSearch.do';
	var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, '', windowStyle);
}

function truckerRateUpdate(id){
	var values = id.split("|");
	$('input[name="specialServiceFormLine'+truckerLineNumber+'\\.payee"]').val(values[1]);
	$('input[name="specialServiceFormLine'+truckerLineNumber+'\\.milTruckerRateId"]').val(values[0]);
	$('input[name="specialServiceFormLine'+truckerLineNumber+'\\.manualUserRate"]').val(values[7]);
	$('select[name="specialServiceFormLine'+truckerLineNumber+'\\.rateBasisCode"]').selected().val("E");
	$('input[name="specialServiceFormLine'+truckerLineNumber+'\\.source"]').val("AH");
	//Defect : D018102
	$('label[for="specialServiceFormLine'+truckerLineNumber+'\\.sourceReadOnly"]').text("AH");
	
	$('input[name="specialServiceFormLine'+truckerLineNumber+'\\.isMilTruckerRateCustomized"]').val("N");
	// Adding Drop and Pull
	$('#truckerAmount'+truckerLineNumber).val(values[7]);
	$('select[name="specialServiceFormLine'+truckerLineNumber+'\\.isDropOrPull"]').selected().val(values[10]);
	//Only Payee or Trucker can be associated with Special Service
	$('input[name="specialServiceFormLine'+truckerLineNumber+'\\.addressRoleId"]').val(values[20]);
	$('input[name="specialServiceFormLine'+truckerLineNumber+'\\.note"]').val('');
	$('input[name="specialServiceFormLine'+truckerLineNumber+'\\.organisationId"]').val(values[21]);
	$.ajax({
		type : "POST",
		url : _context +"/booking/specialservice/getTruckerRoutingText",
		data : {
			// Ramp City Code
			truckerRampCityCode: values[5],
			//Ramp
			truckerRamp: values[19],
			// Freight Location Code
			truckerFreightLocationCode: values[4]
		},
		success : function(responseText) {
			$('input[name="specialServiceFormLine'+truckerLineNumber+'\\.note"]').val(responseText.data);
		}
	});
	isSpecialServiceChanged=true;
}


function casPayeeLookup(index) {
	var entityName=$('#spSvcEntityName').val();
	payeeLineNumber=index;
	/*Booking Security*/
	if(isSpecialServiceDisplayOnly && !isSpecialServiceModifiable){
		return;
	}
	
	//Here we are checking the Entity status for allowing update in Special Service
	if(!checkEntityStatusForDisplay()){
		return;
	}
	
	var org_id=$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.organisationId"]').val();
	if(org_id==undefined || org_id==null || org_id==''){
		alert("Please select organization first");
		return;
	}
	
	//$('input[id="organistionId"'+payeeLineNumber+']')
	//var org_id=$('input[id="organistionId'+payeeLineNumber+'"]').val();
	
//	var payee=$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.payee"]').val();
	//var actionUrl = _context + '/cas/addRoleBKPopUpSearch.do?filterValue1='+payee+'&filterValue2='+org_id;
	var actionUrl = _context + '/cas/addRoleSPSRLookup.do?filterValue1='+org_id+'&filterValue2=04';
	var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, '', windowStyle);
}

//ORG_ID,ADD_ROLE, ADDR_TYPE,ATTENTION_LINE,CITY, C_O_NAME,NAME_QUALIFIER,ORG_NAME,STATE,ADDRESS,ZIP, PROVINCE,COUNTRY,SUITE
function payeeLookupUpdate(id){
	/*var values = id.split("|");
	$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.payee"]').val(values[7]);
	$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.organisationId"]').val(values[0]);
	$("#payeeHidden"+payeeLineNumber).val(values[7]);
	//Name, Addr_Line1, Addr_line2, Suite, City
	if(values[1]!=null || values[1]!=''){
		var orgAddressId=values[1];
		note=fetchAddresssDetails(orgAddressId,payeeLineNumber);
	}*/
	
	/*$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.note"]').val(note);
	$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.addressRoleId"]').val(values[1]);
	$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.source"]').val("Manual");
	$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.isMilTruckerRateCustomized"]').val("");
	$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.milTruckerRateId"]').val("");
	checkRateBasisRequired(payeeLineNumber);
	isSpecialServiceChanged=true;*/
}

//D026319: Maintain Booking: (and Maintain Billing) For Military cargo, need to check that the payee/trucker on the special service is allowed 
function validateSelectedPayee(item){
	var payeeValid = true;
	var carrierCode = "";
	if(item.carr!='' && item.carr!='undefined' && item.carr!=undefined){
		carrierCode = item.carr;
	}
	$.ajax({
		type : "GET",
		async:false,
		data:{	
				carrierCode : carrierCode, 
				orgAbbr : item.abbr,
				tariff : $("#tariff").val() 
			 },
		url : _context + "/booking/specialservice/validatePayee",
		success : function(responseText) {
			payeeValid = responseText.success;
		}
	});
	return payeeValid;
}

function fetchAddresssDetails(item,payeeLineNumber){
	$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.note"]').val('');
	$.ajax({
		type : "POST",
		url : _context +"/booking/specialservice/getAddressDetails",
		data : {
			addressId: item.addid
		},
		success : function(responseText) {
			/*$("#payeeHidden"+payeeLineNumber).val(item.name);
			$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.payee"]').val(item.name);
			$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.organisationId"]').val(item.orgid);*/
			//Name, Addr_Line1, Addr_line2, Suite, City
			/*var note=values[7]+","+values[9]+","+values[13]+","+values[4];
			if(values[1]!=null || values[1]!=''){
				var orgAddressId=values[1];
				note=fetchAddresssDetails(orgAddressId,payeeLineNumber);
			}*/
			
			$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.note"]').val(responseText.data);
			$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.addressRoleId"]').val(item.arolid);
			$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.source"]').val("Manual");
			//Defect : D018102
			$('label[for="specialServiceFormLine'+payeeLineNumber+'\\.sourceReadOnly"]').text("Manual");
			
			$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.isMilTruckerRateCustomized"]').val("");
			$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.milTruckerRateId"]').val("");
			checkRateBasisRequired(payeeLineNumber);
			isSpecialServiceChanged=true;
		}
	});
}
/*
 * 	jsonObj.put("orgid", item.get("ORGID"));
				jsonObj.put("name", item.get("ORGNNAME"));
				jsonObj.put("abbr", item.get("ORGCODE"));
				jsonObj.put("carr", item.get("CARRCODE"));
				jsonObj.put("count", item.get("AROLCOUNT"));
				jsonObj.put("arolid", item.get("AROLID"));
				jsonObj.put("addid", item.get("ORGADDID"));
 */


function clearErrMsg(){
	$("#specialServiceMasterForm").validationEngine('hideAll');
}
/*
function validateFrtPayableRequired(fields, rules, i, options){
alert("validateFrtPayableRequired " + fields.context.value);
if(fields.context.value==null || fields.context.value==""){
	return "* Payee's Carrier Code or Abbreviation is required";
}
}
*/



function validateRateRequired(){
//alert("validateRateRequired "+fields.context.value);
//if(fields.context.value==null || fields.context.value==""){
	return "* Rate is required";
//}
}
/*
function validateUnitsRequired(fields, rules, i, options){
alert("validateUnitsRequired "+fields.context.value);
if(fields.context.value==null || fields.context.value==""){
	fields.context.value="1";
	return "* Units are required";
}	
}
*/

/*
 * Validate Fields on Special Services
 */

function specialServiceLineCheck(index){
	var rateBasisCode=$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').selected().val();
	if(rateBasisCode==null || rateBasisCode==""){
		rateBasisCode=null;
	}
	if($('input[name="specialServiceFormLine'+index+'\\.commodityLineNumber"]').val()!="" || 
	   $('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').val()!="" ||
	   $('input[name="specialServiceFormLine'+index+'\\.numberOfUnit"]').val()!="" ||
	   $('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').val()!="" ||
	   	rateBasisCode!=null ||
	   $('input[name="specialServiceFormLine'+index+'\\.payee"]').val()!=""){
		return false;
	}
	return true;
	
}

function validatePayeeRequired(index){
	
	
	var entityName=$('#spSvcEntityName').val();
	var rateBasisCode=$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').selected().val();
	var rate = $('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').val();
	var passThruPayable=$('#passThruPayable'+index).val();
	
	if( entityName !='quote' && entityName !='booking' && rateBasisCode != null && rateBasisCode != '' && rate != '' && rate != null && passThruPayable != null && passThruPayable != ''){
		$('input[name="specialServiceFormLine'+index+'\\.payee"]').addClass("validate[required]");
	}else{
		$('input[name="specialServiceFormLine'+index+'\\.payee"]').removeClass("validate[required]");
	}	
}

function validateSpecialServiceFields(){
	var isValid = true;
	//alert("Test: " + $('input[name="specialServiceFormLine1\\.specialServiceCode"]').val());
	if($("#isSpecialServiceAdd").val()!='false'){
		if($('input[name="specialServiceFormLine1\\.specialServiceCode"]').val()=="" && !specialServiceLineCheck(1)){
			$('input[name="specialServiceFormLine1\\.specialServiceCode"]').addClass("validate[required]");
			isValid=false;			
		}else{
			$('input[name="specialServiceFormLine1\\.specialServiceCode"]').removeClass("validate[required]");
			validatePayeeRequired(1);
		}
		if(isValid && $('input[name="specialServiceFormLine2\\.specialServiceCode"]').val()=="" && !specialServiceLineCheck(2)){
			$('input[name="specialServiceFormLine2\\.specialServiceCode"]').addClass("validate[required]");
			isValid=false;
			
		}else{
			$('input[name="specialServiceFormLine2\\.specialServiceCode"]').removeClass("validate[required]");
			validatePayeeRequired(2);
		}
		if(isValid && $('input[name="specialServiceFormLine3\\.specialServiceCode"]').val()=="" && !specialServiceLineCheck(3)){
			$('input[name="specialServiceFormLine3\\.specialServiceCode"]').addClass("validate[required]");
			isValid=false;
			
		}else{
			$('input[name="specialServiceFormLine3\\.specialServiceCode"]').removeClass("validate[required]");
			validatePayeeRequired(3);
		}
		if(isValid && $('input[name="specialServiceFormLine4\\.specialServiceCode"]').val()=="" && !specialServiceLineCheck(4)){
			$('input[name="specialServiceFormLine4\\.specialServiceCode"]').addClass("validate[required]");
			isValid=false;
			
		}else{
			$('input[name="specialServiceFormLine4\\.specialServiceCode"]').removeClass("validate[required]");
			validatePayeeRequired(4);
		}
		if(isValid && $('input[name="specialServiceFormLine5\\.specialServiceCode"]').val()=="" && !specialServiceLineCheck(5)){
			$('input[name="specialServiceFormLine5\\.specialServiceCode"]').addClass("validate[required]");
			isValid=false;
			
		}else{
			$('input[name="specialServiceFormLine5\\.specialServiceCode"]').removeClass("validate[required]");
			validatePayeeRequired(5);
		}
	}else{
		if($('input[name="specialServiceFormLine1\\.specialServiceCode"]').val()==""){
			$('input[name="specialServiceFormLine1\\.specialServiceCode"]').addClass("validate[required]");
			isValid=false;
		}else{
			$('input[name="specialServiceFormLine1\\.specialServiceCode"]').removeClass("validate[required]");
		}
	}
	return isValid;
}




function showErrorMessage(errorMessageString){
	
	$('#msgDivSplSrv').html("<div class=\"message_error\">"+ errorMessageString+"</div>");
	$('#msgDivSplSrv').show();
}

function hideErrorMessage(){
	$('#msgDivSplSrv').html("");
	$('#msgDivSplSrv').hide();
}

function getRateBasisList() {
	// Get contact list for address. [commented for merge.]specialServiceFormLine1.rateBasisCode
	
	function callBack(responseText) { // cheetah
		$('select[name="specialServiceFormLine1\\.rateBasisCode"]').children().remove();
		$('select[name="specialServiceFormLine1\\.rateBasisCode"]').append("<option value=''></option>");
		for ( var i = 0; i < responseText.data.length; i++) {
			$('select[name="specialServiceFormLine1\\.rateBasisCode"]')
			.append($("<option/>", {
				value : responseText.data[i].code,
				text : responseText.data[i].description
			}));
		}
		if($("#isSpecialServiceAdd").val()!='false'){
			for(var i=2;i<=5;i++){
				$('select[name="specialServiceFormLine'+i+'\\.rateBasisCode"]').html($('select[name="specialServiceFormLine1\\.rateBasisCode"]').html());
			}
		}
	}
	
	getRateBasisListRequest(callBack); // cheetah
	
}

function getRateBasisListRequest(callBack) { // cheetah
	var gatesCheetah = window.gatesCheetah || {};
	if (gatesCheetah && gatesCheetah.rateBasisList && gatesCheetah.rateBasisList !== null)  {
		console.log('Cheetah: getRateBasisListRequest from cache');
		callBack(gatesCheetah.rateBasisList);
		return;
	}
	console.log('Cheetah: getRateBasisListRequest from Ajax');
	// Get contact list for address. [commented for merge.]specialServiceFormLine1.rateBasisCode
	$.ajax({
		type : "POST",
		url : _context +"/booking/specialservice/getRateBasisList",
		data : {},
		success : callBack
	});
}

function addroleUpdateForSPSR(data) {
		$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.note"]').val('');
		var values = data.split("|");
		var note = formatAddRoleDscrForSPSV(values[4],values[7],values[2],values[6]);
		//$("#payeeHidden"+payeeLineNumber).val(item.name);
		$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.note"]').val(note);
		$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.addressRoleId"]').val(values[9]);
		$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.source"]').val("Manual");
		//Defect : D018102
		$('label[for="specialServiceFormLine'+payeeLineNumber+'\\.sourceReadOnly"]').text("Manual");
		
		$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.isMilTruckerRateCustomized"]').val("");
		$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.milTruckerRateId"]').val("");
		checkRateBasisRequired(payeeLineNumber);
		isSpecialServiceChanged=true;
	
}

function formatAddRoleDscrForSPSV(nameQualifier, addressLine1, city, state) {
	var nameQualifierTemp = "";
	var addressLine1Temp = "";
	var cityTemp = "";
	var stateTemp = "";
	
	if (nameQualifier != "") {
		nameQualifierTemp = nameQualifier;
	}
	if (addressLine1 != "") {
		if (nameQualifierTemp != "") {
			addressLine1Temp = " - " + addressLine1;
		} else {
			addressLine1Temp =  addressLine1;
		}
	}
	/*if (city != "") {
		cityTemp = " - " + city;
	}*/
	if (state != "") {
		stateTemp = ", " + state;
	}
	 return nameQualifierTemp + addressLine1Temp + cityTemp + stateTemp;
}

function checkEntityStatusForDisplay(){
	var entityName=$('#spSvcEntityName').val();
	if(entityName == 'quote'){
		if(!($('#statusCode').val()=="" || $('#statusCode').val()=="PEND" || $('#statusCode').val()=="APPR")) {
			return false;
		}
	}else if(entityName == 'booking'){
		var bookingStatusCode=$('#bookingStatusCode').val();
		if(!(bookingStatusCode==undefined || bookingStatusCode==null || bookingStatusCode=='' || bookingStatusCode!='CANC')){
			return false;
		}
	}else if(entityName == 'container'){
		var shipmentStatus=$('#shipmentStatus').val();
		if(shipmentStatus =='ISSD' || shipmentStatus=='CORR') {
			return false;
		}
	}
	return true;
	
}

function checkForPayableCarrier(orgId,payeeLineNumber,item){
	$.ajax({
		type : "POST",
		url : _context +"/booking/specialservice/getPayableCarrier",
		data : {
			organizationId: orgId
		},
		success : function(responseText) {
			
			if(null!=responseText && null!=responseText.data){
				/*$("#payeeHidden"+payeeLineNumber).val(item.name);
				$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.payee"]').val(item.name);
				$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.organisationId"]').val(item.orgid);*/
				
				$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.note"]').val(responseText.data[1]);
				$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.addressRoleId"]').val(responseText.data[0]);
				$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.source"]').val("Manual");
				//Defect : D018102
				$('label[for="specialServiceFormLine'+payeeLineNumber+'\\.sourceReadOnly"]').text("Manual");
				
				$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.isMilTruckerRateCustomized"]').val("");
				$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.milTruckerRateId"]').val("");
				checkRateBasisRequired(payeeLineNumber);
				
			}else{
				casPayeeLookup(payeeLineNumber); 
			}
			isSpecialServiceChanged=true;
		}
	});
}

function changeValueToDecimalFormat(index){
	var manualUserRate=$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').val();
	
	if(manualUserRate !=null && manualUserRate !='' && ! isNaN(manualUserRate) && manualUserRate != undefined){
		manualUserRate = parseFloat(manualUserRate);		
		$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').val(manualUserRate.toFixed(2));
	}
};var isClauseChanged = "";
var clauseCode = "";

$(function() {
	
	$('#clause :input').change(function()
	{
		isClauseChanged = "Y";
		if(this.type=='radio')
		{
			if($("#custom").prop("checked")==true || 
					$("#custom").prop("checked")=='true')
			{
				selectForFormSerialize(this, 'C');
				customClickFunction();
			}
			else if($("#standard").prop("checked")==true || 
					$("#standard").prop("checked")=='true')
			{
				selectForFormSerialize(this, 'S');
				standardClickFunction();
			}//D026182
			else if($("#instruction").prop("checked")==true || 
					$("#instruction").prop("checked")=='true')
			{
				selectForFormSerialize(this, 'I');
				standardClickFunction();
			}
		}
	});
	
	$("#standardClauseCode").change(function()
	{
		if($("#standardClauseCode").val()=="" || 
				$("#standardClauseCode").val()!=clauseCode)
		{
			clauseCode = "";
			$("#standardClauseCode").val('');
			$('#printOnBkngConfirm').val("");
			$('#printOnBilling').val("");
			$('#text').val("");
			$("#isEditable").val("");
			$("#text").attr("readonly", true);
		}
	});
	
	//Autocompleter and lookup for standard clause
 	$('#standardClauseCode').gatesAutocomplete({
		//source: _context+'/cas/autocomplete.do',
		source:_context+'/cas/autocomplete.do',
		name: "Clause Code",
	 	extraParams: {
		 		 method: 'getBkStandardClause',
		 		 searchType: '296',
				parentSearch:  function() { 
	 			if($('#standard').attr("checked"))
	 				return "S";
	 			else
	 				return "I";
	 		 }
	 	},
		autoSelectWhenSingle:true,
		autoSelectFirst:true,
			autoSelectCriteria:function(item) {
			   if(item != null){
			     return 'true';
			  }
			  else {
			     return 'false';
			  }
			},
		formatItem: function(data) {
			return data.Code;
		},
		formatResult: function(data) {
			return data.Code;
		}, 
		select: function(data) {
			isClauseChanged = "Y";
			$("#text").attr("readonly", true);
			$('#standardClauseCode').val(data.Code);
			clauseCode = data.Code;
			$('#text').val(data.FullClause);
			$('#isEditable').val(data.is_editable);
			$("#printOnBkngConfirm").val(data.bkngFlag);
			if($('#isEditable').val()=='Y')
				$("#text").attr("readonly", false);
			
			if(data.type=='Clause')
			{
				$('.clauseType').attr("checked", false);
				$('#standard').attr('checked', true);
				$('#printOnBilling').val("Y");
				selectForFormSerialize('#standard', 'S');
			}
			else if(data.type=='Instruction')
			{
				$('.clauseType').attr("checked", false);
				$('#instruction').attr('checked', true);
				$('#printOnBilling').val("N");
				//D026182
				selectForFormSerialize('#instruction', 'I');
			}
		}
	});	
	
	$('#standardClauseCode').gatesPopUpSearch({
		func:function() {
			if($('#standardClauseCode').attr("readonly") || $('#standardClauseCode').attr("readonly")=='readonly')
				return;
			else
				standardClausePopupSearch();
		}
	});
	
	// create add clause dialog at body onload
	$("#addClauseDialog").dialog({
		autoOpen : false,
		width :634,
		modal : true,
		title: 'Add Clause',
		buttons:{
			Cancel:function()
			{
				removeClausesPointers();
				if(isClauseChanged!="")
				{
					var r = confirm("All unsaved changes will be discarded.Continue?");
					if(r)
						$("#addClauseDialog").dialog('close');
					else
						return;
				}
				else
					$("#addClauseDialog").dialog('close');
			},
			Ok:function()
			{
				removeClausesPointers();
				if($("#clause").validationEngine('validate'))
				{
					var queryString = $('#clause').formSerialize();
					$.ajax({
						url : _context +"/booking/clause/addClause",
						type : "POST",
						data : queryString,
						success : function(
								responseText) {
							if(responseText.success==true)
							{
								isBookingChanged = "Y";
								$("#gridIdForClauses").trigger("reloadGrid");
								/*if($('#isInBond :selected').val()=='false')
									showResponseMessages("msgDiv", responseText);*/
							}
							else	
								showResponseMessages("msgDiv", responseText);
							
							$("#addClauseDialog").dialog('close');
						}
					});
				}
				else
					return false;
			},
			Clear:function()
			{
				resetFunction();
			}
		},
		open : function(){
			tabSequence('#addClauseDialog',false,false);
			resetFunction();
			$("#clause").validationEngine('attach');
		},
		close : function() {
			removeClausesPointers();
			$("#clause").validationEngine('detach');
			//$("#gridIdForClauses").trigger("reloadGrid");
			tabSequence('#',true,false);
		}
	});
	
	//
	$('#clausesAdd').click(function() {
		/*Booking Security*/
		if(isClauseDisplayOnly && isClauseModifiable){
			if($('#bookingStatusCode').val()!='CANC'){
				$("#addClauseDialog").dialog('open');
			}
		}
		return false;
	});
   
  var colNames = ['Id','Clause Code', 'Is Editable', 'Print On Booking', 'Clause Type','Text','Source','' ];
  
  var colModel = [
       {name:'clauseSeqNo', hidden:true},
       {name:'standardClauseCode', index:'standardClauseCode', width:100},
       {name:'isEditable', hidden:true},
       {name:'printOnBkngConfirm', hidden:true},
       {name:'clauseTypeCode', index:'clauseTypeCode', width:100},
       {name:'clauseText',index:'clauseText', width:350, editable:true, edittype:"textarea", editrules : { required : true, custom:true, custom_func:validateMaxlength}, editoptions : {rows : 2, cols : 44, style:'resize:none;'}},
       {name:'clauseSource',index:'clauseSource', width:150}, 
       {name:'actions', width:50, formatter:'actions',formatoptions:{keys:true, editbutton:true, delbutton:true, url:_context+'/booking/clause/updateClause', 
    	   afterRestore:function()
    	   {
    		 //Clears and hides error row
    			$('table[aria-labelledby="gbox_gridIdForClauses"] thead tr[id="FormError"] td').html("");
    			$('table[aria-labelledby="gbox_gridIdForClauses"] thead tr[id="FormError"]').hide();
    	   },
    	   afterSave:function()
    	   {
    		   isBookingChanged = "Y";
    		   return true;
    	   }
       }}];
  
  
  var jsonReader = {
			root : "rows",
			page : "page",
			total : "total",
			records : "records",
			cell : "cell",
			repeatitems : false,
			id : "clauseSeqNo"
		};

  /*Booking Security*/
  if(isClauseDisplayOnly || isClauseModifiable){
		createGrid("gridIdForClauses", // grid id for party
		"pagerIdForClauses", // page id for party
		_context+'/booking/clause/load', // geturl
		'', // addurl
		_context+'/booking/clause/updateClause', // edit url
		_context+'/booking/clause/deleteClause',
		_context+'/booking/clause/deleteClause',// delete selected URL
		colNames, colModel, "Clauses",// caption
		85,// height //86 for new font
		3,// row num
		[ 3, 6, 9 ],// row list
		true,// multiselect
		true,// multidelete
		false,// load once
		false, // read only grid
		jsonReader, // json reader
		false, // hide edit
		false, // hide delete
		true, // autowidth
		true, // rownumbers
		true, // hide custom add row
		false,// hide pager row
		null,// custom edit method
		clauseGridComplete,// custom grid complete
		clauseLoadComplete,// custom load complete
		false,// default hidden
		true,// row Color Based On status
		false,//cell edit
		clauseAfterSubmit);
  }
		
		$("#gridIdForClauses").jqGrid('setGridParam',{
			delOptions: {
				beforeSubmit:function(postdata)
				{
					rowData=jQuery("#gridIdForClauses").getRowData(postdata);
					if(rowData.standardClauseCode=='BOND' && $('#isInBond :selected').val()=='true')
					{
						$('#msgDiv').html("<div class='message_error'>BOND clause cannot be deleted as Inbond flag is 'Y'</div>");
						window.scrollTo(0, 0);
						$('#eData').trigger('click');
						triggerErrorMessageAlert();
						return [false,""];
					}
					else
						return [true,""];
				},
				beforeSelectRow: function(rowId, e) {
					 var rowData = jQuery("#gridIdForClauses").getRowData(rowId);
					 if(rowData.standardClauseCode=='BOND' && $('#isInBond :selected').val()=='true') {
						 return false;
					 }
					 else
						 return true;
				 }
			}
		});
  });

var clauseAfterSubmit = function(result)
{
	if(result.success)
		isBookingChanged = "Y";
};

function customClickFunction()
{
	clauseCode = "";
	$("#standardClauseCode").val('');
	$("#text").val("");
	$("#isEditable").val("Y");
	$("#printOnBkngConfirm").val("");
	$("#printOnBilling").val("");
	$("#standardClauseCode").attr("disabled", true);
	$("#text").attr("readonly", false);
}

function standardClickFunction()
{
	clauseCode = "";
	$("#standardClauseCode").val('');
	$("#text").val("");
	$("#isEditable").val("");
	$("#printOnBkngConfirm").val("");
	$("#printOnBilling").val("");
	$("#standardClauseCode").attr("disabled", false);
	$("#standardClauseCode").attr("readonly", false);
	$("#text").attr("readonly", true);
}

function resetFunction()
{
	isClauseChanged = "";
	selectForFormSerialize($('#standard'), 'S');
	standardClickFunction();
}

function removeClausesPointers()
{
	$("#clause").validationEngine('hideAll');
}

function imposeMaxLength(Object, MaxLen) {
	return (Object.value.length <= MaxLen-1);
}

function standardClausePopupSearch() {
	var flag = "";
	if($('#standard').attr("checked"))
		flag = "S";
	else if($('#instruction').attr("checked"))
		flag = "I";
	var code = $('#standardClauseCode').val();
	//D026129
	var estShipDate = $('#estShip').text();
	var actionUrl =  _context + '/cas/bkgstandardClauseSearch.do?flagType='+flag+'&code='+code+'&estShipDate='+estShipDate;
	var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, 'StandardClauseSearch', windowStyle);
}

function setStandardClause(listOfClauses) {
	var clauses = listOfClauses.split("|");
	if(clauses.length==1)
	{
		isClauseChanged = "Y";
		$("#text").attr("readonly", true);
		var id = clauses[0];
		var values = id.split(",");	
		$('#standardClauseCode').val(values[0]);
		clauseCode = values[0];
		$('#text').val(getStandardText(values));
		$('#isEditable').val(values[3]);
		$("#printOnBkngConfirm").val(values[values.length-1]);
		if($('#isEditable').val()=='Y')
			$("#text").attr("readonly", false);
		if(values[2]=='Clause')
		{
			$('.clauseType').attr("checked", false);
			$('#standard').attr('checked', true);
			$('#printOnBilling').val("Y");
			selectForFormSerialize('#standard', 'S');
		}
		else if(values[2]=='Instruction')
		{
			$('.clauseType').attr("checked", false);
			$('#instruction').attr('checked', true);
			$('#printOnBilling').val("N");
			//D026182
			selectForFormSerialize('#instruction', 'I');
		}
	}
	else
	{
		var codeArr = "";
		var isEditableArr = "";
		var textArr = "";
		var bkngArr = "";
		var billArr = "";
		
		var areAllInstructions = true;
		var areAllClauses = true;
		
		for(var i=0;i<clauses.length;i++)
		{
			var id = clauses[i];
			var values = id.split(",");	
			
			var code = values[0];
			var editable = values[3];
			var bkng = values[values.length-1];
			var bill = "";
			if(values[2]=='Clause')
			{
				bill = "Y";
				areAllInstructions = false;
			}
			else if(values[2]=='Instruction')
			{
				bill = "N";
				areAllClauses = false;
			}
			var text = getStandardText(values);
			
			if(i==0)
			{
				codeArr = code;
				isEditableArr = editable;
				textArr = text;
				bkngArr = bkng;
				billArr = bill;
			}
			else
			{
				codeArr = codeArr+ "," + code;
				isEditableArr = isEditableArr + "," + editable;
				textArr = textArr +"\n\n" + text;
				bkngArr = bkngArr + "," + bkng;
				billArr = billArr + "," + bill;
			}
		}
		
		$('#standardClauseCode').val(codeArr);
		$('#text').val(textArr);
		$('#isEditable').val(isEditableArr);
		$("#printOnBkngConfirm").val(bkngArr);
		$('#printOnBilling').val(billArr);
		$("#text").attr("readonly", true);
		$('#standardClauseCode').attr("readonly", true);
		if(areAllClauses || (!areAllClauses && !areAllInstructions))
		{
			$('.clauseType').attr("checked", false);
			$('#standard').attr('checked', true);
			selectForFormSerialize('#standard', 'S');
		}
		else if(areAllInstructions)
		{
			$('.clauseType').attr("checked", false);
			$('#instruction').attr('checked', true);
			//D026182
			selectForFormSerialize('#instruction', 'I');
		}
	}
}

function getStandardText(standardTextArray)
{
	var standardText = "";
	for(var i=4;i<standardTextArray.length-1;i++)
	{
		if(i==4)
			standardText = standardText + standardTextArray[i];
		else
			standardText = standardText + "," + standardTextArray[i];
	}
	return standardText;
}

var clauseGridComplete = function()
{
	 var rowIDs = jQuery("#gridIdForClauses").getDataIDs(); 
	 var headerStr = "";
     for (var i=0;i<rowIDs.length;i=i+1)
     {
       var rowData=jQuery("#gridIdForClauses").getRowData(rowIDs[i]);
       var id = $('#gridIdForClauses').getCell(rowIDs[i], 'clauseSeqNo');
       //var trElement = jQuery("#"+ rowIDs[i],jQuery('#gridIdForClauses'));
       if (rowData.isEditable!='Y' || $("#bookingStatusCode").val()=='CANC' || !isClauseModifiable)
       {
    	   //$("div.ui-pg-div.ui-inline-edit", "#"+"gbox_gridIdForClauses"+" #"+rowIDs[i]).hide();
    	   $("#gbox_gridIdForClauses #"+rowIDs[i]+" div .ui-pg-div.ui-inline-edit").hide();
       }
       if(($("#bookingStatusCode").val()=='CANC' || !isClauseModifiable) || 
    		   (rowData.standardClauseCode=='BOND' && $('#isInBond :selected').val()=='true'))
       {
    	   $("#gbox_gridIdForClauses #"+rowIDs[i]+" div .ui-pg-div.ui-inline-del").hide();
    	   $('#jqg_gridIdForClauses_'+id).attr("checked",false);
    	   $('#jqg_gridIdForClauses_'+id).hide();
       }
       
       // commented for D027776
       /*if(rowData.standardClauseCode!=null && rowData.standardClauseCode!='')
       {       if(headerStr=='')
    	   			headerStr = rowData.standardClauseCode;
       			else
       				headerStr = headerStr + ", "+rowData.standardClauseCode;
       }*/
       
    	 // jQuery('#gridIdForClauses tr #'+rowIDs[i]+' td:last div:first div.ui-inline-edit',jQuery(this)).hide();
    	   //$('.ui-icon-pencil').hide();
    	   //$("#gridIdForClauses").jqGrid('setCell', (i), 'actions', $("div.ui-pg-div.ui-inline-edit", "#"+"gbox_gridIdForClauses").show(), 'ui-icon-pencil', '');
       
       //D026182: FW: Maintain Booking: Booking Clause grid is not distinguishing between Standard Billing Clauses and Instructions
       if(rowData.clauseTypeCode=='C'){
       	$("#gridIdForClauses").jqGrid('setCell',rowIDs[i],'clauseTypeCode', 'Custom');
       }else if(rowData.clauseTypeCode=='I'){
       	$("#gridIdForClauses").jqGrid('setCell',rowIDs[i],'clauseTypeCode', 'Instruction');
       }else{
       	$("#gridIdForClauses").jqGrid('setCell',rowIDs[i],'clauseTypeCode', 'Billing Clause');
       }
     }
     
     if($("#bookingStatusCode :selected").val()=='CANC' || !isClauseModifiable)
 	{
 		$("#gbox_gridIdForClauses .cbox").attr("disabled", true);
 	}
 	else
 	{
 		$('#jqgh_gridIdForClauses_cb').html('<input type="checkbox" id="multiselect_gridIdForClauses" />');
		$("#multiselect_gridIdForClauses").click(function(){
			$("#gridIdForClauses").resetSelection();
			
			if($("#multiselect_gridIdForClauses").attr("checked")=="checked")
			{
				  var rowIDs = jQuery("#gridIdForClauses").getDataIDs(); 
			      for (var i=0;i<rowIDs.length;i=i+1)
			      { 
			    	  var id = $('#gridIdForClauses').getCell(rowIDs[i], 'clauseSeqNo');
			    	  var rowData=jQuery("#gridIdForClauses").getRowData(rowIDs[i]);
			    	  if(rowData.standardClauseCode=='BOND' && $('#isInBond :selected').val()=='true')
			    	  {
			    		  $('#jqg_gridIdForClauses_'+id).attr("checked",false);
			    	  }
			    	  else
			    	  {
			    		  $('#jqg_gridIdForClauses_'+id).attr("checked",true);
		 		    	  $('#gridIdForClauses').setSelection(rowIDs[i], true);
			    	  }
			      }
			}
			return true;
		});
 	 }
     
     // Added a new ajax call for populating Clause Accordian full data
     $.ajax({
			url : _context +"/booking/clause/loadClauseAccordian",
			type : "GET",
			success : function(responseText) {
				if(responseText.success==true) {
					for (var i=0; i<responseText.rows.length; i=i+1) {
						var clause = responseText.rows[i];
						if(clause.standardClauseCode != null && clause.standardClauseCode != '') {
							if(headerStr=='')
								headerStr = clause.standardClauseCode;
							else
								headerStr = headerStr + ", "+clause.standardClauseCode;
						}
					}
					if(headerStr!="")
						headerStr = " - " + headerStr;
					
					setAccordianTabDetails('clauseHeader', headerStr);
				}
			}
		});
     
     // commented for D027776
     /*if(headerStr!="")
  	   headerStr = " - " + headerStr;
     else
  	   headerStr = "Clauses";
     setAccordianTabDetails('clauseHeader', headerStr);*/
     
     $('#pagerIdForClauses .ui-pg-input').attr("readonly", true);
     
    return true;
};

var clauseLoadComplete = function()
{
	//hides add row
	$("#tr_clauseSeqNo", "#"+"gbox_gridIdForClauses").hide();
	
	//Clears and hides error row
	$('table[aria-labelledby="gbox_gridIdForClauses"] thead tr[id="FormError"] td').html("");
	$('table[aria-labelledby="gbox_gridIdForClauses"] thead tr[id="FormError"]').hide();
	
	return true;
};

function validateMaxlength(value, colname)
{
	if(value.length>1800)
		return [false, "Clause length cannot be greater than 1800 characters"];
	else
		return [true, ""];
};function createHoldGrid(entityName) {
	$("#entityName").val(entityName);
	var holdColNames = ['Id', 'Hold Code', 'Message', 'Placed','Released','Last Updated'];
	var holdColModels = [
	               {name:'holdSeqNo', index:'holdSeqNo', hidden:true},
	               {name:'holdCode', index:'holdCode', width:60, editable:true, formatter:'showlink', formatoptions : {
          				baseLinkUrl : "javascript:",
        				showAction: "editHold('",
        				addParam: "');" }
                    },
	               {name:'note', index:'note', width:250, editable:true},
	               {name:'placed', index:'placed', width:165, editable:false},
	               {name:'released', index:'released', width:165, editable:false},
	               {name:'lastUpdated', index:'lastUpdated', width:165, editable:false}
			   	];

	var jsonReaderHold = {
			root:"rows",
			page:"page",
			total:"total",
			records:"records",
			repeatitems:false,
			cell:"cell",
			id:"holdSeqNo"
		};
	
	/*Booking Security*/
	var pagerMultiDelete = true;
	if(isHoldManualDisplayOnly && !isHoldManualModifiable){
		pagerMultiDelete = false;
	}
	
	/*Booking Security*/
	if(isHoldManualDisplayOnly || isHoldManualModifiable){
	createGrid(
			"holdGrid", // grid id for user
			"holdPager", // page id for user
			_context+'/hold/load?entityName='+entityName, 
			'', 
			'', 
			'', 
			_context+'/hold/delete?entityName='+entityName,
			holdColNames, 
			holdColModels, 
			"Hold",
			139, 6, [6, 12, 18, 24], true, pagerMultiDelete, false, false,
			jsonReaderHold, true, true, true, true, true, false, false, false, holdGridLoadComplete, false, true, false, holdPagerAfterSubmit);
	}
	
	 $("#holdDialog").dialog({autoOpen: false ,width:970, modal: true
		    , buttons: {
		         Cancel:function(){
		            	$(this).dialog("close"); 
		          },
		          Ok:function(){
		        	  if($('#bookingStatusCode')!=undefined && $('#bookingStatusCode').val()=='CANC'){
			        		$("#holdDialog").dialog("close"); 
			        		return;
			          }
		        	  if (!$("#holdForm").validationEngine('validate')) {
			        		return;
		        	  }
		        	  
		        	  var dataUrl = _context+"/hold/add?entityName="+entityName;
			          if($("#isHoldAdd").val()=="false"){
			        	dataUrl = _context+"/hold/update?entityName="+entityName;
			          }
			          
			          $.ajax({
			      		type: "POST",
			      		url: dataUrl,
			      		data: $('#holdForm').formSerialize()+ "&trade="+$('#tradeCode').val()+"&loadDschServiceGroupCode="+$.trim($('#loadDschServiceGroupCode').val()),
			      		success: function(responseText){
			      			if(responseText.success){
			      				//resetMandatory();
			      				$("#holdDialog").dialog("close");
			      				if($("#isHoldAdd").val()=="false"){
			      					loadHoldGrid("U");
						        }
			      				else{
			      					loadHoldGrid("");
			      				}
			      				if($("#entityName").val()=='booking')
									isBookingChanged = "Y";
			      			}
			      			else{
			      				showResponseMessages('msgDivHold', responseText);
			      				$('#msgDivHold').show();
			      			}
			      		}
			      	});
		          } 
	},
		open : function(){
			tabSequence('#holdDialog',false,false);
			$("#holdForm").validationEngine('attach');
		},
		close : function() {
			$("#holdForm").validationEngine('hideAll');
			$("#holdForm").validationEngine('detach');
			tabSequence('#',true,false);
		} 
	});
	
	 $("#holdAdd").click(function(){
		 /*Booking Security*/
		 if(isHoldManualDisplayOnly && !isHoldManualModifiable){
			 return;
		 }
		 if($('#bookingStatusCode').val()!='CANC'){
			 if($("#success").val()=='false'){
					$("div#msgDiv").html('<div class="message_error">Load booking first.</div>');
			}
			else if($("#success").val()=='true' || $("#success").val()=='undefined' || $("#success").val()=='' || $("#success").val()==null){
				 openHold();
			}
		 }
		 
		 return false;
	 });
	
	$('#holdCd').gatesPopUpSearch({
		func : function() {
				holdPopupSearch($('#holdCd').val());
		}
	});
	
	//Blurr the data for invalid item Id
	 $('#holdCd').change(function(){
		if($.trim($(this).val())==''){
			$(this).val(""); 
			$("#holdCdHidden").val("");
			$("#holdNote").val("");
			//$("#holdNoteHidden").val("");
		} 
		else if($("#holdCdHidden").val()=='undefined' || $("#holdCdHidden").val()==null || $("#holdCdHidden").val()==""){				
			$(this).val("");
			$("#holdNote").val("");
			//$("#holdNoteHidden").val("");
 	    }	
		else if($("#holdCdHidden").val()!=$.trim($(this).val())){
			$(this).val(""); 
			$("#holdCdHidden").val("");
			$("#holdNote").val("");
			//$("#holdNoteHidden").val("");
		}
		
		$(this).val($.trim($(this).val()));
		$("#holdNote").attr("readOnly", false);
		if($('#msgDivHold').is(':visible') && $(this).val()==''){
			$('#msgDivHold').html("");
			$('#msgDivHold').hide();
		}
   }); 	
	 
   $("#holdNote").change(function(){
	   /*if($.trim($(this).val())==''){
			$(this).val(""); 
			$("#holdNoteHidden").val("");
			$("#holdCd").val("");
			$("#holdCdHidden").val("");
		} 
		else if($("#holdNoteHidden").val()=='undefined' || $("#holdNoteHidden").val()==null || $("#holdNoteHidden").val()==""){				
			$(this).val(""); 
			$("#holdCd").val("");
			$("#holdCdHidden").val("");
	    }	
		else if($("#holdNoteHidden").val()!=$.trim($(this).val())){
			$(this).val(""); 
			$("#holdNoteHidden").val("");
			$("#holdCd").val("");
			$("#holdCdHidden").val("");
		}*/
	   $(this).val($.trim($(this).val()));
   });
   
   $("#releaseHold").click(function(){
	   var releasedHoldSeqNos = jQuery("#holdGrid").jqGrid('getGridParam','selarrrow');
	   if(releasedHoldSeqNos!='undefined' && releasedHoldSeqNos!=null && releasedHoldSeqNos!=''){
		   $.ajax({
				url: _context+"/hold/releaseHolds?entityName="+$("#entityName").val()+"&releasedHoldSeqNos="+releasedHoldSeqNos+"&reEvaluationReqd=true",
				success: function(responseText){
					if(responseText.success){
						loadHoldGrid("R");
						loadHoldUnreleasedGrid();
						if($("#entityName").val()=='booking')
							isBookingChanged = "Y";
					}
					else{
					   $('table[aria-labelledby="gbox_holdGrid"] thead tr[id="FormError"] td').html(responseText.messages.error.toString());
					   $('table[aria-labelledby="gbox_holdGrid"] thead tr[id="FormError"]').show();
					}
				}
			});
	   }
	   else{
		   if($("#holdGrid").getGridParam("reccount")==0){
			   $('table[aria-labelledby="gbox_holdGrid"] thead tr[id="FormError"] td').html("There are no holds to be released.");
			   $('table[aria-labelledby="gbox_holdGrid"] thead tr[id="FormError"]').show();
		   }
		   else{
			   $('table[aria-labelledby="gbox_holdGrid"] thead tr[id="FormError"] td').html("Please select atleast one unreleased hold to be released.");
			   $('table[aria-labelledby="gbox_holdGrid"] thead tr[id="FormError"]').show();
		   }
	   }
   });
   
   $("#undoReleaseHold").click(function(){
	   var undoReleasedHoldSeqNos = jQuery("#holdGrid").jqGrid('getGridParam','selarrrow');
	   if(undoReleasedHoldSeqNos!='undefined' && undoReleasedHoldSeqNos!=null && undoReleasedHoldSeqNos!=''){
		   $.ajax({
				url: _context+"/hold/undoReleaseHolds?entityName="+$("#entityName").val()+"&undoReleasedHoldSeqNos="+undoReleasedHoldSeqNos,
				success: function(responseText){
					if(responseText.success){
						loadHoldGrid("UR");
						loadHoldUnreleasedGrid();
						if($("#entityName").val()=='booking')
							isBookingChanged = "Y";
					}
					else{
					   $('table[aria-labelledby="gbox_holdGrid"] thead tr[id="FormError"] td').html(responseText.messages.error.toString());
					   $('table[aria-labelledby="gbox_holdGrid"] thead tr[id="FormError"]').show();
					}
				}
			});
	   }
	   else{
		   if($("#holdGrid").getGridParam("reccount")==0){
			   $('table[aria-labelledby="gbox_holdGrid"] thead tr[id="FormError"] td').html("There are no holds to be unreleased.");
			   $('table[aria-labelledby="gbox_holdGrid"] thead tr[id="FormError"]').show();
		   }
		   else{
			   $('table[aria-labelledby="gbox_holdGrid"] thead tr[id="FormError"] td').html("Please select atleast one released hold to be undone.");
			   $('table[aria-labelledby="gbox_holdGrid"] thead tr[id="FormError"]').show();
		   }
	   }
   });
   
   //Button- Hold Release on create_booking.jsp
   /*$("#holdRelease").click(function(){
	   $.ajax({
			url: _context+"/hold/releaseHolds?entityName="+$("#entityName").val()+"&releasedHoldSeqNos="+$("#holdUnreleasedGrid").getDataIDs()[0],
			success: function(responseText){
				if(responseText.success){
					loadHoldGrid("R");
					loadHoldUnreleasedGrid();
				}
			}
		});
   });*/
	 
   /*$("#holdGrid").jqGrid('setGridParam',{
			afterInsertRow: function(rowid, rowdata, rowelem){
				alert("afterInsertRow");
				loadHoldGrid();
			}
    });*/
   
   $('#holdCd').gatesAutocomplete({
		source:_context+'/cas/autocomplete.do',
	 	extraParams: {
		 		 method: 'search_hold_code',
		 		 searchType: '264',
		 		parentSearch: function(){return  "ALL" + '|'+ getTrade() + '|'+ getLdDschSrvcGroup();}
	 	},
	 	autoSelectWhenSingle:true,
		autoSelectFirst:true,
			autoSelectCriteria:function(item) {
			   if(item != null){
			     return 'true';
			  }
			  else {
			     return 'false';
			  }
			},
		formatItem : function(item) {
			//alert("item.HOLD_CODE: " + item.HOLD_CODE);
			//alert("item.DESCRIPTION: " + item.DESCRIPTION);
			return item.HOLD_CODE/*+"-"+item.DESCRIPTION*/;
		},
		formatResult : function(item) {
			//alert("item: " + item);
			return item.HOLD_CODE/*+"-"+item.DESCRIPTION*/;
		},
		select : function(item) {
			$('#holdCd').val(item.HOLD_CODE);
			$("#holdCdHidden").val(item.HOLD_CODE);
			$('#holdNote').val(item.DESCRIPTION);
			//$("#holdNoteHidden").val(item.DESCRIPTION);
		}
	});
}

function openHold(){
	$("#holdDialog").dialog( "option", "title", 'Hold' );
	$("#holdDialog").dialog('open'); 
	$("#holdForm").clearForm();
	$("#isHoldAdd").val("true");
	$('#msgDivHold').hide();
	$("#holdCd").attr("readOnly", false);
	$("#holdNote").attr("readOnly", false);
}

function editHold(id) {
	/*Booking Security*/
	if((isHoldManualDisplayOnly && !isHoldManualModifiable) || ($('#bookingStatusCode')!=undefined && $("#bookingStatusCode").val()=='CANC')){
		$("#holdDialog").gatesDisable();
	}else{
		$("#holdDialog").gatesEnable();
	}
	var holdSeqNo = id.split('=')[1];
	//alert(seqNo);
	showHoldDialog(holdSeqNo);
	
	return false;
}

function showHoldDialog(holdSeqNo){
	//alert("seqNo: " + seqNo);
	$.ajax({
		url: _context+"/hold/getHold?holdSeqNo="+holdSeqNo+"&entityName="+$("#entityName").val(),
		success: function(responseText){
			openHold();
			$("#isHoldAdd").val("false");
			$("#holdForm").loadJSON(responseText);
			$("#holdCdHidden").val(responseText.holdCd);
			//$("#holdNoteHidden").val(responseText.holdNote);
			$("#holdCd").attr("readOnly", true);
			$("#holdNote").attr("readOnly", false);
			
			/*Booking Security*/
			if(isHoldManualDisplayOnly && !isHoldManualModifiable){
				disableDialogButton('holdDialog', 'Ok');
			}
		}
	});
}

function holdPopupSearch(holdCd) {
	var actionUrl = _context + '/cas/maintainHoldSearch.do?filterValue1=' + $("#holdCd").val() + '&filterValue4=' + $("#holdNote").val() + '&filterValue5=' + $("#tradeCode").val() + '&filterValue6=' + $("#loadDschServiceGroupCode").val();
	var windowStyle = 'top=50,left=100,height=500,width=900,scrollbars=0,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, 'CitySearch', windowStyle);
}

function holdCodeUpdate(holdCodeMessageText){
	var holdCodeDetails = holdCodeMessageText.split("|");
	$('#holdCd').val(holdCodeDetails[0]);
	$("#holdCdHidden").val(holdCodeDetails[0]);
	$('#holdNote').val(holdCodeDetails[1]);
	//$("#holdNoteHidden").val(holdCodeDetails[1]);
	$("#holdNote").attr("readOnly", false);
	clearHoldErrMsg();
}

function holdCodesUpdate(holdCodes, messageTexts){
	$('#holdCd').val(holdCodes);
	$("#holdCdHidden").val(holdCodes);
	$('#holdNote').val(messageTexts);
	//$("#holdNoteHidden").val(messageTexts);
	if(holdCodes.length==1){
		$("#holdNote").attr("readOnly", false);
	}
	else if(holdCodes.length>1){
		$("#holdNote").attr("readOnly", true);
	}
	clearHoldErrMsg();
}

var holdGridLoadComplete = function(){
	//alert("holdGridLoadComplete");
	//$('#holdPager .ui-pg-input').attr("readonly", true);
	var holdCount = $("#holdGrid").getGridParam("reccount");
	if(holdCount==0){
		setAccordianTabDetails('maintainBookingHoldId', "");
	}
	else if(holdCount>0){
		var holdDisplayText = "";
		var rowIDs = jQuery("#holdGrid").getDataIDs(); 
        for (var i=0;i<rowIDs.length;i=i+1){ 
	        rowData = jQuery("#holdGrid").getRowData(rowIDs[i]);
	        if ($.trim(rowData.released)==""){
	        	holdDisplayText+=$.trim(rowData.holdCode) + " | ";
	        }
        }
        
        if($.trim(holdDisplayText)!=""){
        	holdDisplayText = " - " + holdDisplayText;
        	holdDisplayText = holdDisplayText.substring(0, holdDisplayText.length - 3);
        }
		
		setAccordianTabDetails('maintainBookingHoldId', holdDisplayText);
	}
	
	// Hides blank row on grid creation as readonly parameter is false to include form error row 
	$('table[aria-labelledby="gbox_holdGrid"] thead tr[id="tr_holdSeqNo"]').hide();
	//Hides Error row on grid reload
	$('table[aria-labelledby="gbox_holdGrid"] thead tr[id="FormError"] td').html("");
	$('table[aria-labelledby="gbox_holdGrid"] thead tr[id="FormError"]').hide();
	
	
	//alert("Hidden Count: "+$("#holdGridCount").val());
	//alert("Current Count: "+holdCount);
	/*if($("#holdGridCount").val()>holdCount){
		validateBillingStarted("Del");
	}*/
	$("#holdGridCount").val(holdCount);
	
	/*Booking Security*/
	if(isHoldOverlayBottomEnabled){
		// Call for displaying unreleased holds
		//alert("entityName: " + $("#entityName").val());
		getUnreleasedHoldCount($("#entityName").val());
		//Load holdUnreleasedGrid when user define hold grid is loaded
		loadHoldUnreleasedGrid();
	}
};

var holdPagerAfterSubmit = function(result)
{
	if(result.success && $("#entityName").val()=='booking')
		isBookingChanged = "Y";
};

function clearHoldErrMsg(){
	$("#holdForm").validationEngine('hideAll');
}

function unloadHoldGrid(){
	$('#holdGrid').jqGrid('GridUnload');
}

function loadHoldGrid(oper){
	//alert("oper: "+ oper);
	$('#holdGrid').trigger("reloadGrid");
	//validateBillingStarted(oper);
}

function getHoldCodeMessage(){
	if($("#holdNote").val()=='undefined' || $.trim($("#holdNote").val())=='' || $("#holdNote").val()==null){
		return "ALL";
	}
	else{
		return $("#holdNote").val();
	}
}

function getTrade(){
	if($("#tradeCode").val()=='undefined' || $.trim($("#tradeCode").val())=='' || $("#tradeCode").val()==null){
		return "ALL";
	}
	else{
		return $("#tradeCode").val();
	}
}

function getLdDschSrvcGroup(){
	var loadDschServiceGroup = $("#loadDschServiceGroupCode").val();
	//alert("loadDschServiceGroup: " + loadDschServiceGroup);
	if(loadDschServiceGroup=='undefined' || $.trim(loadDschServiceGroup)=='' || loadDschServiceGroup==null){
		return "ALL";
	}
	else{
		return loadDschServiceGroup;
	}
}

function validateBillingStarted(oper){
	//alert("seqNo: " + seqNo);
	var shipmentNumber = $.trim($("#shipmentNumber").val());
	if(shipmentNumber!='undefined' && shipmentNumber!=null && shipmentNumber!=''){
		$.ajax({
			url: _context+"/hold/validateBillingStarted?entityName="+$("#entityName").val()+"&shipmentNumber="+shipmentNumber+"&oper="+oper,
			success: function(responseText){
				if(responseText.success){
					if($("#holdGrid").getGridParam("reccount")>0){
						if($('#msgDiv').html()==""){
							showResponseMessages('msgDiv', responseText);
						}else{
							var messageContent = $('#msgDiv').html();
							if (responseText.messages.info.length > 0) {
								var array = responseText.messages.info;
								messageContent += '<div class="message_info">' + array[0] + '</div>';
								$('#msgDiv').html(messageContent);
							}
						}
					}
				}
				else{
					if(oper!='D'){
						$('#msgDiv').html("");
					}
				}
			}
		});
	}
}

function openHoldsUnreleasedDialog(entityName){
	$("#holdsUnreleased").dialog({
		width : 710,
		height : 'auto',
		title : 'Unreleased Holds',
		autoResize : true,
		modal: false,
		minHeight: 0,
		//position: [400, 660],
		close : function(event, ui) {
			//$("#holdRelease").attr("disabled", true);
			
			if($("#holdCount").text()[1]==0){
				$("#holdRelease").attr("disabled", true);
			}
			else{
				$("#holdRelease").attr("disabled", false);
			}
			unloadHoldUnreleasedGrid();
			
			//On closing the holdUnreleasedGrid, change + to -
			$("#holdCount").html($("#holdCount").text().replace("-", "+"));
		}
	});
	
	/*$(window).resize(function() {
        $('body').css('height', $(this).height());
        $('#holdsUnreleased').dialog( "option", "position", [400, 660] );
    })
    .scroll(function(){
    		$(this).resize();
    	});	*/
	
	createHoldUnreleasedGrid(entityName);
}

function createHoldUnreleasedGrid(entityName) {
	var holdDisplayColNames = ['', '', '', '', ''];
	var holdDisplayColModels = [
	               {name:'holdSeqNo', index:'holdSeqNo', hidden:true},
	               {name:'holdCode', index:'holdCode', width:80, editable:false},
	               {name:'note', index:'note', width:320, editable:false, formatter:formatMessageText},
	               {name:'holdMz.targetWebPageSection', index:'holdMz.targetWebPageSection', width:80, editable:true, formatter:formatTargetWebPageSection/*, formatoptions : {
         				baseLinkUrl : "javascript:",
       				showAction: "editHoldDisplay('",
       				addParam: "');" }*/
                   },
	               {name:'holdMz.highlightedAttributes', index:'holdMz.highlightedAttributes', width:160, editable:false}
			   	];

	var jsonReaderHoldDisplay = {
			root:"rows",
			page:"page",
			total:"total",
			records:"records",
			repeatitems:false,
			cell:"cell",
			id:"holdSeqNo"
		};

    /*createGrid(
			"holdUnreleasedGrid", // grid id for user
			"holdDisplayPager", // page id for user
			_context+'/hold/loadUnreleasedHolds?entityName='+entityName, 
			'', 
			'', 
			'', 
			'',
			holdDisplayColNames, 
			holdDisplayColModels, 
			"",
			160, 5, [5], true, true, false, true,
			jsonReaderHoldDisplay, true, true, false, true, true, false, false, false, holdUnreleasedGridLoadComplete, false, true);*/
	
	$('#holdUnreleasedGrid').gatesGrid({
		colNames: holdDisplayColNames,
		colModel: holdDisplayColModels,
		jsonReader: jsonReaderHoldDisplay,
		height: "100%",
		multiselect:true,
		gatesOptions: {
			urls: {load: _context+'/hold/loadUnreleasedHolds?entityName='+entityName},
			extraData: {
				customerGroup: function() {
					return $.trim($('#customerGroupId :selected').text());
				},
				loadDschGroup: function() {
					return  $.trim($('#loadDschServiceGroupCode').val());
				}
			},
			loadComplete: holdUnreleasedGridLoadComplete
		}
	});
    
    jQuery("#holdUnreleasedGrid").jqGrid('setGridParam',{
    			//change 20599
				/*onSelectRow:function(rowid, status){
				//alert("onSelectRow: " + rowid);
				var firstRowId = $("#holdUnreleasedGrid").getDataIDs()[0];
				// The first row of holdUnreleasedGrid is always selected and its checkbos is always checked.
				$('table[aria-labelledby="gbox_holdUnreleasedGrid"] tr[id="'+firstRowId+'"] input[type=checkbox]').attr('checked', true);
				$('table[aria-labelledby="gbox_holdUnreleasedGrid"] tr[id="'+firstRowId+'"]').addClass("ui-state-highlight");
			    if(firstRowId!=rowid){
			    	$('table[aria-labelledby="gbox_holdUnreleasedGrid"] tr[id="'+rowid+'"] input[type=checkbox]').attr('checked', false);
			    	$('table[aria-labelledby="gbox_holdUnreleasedGrid"] tr[id="'+rowid+'"]').removeClass("ui-state-highlight");
				}	
				
				return true;
			}*/
		});
	
	//Removing Header of holdUnreleasedGrid
	$("#holdUnreleasedGrid").parents("div.ui-jqgrid-view").children("div.ui-jqgrid-hdiv").hide();
	
	//On opening the holdUnreleasedGrid, change - to +
	$("#holdCount").html($("#holdCount").text().replace("+", "-"));
}

/*function editHoldDisplay(id) {
	var rowData = jQuery("#holdUnreleasedGrid").getRowData(id.split('=')[1]);
	openTargetSection(rowData.holdCode);
}*/

var holdUnreleasedGridLoadComplete = function(){
//change 20599
	//Default selection of first row
	jQuery("#holdUnreleasedGrid").setSelection($("#holdUnreleasedGrid").getDataIDs()[0], false);
	//Removes background colur from first row
	$('span', $($('td', $('#'+$("#holdUnreleasedGrid").getDataIDs()[0], $("#holdUnreleasedGrid")))[4])).css("background-color", "");
	//$("#holdUnreleasedGrid tr[id="+$("#holdUnreleasedGrid").getDataIDs()[0]+"] td").css("background-color", "#98BF21");
	
	//Setting content of  first td of every tr of holdUnreleasedGrid
	$('table[id="holdUnreleasedGrid"] tr td[aria-describedby="holdUnreleasedGrid_rn"]').html("");
	$('table[id="holdUnreleasedGrid"] tr td[aria-describedby="holdUnreleasedGrid_rn"]').attr("title", "");
	
	//Disabling all the checkboxes of all the displayed rows of the grid
	$('table#holdUnreleasedGrid input[type=checkbox]').attr('disabled', false);
	//Enabling the checkbox of the first row of the grid
	$('table[aria-labelledby="gbox_holdUnreleasedGrid"] tr[id="'+$("#holdUnreleasedGrid").getDataIDs()[0]+'"] input[type=checkbox]').attr('disabled', false);
	
	if($("#holdUnreleasedGrid").getGridParam("reccount")==0){
		$( "#holdsUnreleased" ).dialog('close'); 
	}
	
	calculateUnreleasedHoldGridPosition();
};

function getUnreleasedHoldCount(entityName){
	//alert("getUnreleasedHoldCount: " + entityName);
	if(/*($("#bookingId").val()!='undefined' && $("#bookingId").val()!=null && $.trim($("#bookingId").val())!='') || (*/entityName!='undefined' && entityName!='' && entityName!=null /*&& entityName!='booking')*/){
		$("#holdsDiv").show();
		$.ajax({
			url: _context+"/hold/getUnreleasedHoldCount?entityName="+entityName+"&customerGroup="+$.trim($('#customerGroupId :selected').text())+"&loadDschGroup="+$.trim($('#loadDschServiceGroupCode').val()),
			success: function(responseText){
				if(responseText.success){
					if(responseText.data!=0){
						//$("#holdsDiv").show();
						$("a.holds").attr("href", "javascript:openHoldsUnreleasedDialog('"+entityName+"');");
						//On opening/closing the holdUnreleasedGrid, toggle + and -
						if($('#holdUnreleasedGrid tr').length==0){
							$("#holdCount").html("("+responseText.data+")+");
						}
						else{
							$("#holdCount").html("("+responseText.data+")-");
						}
						$("#holdRelease").attr("disabled", false);
						if(entityName=='billSetup'){
							loadHoldUnreleasedGrid();
						}
					}
					else{
						//$("#holdsDiv").show();
						$("a.holds").attr("href", "javascript:void(0)");
						$("#holdCount").html("(0)");
						$("#holdRelease").attr("disabled", true);
					}
				}
			}
		});
	}
	
	$("#holdRelease").tooltip({ 
	    bodyHandler: function() { 
	    	var toolTipText = "";
	    	$.ajax({
	    		url: _context+"/hold/getFirstUnreleasedHold?entityName="+entityName+"&customerGroup="+$.trim($('#customerGroupId :selected').text())+"&loadDschGroup="+$.trim($('#loadDschServiceGroupCode').val()),
	    		async: false,
	    		success: function(responseText){
	    			if(responseText.success){
	    				toolTipText = responseText.data.holdCode + " - " + responseText.data.note;
	    			}
	    		}
	    	});
	        return toolTipText; 
	    }, 
	    showURL: false 
	});
}

function openUnreleasedHoldGridOnIntialDisplay(entityName){
	//alert("openUnreleasedHoldGridOnIntialDisplay: " + entityName);
	/*Booking Security*/
	//D027551: 	HOLDS - AUTOBILL - XBK62 - didnt pop up in GATES
	var holdUrl;
	if(entityName == "booking"){
		holdUrl =  _context+"/hold/getUnreleasedHoldCount?entityName="+entityName+"&customerGroup="+$.trim($('#customerGroupId :selected').text())
					+"&loadDschGroup="+$.trim($('#loadDschServiceGroupCode').val());
	} else {
		holdUrl =  _context+"/hold/getUnreleasedHoldCount?entityName="+entityName;
	}
	if(isHoldOverlayBottomEnabled){
		$.ajax({
			url: holdUrl,
			success: function(responseText){
				if(responseText.success){
					if(responseText.data!=0){
						getUnreleasedHoldCount(entityName);
						if($("#holdsUnreleased").dialog("isOpen")==true){
							loadHoldUnreleasedGrid();
						}
						else{
							openHoldsUnreleasedDialog(entityName);
							loadHoldUnreleasedGrid();
						}
						$("#holdRelease").attr("disabled", false);
						calculateUnreleasedHoldGridPosition();
					}
					else{
						$("#holdsDiv").show();
						$("a.holds").attr("href", "javascript:void(0)");
						$("#holdCount").html("(0)");
						$("#holdRelease").attr("disabled", true);
						if($("#holdsUnreleased").dialog("isOpen")==true){
							$("#holdsUnreleased").dialog("close");
						}
					}
				}
			}
		});
	}
}

/*function showHideUnreleasedHoldButton(){
	var loadDschServiceGroup = $("#loadDschServiceGroupCode").val();
	//alert("loadDschServiceGroup: " + loadDschServiceGroup);
	if(loadDschServiceGroup=='undefined' || $.trim(loadDschServiceGroup)=='' || loadDschServiceGroup==null){
		$("#holdsDiv").hide();
		$("#holdRelease").attr("disabled", true);
	}
	else{
		getUnreleasedHoldCount();
	}
}*/

function loadHoldUnreleasedGrid(){
	$('#holdUnreleasedGrid').trigger("reloadGrid");
}

function unloadHoldUnreleasedGrid(){
	$('#holdUnreleasedGrid').jqGrid('GridUnload');
}

function formatMessageText(cellvalue, options, rowObject){
	//alert("cellvalue: " + cellvalue);
	if(($.trim(rowObject.holdMz.isRequireDataReview)=='Y' && $.trim(rowObject.holdMz.isDataRqrdInTrgtAttribute)=='Y') || ($.trim(rowObject.holdMz.isDataRqrdInTrgtAttribute)=='Y')){
		cellvalue = '<span style="background-color:red">'+cellvalue+'</span>';
	}
	else if($.trim(rowObject.holdMz.isRequireDataReview)=='Y'){
		cellvalue = '<span style="background-color:yellow">'+cellvalue+'</span>';
	}

return cellvalue;
}

function formatTargetWebPageSection(cellvalue, options, rowObject){
	var targetWebPageSection = "'" + $.trim(rowObject.holdMz.targetWebPageSection) + "'";
	if(rowObject.holdMz.targetWebPageSection!=null && $.trim(rowObject.holdMz.targetWebPageSection)!=''){
		cellvalue = '<a href="javascript:openTargetSection('+targetWebPageSection+')" style="text-decoration:underline;" >'+cellvalue+'</a>';
	}
	else if(rowObject.holdMz.targetWebPageSection==null || $.trim(rowObject.holdMz.targetWebPageSection)==''){
		cellvalue = '';
	}
return cellvalue;
}

function selectedHoldRelease(entityName){
//change 20599
	//var rowData = jQuery("#holdUnreleasedGrid").getRowData($("#holdUnreleasedGrid").getDataIDs()[0]);
	//Variance list by booking
	
	var releasedHoldSeqNos = jQuery("#holdUnreleasedGrid").jqGrid('getGridParam','selarrrow');

	var selectedHoldsToBeReleasedSeqNos=null;
	if(releasedHoldSeqNos==undefined)
	{
	var releasedHoldSeqNos=["-1"];
	}
	for(var i=0;i<releasedHoldSeqNos.length;i++)
	{
	selectedHoldsToBeReleasedSeqNos=releasedHoldSeqNos[i];
	var rowData = jQuery("#holdUnreleasedGrid").getRowData($("#holdUnreleasedGrid").getDataIDs()[i]);
	if(entityName=="variance" && ((rowData.holdCode=="VAR" && $("#IS_VARIANCE").val()=="Y") || (rowData.holdCode=="CNEE" && $.trim($("#IN_CONSIGNEE").val())==''))){
		return;
	}
	
	//var selectedHoldsToBeReleasedSeqNos = $("#holdUnreleasedGrid").getDataIDs()[0];
	//if(selectedHoldsToBeReleasedSeqNos==undefined){
	//	selectedHoldsToBeReleasedSeqNos = -1;
	//}
		
	var urlString;
	if(entityName=="booking" || entityName=="template"){
		urlString = _context+"/hold/releaseHolds?entityName="+entityName+"&releasedHoldSeqNos="+selectedHoldsToBeReleasedSeqNos+"&reEvaluationReqd=false&customerGroup="+$.trim($('#customerGroupId :selected').text())+"&loadDschGroup="+$.trim($('#loadDschServiceGroupCode').val());
	}
	else{
		urlString = _context+"/hold/selectedHoldRelease?entityName="+entityName+"&releasedHoldSeqNo="+selectedHoldsToBeReleasedSeqNos;
	}
	
	 $.ajax({
			url: urlString,
			success: function(responseText){
				if(responseText.success){
					if(entityName=="booking"){
						isBookingChanged = "Y";
						$('#bookingSave').trigger("click");
					}
					else if(entityName=="template"){
						isBookingChanged = "Y";
						$('#templateSave').trigger("click");
					}
					else if(entityName=="payment" || entityName=="sendDocument"){
						//window.opener.loadHoldGrid("D");
					}
					else if(entityName=="container" || entityName=="containerBilling"){
						loadHoldGrid("D");
					}
					loadHoldUnreleasedGrid();
					// Call for displaying unreleased holds
					getUnreleasedHoldCount(entityName);
				}
			}
		});
	}
}

function calculateUnreleasedHoldGridPosition(){
	var leftCoordinate = ($("#hold_link").offset().left + $("#hold_link").width()) - $('#holdsUnreleased').dialog( "option", "width") - 10;
	/*var topCoordinate = offset.top - ($('#holdsUnreleased').outerHeight() + $("#buttondiv").height());*/
	var topCoordinate = $("#hold_link").offset().top - $('#holdsUnreleased').outerHeight() - 45;
	$('#holdsUnreleased').dialog( "option", "position", [leftCoordinate, topCoordinate] );
	
	$(window).scroll(function() {
		$('#holdsUnreleased').dialog( "option", "position", [leftCoordinate, topCoordinate] );
	});
}

function openTargetSection(targetWebPageSection){
	var accordionIndex = '';
	if($("#entityName").val()=="booking" || $("#entityName").val()=="template"){
		if(targetWebPageSection=='Header'){
			window.scrollTo(0, 0);
		}
		else if(targetWebPageSection=='Parties'){
			accordionIndex = 1;
		}
		else if(targetWebPageSection=='Reference' || targetWebPageSection=='Marks'){
			accordionIndex = 2;
		}
		else if(targetWebPageSection=='Commodity'){
			if(addFreightEnabled()){
				$($('.booking-section')[4]).accordion("enable");
				accordionIndex = 4;
			}
			else{
				var offset = accordianPostionCoordinates(accordionIndex);
				window.scrollTo(offset.left, offset.top);
			}
		}
		else if(targetWebPageSection=='Special Service'){
			accordionIndex = 6;
		}
	}
	
	if(accordionIndex!=''){
		openTargetAccordian(accordionIndex);
		var offset = accordianPostionCoordinates(accordionIndex);
		window.scrollTo(offset.left, offset.top);
	}
}

function openTargetAccordian(accordionIndex){
	var status = $($('.booking-section')[accordionIndex]).accordion('option', 'active');
	if (typeof status == "boolean" && !status) {
		$($('.booking-section')[accordionIndex]).accordion('option', 'active', 0);
	}
}

function accordianPostionCoordinates(accordionIndex){
	return $($('.booking-section')[accordionIndex]).offset();
}

function resetHoldUnreleasedGrid(){
	if($("#holdsUnreleased").dialog("isOpen")==true){
		$("#holdsUnreleased").dialog("close");
	}
	$("a.holds").attr("href", "javascript:void(0)");
	$("#holdCount").html("(0)");
	if($("#holdRelease").css('visibility')=='visible'){
		$("#holdRelease").attr("disabled", true);
	}
};$(function() {

	$('#overrideReset').click(
			function(){
				isOverrideReset = "Y";
				resetBookingOverrides();
			});
	
	$('.unchangeable').change(function()
	{
		if($(this).attr("checked"))
			$(this).attr("checked", false);
		else
			$(this).attr("checked", true);
	});
	
	
	/*Change functions*/
	
	$('#overrideBlOrigin').change(
			function ()
			{
				bookingOverridesHeader();
				if($('#overrideBlOrigin').val()!='')
					validateDefaults('blOrigin');
				else
					setPlaceOfReceiptDefaultValue();
			});
	
	$('#overrideOriginPort').change(
			function ()
			{
				if($('#overrideOriginPort').val()!='')
					validateDefaults('originPort');
				else
					setOriginPortDefaultValue();
			});
	
	$('#overrideDestinationPort').change(
			function ()
			{
				if($('#overrideDestinationPort').val()!='')
					validateDefaults('destinationPort');
				else
					setDestinationPortDefaultValue();
			});
	
	$('#overrideBlDestination').change(
			function ()
			{
				bookingOverridesHeader();
				if($('#overrideBlDestination').val()!='')
					validateDefaults('blDestination');
				else
					setPlaceOfDeliveryDefaultValue();
			});
	
	$('#countryOfOrigin').change(
			function ()
			{
				if($('#countryOfOrigin').val()!=''){
					var upperCountry=$('#countryOfOrigin').val();//D026600
					$('#countryOfOrigin').val(upperCountry.toUpperCase());
					validateDefaults('originCountry');
					}
				   
				else
					setOriginPtDefaultValue();
			});
	
	$('#overridePlaceOfIssue').change(
			function ()
			{
				if($('#overridePlaceOfIssue').val()!='')
					validateDefaults('issuePlace');
				else
					setIssuePtDefaultValue();
			});
	

	$('#overrideCustomsVesselName').change(
			function ()
			{
				if($('#overrideCustomsVesselName').val()!='')
					validateDefaults('vessel');
				else
					setVVDVesselDefaultValue();
			});
	
	$('#overrideVoyageDirectionSeq').change(
			function ()
			{
				if($('#overrideVoyageDirectionSeq').val()!='')
					validateDefaults('voyageDir');
				else
					setVVDVoyageDefaultValue();
			});
	
	$('#overrideInitialVesselName').change(
			function ()
			{
				if($('#overrideInitialVesselName').val() !='')
				{
					$('#isOverrideInitialVesselName').attr("checked", true);
					$('#overrideInitialVesselName').css('color','green');
					$('#overrideHeaderCheckBox').attr('checked', true);
				}
				else
				{
					$('#isOverrideInitialVesselName').attr("checked", false);
					$('#overrideInitialVesselName').css('color','black');
					setOverridesHeader();
				}
			});
	
	$('#overrideInitialLtvDate').change(
			function ()
			{
				if($('#overrideInitialLtvDate').val() =='')
				{
					//$('#overrideInitialLtvDate').val('01-01-0001');
					$('#overrideInitialLtvDate').css('color','black');
					$('#isOverrideInitialLtvDate').attr("checked", false);
					setOverridesHeader();
				}
				else if($('#overrideInitialLtvDate').val() =='01-01-0001')
				{
					$('#overrideInitialLtvDate').css('color','black');
					$('#isOverrideInitialLtvDate').attr("checked", false);
					setOverridesHeader();
				}
				else
				{
					$('#overrideInitialLtvDate').css('color','green');
					$('#isOverrideInitialLtvDate').attr("checked", true);
					$('#overrideHeaderCheckBox').attr('checked', true);
				}
			});
	
	$('#overrideRouteInstruction').change(
			function ()
			{
				$.ajax({
					url: _context +"/booking/routing/getRoutingInstructions",
					success: function(responseText){
						if($("#overrideRouteInstruction").val()==responseText)
						{
							$('#overrideRouteInstruction').css('color','black');
							setOverridesHeader();
						}
						else
						{
							if($('#overrideRouteInstruction').val()!='')
							{
								$('#overrideRouteInstruction').css('color','green');
								$('#overrideHeaderCheckBox').attr('checked', true);
							}
							else
							{
								$("#overrideRouteInstruction").val(responseText);
								$('#overrideRouteInstruction').css('color','black');
								setOverridesHeader();
							}
						}
					}
				});
			});
	
	
	/*Focus functions*/
	
	/*$('#countryOfOrigin').focus(function()
	{
		if(domesticForeignIndicator!='international' && domesticForeignIndicator!='china')
		{
			$('#countryOfOrigin').blur();
			alert("Point and Country of Origin Override value not permitted for this trade");
		}
	});*/
	
	/*$('#overridePlaceOfIssue').focus(function()
	{
		$('#overridePlaceOfIssue').blur();
		alert("Place of issue Override value not permitted as booking is not China East bound");
	});*/
	
	//resetBookingOverrides();
	//$('#overrideInitialLtvDate').val('01-01-0001');
	
});


//18644
function bookingOverridesHeader(){
	var header='';
	if($('#blOriginCityCodeDescription').val()!=null && $('#blOriginCityCodeDescription').val()!='' && $('#isOverrideBlOrigin').attr("checked"))
		{
		header=header+'| PLR- '+$('#overrideBlOrigin').val();
		}
	if($('#blDestinationCityCodeDescription').val()!=null && $('#blDestinationCityCodeDescription').val()!='' &&  $('#isOverrideBlDestination').attr("checked"))
		{
		header=header+' | PLD- '+$('#overrideBlDestination').val();
		}
	if(header==''){
		setAccordianTabDetails('bookingOverridesHeader', '');
		}
	else{
		setAccordianTabDetails('bookingOverridesHeader', ' - '+header);
		}
}
function resetBookingOverrides()
{
	/*$('#isOverrideBlOrigin').attr("checked", false);
	$('#isOverrideOriginPort').attr("checked", false);
	$('#isOverrideDestinationPort').attr("checked", false);
	$('#isOverrideBlDestination').attr("checked", false);
	$('#isOverrideCustomsVesselName').attr("checked", false);
	$('#isOverrideVoyageDirectionSeq').attr("checked", false);
	$('#isOverrideCountryOfOrigin').attr("checked", false);
	$('#isOverridePlaceOfIssue').attr("checked", false);
	$('#isOverrideInitialVesselName').attr("checked", false);
	$('#isOverrideInitialLtvDate').attr("checked", false);*/
	
	setPlaceOfReceiptDefaultValue();
	setOriginPortDefaultValue();
	setDestinationPortDefaultValue();
	setPlaceOfDeliveryDefaultValue();
	setVVDVesselDefaultValue();
	setVVDVoyageDefaultValue();
	setOriginPtDefaultValue();
	setIssuePtDefaultValue();
	setOverrideInitialVesselNameDefaultValue();
	setInitialLtvDateDefaultValue();
	setDomesticRoutingExportInstructionsDefaultValue();
	
	setOverridesHeader();
	bookingOverridesHeader();
	changeTextColour();
}

function setPlaceOfReceiptDefaultValue(status)
{
	var cityCode = "";
	if($('#freightOriginCityCode').val()!='')
		cityCode = $('#freightOriginCityCode').val();
	else if($('#blOriginCityCode').val()!='')
		cityCode = $('#blOriginCityCode').val();
	
	if(cityCode!='')
	{
		$.ajax({
			url: _context +"/booking/routing/getCityData?cityCode="+cityCode,
			success: function(responseText){
				if($('#overrideBlOrigin').val()!=responseText && isOverrideReset == "Y")
					isBookingChanged ='Y';
				$('#overrideBlOrigin').val(responseText);
				$('#isOverrideBlOrigin').attr("checked", false);
				$('#overrideBlOrigin').css('color','black');
				checkOriginPtDefaultValue(status);
				setOverridesHeader();
			}
		});
	}
	else
	{
		if($("#overrideBlOrigin").val()!='' && isOverrideReset == "Y")
			isBookingChanged ='Y';
		$('#overrideBlOrigin').val('');
		$('#isOverrideBlOrigin').attr("checked", false);
		$('#overrideBlOrigin').css('color','black');
		checkOriginPtDefaultValue(status);
		setOverridesHeader();
	}
}

function setOriginPortDefaultValue(status)
{
	if($('#originPortCityCode').val()!='')
	{
		function callBack1(responseText) { // cheetah
			if($('#overrideOriginPort').val()!=responseText && isOverrideReset == "Y")
				isBookingChanged ='Y';
			$('#overrideOriginPort').val(responseText);
			$('#isOverrideOriginPort').attr("checked", false);
			$('#overrideOriginPort').css('color','black');
			checkOriginPtDefaultValue(status);
			setOverridesHeader();			
		}
		
		getOriginCityNameRequest(callBack1, $('#originPortCityCode').val());
		
	}
	else
	{
		if($("#overrideOriginPort").val()!='' && isOverrideReset == "Y"){
			isBookingChanged ='Y';
		}
		$('#overrideOriginPort').val('');
		$('#isOverrideOriginPort').attr("checked", false);
		$('#overrideOriginPort').css('color','black');
		checkOriginPtDefaultValue(status);
		setOverridesHeader();
	}
}

//D030250
function setDestinationPortDefaultValue(status)
{
	if($('#destinationPortCityCode').val()!='')
	{
		$.ajax({
			type : "GET",
			async:false,
			data:{	
				cityCode : $('#destinationPortCityCode').val(),
				tradeType : domesticForeignIndicator 
			 },
			url: _context +"/booking/routing/getDestinationPortDefaultValue",
			success: function(responseText){
				var overrideDestPort = responseText.data; 
				if($('#overrideDestinationPort').val()!=overrideDestPort && isOverrideReset == "Y"){
					isBookingChanged ='Y';
				}
				$('#overrideDestinationPort').val(overrideDestPort);
				$('#isOverrideDestinationPort').attr("checked", false);
				$('#overrideDestinationPort').css('color','black');
				checkPlaceOfDeliveryDefaultValue(status);
				setOverridesHeader();
			}
		});
	}
	else
	{
		if($("#overrideDestinationPort").val()!='' && isOverrideReset == "Y"){
			isBookingChanged ='Y';
		}
		$('#overrideDestinationPort').val('');
		$('#isOverrideDestinationPort').attr("checked", false);
		$('#overrideDestinationPort').css('color','black');
		checkPlaceOfDeliveryDefaultValue(status);
		setOverridesHeader();
	}
}

/*function setDestinationPortDefaultValue(status)
{
	if($('#destinationPortCityCode').val()!='')
	{
		if(domesticForeignIndicator=='china')
		{
			$.ajax({
				url: _context +"/booking/routing/getChineseTranslation?cityCode="+$('#destinationPortCityCode').val(),
				success: function(responseTextNew){
					if(responseTextNew.success)
					{
						if(responseTextNew.data != null && responseTextNew.data != 'null' && responseTextNew.data !='')
						{
							if($('#overrideDestinationPort').val()!=responseTextNew.data && isOverrideReset == "Y"){
								isBookingChanged ='Y';
							}
							$('#overrideDestinationPort').val(responseTextNew.data);
							$('#isOverrideDestinationPort').attr("checked", false);
							$('#overrideDestinationPort').css('color','black');
							checkPlaceOfDeliveryDefaultValue(status);
							setOverridesHeader();
						}
						else
						{
							
							function callBack2(responseText) { // cheetah
								if($('#overrideDestinationPort').val()!=responseText && isOverrideReset == "Y"){
									isBookingChanged ='Y';
								}
								$('#overrideDestinationPort').val(responseText);
								$('#isOverrideDestinationPort').attr("checked", false);
								$('#overrideDestinationPort').css('color','black');
								checkPlaceOfDeliveryDefaultValue(status);
								setOverridesHeader();		
							}
							
							getDestinationCityNameRequest(callBack2, $('#destinationPortCityCode').val());
							
						}
					}
				}
			});
		}
		else
		{
			function callBack3(responseText) {
				if($("#overrideDestinationPort").val()!=responseText && isOverrideReset == "Y"){
					isBookingChanged ='Y';
				}
				$('#overrideDestinationPort').val(responseText);
				$('#isOverrideDestinationPort').attr("checked", false);
				$('#overrideDestinationPort').css('color','black');
				checkPlaceOfDeliveryDefaultValue(status);
				setOverridesHeader();				
			}
			
			getDestinationCityNameRequest(callBack3, $('#destinationPortCityCode').val());

		}
	}
	else
	{
		if($("#overrideDestinationPort").val()!='' && isOverrideReset == "Y"){
			isBookingChanged ='Y';
		}
		$('#overrideDestinationPort').val('');
		$('#isOverrideDestinationPort').attr("checked", false);
		$('#overrideDestinationPort').css('color','black');
		checkPlaceOfDeliveryDefaultValue(status);
		setOverridesHeader();
	}
}*/

function getOriginCityNameRequest(callBack, cityCode) {
	var bookingInitData = ('bookingInitData' in (window.gatesCheetah || {}))? window.gatesCheetah.bookingInitData : {};
	var originCityPortCode = ('originPortCityCode' in bookingInitData) ? bookingInitData.originPortCityCode : '';
	var originCityPortName = ('originPortCityName' in bookingInitData) ? bookingInitData.originPortCityName : '';
	console.log('Cheetah: getOriginCityNameRequest' + originCityPortCode + ' || ' + cityCode);
	if (originCityPortCode == cityCode)  {
		console.log('Cheetah: getOriginCityNameRequest from cache');
		callBack(originCityPortName);
		return;
	}
	console.log('Cheetah: getOriginCityNameRequest from Ajax');
	$.ajax({
		url: _context +"/booking/routing/getCityName?cityCode="+cityCode,
		success: callBack
	});	
}

function getDestinationCityNameRequest(callBack, cityCode) {
	var bookingInitData = ('bookingInitData' in (window.gatesCheetah || {}))? window.gatesCheetah.bookingInitData : {};
	var destinationCityPortCode = ('destinationPortCityCode' in bookingInitData) ? bookingInitData.destinationPortCityCode : '';
	var destinationCityPortName = ('destinationPortCityName' in bookingInitData) ? bookingInitData.destinationPortCityName : '';
	console.log('Cheetah: getDestinationCityNameRequest' + destinationCityPortCode + ' || ' + cityCode);
	if (destinationCityPortCode == cityCode)  {
		console.log('Cheetah: getDestinationCityNameRequest from cache');
		callBack(destinationCityPortName);
		return;
	}
	console.log('Cheetah: getDestinationCityNameRequest from Ajax');
	$.ajax({
		url: _context +"/booking/routing/getCityName?cityCode="+cityCode,
		success: callBack
	});	
}

//D030250
function setPlaceOfDeliveryDefaultValue()
{
	if($('#destinationPortCityCode').val()!='')
	{
		$.ajax({
			type : "GET",
			async:false,
			data:{	
				blDestCityCode : $('#blDestinationCityCode').val(), 
				destCityCode : $('#destinationPortCityCode').val(),
				tradeType : domesticForeignIndicator 
			 },
			url : _context + "/booking/routing/getBlDestinationDefaultValue",
			success: function(responseText){
				var overrideDestPort = responseText.data; 
				if($('#overrideBlDestination').val()!=overrideDestPort && isOverrideReset == "Y"){
					isBookingChanged ='Y';
				}
				$('#overrideBlDestination').val(overrideDestPort);
				var isHawaiiTrade = '';
				if(domesticForeignIndicator == 'china' ){
					$.ajax({
						url: _context +"/booking/routing/checkIfHawaiiTrade?cityCode="+$('#destinationPortCityCode').val(),
						async: false,
						success: function(responseText){
							isHawaiiTrade = responseText;
						}
					});
				}
				if(domesticForeignIndicator=='china' && isHawaiiTrade == 'Y'){
					if(!$('#isOverrideDestinationPort').attr("checked")){
						$('#isOverrideBlDestination').attr("checked", false);
						$('#overrideBlDestination').css('color','black');
					}
				} else {
					$('#isOverrideBlDestination').attr("checked", false);
					$('#overrideBlDestination').css('color','black');
				}
					
				setOverridesHeader();
			}
		});
	}
	else
	{
		if($("#overrideBlDestination").val()!='' && isOverrideReset == "Y"){
			isBookingChanged ='Y';
		}
		$('#overrideBlDestination').val('');
		$('#isOverrideBlDestination').attr("checked", false);
		$('#overrideBlDestination').css('color','black');
		setOverridesHeader();
	}
}

/*function setPlaceOfDeliveryDefaultValue() {
	
	if($('#blDestinationCityCode').val()!='')
	{
		$.ajax({
			url: _context +"/booking/routing/getCityData?cityCode="+$('#blDestinationCityCode').val(),
			success: function(responseText){
				if($('#overrideBlDestination').val()!=responseText && isOverrideReset == "Y"){
					isBookingChanged ='Y';
				}
				$('#overrideBlDestination').val(responseText);
				$('#isOverrideBlDestination').attr("checked", false);
				$('#overrideBlDestination').css('color','black');
				setOverridesHeader();
			}
		});
	}
	//Changed for D023005
	else if(domesticForeignIndicator=='domestic' && $('#destinationPortCityCode').val()!='' && $('#tradeCode :selected').val()!='H')	
	{
		$.ajax({
			url: _context +"/booking/routing/getCityData?cityCode="+$('#destinationPortCityCode').val(),
			success: function(responseText){
				if($('#overrideBlDestination').val()!=responseText && isOverrideReset == "Y"){
					isBookingChanged ='Y';
				}
				$('#overrideBlDestination').val(responseText);
				$('#isOverrideBlDestination').attr("checked", false);
				$('#overrideBlDestination').css('color','black');
				setOverridesHeader();
			}
		});
	}
	else if(domesticForeignIndicator=='china')
	{
		if($('#isOverrideDestinationPort').attr("checked") && $('#destinationPortCityCode').val()!='HON' && $('#destinationPortCityCode').val()!='NI')
		{
			if($("#overrideBlDestination").val()!=$('#overrideDestinationPort').val() && isOverrideReset == "Y"){
				isBookingChanged ='Y';
			}
			$('#overrideBlDestination').val($('#overrideDestinationPort').val());
			$('#isOverrideBlDestination').attr("checked", false);
			$('#overrideBlDestination').css('color','black');
			setOverridesHeader();
		}
		else if($('#destinationPortCityCode').val()!='')
		{
			$.ajax({
				url: _context +"/booking/routing/getCityData?cityCode="+$('#destinationPortCityCode').val(),
				success: function(responseText){
					var myArr = responseText.split(",");
					$.ajax({
						url: _context +"/booking/routing/getChineseTranslation?cityCode="+$('#destinationPortCityCode').val(),
						success: function(responseTextNew){
							if(responseTextNew.success)
							{
								var resStr = responseTextNew.data;
								for (var i=1; i<myArr.length; i++) {
									resStr += ',' + myArr[i];
								}
								if($('#overrideBlDestination').val()!=resStr && isOverrideReset == "Y"){
									isBookingChanged ='Y';
								}
								$('#overrideBlDestination').val(resStr);
								$('#isOverrideBlDestination').attr("checked", false);
								$('#overrideBlDestination').css('color','black');
								setOverridesHeader();
							}
							else
							{
								if($('#overrideBlDestination').val()!=responseText && isOverrideReset == "Y"){
									isBookingChanged ='Y';
								}
								$('#overrideBlDestination').val(responseText);
								$('#isOverrideBlDestination').attr("checked", false);
								$('#overrideBlDestination').css('color','black');
								setOverridesHeader();
							}
						}
					});
				}
			});
		}
		else
		{
			if($("#overrideBlDestination").val()!='' && isOverrideReset == "Y"){
				isBookingChanged ='Y';
			}
			$('#overrideBlDestination').val('');
			$('#isOverrideBlDestination').attr("checked", false);
			$('#overrideBlDestination').css('color','black');
			setOverridesHeader();
		}
	}
	else
	{
		if($("#overrideBlDestination").val()!='' && isOverrideReset == "Y"){
			isBookingChanged ='Y';
		}
		$('#overrideBlDestination').val('');
		$('#isOverrideBlDestination').attr("checked", false);
		$('#overrideBlDestination').css('color','black');
		setOverridesHeader();
	}
}*/



function setVVDVesselDefaultValue()
{
	if($('#vessel').val() != '')
	{
		function callBack(responseText) { //cheetah
			if($('#overrideCustomsVesselName').val()!=responseText && isOverrideReset == "Y"){
				isBookingChanged ='Y';
			}
			$('#overrideCustomsVesselName').val(responseText);
			$('#isOverrideCustomsVesselName').attr("checked", false);
			$('#overrideCustomsVesselName').css('color','black');
			setOverridesHeader();
		}
			
		getVesselNameRequest(callBack, $('#vessel').val());

	}
	else
	{
		if($("#overrideCustomsVesselName").val()!='' && isOverrideReset == "Y"){
			isBookingChanged ='Y';
		}
		$('#overrideCustomsVesselName').val('');
		$('#isOverrideCustomsVesselName').attr("checked", false);
		$('#overrideCustomsVesselName').css('color','black');
		setOverridesHeader();
	}
}

function getVesselNameRequest(callBack, vessel) {
	var bookingInitData = ('bookingInitData' in (window.gatesCheetah || {}))? window.gatesCheetah.bookingInitData : {};
	var vesselCode = ('vesselCode' in bookingInitData) ? bookingInitData.vesselCode : '';
	var vesselName = ('vesselName' in bookingInitData) ? bookingInitData.vesselName : '';
	console.log('Cheetah: getVesselNameRequest' + vessel + ' || ' + vesselName);
	if (vessel == vesselCode) {
		console.log('Cheetah: getVesselNameRequest from cache');
		callBack(vesselName);
		return;
	}
	console.log('Cheetah: getVesselNameRequest from Ajax');
	$.ajax({
		url: _context +"/booking/routing/getVesselName?vesselCode="+vessel,
		success: callBack
	});	
}

function setVVDVoyageDefaultValue()
{
	
	if($('#voyage').val()!='' && $('#direction').val()!=''){
		var voyageDirection = handleVoyage($('#voyage').val())+" "+$('#direction').val();
		if($('#overrideVoyageDirectionSeq').val()!=voyageDirection && isOverrideReset == "Y")
			isBookingChanged ='Y';
		$('#overrideVoyageDirectionSeq').val(voyageDirection);
	}
	else{
		if($("#overrideVoyageDirectionSeq").val()!='' && isOverrideReset == "Y")
			isBookingChanged ='Y';
		$('#overrideVoyageDirectionSeq').val('');
	}
	$('#isOverrideVoyageDirectionSeq').attr("checked", false);
	$('#overrideVoyageDirectionSeq').css('color','black');
	setOverridesHeader();
	//isBookingChanged ='Y';
}

function setOriginPtDefaultValue()
{
	if(domesticForeignIndicator=='international')
	{
		if($('#isOverrideBlOrigin').attr("checked"))
		{
			if($("#countryOfOrigin").val()!=$('#overrideBlOrigin').val() && isOverrideReset == "Y"){
				isBookingChanged ='Y';
			}
			$('#countryOfOrigin').val($('#overrideBlOrigin').val());
			$('#isOverrideCountryOfOrigin').attr("checked", false);
			$('#countryOfOrigin').css('color','black');
			setOverridesHeader();
		}
		else if($('#isOverrideOriginPort').attr("checked"))
		{
			if($("#countryOfOrigin").val()!=$('#overrideOriginPort').val() && isOverrideReset == "Y"){
				isBookingChanged ='Y';
			}
			$('#countryOfOrigin').val($('#overrideOriginPort').val());
			$('#isOverrideCountryOfOrigin').attr("checked", false);
			$('#countryOfOrigin').css('color','black');
			setOverridesHeader();
		}
		else 
		{
			var cityCode = "";
			if($('#freightOriginCityCode').val()!='')
				cityCode = $('#freightOriginCityCode').val();
			else if($('#blOriginCityCode').val()!='')
				cityCode = $('#blOriginCityCode').val();
			else if($('#originPortCityCode').val()!='')
				cityCode = $('#originPortCityCode').val();
			if(cityCode!='')
			{
				$.ajax({
					url: _context +"/booking/routing/getCityDataWithStateCountry?cityCode="+cityCode,
					success: function(responseText){
						if($('#countryOfOrigin').val()!=responseText && isOverrideReset == "Y"){
							isBookingChanged ='Y';
						}
						$('#countryOfOrigin').val(responseText);
						$('#isOverrideCountryOfOrigin').attr("checked", false);
						$('#countryOfOrigin').css('color','black');
						setOverridesHeader();
					}
				});
			}
			else
			{
				if($("#countryOfOrigin").val()!='' && isOverrideReset == "Y"){
					isBookingChanged ='Y';
				}
				$('#countryOfOrigin').val('');
				$('#isOverrideCountryOfOrigin').attr("checked", false);
				$('#countryOfOrigin').css('color','black');
				setOverridesHeader();
			}
		}
	}
	else if(domesticForeignIndicator=='china')
	{
		if($('#isOverrideBlOrigin').attr("checked"))
		{
			if($("#countryOfOrigin").val()!=$('#overrideBlOrigin').val() && isOverrideReset == "Y"){
				isBookingChanged ='Y';
			}
			$('#countryOfOrigin').val($('#overrideBlOrigin').val());
			$('#isOverrideCountryOfOrigin').attr("checked", false);
			$('#countryOfOrigin').css('color','black');
			setOverridesHeader();
		}
		else if($('#isOverrideOriginPort').attr("checked"))
		{
			if($("#countryOfOrigin").val()!=$('#overrideOriginPort').val() && isOverrideReset == "Y"){
				isBookingChanged ='Y';
			}
			$('#countryOfOrigin').val($('#overrideOriginPort').val());
			$('#isOverrideCountryOfOrigin').attr("checked", false);
			$('#countryOfOrigin').css('color','black');
			setOverridesHeader();
		}
		else 
		{
			var cityCode = "";
			if($('#freightOriginCityCode').val()!='')
				cityCode = $('#freightOriginCityCode').val();
			else if($('#blOriginCityCode').val()!='')
				cityCode = $('#blOriginCityCode').val();
			else if($('#originPortCityCode').val()!='')
				cityCode = $('#originPortCityCode').val();
			if(cityCode!='')
			{
				$.ajax({
					url: _context +"/booking/routing/getCityDataWithCountry?cityCode="+cityCode,
					success: function(responseText){
						if($('#countryOfOrigin').val()!=responseText && isOverrideReset == "Y"){
							isBookingChanged ='Y';
						}
						$('#countryOfOrigin').val(responseText);
						$('#isOverrideCountryOfOrigin').attr("checked", false);
						$('#countryOfOrigin').css('color','black');
						setOverridesHeader();
					}
				});
			}
			else
			{
				if($("#countryOfOrigin").val()!='' && isOverrideReset == "Y"){
					isBookingChanged ='Y';
				}
				$('#countryOfOrigin').val('');
				$('#isOverrideCountryOfOrigin').attr("checked", false);
				$('#countryOfOrigin').css('color','black');
				setOverridesHeader();
			}
		}
	}
	else
	{
		if($("#countryOfOrigin").val()!='' && isOverrideReset == "Y"){
			isBookingChanged ='Y';
		}
		$('#countryOfOrigin').val('');
		$('#isOverrideCountryOfOrigin').attr("checked", false);
		$('#countryOfOrigin').css('color','black');
		setOverridesHeader();
	}
}

function setIssuePtDefaultValue()
{
	if(domesticForeignIndicator=='china' && $('#direction').val()=='E')
	{
		if($('#originPortCityCode').val()!='')
			$('#overridePlaceOfIssue').val($('#originPortCityCode').val());
		else
			$('#overridePlaceOfIssue').val('');
		
		$.ajax({
			url: _context +"/booking/routing/getOverridePlOfIss?cityCode="+$('#originPortCityCode').val(),
			success: function(responseText){
				if($('#overridePlaceOfIssue').val()!=responseText && isOverrideReset == "Y"){
					isBookingChanged ='Y';
				}
				$('#overridePlaceOfIssue').val(responseText);
				$('#isOverridePlaceOfIssue').attr("checked", false);
				$('#overridePlaceOfIssue').css('color','black');
				setOverridesHeader();
			}
		});
	}
	else
	{
		if($("#overridePlaceOfIssue").val()!='' && isOverrideReset == "Y"){
			isBookingChanged ='Y';
		}
		$('#overridePlaceOfIssue').val('');
		$('#overridePlaceOfIssue').attr('disabled', true);
	}
	if($('#originPortCityCode').val()==$('#overridePlaceOfIssue').val()){
	$('#isOverridePlaceOfIssue').attr("checked", false);
	$('#overridePlaceOfIssue').css('color','black');
	}
	setOverridesHeader();
}

function setOverrideInitialVesselNameDefaultValue()
{
	if($("#overrideInitialVesselName").val()!='' && isOverrideReset == "Y"){
		isBookingChanged ='Y';
	}
	$('#overrideInitialVesselName').val('');
	$('#isOverrideInitialVesselName').attr("checked", false);
	$('#overrideInitialVesselName').css('color','black');
	setOverridesHeader();
}

function setInitialLtvDateDefaultValue()
{
	if($("#overrideInitialLtvDate").val()!='' && isOverrideReset == "Y"){
		isBookingChanged ='Y';
	}
	$('#overrideInitialLtvDate').val('');
	$('#isOverrideInitialLtvDate').attr("checked", false);
	$('#overrideInitialLtvDate').css('color','black');
	setOverridesHeader();
}

function setDomesticRoutingExportInstructionsDefaultValue()
{
	if($("#vvdRoutingGrid").getGridParam("reccount")>1)
	{
		$.ajax({
			url: _context +"/booking/routing/getRoutingInstructions",
			success: function(responseText){
				if($("#overrideRouteInstruction").val()!=responseText){
					isBookingChanged ='Y';
				}
				$("#overrideRouteInstruction").val(responseText);
				$('#overrideRouteInstruction').css('color','black');
				setOverridesHeader();
			}
		});
	}
	else
	{
		if($("#overrideRouteInstruction").val()!='' && isOverrideReset == "Y"){
			isBookingChanged ='Y';
		}
		$('#overrideRouteInstruction').val('');
		$('#overrideRouteInstruction').css('color','black');
		setOverridesHeader();
	}
}

function checkPlaceOfReceiptDefaultValue(status)
{
	if(status=="check")
	{
		if(!$('#isOverrideBlOrigin').attr("checked"))
			setPlaceOfReceiptDefaultValue(status);
	}
	else if($('#bookingId').val()=='' || ($('#bookingId').val()!='' && !$('#isOverrideBlOrigin').attr("checked")))
		setPlaceOfReceiptDefaultValue();
}
function checkOriginPortDefaultValue(status){
	if(status=="check")
	{
		if(!$('#isOverrideOriginPort').attr("checked"))
			setOriginPortDefaultValue(status);
	}
	else if($('#bookingId').val()=='' || ($('#bookingId').val()!='' && !$('#isOverrideOriginPort').attr("checked")))
		setOriginPortDefaultValue();
}
function checkDestinationPortDefaultValue(status){
	if(status=="check")
	{
		if(!$('#isOverrideDestinationPort').attr("checked"))
			setDestinationPortDefaultValue(status);
	}
	else if($('#bookingId').val()=='' || ($('#bookingId').val()!='' && !$('#isOverrideDestinationPort').attr("checked")))
		setDestinationPortDefaultValue();
}
function checkPlaceOfDeliveryDefaultValue(status){
	if(status=="check")
	{
		if(!$('#isOverrideBlDestination').attr("checked"))
			setPlaceOfDeliveryDefaultValue(status);
	}
	//028741
	else if(!$('#isOverrideBlDestination').attr("checked"))
		setPlaceOfDeliveryDefaultValue();
}
function checkVVDVesselDefaultValue(status){
	if(status=="check")
	{
		if(!$('#isOverrideCustomsVesselName').attr("checked"))
			setVVDVesselDefaultValue(status);
	}
	else if($('#bookingId').val()=='' || ($('#bookingId').val()!='' && !$('#isOverrideCustomsVesselName').attr("checked")))
		setVVDVesselDefaultValue();
}
function checkVVDVoyageDefaultValue(status){
	if(status=="check")
	{
		if(!$('#isOverrideVoyageDirectionSeq').attr("checked"))
			setVVDVoyageDefaultValue(status);
	}
	else if($('#bookingId').val()=='' || ($('#bookingId').val()!='' && !$('#isOverrideVoyageDirectionSeq').attr("checked")))
		setVVDVoyageDefaultValue();
}
function checkOriginPtDefaultValue(status){
	if(status=="check")
	{
		if(!$('#isOverrideCountryOfOrigin').attr("checked"))
			setOriginPtDefaultValue(status);
	}
	else if($('#bookingId').val()=='' || ($('#bookingId').val()!='' && !$('#isOverrideCountryOfOrigin').attr("checked")))
		setOriginPtDefaultValue();
}
function checkIssuePtDefaultValue(status){
	if(domesticForeignIndicator=='china' && $('#direction').val()=='E')
	{
		/*Booking Security*/
		if(isRoutingOverrideModifiable){
			$('#overridePlaceOfIssue').attr("disabled", false);
			if(status=="check")
			{
				if(!$('#isOverridePlaceOfIssue').attr("checked"))
					setIssuePtDefaultValue(status);
			}
			else if($('#bookingId').val()=='' || ($('#bookingId').val()!='' && !$('#isOverridePlaceOfIssue').attr("checked")))
				setIssuePtDefaultValue();
		}
	}
	else
	{
		$('#overridePlaceOfIssue').val('');
		$('#isOverridePlaceOfIssue').attr("checked", false);
		$('#overridePlaceOfIssue').attr("disabled", true);
	}
	setOverridesHeader();
}
function checkDomesticRoutingInstructions()
{
	if($('#bookingId').val()=='' || ($('#bookingId').val()!='' && $('#overrideRouteInstruction').css('color')=='rgb(0, 0, 0)'))
		setDomesticRoutingExportInstructionsDefaultValue();
}

function validateDefaults(identifier)
{
	var queryString = $('#bookingForm').formSerialize();
	$.ajax({
		type: 'POST',
		url: _context +"/booking/routing/validateDefaults?identifier="+identifier,
		data: queryString,
		success: function(responseText){
			
			$("#maintainBookingOverrides").loadJSON(responseText);
			if(!responseText.isOverrideBlOrigin)
				$("#isOverrideBlOrigin").attr("checked", false);
			if(!responseText.isOverrideOriginPort)
				$("#isOverrideOriginPort").attr("checked", false);
			if(!responseText.isOverrideDestinationPort)
				$("#isOverrideDestinationPort").attr("checked", false);
			if(!responseText.isOverrideBlDestination)
				$("#isOverrideBlDestination").attr("checked", false);
			if(!responseText.isOverrideInitialVesselName)
				$("#isOverrideInitialVesselName").attr("checked", false);
			if(!responseText.isOverrideCountryOfOrigin)
				$("#isOverrideCountryOfOrigin").attr("checked", false);
			if(!responseText.isOverridePlaceOfIssue)
				$("#isOverridePlaceOfIssue").attr("checked", false);
			if(!responseText.isOverrideCustomsVesselName)
				$("#isOverrideCustomsVesselName").attr("checked", false);
			if(!responseText.isOverrideVoyageDirectionSeq)
			{
				$('#overrideVoyageDirectionSeq').val(responseText.overrideVoyageDirectionSeq);
				$("#isOverrideVoyageDirectionSeq").attr("checked", false);
			}
			
			if(identifier == 'blOrigin' || identifier == 'originPort')
				checkOriginPtDefaultValue();
			if(identifier == 'destinationPort')
				checkPlaceOfDeliveryDefaultValue();
			
			changeTextColour();
			setOverridesHeader();
		}
	});
}

function checkIfDefault()
{
	if($('#isOverrideBlOrigin').attr("checked") || 
	$('#isOverrideCountryOfOrigin').attr("checked") || 
	$('#isOverrideOriginPort').attr("checked") || 
	$('#isOverrideInitialVesselName').attr("checked") || 
	$('#isOverridePlaceOfIssue').attr("checked") || 
	$('#isOverrideBlDestination').attr("checked") || 
	$('#isOverrideCustomsVesselName').attr("checked") || 
	$('#isOverrideVoyageDirectionSeq').attr("checked") || 
	$('#isOverrideDestinationPort').attr("checked") ||
	$('#isOverrideInitialLtvDate').attr("checked"))
		return false;
	else
		return true;
}

function changeTextColour()
{
	if($('#isOverrideBlOrigin').attr("checked"))
		$('#overrideBlOrigin').css('color','green');
	else
		$('#overrideBlOrigin').css('color','black');
	
	if($('#isOverrideOriginPort').attr("checked"))
		$('#overrideOriginPort').css('color','green');
	else
		$('#overrideOriginPort').css('color','black');
	
	if($('#isOverrideDestinationPort').attr("checked"))
		$('#overrideDestinationPort').css('color','green');
	else
		$('#overrideDestinationPort').css('color','black');
	
	if($('#isOverrideBlDestination').attr("checked"))
		$('#overrideBlDestination').css('color','green');
	else
		$('#overrideBlDestination').css('color','black');
	
	if($('#isOverrideCustomsVesselName').attr("checked"))
		$('#overrideCustomsVesselName').css('color','green');
	else
		$('#overrideCustomsVesselName').css('color','black');
	
	if($('#isOverrideVoyageDirectionSeq').attr("checked"))
		$('#overrideVoyageDirectionSeq').css('color','green');
	else
		$('#overrideVoyageDirectionSeq').css('color','black');
	
	if($('#isOverrideCountryOfOrigin').attr("checked"))
		$('#countryOfOrigin').css('color','green');
	else
		$('#countryOfOrigin').css('color','black');
	
	if($('#isOverridePlaceOfIssue').attr("checked"))
		$('#overridePlaceOfIssue').css('color','green');
	else
		$('#overridePlaceOfIssue').css('color','black');
	
	if($('#overrideInitialVesselName').val() !='')
		$('#overrideInitialVesselName').css('color','green');
	else
		$('#overrideInitialVesselName').css('color','black');
	
	if($('#overrideInitialLtvDate').val() !='' && $('#overrideInitialLtvDate').val()!="01-01-0001")
		$('#overrideInitialLtvDate').css('color','green');
	else
		$('#overrideInitialLtvDate').css('color','black');
	
	if($("#vvdRoutingGrid").getGridParam("reccount")==3)
	{
		$.ajax({
			url: _context +"/booking/routing/getRoutingInstructions",
			success: function(responseText){
				if($("#overrideRouteInstruction").val()==responseText)
					$('#overrideRouteInstruction').css('color','black');
				else
					$('#overrideRouteInstruction').css('color','green');
			}
		});
	}
	else
	{
		if($("#overrideRouteInstruction").val()=='')
			$('#overrideRouteInstruction').css('color','black');
		else
			$('#overrideRouteInstruction').css('color','green');
	}
}

function setOverridesHeader()
{
	bookingOverridesHeader();
	if(!checkIfDefault() || $('#overrideRouteInstruction').css('color')!='rgb(0, 0, 0)')
		$('#overrideHeaderCheckBox').attr('checked', true);
	else
		$('#overrideHeaderCheckBox').attr('checked', false);
}

function validateOverridesFieldsOnSave()
{
	var isValid = true;
	if($('#overrideInitialLtvDate').val()!='')
	{
		if(!validateDate('overrideInitialLtvDate', false))
		{
			//if(!$('#maintainBookingOverrides').is(':visible'))
				expandOverridesDiv(isValid);
			validateDate('overrideInitialLtvDate', true);
			isValid = false;
		}
	}
	if($("#overrideRouteInstruction").val().length > 46) {
		expandOverridesDiv(isValid);
		$("#overrideRouteInstruction").validationEngine('showPrompt', "Instructions can't be more than 46 in length", 'error', true);
		isValid = false;
	}
	return isValid;
}

function expandOverridesDiv(isValid)
{
	if(isValid)
	{
		if(!$('#maintainBookingOverrides').is(':visible'))
		{
			$('#overridesAccordionHeader').removeClass("ui-state-default ui-corner-all").addClass("ui-state-active ui-corner-top");
			$('#overridesAccordionHeader span').removeClass('ui-icon-triangle-1-e').addClass('ui-icon-triangle-1-s');
			$('#maintainBookingOverrides').css('display', 'block');
		}
		var offset = accordianPostionCoordinates(9);
		window.scrollTo(offset.left, offset.top);
		//$('#conditionAccordians').accordion('activate', 9);
		//window.scrollTo(0, 622);
	}
};$(document).ready(function () {
	//$('#msgDivBill').html("<div class=\"message_info\">Loading billing information for "+ $("#shipmentNumber").val() +" ...</div>");
	//$('#msgDivBill').show();
	
	$("#billOverlayContent").show();
	
	
	/*$('#billStartedButton').click(function(){
		$('div[aria-labelledby="ui-dialog-title-billBookingDialog"]').removeClass('transparent');
		$("#billOverlayContent").show();
		$("#billStartedButton").hide();
    });*/	

	$('#billOverlayCloseButton').click(function(){
		/*if($("#bookingStatusCode").val()=='APPR')
			expandAll();
		else
			collapseAll();*/
		readOnlyFieldsForBilledBookings();
		$("#billBookingDialog").dialog("close");
    });	

	//default hide grids
	$('#receivedFreightGridDiv').hide();
	$('#receivedUnitsGridDiv').hide();
	
	if($('#bookingTypeCode').val()=='B'){
/*		createAndLoadBilledFreightGrid();
		createAndLoadBilledUnitGrid();*/
	}
});

function createAndLoadBilledFreightGrid(){
	var receivedFreightsColNames = ['Id', 'billNoHidden','billNoCorrection','Bill #', 'Status', 'More','W/C','Container','PR','Type/Size','VVD','POD','Consignee'];
	var receivedFreightsColModels = [
	               {name:'seqNo', hidden:true},
	               //{name:'billNo', width:80, editable:false},
	               {name:'billNoHidden', hidden:true},
	               {name:'billNoCorrection', hidden:true},
	               {
	            	    name:'billNo', 
	            	    width:80, 
	            	    editable:false,
	            	    formatter : 'showlink',
		   					formatoptions : {
			   					baseLinkUrl : "javascript:",
			   					showAction : "navigateToMaintainBillFromContainerGrid('",
			   					addParam: "');"
		   					}
	               },
	               {name:'status', width:80, editable:false},
	               {name:'more', width:40, editable:false},
	               {name:'wOrC', width:40, editable:false},
	               {name:'container', width:120, editable:false},
	               {name:'proRate', width:30, editable:false},
	               //{name:'preReceived', width:100, editable:false},
	               {name:'equipmentType', width:75, editable:false},
	               {name:'vvd', width:80, editable:false},
	               {name:'portOfDischarge', width:60, editable:false},
	               {name:'consignee', width:300, editable:false}
			   	];

	var jsonReaderReceivedFreight = {
			root:"rows",
			page:"page",
			total:"total",
			records:"records",
			repeatitems:false,
			cell:"cell",
			id:"seqNo"
		};

	createGrid("receivedFreightGrid", // grid id for party
			"receivedFreightPager", // page id for party
			'../booking/bill/loadReceivedFreight', // geturl
			'', // addurl
			'', // edit url
			'', //delete url
			'',// delete selected URL
			receivedFreightsColNames, receivedFreightsColModels, "Received Containers",// caption
			83,// height
			3,// row num
			[ 3, 6, 9 ],// row list
			false,// multiselect
			false,// multidelete
			false,// load once
			true, // read only grid
			jsonReaderReceivedFreight, // json reader
			true, // hide edit
			true, // hide delete
			true, // autowidth
			false, // rownumbers
			true, // hide custom add row
			false,// hide pager row
			null,// custom edit method
			null,// custom grid complete
			receivedFreightGridLoadComplete,// custom load complete
			false,// default hidden
			true);// row Color Based On status
}


function createAndLoadBilledUnitGrid(){
	var receivedUnitsColNames = ['Id', 'billNoHidden','billNoCorrection','Bill #','Status', 'VINSight#', 'VIN','Description','DLAC','POD','Consignee'];
	var receivedUnitsColModels = [
	               {name:'seqNo', hidden:true},
	               {name:'billNoHidden', hidden:true},
	               {name:'billNoCorrection', hidden:true},
	               {
	            	    name:'billNo', 
	            	    width:60, 
	            	    editable:false,
	            	    formatter : 'showlink',
		   					formatoptions : {
			   					baseLinkUrl : "javascript:",
			   					showAction : "navigateToMaintainBillFromUnitGrid('",
			   					addParam: "');"
		   					}
	               },
	               //{name:'billNo', width:80, editable:false},
	               {name:'status', width:60, editable:false},
	               {name:'vinSinghtNo', width:90, editable:false},
	               {name:'vin', width:130, editable:false},
	               {name:'description', width:160, editable:false},
	               {name:'dLac', width:80, editable:false},
	               {name:'portOfDischarge', width:50, editable:false},
	               {name:'consignee', width:260, editable:false}
			   	];

	var jsonReaderReceivedUnits = {
			root:"rows",
			page:"page",
			total:"total",
			records:"records",
			repeatitems:false,
			cell:"cell",
			id:"seqNo"
		};

	createGrid("receivedUnitsGrid", // grid id for party
			"receivedUnitsPager", // page id for party
			_context+'/booking/bill/loadReceivedUnit', // geturl
			'', // addurl
			'', // edit url
			'', //delete url
			'',// delete selected URL
			receivedUnitsColNames, receivedUnitsColModels, "Received Units",// caption
			83,// height
			3,// row num
			[ 3, 6, 9 ],// row list
			false,// multiselect
			false,// multidelete
			false,// load once
			true, // read only grid
			jsonReaderReceivedUnits, // json reader
			true, // hide edit
			true, // hide delete
			true, // autowidth
			false, // rownumbers
			true, // hide custom add row
			false,// hide pager row
			null,// custom edit method
			null,// custom grid complete
			receivedUnitsGridLoadComplete,// custom load complete
			false,// default hidden
			true);// row Color Based On status
}

//for billed bookings
function readOnlyFieldsForBilledBookings(){
	$('#isAutobill').attr('disabled', true);
	//$('#autobillOptionCode').attr('disabled', true);
	$('#autobillTriggerCode').attr('disabled', true);
}

function navigateToMaintainBillFromUnitGrid(id){
	
	var gridId = id.split('=')[1];

		
		
		var shipmentSequenceNumber = jQuery("#receivedUnitsGrid").getRowData(gridId).billNo;
		var shipment_number = $("#billShipmentNumber").text();
		var shipmentCorrectionNumber ="000";
		
		var url ="";
		url = "/shipment/showForm?shipment_number="+shipment_number+"&shipment_sequence_number="+shipmentSequenceNumber+
		"&shipment_correction_number="+shipmentCorrectionNumber+"&src=FTWQ";
		window.location = _context + url;
	//document.location.href = _context+ "/shipment/showForm?shipment_number="+shipmentNumber+"&shipment_sequence_number="+shipmentSequenceNumber+"&shipment_correction_number="+shipmentCorrectionNumber+"&src=";
}

function navigateToMaintainBillFromContainerGrid(id){
	
	var gridId = id.split('=')[1];
	
		
		
		var shipmentSequenceNumber = jQuery("#receivedFreightGrid").getRowData(gridId).billNo;
		var shipment_number = $("#billShipmentNumber").text();
		var shipmentCorrectionNumber ="000";
		
		var url ="";
		url = "/shipment/showForm?shipment_number="+shipment_number+"&shipment_sequence_number="+shipmentSequenceNumber+
		"&shipment_correction_number="+shipmentCorrectionNumber+"&src=FTWQ";
		window.location = _context + url;
	//document.location.href = _context+ "/shipment/showForm?shipment_number="+shipmentNumber+"&shipment_sequence_number="+shipmentSequenceNumber+"&shipment_correction_number="+shipmentCorrectionNumber+"&src=";
}



function loadBillStartedGrids(){
	createAndLoadBilledFreightGrid();
	createAndLoadBilledUnitGrid();
	$('#receivedFreightGrid').trigger("reloadGrid");
	$('#receivedUnitsGrid').trigger("reloadGrid");
}

function receivedFreightGridLoadComplete(){
	var receivedFreightCount = $("#receivedFreightGrid").getGridParam("reccount");
	//alert("receivedFreightCount->"+receivedFreightCount);
	if(receivedFreightCount>0)
		$('#receivedFreightGridDiv').show();
	else
		$('#receivedFreightGridDiv').hide();
	//$('#msgDivBill').html("<div class=\"message_info\">Successfully Displayed.</div>");
	//$('#msgDivBill').show();
	//chkIfBillStartedOverlayHyperLinkToShow();
}

function receivedUnitsGridLoadComplete(){
	var receivedUnitCount = $("#receivedUnitsGrid").getGridParam("reccount");
	//alert("receivedUnitCount->"+receivedUnitCount);
	if(receivedUnitCount>0)
		$('#receivedUnitsGridDiv').show();
	else
		$('#receivedUnitsGridDiv').hide();
	//$('#msgDivBill').html("<div class=\"message_info\">Successfully Displayed.</div>");
	//$('#msgDivBill').show();
	//chkIfBillStartedOverlayHyperLinkToShow();
}

/*function chkIfBillStartedOverlayHyperLinkToShow(){
	var receivedUnitCount = $("#receivedUnitsGrid").getGridParam("reccount");
	var receivedFreightCount = $("#receivedFreightGrid").getGridParam("reccount");
	if(receivedUnitCount > 0 || receivedFreightCount > 0){
		$('#billingStartedHyperlink').show();
	}
}
*/;
function showQuotesGrid(){
	$("#quoteShowDialog" ).dialog( "option", "title", 'Quotes' );
	createQuoteExistsGrid();
	$("#quoteShowDialog").dialog('open'); 
}
		
function createQuoteExistsGrid(){
	var quoteExistsColNames = ['quoteId', 'Quote No', 'Version', 'Customer','Commodity Description','PLR','POL','POD','PLD','Quote Date','Expiration Date','Load'];
	var quoteExistsColModels = [
	               {name:'quoteId', hidden:true},
	               {
	            	    name:'quoteNumber', 
	            	    width:65, 
	            	    editable:false,
	            	    formatter : 'showlink',
		   					formatoptions : {
			   					baseLinkUrl : "javascript:",
			   					showAction : "getQuote('",
			   					addParam: "');"
		   					}
	               },
	               //{name:'quoteNumber', width:80, editable:false},
	               {name:'quoteVersion', width:50, editable:false},
	               {name:'customer', width:200, editable:false},
	               {name:'commodityDescription', width:180, editable:false},
	               {name:'placeOfReceipt', width:30, editable:false},
	               {name:'portOfLoading', width:30, editable:false},
	               {name:'portOfDischarge', width:33, editable:false},
	               {name:'placeOfDelivery', width:30, editable:false},
	               {name:'quoteDate', width:75, editable:false},
	               {name:'expirationDate', width:98, editable:false},
	               {name:'load', width:35, editable:false}
			   	];

	var jsonReaderQuoteExists = {
			root:"rows",
			page:"page",
			total:"total",
			records:"records",
			repeatitems:false,
			cell:"cell",
			id:"quoteId"
		};
	
	$('#quoteShowGrid').gatesGrid({
		caption: "Quotes",
		colNames: quoteExistsColNames,
		colModel: quoteExistsColModels,
		jsonReader: jsonReaderQuoteExists,
		pager: '#quoteShowPager',
		rowNum: 3,
		rowList: [ 3, 6, 9 ],
		height: 83,
		gatesOptions: {
			urls: {load:_context+'/booking/quote/showQuotes'},
			extraData: {
				aroleId: function(){
					return $("#showQuoteForAroleOnTemplatePull").val();
				},
				trade: function() {
					return $('#tradeCode').val();
				},
				placeOfReceipt: function(){
					return $('#blOriginCityCode').val();
				},
				placeOfDelivery: function(){
					return $('#blDestinationCityCode').val();
				},
				pol: function(){
					return $('#originPortCityCode').val();
				},
				pod: function(){
					return $('#destinationPortCityCode').val();
				},
				loadService: function(){
					return $('#loadServiceCode').val();
				},
				dischargeService: function(){
					return $('#dischargeServiceCode').val();
				},
				tariffNumber: function(){
					return $('#tariffNumber').val();
				},
				tariffItemNumber: function(){
					return $('#tariffItemNumber').val();
				},
				commodityDescription: function(){
					return $('#commodityDescription').val();
				}
			},
			controls: {
				navBarAdd: false,
				navBarEdit: false,
				navBarDelete: false
			}
		}
	});
}

function loadQuoteShowGrid(){
	$('#quoteShowGrid').trigger("reloadGrid");
}

function unloadQuoteShowGrid(){
	$('#quoteShowGrid').jqGrid('GridUnload');
};/**
 * Booking Security Implementation
 */
$(function() {
	enforceUserSecurityRolesAndPermissions();
	
	/* Always disabled on page load*/
	if($('#shipmentNumber').val()==''){
		$("#bookingStatusCode").attr("disabled",true);
	}
	//$('#shipperRepeatContact').attr('disabled', true);
	//$('select[name="shipper\\.contactId"]').attr("disabled",true);
	//$('#consigneeRepeatContact').attr('disabled', true);
	//$('select[name="consignee\\.contactId"]').attr("disabled",true);
	$("#copyShipper").attr("disabled", true);
	$("#copyConsignee").attr("disabled", true);
	//$('#partiesRepeatContact').attr('disabled', true);
	$('#autobillOptionCode').attr('disabled', true);
	$('#autobillTriggerCode').attr('disabled', true);
	$('#dealerAuctionLocationCode').attr('disabled', true);
	$('#inbondNumber').attr('disabled', true);
	$('#overridePickupCarrierCode').attr('disabled', true);
	$('#overrideDeliveryCarrierCode').attr('disabled', true);
	$('#vvdChangeAuthPartyCode').attr('disabled', true);
	$('#vvd_conventional').hide();
	$('#convCgoApptCutoffDate').attr('disabled', true);
	$('#convCgoApptCutoffTime').attr('disabled', true);
	$('#convCgoEstArrivalDate').attr('disabled', true);
	$('#convCgoEstArrivalTime').attr('disabled', true);
	$('#requiredDeliveryDate').attr('disabled', true);
	$('#premiumRDD').attr('disabled', true);
	//$('#milRequiredDeliveryDate').attr('disabled', true);
	/*if(isMilitaryModifiable)
		$('#milRequiredDeliveryDate').val('01-01-0001');*/
	$('#cargoPickupCityCodeDesc').attr("disabled", true);
	$('#cargoDeliveryCityCodeDesc').attr("disabled", true);
	$('#overridePlaceOfIssue').attr('disabled', true);
});

function enforceUserSecurityRolesAndPermissions(){
	
	/*Header*/
	_enforceSecurityHeader();
	
	/* Expand All-Collapse All */
	if(isShipperConsgineeDisplayOnly || isShipperConsgineeModifiable || isPartiesDisplayOnly || isPartiesModifiable || isReferenceNumberMarksDisplayOnly || isReferenceNumberMarksDisplayOnly || isReferenceNumberMarksModifiable || isRoutingDisplayOnly || isRoutingModifiable || isCommodityDisplayOnly || isCommodityModifiable || isMilitaryDisplayOnly || isMilitaryModifiable || isSpecialServiceDisplayOnly || isSpecialServiceModifiable || isClauseDisplayOnly || isClauseModifiable || isHoldManualDisplayOnly || isHoldManualModifiable || isRoutingOverrideDisplayOnly || isRoutingOverrideModifiable){
		$('#expandAllCollapseAll').show();
	}
	else{
		$('#expandAllCollapseAll').hide();
	}
	
	/*Shipper|Consignee*/
	_enforceSecuritySection('shipperconsignee', 0, isShipperConsgineeDisplayOnly, isShipperConsgineeModifiable, isShipperConsgineeTitleDisplay);
	
	/*Parties*/
	_enforceSecuritySection('maintainBookingParties', 1, isPartiesDisplayOnly, isPartiesModifiable, isPartiesTitleDisplay);
	//D032770: 	New Port Editor permission Port Editor access : K&L Beer Bookings
	/*Reference Numbers*/
	_enforceSecuritySection('maintainBookingRefNumbersMarks', 2, isReferenceNumberMarksDisplayOnly, isReferenceNumberMarksModifiable, isReferenceNumberMarksTitleDisplay);
	
	/*Routing*/
	_enforceSecuritySection('maintainBookingRouting', 3, isRoutingDisplayOnly, isRoutingModifiable, isRoutingTitleDisplay);
	
	/*Commodity*/
	_enforceSecuritySection('maintainBookingCommodity', 4, isCommodityDisplayOnly, false, isCommodityTitleDisplay);
	
	/*Special Services*/
	_enforceSecuritySection('maintainBookingSpecialServices', 6, isSpecialServiceDisplayOnly, isSpecialServiceModifiable, isSpecialServiceTitleDisplay);
	
	
	//Save
	if(!bookingSaveAddEnabled && bookingSaveUpdateEnabled && $.trim($('#shipmentNumber').val())==''){
		$('#bookingSave').attr("disabled", true);
	}
	else if(!bookingSaveAddEnabled && !bookingSaveUpdateEnabled){
		enforceSecurityDivAndButtons('bookingSave', false);
		enforceSecurityDivAndButtons("billingStartedHyperlink", false);
	}
	else if(bookingSaveAddEnabled || bookingSaveUpdateEnabled){
		enforceSecurityDivAndButtons('bookingSave', true);
		enforceSecurityDivAndButtons("billingStartedHyperlink", true);
	}
	

}

/*function _enforceSecurityOnShipperConsignee(){
	if(isShipperDisplayOnly && isShipperConsgineeModifiable){
		enableSection('shipperconsignee');
	}else if(isShipperDisplayOnly && !isShipperConsgineeModifiable){
		disableSection('shipperconsignee');
	}else if(!isShipperDisplayOnly && isShipperConsgineeModifiable){
		enableSection('shipperconsignee');
	}
	if(!isShipperDisplayOnly && !isConsigneeDisplayOnly && !isShipperModifiable && !isConsigneeModifiable){
		//TODO: Check the name
		hideSection('Shipper');
	}
}*/

function _enforceSecurityHeader(){
	if(isHeaderQuoteDisplay && !isHeaderQuoteApply){
		//disableSection('headerCreateBookingFromQuote'); -- commented for d030658
		//Added as part of Defect D030658
		enableSection('headerCreateBookingFromQuote');
		enforceSecurityDivAndButtons('quoteDiv', true);
		$("#quoteNumberLabel").each(function(){
			var aTxt = $(this).text();
		 	$(this).html(aTxt);  
		 });
		
	}
	else if(isHeaderQuoteDisplay && isHeaderQuoteApply){
		//Quote can not apply if Booking is loaded on screen. [So disable the Quote apply section]
		if($.trim($('#shipmentNumberHidden').val())==''){
			enableSection('headerCreateBookingFromQuote');
		}else{
			disableSection('headerCreateBookingFromQuote');
		}
	}
	else{
		enforceSecurityDivAndButtons('headerCreateBookingFromQuote', false);
		//added for D030657
		enforceSecurityDivAndButtons('quoteDiv', false);
		
	}
	
	
	if(isHeaderTemplateDisplay && !isHeaderTemplateApply){
		disableSection('headerTemplate');
	}
	else if(isHeaderTemplateDisplay && isHeaderTemplateApply){
		enableSection('headerTemplate');
	}
	else{
		enforceSecurityDivAndButtons('headerTemplate', false);
	}
	
	if(isHeaderTradeDisplay && !isHeaderTradeUpdate){
		disableSection('headerTradeCode');
	}
	else if(isHeaderTradeDisplay && isHeaderTradeUpdate){
		enableSection('headerTradeCode');
	}
	else{
		enforceSecurityDivAndButtons('headerTradeCode', false);
	}
	
	if(isHeaderStatusDisplay && !isHeaderStatusUpdate){
		disableSection('headerStatusCode');
	}
	else if(isHeaderStatusDisplay && isHeaderStatusUpdate){
		enableSection('headerStatusCode');
	}
	else{
		enforceSecurityDivAndButtons('headerStatusCode', false);
	}
	
	if(isHeaderBookedDisplay){
		disableSection('headerBooked');
	}
	else{
		enforceSecurityDivAndButtons('headerBooked', false);
	}
	
	if(isHeaderCustgrpDisplay && !isHeaderCustgrpUpdate){
		disableSection('headerCustomerGroup');
	}
	else if(isHeaderTradeDisplay && isHeaderTradeUpdate){
		enableSection('headerCustomerGroup');
	}
	else{
		enforceSecurityDivAndButtons('headerCustomerGroup', false);
	}
	
	if(isHeaderUpdatedDisplay){
		disableSection('headerUpdated');
	}
	else{
		enforceSecurityDivAndButtons('headerUpdated', false);
	}
	
	if(isHeaderQuoteLink){
		enforceSecurityDivAndButtons('assignLink', true);
	}
	else{
		//D030658
		enforceSecurityDivAndButtons('assignLink', false);
		//enforceSecurityDivAndButtons('quoteDiv', false);
	}
	if(!isBkngsummDisplay)
	{
	  $('#bkngsummdiv').hide();	
	}
		
	
	// TODO EDI or WEB
	if(isHeaderChannelDisplay){
		disableSection('');
	}
	else{
		enforceSecurityDivAndButtons('', false);
	}
}

function _enforceSecuritySection(sectionId, accordian, _displayOnly, _modifiableOnly, _titleOnly){
	if(_titleOnly && !_displayOnly && !_modifiableOnly){
		return;
	}
	else if(_displayOnly && _modifiableOnly){
		enableSection(sectionId);
		checkCopyButtons();
	}else if(_displayOnly && !_modifiableOnly){
		disableSection(sectionId);
	}else if(!_displayOnly && _modifiableOnly){
		enableSection(sectionId);
		checkCopyButtons();
	}else if(!_displayOnly && !_modifiableOnly){
		hideSection(accordian);
	}
}

function enforceSecurityDivAndButtons(selector, _enabled){
	if(_enabled){
		$("#"+selector).css('visibility','visible');
		//$("#"+buttonId).attr("disabled", false);
	}else{
		$("#"+selector).css('visibility','hidden');
	}
}

function hideSection(accordian){
	$($('.booking-section')[accordian]).hide();
}

function disableSection(sectionId){
	$('#'+sectionId).gatesDisable({exclude:['sData']});
}

function enableSection(sectionId){
	$('#'+sectionId).gatesEnable();
}

function disableDialogButton(dialogId, buttonName){
	$("#"+dialogId+"~ .ui-dialog-buttonpane").contents().find("button:contains('"+buttonName+"')").button("disable");
}

function enforceSecurityTitleDisplay(){
	if(isShipperConsgineeTitleDisplay && !isShipperConsgineeDisplayOnly && !isShipperConsgineeModifiable){
		disableAccordian(0);
	}
	if(isPartiesTitleDisplay && !isPartiesDisplayOnly && !isPartiesModifiable){
		disableAccordian(1);
	}
	if(isReferenceNumberMarksTitleDisplay && !isReferenceNumberMarksDisplayOnly && !isReferenceNumberMarksModifiable){
		disableAccordian(2);
	}
	if(isRoutingTitleDisplay && !isRoutingDisplayOnly && !isRoutingModifiable){
		disableAccordian(3);
	}
	if(isCommodityTitleDisplay && !isCommodityDisplayOnly && !isCommodityModifiable){
		disableAccordian(4);
	}
	if(isMilitaryTitleDisplay && !isMilitaryDisplayOnly && !isMilitaryModifiable){
		disableAccordian(5);
	}
	if(isSpecialServiceTitleDisplay && !isSpecialServiceDisplayOnly && !isSpecialServiceModifiable){
		disableAccordian(6);
	}
	if(isClauseTitleDisplay && !isClauseDisplayOnly && !isClauseModifiable){
		disableAccordian(7);
	}
	if(isHoldTitleDisplay && !isHoldManualDisplayOnly && !isHoldManualModifiable){
		disableAccordian(8);
	}
	if(isRoutingOverrideTitleDisplay && !isRoutingOverrideDisplayOnly && !isRoutingOverrideModifiable){
		disableAccordian(9);
	}
}

function disableAccordian(accordionIndex){
	$($('.booking-section')[accordionIndex]).accordion("disable").removeClass("ui-accordion-disabled ui-state-disabled");
	$('h3', $($('.booking-section')[accordionIndex])).removeClass("ui-accordion-disabled ui-state-disabled");
	$($('.booking-section')[accordionIndex]).children('div').removeClass("ui-accordion-disabled ui-state-disabled");
}

/*function hideGridsEditDeleteIcons(gridId){
		$('table[aria-labelledby="gbox_'+gridId+'"] tbody tr td div span[class="ui-icon ui-icon-pencil"]').hide();
		$('table[aria-labelledby="gbox_'+gridId+'"] tbody tr td div span[class="ui-icon ui-icon-trash"]').hide();
}*/
;