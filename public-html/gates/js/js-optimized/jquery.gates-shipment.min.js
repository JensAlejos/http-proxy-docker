/*
 * jQuery Tooltip plugin 1.3
 *
 * http://bassistance.de/jquery-plugins/jquery-plugin-tooltip/
 * http://docs.jquery.com/Plugins/Tooltip
 *
 * Copyright (c) 2006 - 2008 JÃ¶rn Zaefferer
 *
 * $Id: jquery.tooltip.min.js,v 1.2 2014/02/13 19:26:31 sbauer Exp $
 * 
 * Dual licensed under the MIT and GPL licenses:
 *   http://www.opensource.org/licenses/mit-license.php
 *   http://www.gnu.org/licenses/gpl.html
 */;(function($){var helper={},current,title,tID,IE=$.browser.msie&&/MSIE\s(5\.5|6\.)/.test(navigator.userAgent),track=false;$.tooltip={blocked:false,defaults:{delay:200,fade:false,showURL:true,extraClass:"",top:15,left:15,id:"tooltip"},block:function(){$.tooltip.blocked=!$.tooltip.blocked;}};$.fn.extend({tooltip:function(settings){settings=$.extend({},$.tooltip.defaults,settings);createHelper(settings);return this.each(function(){$.data(this,"tooltip",settings);this.tOpacity=helper.parent.css("opacity");this.tooltipText=this.title;$(this).removeAttr("title");this.alt="";}).mouseover(save).mouseout(hide).click(hide);},fixPNG:IE?function(){return this.each(function(){var image=$(this).css('backgroundImage');if(image.match(/^url\(["']?(.*\.png)["']?\)$/i)){image=RegExp.$1;$(this).css({'backgroundImage':'none','filter':"progid:DXImageTransform.Microsoft.AlphaImageLoader(enabled=true, sizingMethod=crop, src='"+image+"')"}).each(function(){var position=$(this).css('position');if(position!='absolute'&&position!='relative')$(this).css('position','relative');});}});}:function(){return this;},unfixPNG:IE?function(){return this.each(function(){$(this).css({'filter':'',backgroundImage:''});});}:function(){return this;},hideWhenEmpty:function(){return this.each(function(){$(this)[$(this).html()?"show":"hide"]();});},url:function(){return this.attr('href')||this.attr('src');}});function createHelper(settings){if(helper.parent)return;helper.parent=$('<div id="'+settings.id+'"><h3></h3><div class="body"></div><div class="url"></div></div>').appendTo(document.body).hide();if($.fn.bgiframe)helper.parent.bgiframe();helper.title=$('h3',helper.parent);helper.body=$('div.body',helper.parent);helper.url=$('div.url',helper.parent);}function settings(element){return $.data(element,"tooltip");}function handle(event){if(settings(this).delay)tID=setTimeout(show,settings(this).delay);else
show();track=!!settings(this).track;$(document.body).bind('mousemove',update);update(event);}function save(){if($.tooltip.blocked||this==current||(!this.tooltipText&&!settings(this).bodyHandler))return;current=this;title=this.tooltipText;if(settings(this).bodyHandler){helper.title.hide();var bodyContent=settings(this).bodyHandler.call(this);if(bodyContent.nodeType||bodyContent.jquery){helper.body.empty().append(bodyContent)}else{helper.body.html(bodyContent);}helper.body.show();}else if(settings(this).showBody){var parts=title.split(settings(this).showBody);helper.title.html(parts.shift()).show();helper.body.empty();for(var i=0,part;(part=parts[i]);i++){if(i>0)helper.body.append("<br/>");helper.body.append(part);}helper.body.hideWhenEmpty();}else{helper.title.html(title).show();helper.body.hide();}if(settings(this).showURL&&$(this).url())helper.url.html($(this).url().replace('http://','')).show();else
helper.url.hide();helper.parent.addClass(settings(this).extraClass);if(settings(this).fixPNG)helper.parent.fixPNG();handle.apply(this,arguments);}function show(){tID=null;if((!IE||!$.fn.bgiframe)&&settings(current).fade){if(helper.parent.is(":animated"))helper.parent.stop().show().fadeTo(settings(current).fade,current.tOpacity);else
helper.parent.is(':visible')?helper.parent.fadeTo(settings(current).fade,current.tOpacity):helper.parent.fadeIn(settings(current).fade);}else{helper.parent.show();}update();}function update(event){if($.tooltip.blocked)return;if(event&&event.target.tagName=="OPTION"){return;}if(!track&&helper.parent.is(":visible")){$(document.body).unbind('mousemove',update)}if(current==null){$(document.body).unbind('mousemove',update);return;}helper.parent.removeClass("viewport-right").removeClass("viewport-bottom");var left=helper.parent[0].offsetLeft;var top=helper.parent[0].offsetTop;if(event){left=event.pageX+settings(current).left;top=event.pageY+settings(current).top;var right='auto';if(settings(current).positionLeft){right=$(window).width()-left;left='auto';}helper.parent.css({left:left,right:right,top:top});}var v=viewport(),h=helper.parent[0];if(v.x+v.cx<h.offsetLeft+h.offsetWidth){left-=h.offsetWidth+20+settings(current).left;helper.parent.css({left:left+'px'}).addClass("viewport-right");}if(v.y+v.cy<h.offsetTop+h.offsetHeight){top-=h.offsetHeight+20+settings(current).top;helper.parent.css({top:top+'px'}).addClass("viewport-bottom");}}function viewport(){return{x:$(window).scrollLeft(),y:$(window).scrollTop(),cx:$(window).width(),cy:$(window).height()};}function hide(event){if($.tooltip.blocked)return;if(tID)clearTimeout(tID);current=null;var tsettings=settings(this);function complete(){helper.parent.removeClass(tsettings.extraClass).hide().css("opacity","");}if((!IE||!$.fn.bgiframe)&&tsettings.fade){if(helper.parent.is(':animated'))helper.parent.stop().fadeTo(tsettings.fade,0,complete);else
helper.parent.stop().fadeOut(tsettings.fade,complete);}else
complete();if(settings(this).fixPNG)helper.parent.unfixPNG();}})(jQuery);/**
 * 
 */

function _enforceSecuritySection(sectionId, accordian, _displayOnly, _modifiableOnly){
	if(_displayOnly && _modifiableOnly){
		$($('.shipment-section')[accordian]).show();
		enableSection(sectionId);
		//checkCopyButtons();
	}else if(_displayOnly && !_modifiableOnly){
		$($('.shipment-section')[accordian]).show();
		disableSection(sectionId);
	}else if(!_displayOnly && _modifiableOnly){
		$($('.shipment-section')[accordian]).show();
		enableSection(sectionId);
		//checkCopyButtons();
	}else if(!_displayOnly && !_modifiableOnly){
		hideSectionAccordion(accordian);
	}
}

function _enforceSecuritySectionWithoutAccordion(sectionId, _displayOnly, _modifiableOnly){
	if(_displayOnly && _modifiableOnly){
		enableSection(sectionId);
		//checkCopyButtons();
	}else if(_displayOnly && !_modifiableOnly){
		disableSection(sectionId);
	}else if(!_displayOnly && _modifiableOnly){
		enableSection(sectionId);
		//checkCopyButtons();
	}else if(!_displayOnly && !_modifiableOnly){
		hideSection(sectionId);
	}
}

function enforceSecurityDivAndButtons(selector, _enabled){
	if(_enabled){
		$("#"+selector).css('visibility','visible');
		$("#"+selector).removeClass('noTab');
	}else{
		$("#"+selector).css('visibility','hidden');
		$("#"+selector).addClass('noTab');
	}
}

function hideSectionAccordion(accordian){
	$($('.shipment-section')[accordian]).hide();
}

function hideSection(sectionId){
	$('#'+sectionId).css('visibility','hidden');
}

function disableSection(sectionId){
	$('#'+sectionId).gatesDisable();
}

function enableSection(sectionId){
	$('#'+sectionId).gatesEnable();
}

function disableDialogButton(dialogId, buttonName){
	$("#"+dialogId+"~ .ui-dialog-buttonpane").contents().find("button:contains('"+buttonName+"')").button("disable");
}

function enforceSecurityTitle(_enabled){
	if(_enabled){
		$('.content-title').css('visibility','visible');
		$('#msgDiv').css('visibility','visible');
	}else{
		$('.content-title').css('visibility','hidden');
		$('#msgDiv').css('visibility','hidden');
	}
}
;/**
 * Booking Security Implementation
 */
$(function() {
	enforceUserSecurityRolesAndPermissions();
	
	/* Always disabled on page load*/
	$('#shipperRepeatContact').attr('disabled', true);
	$('#consigneeRepeatContact').attr('disabled', true);
	$('#partiesRepeatContact').attr('disabled', true);
});

function enforceUserSecurityRolesAndPermissions(){
	
	/*Header*/
	
	_enforceSecurityHeader();
	
	/* Expand All-Collapse All */
	if(isShipperConsigneeDisplayOnly || isShipperConsigneeModifiable || isPartiesDisplayOnly || isPartiesModifiable || isReferenceNumberMarksDisplayOnly || isReferenceNumberMarksDisplayOnly || isReferenceNumberMarksModifiable || isRoutingDisplayOnly || isRoutingModifiable /*|| isCommodityDisplayOnly || isCommodityModifiable*/ || isMilitaryDisplayOnly || isMilitaryModifiable || isSpecialServiceDisplayOnly || isSpecialServiceModifiable || isClauseDisplayOnly || isClauseModifiable || isHoldManualDisplayOnly || isHoldManualModifiable || isRoutingOverrideDisplayOnly || isRoutingOverrideModifiable){
		$('#expandAllCollapseAll').show();
	}
	else{
		$('#expandAllCollapseAll').hide();
	}
	
	/*Shipper|Consignee*/
	_enforceSecuritySection('maintainShipmentShipperConsignee', 0, isShipperConsigneeDisplayOnly, isShipperConsigneeModifiable);
	
	/*Parties*/
	_enforceSecuritySection('maintainShipmentParties', 1, isPartiesDisplayOnly, isPartiesModifiable);
	
	/*Reference Numbers*/
	_enforceSecuritySection('maintainShipmentRefNumberMarks', 2, (isReferenceNumberMarksDisplayOnly || isMarksDisplayOnly), (isReferenceNumberMarksModifiable || isMarksModifiable));
	
	/*Routing*/
	_enforceSecuritySection('maintainShipmentRouting', 3, isRoutingDisplayOnly, isRoutingModifiable);
	
	/*Commodity*/
	var isCommodityDisplay= isCommodityBLCNDisplayOnly || isCommodityBLMXDisplayOnly ||isCommodityBLAUDisplayOnly ||isCommodityBLCVDisplayOnly;
	var isCommodityModifiable= isCommodityBLCNModifiable || isCommodityBLMXModifiable ||isCommodityBLAUModifiable ||isCommodityBLCVModifiable;
	
	//_enforceSecuritySection('maintain_commodity_shipment', 4, isCommodityDisplay, isCommodityModifiable);
	
	// D034263: 	Maintain Bill - Haz S
	if($('#tradeCode').val()=='A'){
		_enforceSecuritySection('maintainShipmentHazards', 5, isRoutingOverrideDisplayOnly, isRoutingOverrideModifiable);
		_enforceSecuritySection('maintainShipmentStopOffs', 6, isRoutingOverrideDisplayOnly, isRoutingOverrideModifiable);	
	}
	
	/*Military*/
	_enforceSecuritySection('militarySection', 7, isMilitaryDisplayOnly, isMilitaryModifiable);
	
	/*Special Services*/
	_enforceSecuritySection('maintainShipmentSpecialServices', 8, isSpecialServiceDisplayOnly, isSpecialServiceModifiable);
	
	/*Clauses*/
	_enforceSecuritySection('maintainBookingClauses', 9, isClauseDisplayOnly, isClauseModifiable);
	
	/*Holds*/
	_enforceSecuritySection('maintainShipmentHold', 10, isHoldManualDisplayOnly, isHoldManualModifiable);
		
	/*Booking Overrides*/
	_enforceSecuritySection('maintainShipmentOverrides', 11, isRoutingOverrideDisplayOnly, isRoutingOverrideModifiable);
	
	
	/*Buttons*/
	//Release/UndoRelease
	enforceSecurityDivAndButtons('releaseHold', holdManualReleaseButtonEnabled);
	enforceSecurityDivAndButtons('undoReleaseHold', holdManualReleaseButtonEnabled);
	
	//Save
	if(shipmentSaveUpdateEnabled && $.trim($('#shipmentId').val())==''){
		enforceSecurityDivAndButtons('shipmentSaveBtn', true);
		$('#shipmentSaveBtn').attr("disabled", true);
	}
	else if(!shipmentSaveUpdateEnabled){
		enforceSecurityDivAndButtons('shipmentSaveBtn', false);
	}
	else if(shipmentSaveUpdateEnabled && $.trim($('#shipmentId').val())!=''){
		enforceSecurityDivAndButtons('shipmentSaveBtn', true);
	}
	
	//Customize
	enforceSecurityDivAndButtons('shipmentCustomizeBtn', custAddressEnabled);
	
	//Hold Release
	enforceSecurityDivAndButtons('shipmentHoldReleaseBtn', holdReleaseEnabled);
	
	//Bill
	enforceSecurityDivAndButtons('shipmentBillBtn', isBillDisplayOnly);
	
	//Charges
	//alert("isChargesDisplayOnly="+isChargesDisplayOnly);
	enforceSecurityDivAndButtons('shipmentChargesBtn', isChargesDisplayOnly);
	
	//Payables
	enforceSecurityDivAndButtons('shipmentPayablesBtn', isPayablesDisplayOnly);
	
	//Corrections
	enforceSecurityDivAndButtons('shipmentCorrectionsBtn', isCorrectionDisplayOnly);
	
	//Secd Doc
	enforceSecurityDivAndButtons('shipmentSendDocBtn', sendDocEnabled);
	
	//status
	enforceSecurityDivAndButtons('shipmentStatusBtn', isStatusButtonEnable);
	
	//Delete
	enforceSecurityDivAndButtons('shipmentDeleteBtn', shipmentDeleteEnabled);
	
	//Trace
	enforceSecurityDivAndButtons('shipmentTraceBtn', isTraceDisplayOnly);
	
	//Alerts
	enforceSecurityDivAndButtons('shipmentAlertsBtn', sendAlert);	
	
}

/*function _enforceSecurityOnShipperConsignee(){
	if(isShipperDisplayOnly && isShipperConsigneeModifiable){
		enableSection('shipperconsignee');
	}else if(isShipperDisplayOnly && !isShipperConsigneeModifiable){
		disableSection('shipperconsignee');
	}else if(!isShipperDisplayOnly && isShipperConsigneeModifiable){
		enableSection('shipperconsignee');
	}
	if(!isShipperDisplayOnly && !isConsigneeDisplayOnly && !isShipperModifiable && !isConsigneeModifiable){
		//TODO: Check the name
		hideSection('Shipper');
	}
}*/

function _enforceSecurityHeader(){
	if(isRateDateDisplayOnly && !isRateDateModifiable){
		disableSection('rateDateDiv');
	}else if(isRateDateDisplayOnly && isRateDateModifiable){
		enableSection('rateDateDiv');
	}else{
		enforceSecurityDivAndButtons('rateDateDiv', false);
		$('#rateDate').addClass('noTab');
	}
	//Added isHeaderModifiable for Defect D029134 
	if(isHeaderDisplayOnly && !isHeaderModifiable){
		$("#customerGroupId").attr("disabled",true);
		$("#billType").attr("disabled",true);
		//Quote can not apply if Booking is loaded on screen. [So disable the Quote apply section]
		if($.trim($('#shipmentId').val())==''){
			enableSection('shipmentHeaderDetailDiv');
		}else{
			
			disableSection('shipmentHeaderDetailDiv');
		}
	}
	//Added for D028864
	else if(!isHeaderDisplayOnly && !isHeaderModifiable)
		{
		  $("#customerGroupId").attr("disabled",true);
		  $("#billType").attr("disabled",true);
		}
	else{
		enforceSecurityDivAndButtons('shipmentHeaderDetailDiv', false);
	}
	
}


/*function hideGridsEditDeleteIcons(gridId){
		$('table[aria-labelledby="gbox_'+gridId+'"] tbody tr td div span[class="ui-icon ui-icon-pencil"]').hide();
		$('table[aria-labelledby="gbox_'+gridId+'"] tbody tr td div span[class="ui-icon ui-icon-trash"]').hide();
}*/

function enforceSecurityTitleDisplay(){
	if(isShipperConsigneeTitleDisplay && !isShipperConsigneeDisplayOnly && !isShipperConsigneeModifiable){
		disableAccordian(0);
	}
	if(isPartiesTitleDisplay && !isPartiesDisplayOnly && !isPartiesModifiable){
		disableAccordian(1);
	}
	if(isReferenceNumberTitleDisplay && !isReferenceNumberMarksDisplayOnly && !isReferenceNumberMarksModifiable && !isMarksModifiable && !isMarksDisplayOnly){
		disableAccordian(2);
	}
	if(isRoutingVVDTitleDisplay && !isRoutingDisplayOnly && !isRoutingModifiable){
		disableAccordian(3);
	}
	/*if(isCommodityTitleDisplay && !isCommodityDisplayOnly && !isCommodityModifiable){
		disableAccordian(4);
	}*/
	if(isMilitaryTitleDisplay && !isMilitaryDisplayOnly && !isMilitaryModifiable){
		disableAccordian(5);
	}
	if(isSpecialServiceTitleDisplay && !isSpecialServiceDisplayOnly && !isSpecialServiceModifiable){
		disableAccordian(6);
	}
	if(isClauseTitleDisplay && !isClauseDisplayOnly && !isClauseModifiable){
		disableAccordian(7);
	}
	if(isHoldTitleDisplay && !isHoldManualDisplayOnly && !isHoldManualModifiable){
		disableAccordian(8);
	}

	if(isOverrideTitleDisplay && !isRoutingOverrideDisplayOnly && !isRoutingOverrideModifiable){
		disableAccordian(9);
	}
}
function disableAccordian(accordionIndex){
	$($('.shipment-section')[accordionIndex]).accordion("disable").removeClass("ui-accordion-disabled ui-state-disabled");
	$('h3', $($('.shipment-section')[accordionIndex])).removeClass("ui-accordion-disabled ui-state-disabled");
}
;function eli18n(a){this.textdomain=function(b){return this.messages[b]?this._domain=b:this._domain};a&&a.messages&&this.load(a.messages);a&&a.textdomain&&this.textdomain(a.textdomain)}eli18n.prototype=new function(){this.messages={};this._domain="";this.load=function(c){if(typeof(c)=="object"){for(var f in c){var b=c[f];if(typeof(b)=="object"){if(!this.messages[f]){this.messages[f]={}}for(var a in b){if(typeof(b[a])=="string"){this.messages[f][a]=b[a]}}}}}return this};this.translate=function(b,a){var a=a&&this.messages[a]?a:this._domain;
return this.messages[a]&&this.messages[a][b]?this.messages[a][b]:b};this.format=function(f,b,c){f=this.translate(f,c);if(typeof(b)=="object"){for(var a in b){f=f.replace("%"+a,this.translate(b[a],c))}}return f}};function elDialogForm(c){var a=this;var b={"class":"el-dialogform",submit:function(f,g){g.close()},form:{action:window.location.href,method:"post"},ajaxForm:null,validate:null,spinner:"Loading",tabs:{active:0,selected:0},tabPrefix:"el-df-tab-",dialog:{title:"dialog",autoOpen:false,modal:true,resizable:false,closeOnEscape:true,buttons:{Cancel:function(){a.close()
},Ok:function(){a.form.trigger("submit")}}}};this.opts=jQuery.extend(true,{},b,c);this.opts.dialog.close=function(){a.close()};if(this.opts.rtl){this.opts["class"]+=" el-dialogform-rtl"}if(c&&c.dialog&&c.dialog.buttons&&typeof(c.dialog.buttons)=="object"){this.opts.dialog.buttons=c.dialog.buttons}this.ul=null;this.tabs={};this._table=null;this.dialog=jQuery("<div />").addClass(this.opts["class"]).dialog(this.opts.dialog);this.message=jQuery('<div class="el-dialogform-message rounded-5" />').hide().appendTo(this.dialog);
this.error=jQuery('<div class="el-dialogform-error rounded-5" />').hide().appendTo(this.dialog);this.spinner=jQuery('<div class="spinner" />').hide().appendTo(this.dialog);this.content=jQuery('<div class="el-dialogform-content" />').appendTo(this.dialog);this.form=jQuery("<form />").attr(this.opts.form).appendTo(this.content);if(this.opts.submit){this.form.bind("submit",function(f){a.opts.submit(f,a)})}if(this.opts.ajaxForm&&jQuery.fn.ajaxForm){this.form.ajaxForm(this.opts.ajaxForm)}if(this.opts.validate){this.form.validate(this.opts.validate)
}this.option=function(f,g){return this.dialog.dialog("option",f,g)};this.showError=function(f,g){this.hideMessage();this.hideSpinner();this.error.html(f).show();g&&this.content.hide();return this};this.hideError=function(){this.error.text("").hide();this.content.show();return this};this.showSpinner=function(f){this.error.hide();this.message.hide();this.content.hide();this.spinner.text(f||this.opts.spinner).show();this.option("buttons",{});return this};this.hideSpinner=function(){this.content.show();
this.spinner.hide();return this};this.showMessage=function(f,g){this.hideError();this.hideSpinner();this.message.html(f||"").show();g&&this.content.hide();return this};this.hideMessage=function(){this.message.hide();this.content.show();return this};this.tab=function(g,f){g=this.opts.tabPrefix+g;if(!this.ul){this.ul=jQuery("<ul />").prependTo(this.form)}jQuery("<li />").append(jQuery("<a />").attr("href","#"+g).html(f)).appendTo(this.ul);this.tabs[g]={tab:jQuery("<div />").attr("id",g).addClass("tab").appendTo(this.form),table:null};
return this};this.table=function(f){f=f&&f.indexOf(this.opts.tabPrefix)==-1?this.opts.tabPrefix+f:f;if(f&&this.tabs&&this.tabs[f]){this.tabs[f].table=jQuery("<table />").appendTo(this.tabs[f].tab)}else{this._table=jQuery("<table />").appendTo(this.form)}return this};this.append=function(j,k,g){k=k?"el-df-tab-"+k:"";if(!j){return this}if(k&&this.tabs[k]){if(g){!this.tabs[k].table&&this.table(k);var h=jQuery("<tr />").appendTo(this.tabs[k].table);if(!jQuery.isArray(j)){h.append(jQuery("<td />").append(j))
}else{for(var f=0;f<j.length;f++){h.append(jQuery("<td />").append(j[f]))}}}else{if(!jQuery.isArray(j)){this.tabs[k].tab.append(j)}else{for(var f=0;f<j.length;f++){this.tabs[k].tab.append(j[f])}}}}else{if(!g){if(!jQuery.isArray(j)){this.form.append(j)}else{for(var f=0;f<j.length;f++){this.form.append(j[f])}}}else{if(!this._table){this.table()}var h=jQuery("<tr />").appendTo(this._table);if(!jQuery.isArray(j)){h.append(jQuery("<td />").append(j))}else{for(var f=0;f<j.length;f++){h.append(jQuery("<td />").append(j[f]))
}}}}return this};this.separator=function(f){f="el-df-tab-"+f;if(this.tabs&&this.tabs[f]){this.tabs[f].tab.append(jQuery("<div />").addClass("separator"));this.tabs[f].table&&this.table(f)}else{this.form.append(jQuery("<div />").addClass("separator"))}return this};this.open=function(){var f=this;this.ul&&this.form.tabs(this.opts.tabs);setTimeout(function(){f.dialog.find(":text").keydown(function(g){if(g.keyCode==13){g.preventDefault();f.form.submit()}}).filter(":first")[0].focus()},200);this.dialog.dialog("open");
return this};this.close=function(){if(typeof(this.opts.close)=="function"){this.opts.close()}this.dialog.dialog("destroy")}}(function(a){a.fn.elColorPicker=function(h){var b=this;var f=a.extend({},a.fn.elColorPicker.defaults,h);this.hidden=a('<input type="hidden" />').attr("name",f.name).val(f.color||"").appendTo(this);this.palette=null;this.preview=null;this.input=null;function c(j){b.val(j);f.change&&f.change(b.val());b.palette.slideUp()}function g(){b.palette=a("<div />").addClass(f.paletteClass+" rounded-3");
for(var j=0;j<f.colors.length;j++){a("<div />").addClass("color").css("background-color",f.colors[j]).attr({title:f.colors[j],unselectable:"on"}).appendTo(b.palette).mouseenter(function(){var k=a(this).attr("title");b.input.val(k);b.preview.css("background-color",k)}).click(function(k){k.stopPropagation();c(a(this).attr("title"))})}b.input=a('<input type="text" />').addClass("rounded-3").attr("size",8).click(function(k){k.stopPropagation();a(this).focus()}).keydown(function(p){if(p.ctrlKey||p.metaKey){return true
}var o=p.keyCode;if(o==27){return b.mouseleave()}if(o!=8&&o!=13&&o!=46&&o!=37&&o!=39&&(o<48||o>57)&&(o<65||o>70)){return false}var q=a(this).val();if(q.length==7||q.length==0){if(o==13){p.stopPropagation();p.preventDefault();c(q);b.palette.slideUp()}if(p.keyCode!=8&&p.keyCode!=46&&o!=37&&o!=39){return false}}}).keyup(function(k){var o=a(this).val();o.length==7&&/^#[0-9abcdef]{6}$/i.test(o)&&b.val(o)});b.preview=a("<div />").addClass("preview rounded-3").click(function(k){k.stopPropagation();c(b.input.val())
});b.palette.append(a("<div />").addClass("clearfix")).append(a("<div />").addClass("panel").append(b.input).append(b.preview));if(f.palettePosition=="outer"){b.palette.hide().appendTo(b.parents("body").eq(0)).mouseleave(function(){if(!b.palette.is(":animated")){a(this).slideUp();b.val(b.val())}});b.mouseleave(function(k){if(k.relatedTarget!=b.palette.get(0)){if(!b.palette.is(":animated")){b.palette.slideUp();b.val(b.val())}}})}else{b.append(b.palette.hide()).mouseleave(function(k){b.palette.slideUp();
b.val(b.val())})}b.val(b.val())}this.empty().addClass(f["class"]+" rounded-3").css({position:"relative","background-color":f.color||""}).click(function(p){if(!b.hasClass("disabled")){!b.palette&&g();if(f.palettePosition=="outer"&&b.palette.css("display")=="none"){var q=a(this).offset();var k=b.palette.width();var j=b.parents("body").width()-q.left>=k?q.left:q.left+a(this).outerWidth()-k;b.palette.css({left:j+"px",top:q.top+a(this).height()+1+"px"})}b.palette.slideToggle()}});this.val=function(j){if(!j&&j!==""){return this.hidden.val()
}else{this.hidden.val(j);if(f.update){f.update(this.hidden.val())}else{this.css("background-color",j)}if(b.palette){b.preview.css("background-color",j);b.input.val(j)}}return this};return this};a.fn.elColorPicker.defaults={"class":"el-colorpicker",paletteClass:"el-palette",palettePosition:"inner",name:"color",color:"",update:null,change:function(b){},colors:["#ffffff","#cccccc","#999999","#666666","#333333","#000000","#ffcccc","#cc9999","#996666","#663333","#330000","#ff9999","#cc6666","#cc3333","#993333","#660000","#ff6666","#ff3333","#ff0000","#cc0000","#990000","#ff9966","#ff6633","#ff3300","#cc3300","#993300","#ffcc99","#cc9966","#cc6633","#996633","#663300","#ff9933","#ff6600","#ff9900","#cc6600","#cc9933","#ffcc66","#ffcc33","#ffcc00","#cc9900","#996600","#ffffcc","#cccc99","#999966","#666633","#333300","#ffff99","#cccc66","#cccc33","#999933","#666600","#ffff66","#ffff33","#ffff00","#cccc00","#999900","#ccff66","#ccff33","#ccff00","#99cc00","#669900","#ccff99","#99cc66","#99cc33","#669933","#336600","#99ff33","#99ff00","#66ff00","#66cc00","#66cc33","#99ff66","#66ff33","#33ff00","#33cc00","#339900","#ccffcc","#99cc99","#669966","#336633","#003300","#99ff99","#66cc66","#33cc33","#339933","#006600","#66ff66","#33ff33","#00ff00","#00cc00","#009900","#66ff99","#33ff66","#00ff33","#00cc33","#009933","#99ffcc","#66cc99","#33cc66","#339966","#006633","#33ff99","#00ff66","#00ff99","#00cc66","#33cc99","#66ffcc","#33ffcc","#00ffcc","#00cc99","#009966","#ccffff","#99cccc","#669999","#336666","#003333","#99ffff","#66cccc","#33cccc","#339999","#006666","#66cccc","#33ffff","#00ffff","#00cccc","#009999","#66ccff","#33ccff","#00ccff","#0099cc","#006699","#99ccff","#6699cc","#3399cc","#336699","#003366","#3399ff","#0099ff","#0066ff","#066ccc","#3366cc","#6699ff","#3366ff","#0033ff","#0033cc","#003399","#ccccff","#9999cc","#666699","#333366","#000033","#9999ff","#6666cc","#3333cc","#333399","#000066","#6666ff","#3333ff","#0000ff","#0000cc","#009999","#9966ff","#6633ff","#3300ff","#3300cc","#330099","#cc99ff","#9966cc","#6633cc","#663399","#330066","#9933ff","#6600ff","#9900ff","#6600cc","#9933cc","#cc66ff","#cc33ff","#cc00ff","#9900cc","#660099","#ffccff","#cc99cc","#996699","#663366","#330033","#ff99ff","#cc66cc","#cc33cc","#993399","#660066","#ff66ff","#ff33ff","#ff00ff","#cc00cc","#990099","#ff66cc","#ff33cc","#ff00cc","#cc0099","#990066","#ff99cc","#cc6699","#cc3399","#993366","#660033","#ff3399","#ff0099","#ff0066","#cc0066","#cc3366","#ff6699","#ff3366","#ff0033","#cc0033","#990033"]}
})(jQuery);(function(a){a.fn.elBorderSelect=function(h){var k=this;var q=this.eq(0);var b=a.extend({},a.fn.elBorderSelect.defaults,h);var f=a('<input type="text" />').attr({name:b.name+"[width]",size:3}).css("text-align","right").change(function(){k.change()});var j=a("<div />").css("position","relative").elColorPicker({"class":"el-colorpicker ui-icon ui-icon-pencil",name:b.name+"[color]",palettePosition:"outer",change:function(){k.change()}});var c=a("<div />").elSelect({tpl:'<div style="border-bottom:4px %val #000;width:100%;margin:7px 0"> </div>',tpls:{"":"%label"},maxHeight:b.styleHeight||null,select:function(){k.change()
},src:{"":"none",solid:"solid",dashed:"dashed",dotted:"dotted","double":"double",groove:"groove",ridge:"ridge",inset:"inset",outset:"outset"}});q.empty().addClass(b["class"]).attr("name",b.name||"").append(a("<table />").attr("cellspacing",0).append(a("<tr />").append(a("<td />").append(f).append(" px")).append(a("<td />").append(c)).append(a("<td />").append(j))));function g(t){function r(u){hexDigits=["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"];return !u?"00":hexDigits[(u-u%16)/16]+hexDigits[u%16]
}var o=(t||"").match(/\(([0-9]{1,3}),\s*([0-9]{1,3}),\s*([0-9]{1,3})\)/);return o?"#"+r(o[1])+r(o[2])+r(o[3]):""}function p(r){if(!r){return r}var o=r.match(/([0-9]+\.?[0-9]*)\s*(px|pt|em|%)/);if(o){r=o[1];unit=o[2]}if(r[0]=="."){r="0"+r}r=parseFloat(r);if(isNaN(r)){return""}var t=parseInt(a(document.body).css("font-size"))||16;switch(unit){case"em":return parseInt(r*t);case"pt":return parseInt(r*t/12);case"%":return parseInt(r*t/100)}return r}this.change=function(){b.change&&b.change(this.val())
};this.val=function(u){var t,x,z,r,o;if(!u&&u!==""){t=parseInt(f.val());t=!isNaN(t)?t+"px":"";x=c.val();z=j.val();return{width:t,style:x,color:z,css:a.trim(t+" "+x+" "+z)}}else{r="";if(u.nodeName||u.css){if(!u.css){u=a(u)}r=u.css("border");if((r=u.css("border"))){t=x=z=r}else{t=u.css("border-width");x=u.css("border-style");z=u.css("border-color")}}else{t=u.width||"";x=u.style||"";z=u.color||""}f.val(p(t));o=x?x.match(/(solid|dashed|dotted|double|groove|ridge|inset|outset)/i):"";c.val(o?o[1]:"");j.val(z.indexOf("#")===0?z:g(z));
return this}};this.val(b.value);return this};a.fn.elBorderSelect.defaults={name:"el-borderselect","class":"el-borderselect",value:{},change:null}})(jQuery);(function(a){a.fn.elPaddingInput=function(g){var c=this;var f=a.extend({},a.fn.elPaddingInput.defaults,{name:this.attr("name")},g);this.regexps={main:new RegExp(f.type=="padding"?'paddings*:s*([^;"]+)':'margins*:s*([^;"]+)',"im"),left:new RegExp(f.type=="padding"?'padding-lefts*:s*([^;"]+)':'margin-lefts*:s*([^;"]+)',"im"),top:new RegExp(f.type=="padding"?'padding-tops*:s*([^;"]+)':'margin-tops*:s*([^;"]+)',"im"),right:new RegExp(f.type=="padding"?'padding-rights*:s*([^;"]+)':'margin-rights*:s*([^;"]+)',"im"),bottom:new RegExp(f.type=="padding"?'padding-bottoms*:s*([^;"]+)':'margin-bottoms*:s*([^;"]+)',"im")};
a.each(["left","top","right","bottom"],function(){c[this]=a('<input type="text" />').attr("size",3).css("text-align","right").css("border-"+this,"2px solid red").bind("change",function(){a(this).val(b(a(this).val()));h()}).attr("name",f.name+"["+this+"]")});a.each(["uleft","utop","uright","ubottom"],function(){c[this]=a("<select />").append('<option value="px">px</option>').append('<option value="em">em</option>').append('<option value="pt">pt</option>').bind("change",function(){h()}).attr("name",f.name+"["+this+"]");
if(f.percents){c[this].append('<option value="%">%</option>')}});this.empty().addClass(f["class"]).append(this.left).append(this.uleft).append(" x ").append(this.top).append(this.utop).append(" x ").append(this.right).append(this.uright).append(" x ").append(this.bottom).append(this.ubottom);this.val=function(z){if(!z&&z!==""){var q=b(this.left.val());var A=b(this.top.val());var j=b(this.right.val());var x=b(this.bottom.val());var w={left:q=="auto"||q==0?q:(q!==""?q+this.uleft.val():""),top:A=="auto"||A==0?A:(A!==""?A+this.utop.val():""),right:j=="auto"||j==0?j:(j!==""?j+this.uright.val():""),bottom:x=="auto"||x==0?x:(x!==""?x+this.ubottom.val():""),css:""};
if(w.left!==""&&w.right!==""&&w.top!==""&&w.bottom!==""){if(w.left==w.right&&w.top==w.bottom){w.css=w.top+" "+w.left}else{w.css=w.top+" "+w.right+" "+w.bottom+" "+w.left}}return w}else{if(z.nodeName||z.css){if(!z.css){z=a(z)}var o={left:"",top:"",right:"",bottom:""};var k=(z.attr("style")||"").toLowerCase();if(k){k=a.trim(k);var p=k.match(this.regexps.main);if(p){var u=a.trim(p[1]).replace(/\s+/g," ").split(" ",4);o.top=u[0];o.right=u[1]&&u[1]!==""?u[1]:o.top;o.bottom=u[2]&&u[2]!==""?u[2]:o.top;o.left=u[3]&&u[3]!==""?u[3]:o.right
}else{a.each(["left","top","right","bottom"],function(){var r=this.toString();p=k.match(c.regexps[r]);if(p){o[r]=p[1]}})}}var z=o}a.each(["left","top","right","bottom"],function(){var t=this.toString();c[t].val("");c["u"+t].val();if(typeof(z[t])!="undefined"&&z[t]!==null){z[t]=z[t].toString();var v=b(z[t]);c[t].val(v);var r=z[t].match(/(px|em|pt|%)/i);c["u"+t].val(r?r[1]:"px")}});return this}};function b(j){j=a.trim(j.toString());if(j[0]=="."){j="0"+j}n=parseFloat(j);return !isNaN(n)?n:(j=="auto"?j:"")
}function h(){f.change&&f.change(c)}this.val(f.value);return this};a.fn.elPaddingInput.defaults={name:"el-paddinginput","class":"el-paddinginput",type:"padding",value:{},percents:true,change:null}})(jQuery);(function(a){a.fn.elSelect=function(c){var q=this;var u=this.eq(0);var b=a.extend({},a.fn.elSelect.defaults,c);var g=a('<input type="hidden" />').attr("name",b.name);var p=a("<label />").attr({unselectable:"on"}).addClass("rounded-left-3");var h=null;var k=null;if(u.get(0).nodeName=="SELECT"){b.src={};
u.children("option").each(function(){b.src[a(this).val()]=a(this).text()});b.value=u.val();b.name=u.attr("name");u.replaceWith((u=a("<div />")))}if(!b.value||!b.src[b.val]){b.value=null;var f=0;for(var r in b.src){if(f++==0){b.value=r}}}this.val=function(o){if(!o&&o!==""){return g.val()}else{if(b.src[o]){g.val(o);j(o);if(h){h.children().each(function(){if(a(this).attr("name")==o){a(this).addClass("active")}else{a(this).removeClass("active")}})}}return this}};function j(o){var w=b.labelTpl||b.tpls[o]||b.tpl;
p.html(w.replace(/%val/g,o).replace(/%label/,b.src[o])).children().attr({unselectable:"on"})}u.empty().addClass(b["class"]+" rounded-3").attr({unselectable:"on"}).append(g).append(p).hover(function(){a(this).addClass("hover")},function(){a(this).removeClass("hover")}).click(function(o){!h&&t();h.slideToggle();if(a.browser.msie&&!k){h.children().each(function(){k=Math.max(k,a(this).width())});if(k>h.width()){h.width(k+40)}}});this.val(b.value);function t(){h=a("<div />").addClass(b.listClass+" rounded-3").hide().appendTo(u.mouseleave(function(v){h.slideUp()
}));for(var x in b.src){var z=b.tpls[x]||b.tpl;a("<div />").attr("name",x).append(a(z.replace(/%val/g,x).replace(/%label/g,b.src[x])).attr({unselectable:"on"})).appendTo(h).hover(function(){a(this).addClass("hover")},function(){a(this).removeClass("hover")}).click(function(B){B.stopPropagation();B.preventDefault();var w=a(this).attr("name");q.val(w);b.select(w);h.slideUp()})}var o=u.outerWidth();if(h.width()<o){h.width(o)}var A=h.height();if(b.maxHeight>0&&A>b.maxHeight){h.height(b.maxHeight)}q.val(g.val())
}return this};a.fn.elSelect.defaults={name:"el-select","class":"el-select",listClass:"list",labelTpl:null,tpl:"<%val>%label</%val>",tpls:{},value:null,src:{},select:function(b){window.console&&window.console.log&&window.console.log("selected: "+b)},maxHeight:410}})(jQuery);(function(a){elRTE=function(o,j){if(!o||!o.nodeName){return alert('elRTE: argument "target" is not DOM Element')}var c=this,f;this.version="1.3";this.build="2011-06-23";this.options=a.extend(true,{},this.options,j);this.browser=a.browser;
this.target=a(o);this.lang=(""+this.options.lang);this._i18n=new eli18n({textdomain:"rte",messages:{rte:this.i18Messages[this.lang]||{}}});this.rtl=!!(/^(ar|fa|he)$/.test(this.lang)&&this.i18Messages[this.lang]);if(this.rtl){this.options.cssClass+=" el-rte-rtl"}this.toolbar=a('<div class="toolbar"/>');this.iframe=document.createElement("iframe");this.iframe.setAttribute("frameborder",0);this.workzone=a('<div class="workzone"/>').append(this.iframe).append(this.source);this.statusbar=a('<div class="statusbar"/>');
this.tabsbar=a('<div class="tabsbar"/>');this.editor=a('<div class="'+this.options.cssClass+'" />').append(this.toolbar).append(this.workzone).append(this.statusbar).append(this.tabsbar);this.doc=null;this.$doc=null;this.window=null;this.utils=new this.utils(this);this.dom=new this.dom(this);this.filter=new this.filter(this);this.updateHeight=function(){c.workzone.add(c.iframe).add(c.source).height(c.workzone.height())};this.resizable=function(q){var p=this;if(this.options.resizable&&a.fn.resizable){if(q){this.editor.resizable({handles:"se",alsoResize:this.workzone,minWidth:300,minHeight:200}).bind("resize",p.updateHeight)
}else{this.editor.resizable("destroy").unbind("resize",p.updateHeight)}}};this.editor.insertAfter(o);var h="";if(o.nodeName=="TEXTAREA"){this.source=this.target;this.source.insertAfter(this.iframe).hide();h=this.target.val()}else{this.source=a("<textarea />").insertAfter(this.iframe).hide();h=this.target.hide().html()}this.source.attr("name",this.target.attr("name")||this.target.attr("id"));h=a.trim(h);if(!h){h=" "}if(this.options.allowSource){this.tabsbar.append('<div class="tab editor rounded-bottom-7 active">'+c.i18n("Editor")+'</div><div class="tab source rounded-bottom-7">'+c.i18n("Source")+'</div><div class="clearfix" style="clear:both"/>').children(".tab").click(function(p){if(!a(this).hasClass("active")){c.tabsbar.children(".tab").toggleClass("active");
c.workzone.children().toggle();if(a(this).hasClass("editor")){c.updateEditor();c.window.focus();c.ui.update(true)}else{c.updateSource();c.source.focus();if(a.browser.msie){}else{c.source[0].setSelectionRange(0,0)}c.ui.disable();c.statusbar.empty()}}})}this.window=this.iframe.contentWindow;this.doc=this.iframe.contentWindow.document;this.$doc=a(this.doc);f='<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />';a.each(c.options.cssfiles,function(){f+='<link rel="stylesheet" type="text/css" href="'+this+'" />'
});this.doc.open();var g=this.filter.wysiwyg(h),b=this.rtl?' class="el-rte-rtl"':"";this.doc.write(c.options.doctype+f+"</head><body"+b+">"+(g)+"</body></html>");this.doc.close();if(a.browser.msie){this.doc.body.contentEditable=true}else{try{this.doc.designMode="on"}catch(k){}this.doc.execCommand("styleWithCSS",false,this.options.styleWithCSS)}if(this.options.height>0){this.workzone.height(this.options.height)}if(this.options.width>0){this.editor.width(this.options.width)}this.updateHeight();this.resizable(true);
this.window.focus();this.history=new this.history(this);this.selection=new this.selection(this);this.ui=new this.ui(this);this.target.parents("form").bind("submit.elfinder",function(p){c.source.parents("form").find('[name="el-select"]').remove();c.beforeSave()});this.source.bind("keydown",function(t){if(t.keyCode==9){t.preventDefault();if(a.browser.msie){var p=document.selection.createRange();p.text="\t"+p.text;this.focus()}else{var q=this.value.substr(0,this.selectionStart),u=this.value.substr(this.selectionEnd);
this.value=q+"\t"+u;this.setSelectionRange(q.length+1,q.length+1)}}});a(this.doc.body).bind("dragend",function(p){setTimeout(function(){try{c.window.focus();var r=c.selection.getBookmark();c.selection.moveToBookmark(r);c.ui.update()}catch(q){}},200)});this.typing=false;this.lastKey=null;this.$doc.bind("mouseup",function(){c.typing=false;c.lastKey=null;c.ui.update()}).bind("keyup",function(p){if((p.keyCode>=8&&p.keyCode<=13)||(p.keyCode>=32&&p.keyCode<=40)||p.keyCode==46||(p.keyCode>=96&&p.keyCode<=111)){c.ui.update()
}}).bind("keydown",function(p){if((p.metaKey||p.ctrlKey)&&p.keyCode==65){c.ui.update()}else{if(p.keyCode==13){var q=c.selection.getNode();if(c.dom.selfOrParent(q,/^PRE$/)){c.selection.insertNode(c.doc.createTextNode("\r\n"));return false}else{if(a.browser.safari&&p.shiftKey){c.selection.insertNode(c.doc.createElement("br"));return false}}}}if((p.keyCode>=48&&p.keyCode<=57)||p.keyCode==61||p.keyCode==109||(p.keyCode>=65&&p.keyCode<=90)||p.keyCode==188||p.keyCode==190||p.keyCode==191||(p.keyCode>=219&&p.keyCode<=222)){if(!c.typing){c.history.add(true)
}c.typing=true;c.lastKey=null}else{if(p.keyCode==8||p.keyCode==46||p.keyCode==32||p.keyCode==13){if(p.keyCode!=c.lastKey){c.history.add(true)}c.lastKey=p.keyCode;c.typing=false}}if(p.keyCode==32&&a.browser.opera){c.selection.insertNode(c.doc.createTextNode(" "));return false}}).bind("paste",function(q){if(!c.options.allowPaste){q.stopPropagation();q.preventDefault()}else{var t=a(c.dom.create("div"))[0],p=c.doc.createTextNode("_");c.history.add(true);c.typing=true;c.lastKey=null;t.appendChild(p);c.selection.deleteContents().insertNode(t);
c.selection.select(p);setTimeout(function(){if(t.parentNode){a(t).html(c.filter.proccess("paste",a(t).html()));p=t.lastChild;c.dom.unwrap(t);if(p){c.selection.select(p);c.selection.collapse(false)}}else{t.parentNode&&t.parentNode.removeChild(t);c.val(c.filter.proccess("paste",c.filter.wysiwyg2wysiwyg(a(c.doc.body).html())));c.selection.select(c.doc.body.firstChild);c.selection.collapse(true)}a(c.doc.body).mouseup()},15)}});if(a.browser.msie){this.$doc.bind("keyup",function(p){if(p.keyCode==86&&(p.metaKey||p.ctrlKey)){c.history.add(true);
c.typing=true;c.lastKey=null;c.selection.saveIERange();c.val(c.filter.proccess("paste",c.filter.wysiwyg2wysiwyg(a(c.doc.body).html())));c.selection.restoreIERange();a(c.doc.body).mouseup();this.ui.update()}})}if(a.browser.safari){this.$doc.bind("click",function(p){a(c.doc.body).find(".elrte-webkit-hl").removeClass("elrte-webkit-hl");if(p.target.nodeName=="IMG"){a(p.target).addClass("elrte-webkit-hl")}}).bind("keyup",function(p){a(c.doc.body).find(".elrte-webkit-hl").removeClass("elrte-webkit-hl")
})}this.window.focus();this.destroy=function(){this.updateSource();this.target.is("textarea")?this.target.val(a.trim(this.source.val())):this.target.html(a.trim(this.source.val()));this.editor.remove();this.target.show().parents("form").unbind("submit.elfinder")}};elRTE.prototype.i18n=function(b){return this._i18n.translate(b)};elRTE.prototype.open=function(){this.editor.show()};elRTE.prototype.close=function(){this.editor.hide()};elRTE.prototype.updateEditor=function(){this.val(this.source.val())
};elRTE.prototype.updateSource=function(){this.source.val(this.filter.source(a(this.doc.body).html()))};elRTE.prototype.val=function(b){if(typeof(b)=="string"){b=""+b;if(this.source.is(":visible")){this.source.val(this.filter.source2source(b))}else{if(a.browser.msie){this.doc.body.innerHTML="<br />"+this.filter.wysiwyg(b);this.doc.body.removeChild(this.doc.body.firstChild)}else{this.doc.body.innerHTML=this.filter.wysiwyg(b)}}}else{if(this.source.is(":visible")){return this.filter.source2source(this.source.val()).trim()
}else{return this.filter.source(a(this.doc.body).html()).trim()}}};elRTE.prototype.beforeSave=function(){this.source.val(a.trim(this.val())||"")};elRTE.prototype.save=function(){this.beforeSave();this.editor.parents("form").submit()};elRTE.prototype.log=function(b){if(window.console&&window.console.log){window.console.log(b)}};elRTE.prototype.i18Messages={};a.fn.elrte=function(g,b){var f=typeof(g)=="string"?g:"",c;this.each(function(){if(!this.elrte){this.elrte=new elRTE(this,typeof(g)=="object"?g:{})
}switch(f){case"open":case"show":this.elrte.open();break;case"close":case"hide":this.elrte.close();break;case"updateSource":this.elrte.updateSource();break;case"destroy":this.elrte.destroy()}});if(f=="val"){if(!this.length){return""}else{if(this.length==1){return b?this[0].elrte.val(b):this[0].elrte.val()}else{c={};this.each(function(){c[this.elrte.source.attr("name")]=this.elrte.val()});return c}}}return this}})(jQuery);(function(a){elRTE.prototype.dom=function(c){this.rte=c;var b=this;this.regExp={textNodes:/^(A|ABBR|ACRONYM|ADDRESS|B|BDO|BIG|BLOCKQUOTE|CAPTION|CENTER|CITE|CODE|DD|DEL|DFN|DIV|DT|EM|FIELDSET|FONT|H[1-6]|I|INS|KBD|LABEL|LEGEND|LI|MARQUEE|NOBR|NOEMBED|P|PRE|Q|SAMP|SMALL|SPAN|STRIKE|STRONG|SUB|SUP|TD|TH|TT|VAR)$/,textContainsNodes:/^(A|ABBR|ACRONYM|ADDRESS|B|BDO|BIG|BLOCKQUOTE|CAPTION|CENTER|CITE|CODE|DD|DEL|DFN|DIV|DL|DT|EM|FIELDSET|FONT|H[1-6]|I|INS|KBD|LABEL|LEGEND|LI|MARQUEE|NOBR|NOEMBED|OL|P|PRE|Q|SAMP|SMALL|SPAN|STRIKE|STRONG|SUB|SUP|TABLE|THEAD|TBODY|TFOOT|TD|TH|TR|TT|UL|VAR)$/,block:/^(APPLET|BLOCKQUOTE|BR|CAPTION|CENTER|COL|COLGROUP|DD|DIV|DL|DT|H[1-6]|EMBED|FIELDSET|LI|MARQUEE|NOBR|OBJECT|OL|P|PRE|TABLE|THEAD|TBODY|TFOOT|TD|TH|TR|UL)$/,selectionBlock:/^(APPLET|BLOCKQUOTE|BR|CAPTION|CENTER|COL|COLGROUP|DD|DIV|DL|DT|H[1-6]|EMBED|FIELDSET|LI|MARQUEE|NOBR|OBJECT|OL|P|PRE|TD|TH|TR|UL)$/,header:/^H[1-6]$/,formElement:/^(FORM|INPUT|HIDDEN|TEXTAREA|SELECT|BUTTON)$/};
this.root=function(){return this.rte.body};this.create=function(f){return this.rte.doc.createElement(f)};this.createBookmark=function(){var f=this.rte.doc.createElement("span");f.id="elrte-bm-"+Math.random().toString().substr(2);a(f).addClass("elrtebm elrte-protected");return f};this.indexOf=function(g){var f=0;g=a(g);while((g=g.prev())&&g.length){f++}return f};this.attr=function(h,f){var g="";if(h.nodeType==1){g=a(h).attr(f);if(g&&f!="src"&&f!="href"&&f!="title"&&f!="alt"){g=g.toString().toLowerCase()
}}return g||""};this.findCommonAncestor=function(j,h){if(!j||!h){return this.rte.log("dom.findCommonAncestor invalid arguments")}if(j==h){return j}else{if(j.nodeName=="BODY"||h.nodeName=="BODY"){return this.rte.doc.body}}var o=a(j).parents(),k=a(h).parents(),f=k.length-1,p=k[f];for(var g=o.length-1;g>=0;g--,f--){if(o[g]==k[f]){p=o[g]}else{break}}return p};this.isEmpty=function(f){if(f.nodeType==1){return this.regExp.textNodes.test(f.nodeName)?a.trim(a(f).text()).length==0:false}else{if(f.nodeType==3){return/^(TABLE|THEAD|TFOOT|TBODY|TR|UL|OL|DL)$/.test(f.parentNode.nodeName)||f.nodeValue==""||(a.trim(f.nodeValue).length==0&&!(f.nextSibling&&f.previousSibling&&f.nextSibling.nodeType==1&&f.previousSibling.nodeType==1&&!this.regExp.block.test(f.nextSibling.nodeName)&&!this.regExp.block.test(f.previousSibling.nodeName)))
}}return true};this.next=function(f){while(f.nextSibling&&(f=f.nextSibling)){if(f.nodeType==1||(f.nodeType==3&&!this.isEmpty(f))){return f}}return null};this.prev=function(f){while(f.previousSibling&&(f=f.previousSibling)){if(f.nodeType==1||(f.nodeType==3&&!this.isEmpty(f))){return f}}return null};this.isPrev=function(g,f){while((g=this.prev(g))){if(g==f){return true}}return false};this.nextAll=function(g){var f=[];while((g=this.next(g))){f.push(g)}return f};this.prevAll=function(g){var f=[];while((g=this.prev(g))){f.push(g)
}return f};this.toLineEnd=function(g){var f=[];while((g=this.next(g))&&g.nodeName!="BR"&&g.nodeName!="HR"&&this.isInline(g)){f.push(g)}return f};this.toLineStart=function(g){var f=[];while((g=this.prev(g))&&g.nodeName!="BR"&&g.nodeName!="HR"&&this.isInline(g)){f.unshift(g)}return f};this.isFirstNotEmpty=function(f){while((f=this.prev(f))){if(f.nodeType==1||(f.nodeType==3&&a.trim(f.nodeValue)!="")){return false}}return true};this.isLastNotEmpty=function(f){while((f=this.next(f))){if(!this.isEmpty(f)){return false
}}return true};this.isOnlyNotEmpty=function(f){return this.isFirstNotEmpty(f)&&this.isLastNotEmpty(f)};this.findLastNotEmpty=function(f){this.rte.log("findLastNotEmpty Who is here 0_o");if(f.nodeType==1&&(l=f.lastChild)){if(!this.isEmpty(l)){return l}while(l.previousSibling&&(l=l.previousSibling)){if(!this.isEmpty(l)){return l}}}return false};this.isInline=function(j){if(j.nodeType==3){return true}else{if(j.nodeType==1){j=a(j);var h=j.css("display");var g=j.css("float");return h=="inline"||h=="inline-block"||g=="left"||g=="right"
}}return true};this.is=function(h,g){if(h&&h.nodeName){if(typeof(g)=="string"){g=this.regExp[g]||/.?/}if(g instanceof RegExp&&h.nodeName){return g.test(h.nodeName)}else{if(typeof(g)=="function"){return g(h)}}}return false};this.filter=function(j,h){var f=[],g;if(!j.push){return this.is(j,h)?j:null}for(g=0;g<j.length;g++){if(this.is(j[g],h)){f.push(j[g])}}return f};this.parents=function(h,g){var f=[];while(h&&(h=h.parentNode)&&h.nodeName!="BODY"&&h.nodeName!="HTML"){if(this.is(h,g)){f.push(h)}}return f
};this.parent=function(h,g){return this.parents(h,g)[0]||null};this.selfOrParent=function(h,g,f){return this.is(h,g)?h:this.parent(h,f||g)};this.selfOrParentLink=function(f){f=this.selfOrParent(f,/^A$/);return f&&f.href?f:null};this.selfOrParentAnchor=function(f){f=this.selfOrParent(f,/^A$/);return f&&!f.href&&f.name?f:null};this.childLinks=function(g){var f=[];a("a[href]",g).each(function(){f.push(this)});return f};this.selectionHas=function(h){var j=this.rte.selection.cloneContents(),g;if(j&&j.childNodes&&j.childNodes.length){for(g=0;
g<j.childNodes.length;g++){if(typeof(h)=="function"){if(h(j.childNodes[g])){return true}}else{if(j instanceof RegExp){if(h.test(j.childNodes[g].nodeName)){return true}}}}}return false};this.wrap=function(g,f){g=a.isArray(g)?g:[g];f=f.nodeName?f:this.create(f);if(g[0]&&g[0].nodeType&&g[0].parentNode){f=g[0].parentNode.insertBefore(f,g[0]);a(g).each(function(){if(this!=f){f.appendChild(this)}})}return f};this.unwrap=function(f){if(f&&f.parentNode){while(f.firstChild){f.parentNode.insertBefore(f.firstChild,f)
}f.parentNode.removeChild(f)}};this.wrapContents=function(h,f){f=f.nodeName?f:this.create(f);for(var g=0;g<h.childNodes.length;g++){f.appendChild(h.childNodes[g])}h.appendChild(f);return f};this.cleanNode=function(f){if(f.nodeType!=1){return}if(/^(P|LI)$/.test(f.nodeName)&&(l=this.findLastNotEmpty(f))&&l.nodeName=="BR"){a(l).remove()}$n=a(f);$n.children().each(function(){this.cleanNode(this)});if(f.nodeName!="BODY"&&!/^(TABLE|TR|TD)$/.test(f)&&this.isEmpty(f)){return $n.remove()}if($n.attr("style")===""){$n.removeAttr("style")
}if(this.rte.browser.safari&&$n.hasClass("Apple-span")){$n.removeClass("Apple-span")}if(f.nodeName=="SPAN"&&!$n.attr("style")&&!$n.attr("class")&&!$n.attr("id")){$n.replaceWith($n.html())}};this.cleanChildNodes=function(g){var f=this.cleanNode;a(g).children().each(function(){f(this)})};this.tableMatrix=function(j){var h=[];if(j&&j.nodeName=="TABLE"){var g=0;function f(o){for(var k=0;k<=g;k++){if(!h[o][k]){return k}}}a(j).find("tr").each(function(k){if(!a.isArray(h[k])){h[k]=[]}a(this).children("td,th").each(function(){var p=parseInt(a(this).attr("colspan")||1);
var t=parseInt(a(this).attr("rowspan")||1);var r=f(k);for(var v=0;v<t;v++){for(var o=0;o<p;o++){var q=k+v;if(!a.isArray(h[q])){h[q]=[]}var u=o==0&&v==0?this:(v==0?o:"-");h[q][r+o]=u}}g=Math.max(g,h[k].length)})})}return h};this.indexesOfCell=function(j,h){for(var f=0;f<h.length;f++){for(var g=0;g<h[f].length;g++){if(h[f][g]==j){return[f,g]}}}};this.fixTable=function(q){if(q&&q.nodeName=="TABLE"){var h=a(q);var p=this.tableMatrix(q);var f=0;a.each(p,function(){f=Math.max(f,this.length)});if(f==0){return h.remove()
}for(var k=0;k<p.length;k++){var g=p[k].length;if(g==0){h.find("tr").eq(k).remove()}else{if(g<f){var j=f-g;var o=h.find("tr").eq(k);for(i=0;i<j;i++){o.append("<td>&nbsp;</td>")}}}}}};this.tableColumn=function(h,g,o){h=this.selfOrParent(h,/^TD|TH$/);var j=this.selfOrParent(h,/^TABLE$/);ret=[];info={offset:[],delta:[]};if(h&&j){o&&this.fixTable(j);var u=this.tableMatrix(j);var v=false;var t;for(var f=0;f<u.length;f++){for(var q=0;q<u[f].length;q++){if(u[f][q]==h){t=q;v=true;break}}if(v){break}}if(t>=0){for(var f=0;
f<u.length;f++){var k=u[f][t]||null;if(k){if(k.nodeName){ret.push(k);if(g){info.delta.push(0);info.offset.push(t)}}else{var p=parseInt(k);if(!isNaN(p)&&u[f][t-p]&&u[f][t-p].nodeName){ret.push(u[f][t-p]);if(g){info.delta.push(p);info.offset.push(t)}}}}}}}return !g?ret:{column:ret,info:info}}}})(jQuery);(function(a){elRTE.prototype.filter=function(c){var b=this,f=a("<span/>").addClass("elrtetesturl").appendTo(document.body)[0];this.url=(typeof(f.currentStyle)!="undefined"?f.currentStyle.backgroundImage:document.defaultView.getComputedStyle(f,null)["backgroundImage"]).replace(/^url\((['"]?)([\s\S]+\/)[\s\S]+\1\)$/i,"$2");
a(f).remove();this.rte=c;this.xhtml=/xhtml/i.test(c.options.doctype);this.boolAttrs=c.utils.makeObject("checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected".split(","));this.tagRegExp=/<(\/?)([\w:]+)((?:\s+[a-z\-]+(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*\/?>/g;this.openTagRegExp=/<([\w:]+)((?:\s+\w+(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*\/?>/g;this.attrRegExp=/(\w+)(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^\s]+))?/g;this.scriptRegExp=/<script([^>]*)>([\s\S]*?)<\/script>/gi;
this.styleRegExp=/(<style([^>]*)>[\s\S]*?<\/style>)/gi;this.linkRegExp=/(<link([^>]+)>)/gi;this.cdataRegExp=/<!\[CDATA\[([\s\S]+)\]\]>/g;this.objRegExp=/<object([^>]*)>([\s\S]*?)<\/object>/gi;this.embRegExp=/<(embed)((?:\s+\w+(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*>/gi;this.paramRegExp=/<(param)((?:\s+\w+(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*>/gi;this.iframeRegExp=/<iframe([^>]*)>([\s\S]*?)<\/iframe>/gi;this.yMapsRegExp=/<div\s+([^>]*id\s*=\s*('|")?YMapsID[^>]*)>/gi;this.gMapsRegExp=/<iframe\s+([^>]*src\s*=\s*"http:\/\/maps\.google\.\w+[^>]*)>([\s\S]*?)<\/iframe>/gi;
this.videoHostRegExp=/^(http:\/\/[\w\.]*)?(youtube|vimeo|rutube).*/i;this.serviceClassRegExp=/<(\w+)([^>]*class\s*=\s*"[^>]*elrte-[^>]*)>\s*(<\/\1>)?/gi;this.pagebreakRegExp=/<(\w+)([^>]*style\s*=\s*"[^>]*page-break[^>]*)>\s*(<\/\1>)?/gi;this.pbRegExp=new RegExp("<!-- pagebreak -->","gi");this.allowTags=c.options.allowTags.length?c.utils.makeObject(c.options.allowTags):null;this.denyTags=c.options.denyTags.length?c.utils.makeObject(c.options.denyTags):null;this.denyAttr=c.options.denyAttr?c.utils.makeObject(c.options.denyAttr):null;
this.pasteDenyAttr=c.options.pasteDenyAttr?c.utils.makeObject(c.options.pasteDenyAttr):null;this.fontSize=["medium","xx-small","small","medium","large","x-large","xx-large"];this.fontFamily={"sans-serif":/^(arial|tahoma|verdana)$/i,serif:/^(times|times new roman)$/i,monospace:/^courier$/i};this.scripts={};this._chains={};a.each(this.chains,function(g){b._chains[g]=[];a.each(this,function(h,j){typeof(b.rules[j])=="function"&&b._chains[g].push(b.rules[j])})});this.proccess=function(h,g){g=a.trim(g).replace(/^\s*(&nbsp;)+/gi,"").replace(/(&nbsp;|<br[^>]*>)+\s*$/gi,"");
a.each(this._chains[h]||[],function(){g=this.call(b,g)});g=g.replace(/\t/g,"  ").replace(/\r/g,"").replace(/\s*\n\s*\n+/g,"\n")+"  ";return a.trim(g)?g:" "};this.wysiwyg=function(g){return this.proccess("wysiwyg",g)};this.source=function(g){return this.proccess("source",g)};this.source2source=function(g){return this.proccess("source2source",g)};this.wysiwyg2wysiwyg=function(g){return this.proccess("wysiwyg2wysiwyg",g)};this.parseAttrs=function(p){var j={},h=this.boolAttrs,g=p.match(this.attrRegExp),o,q,k;
g&&a.each(g,function(r,t){o=t.split("=");q=a.trim(o[0]).toLowerCase();if(o.length>2){o.shift();k=o.join("=")}else{k=h[q]||o[1]||""}j[q]=a.trim(k).replace(/^('|")(.*)(\1)$/,"$2")});j.style=this.rte.utils.parseStyle(j.style);j["class"]=this.rte.utils.parseClass(j["class"]||"");return j};this.serializeAttrs=function(g,k){var j=[],h=this;a.each(g,function(p,o){if(p=="style"){o=h.rte.utils.serializeStyle(o,k)}else{if(p=="class"){o=h.rte.utils.serializeClass(o)}}o&&j.push(p+'="'+o+'"')});return j.join(" ")
};this.cleanAttrs=function(g,j){var h=this,o=this.replaceAttrs;a.each(g["class"],function(p){/^(Apple-style-span|mso\w+)$/i.test(p)&&delete g["class"][p]});function k(p){return p+(/\d$/.test(p)?"px":"")}a.each(g,function(q,p){o[q]&&o[q].call(h,g,j);if(q=="style"){a.each(p,function(t,r){switch(t){case"mso-padding-alt":case"mso-padding-top-alt":case"mso-padding-right-alt":case"mso-padding-bottom-alt":case"mso-padding-left-alt":case"mso-margin-alt":case"mso-margin-top-alt":case"mso-margin-right-alt":case"mso-margin-bottom-alt":case"mso-margin-left-alt":case"mso-table-layout-alt":case"mso-height":case"mso-width":case"mso-vertical-align-alt":g.style[t.replace(/^mso-|-alt$/g,"")]=k(r);
delete g.style[t];break;case"horiz-align":g.style["text-align"]=r;delete g.style[t];break;case"vert-align":g.style["vertical-align"]=r;delete g.style[t];break;case"font-color":case"mso-foreground":g.style.color=r;delete g.style[t];break;case"mso-background":case"mso-highlight":g.style.background=r;delete g.style[t];break;case"mso-default-height":g.style["min-height"]=k(r);delete g.style[t];break;case"mso-default-width":g.style["min-width"]=k(r);delete g.style[t];break;case"mso-padding-between-alt":g.style["border-collapse"]="separate";
g.style["border-spacing"]=k(r);delete g.style[t];break;case"text-line-through":if(r.match(/(single|double)/i)){g.style["text-decoration"]="line-through"}delete g.style[t];break;case"mso-zero-height":if(r=="yes"){g.style.display="none"}delete g.style[t];break;case"font-weight":if(r==700){g.style["font-weight"]="bold"}break;default:if(t.match(/^(mso|column|font-emph|lang|layout|line-break|list-image|nav|panose|punct|row|ruby|sep|size|src|tab-|table-border|text-(?!align|decor|indent|trans)|top-bar|version|vnd|word-break)/)){delete g.style[t]
}}})}});return g}};elRTE.prototype.filter.prototype.replaceTags={b:{tag:"strong"},big:{tag:"span",style:{"font-size":"large"}},center:{tag:"div",style:{"text-align":"center"}},i:{tag:"em"},font:{tag:"span"},nobr:{tag:"span",style:{"white-space":"nowrap"}},menu:{tag:"ul"},plaintext:{tag:"pre"},s:{tag:"strike"},small:{tag:"span",style:{"font-size":"small"}},u:{tag:"span",style:{"text-decoration":"underline"}},xmp:{tag:"pre"}};elRTE.prototype.filter.prototype.replaceAttrs={align:function(b,c){switch(c){case"img":b.style[b.align.match(/(left|right)/)?"float":"vertical-align"]=b.align;
break;case"table":if(b.align=="center"){b.style["margin-left"]=b.style["margin-right"]="auto"}else{b.style["float"]=b.align}break;default:b.style["text-align"]=b.align}delete b.align},border:function(b){!b.style["border-width"]&&(b.style["border-width"]=(parseInt(b.border)||1)+"px");!b.style["border-style"]&&(b.style["border-style"]="solid");delete b.border},bordercolor:function(b){!b.style["border-color"]&&(b.style["border-color"]=b.bordercolor);delete b.bordercolor},background:function(b){!b.style["background-image"]&&(b.style["background-image"]="url("+b.background+")");
delete b.background},bgcolor:function(b){!b.style["background-color"]&&(b.style["background-color"]=b.bgcolor);delete b.bgcolor},clear:function(b){b.style.clear=b.clear=="all"?"both":b.clear;delete b.clear},color:function(b){!b.style.color&&(b.style.color=b.color);delete b.color},face:function(b){var c=b.face.toLowerCase();a.each(this.fontFamily,function(g,f){if(c.match(f)){b.style["font-family"]=c+","+g}});delete b.face},hspace:function(b,f){if(f=="img"){var c=parseInt(b.hspace)||0;!b.style["margin-left"]&&(b.style["margin-left"]=c+"px");
!b.style["margin-right"]&&(b.style["margin-right"]=c+"px");delete b.hspace}},size:function(b,c){if(c!="input"){b.style["font-size"]=this.fontSize[parseInt(b.size)||0]||"medium";delete b.size}},valign:function(b){if(!b.style["vertical-align"]){b.style["vertical-align"]=b.valign}delete b.valign},vspace:function(b,f){if(f=="img"){var c=parseInt(b.vspace)||0;!b.style["margin-top"]&&(b.style["margin-top"]=c+"px");!b.style["margin-bottom"]&&(b.style["margin-bottom"]=c+"px");delete b.hspace}}};elRTE.prototype.filter.prototype.rules={allowedTags:function(c){var b=this.allowTags;
return b?c.replace(this.tagRegExp,function(f,h,g){return b[g.toLowerCase()]?f:""}):c},deniedTags:function(b){var c=this.denyTags;return c?b.replace(this.tagRegExp,function(f,h,g){return c[g.toLowerCase()]?"":f}):b},clean:function(g){var c=this,b=this.replaceTags,h=this.replaceAttrs,f=this.denyAttr,j;g=g.replace(/<!DOCTYPE([\s\S]*)>/gi,"").replace(/<p [^>]*class="?MsoHeading"?[^>]*>(.*?)<\/p>/gi,"<p><strong>$1</strong></p>").replace(/<span\s+style\s*=\s*"\s*mso-spacerun\s*:\s*yes\s*;?\s*"\s*>([\s&nbsp;]*)<\/span>/gi,"$1").replace(/(<p[^>]*>\s*<\/p>|<p[^>]*\/>)/gi,"<br>").replace(/(<\/p>)(?:\s*<br\s*\/?>\s*|\s*&nbsp;\s*)+\s*(<p[^>]*>)/gi,function(o,k,p){return k+"\n"+p
}).replace(this.tagRegExp,function(o,q,p,k){p=p.toLowerCase();if(q){return"</"+(b[p]?b[p].tag:p)+">"}k=c.cleanAttrs(c.parseAttrs(k||""),p);if(b[p]){b[p].style&&a.extend(k.style,b[p].style);p=b[p].tag}f&&a.each(k,function(r){if(f[r]){delete k[r]}});k=c.serializeAttrs(k);return"<"+p+(k?" ":"")+k+">"});j=a("<div>"+g+"</div>");j.find("span:not([id]):not([class])").each(function(){var k=a(this);if(!k.attr("style")){a.trim(k.html()).length?c.rte.dom.unwrap(this):k.remove()}}).end().find("span span:only-child").each(function(){var o=a(this),u=o.parent().eq(0),r=o.attr("id"),k=u.attr("id"),w,q,v;
if(c.rte.dom.isOnlyNotEmpty(this)&&(!r||!k)){v=a.trim(u.attr("class")+" "+o.attr("class"));v&&u.attr("class",v);q=c.rte.utils.serializeStyle(a.extend(c.rte.utils.parseStyle(a(this).attr("style")||""),c.rte.utils.parseStyle(a(u).attr("style")||"")));q&&u.attr("style",q);w=r||k;w&&u.attr("id",w);this.firstChild?a(this.firstChild).unwrap():o.remove()}}).end().find("a[name]").each(function(){a(this).addClass("elrte-protected elrte-anchor")});return j.html()},cleanPaste:function(c){var b=this,f=this.pasteDenyAttr;
c=c.replace(this.scriptRegExp,"").replace(this.styleRegExp,"").replace(this.linkRegExp,"").replace(this.cdataRegExp,"").replace(/\<\!--[\s\S]*?--\>/g,"");if(this.rte.options.pasteOnlyText){c=c.replace(this.tagRegExp,function(g,j,h){return/br/i.test(h)||(j&&/h[1-6]|p|ol|ul|li|div|blockquote|tr/i)?"<br>":""}).replace(/(&nbsp;|<br[^>]*>)+\s*$/gi,"")}else{if(f){c=c.replace(this.openTagRegExp,function(h,j,g){g=b.parseAttrs(g);a.each(g,function(k){if(f[k]){delete g[k]}});g=b.serializeAttrs(g,true);return"<"+j+(g?" ":"")+g+">"
})}}return c},replace:function(o){var q=this,b=this.rte.options.replace||[],g;if(b.length){a.each(b,function(r,t){if(typeof(t)=="function"){o=t.call(q,o)}})}function k(x,D){var E=r(),B=E&&q.videoHostRegExp.test(E)?E.replace(q.videoHostRegExp,"$2"):D.replace(/^\w+\/(.+)/,"$1"),C=parseInt((x.obj?x.obj.width||x.obj.style.width:0)||(x.embed?x.embed.width||x.embed.style.width:0))||150,A=parseInt((x.obj?x.obj.height||x.obj.style.height:0)||(x.embed?x.embed.height||x.embed.style.height:0))||100,v="media"+Math.random().toString().substring(2),u="",z;
function r(){if(x.embed&&x.embed.src){return x.embed.src}if(x.params&&x.params.length){z=x.params.length;while(z--){if(x.params[z].name=="src"||x.params[z].name=="movie"){return x.params[z].value}}}}if(x.obj&&x.obj.style&&x.obj.style["float"]){u=' style="float:'+x.obj.style["float"]+'"'}q.scripts[v]=x;return'<img src="'+q.url+'pixel.gif" class="elrte-media elrte-media-'+B+' elrte-protected" title="'+(E?q.rte.utils.encode(E):"")+'" rel="'+v+'" width="'+C+'" height="'+A+'"'+u+">"}o=o.replace(this.styleRegExp,"<!-- ELRTE_COMMENT$1 -->").replace(this.linkRegExp,"<!-- ELRTE_COMMENT$1-->").replace(this.cdataRegExp,"<!--[CDATA[$1]]-->").replace(this.scriptRegExp,function(u,r,v){var w;
if(q.denyTags.script){return""}w="script"+Math.random().toString().substring(2);r=q.parseAttrs(r);!r.type&&(r.type="text/javascript");q.scripts[w]="<script "+q.serializeAttrs(r)+">"+v+"<\/script>";return"<!-- ELRTE_SCRIPT:"+(w)+" -->"}).replace(this.yMapsRegExp,function(u,r){r=q.parseAttrs(r);r["class"]["elrte-yandex-maps"]="elrte-yandex-maps";r["class"]["elrte-protected"]="elrte-protected";return"<div "+q.serializeAttrs(r)+">"}).replace(this.gMapsRegExp,function(v,u){var z="gmaps"+Math.random().toString().substring(2),r,x;
u=q.parseAttrs(u);r=parseInt(u.width||u.style.width||100);x=parseInt(u.height||u.style.height||100);q.scripts[z]=v;return'<img src="'+q.url+'pixel.gif" class="elrte-google-maps elrte-protected" id="'+z+'" style="width:'+r+"px;height:"+x+'px">'}).replace(this.objRegExp,function(w,u,z){var r=z.match(q.embRegExp),x={obj:q.parseAttrs(u),embed:r&&r.length?q.parseAttrs(r[0].substring(7)):null,params:[]},v=q.rte.utils.mediaInfo(x.embed?x.embed.type||"":"",x.obj.classid||"");if(v){if((r=z.match(q.paramRegExp))){a.each(r,function(t,A){x.params.push(q.parseAttrs(A.substring(6)))
})}!x.obj.classid&&(x.obj.classid=v.classid[0]);!x.obj.codebase&&(x.obj.codebase=v.codebase);x.embed&&!x.embed.type&&(x.embed.type=v.type);x.obj.width=="1"&&delete x.obj.width;x.obj.height=="1"&&delete x.obj.height;if(x.embed){x.embed.width=="1"&&delete x.embed.width;x.embed.height=="1"&&delete x.embed.height}return k(x,v.type)}return w}).replace(this.embRegExp,function(v,w,r){var r=q.parseAttrs(r),u=q.rte.utils.mediaInfo(r.type||"");r.width=="1"&&delete r.width;r.height=="1"&&delete r.height;return u?k({embed:r},u.type):v
}).replace(this.iframeRegExp,function(x,u){var u=q.parseAttrs(u);var r=u.style.width||(parseInt(u.width)>1?parseInt(u.width)+"px":"100px");var z=u.style.height||(parseInt(u.height)>1?parseInt(u.height)+"px":"100px");var A="iframe"+Math.random().toString().substring(2);q.scripts[A]=x;var v='<img id="'+A+'" src="'+q.url+'pixel.gif" class="elrte-protected elrte-iframe" style="width:'+r+"; height:"+z+'">';return v}).replace(this.vimeoRegExp,function(u,v,r){r=q.parseAttrs(r);delete r.frameborder;r.width=="1"&&delete r.width;
r.height=="1"&&delete r.height;r.type="application/x-shockwave-flash";return k({embed:r},"application/x-shockwave-flash")}).replace(/<\/(embed|param)>/gi,"").replace(this.pbRegExp,function(){return'<img src="'+q.url+'pixel.gif" class="elrte-protected elrte-pagebreak">'});g=a("<div>"+o+"</div>");if(!this.rte.options.allowTextNodes){var h=this.rte.dom,c=[],p=[];if(a.browser.msie){for(var j=0;j<g[0].childNodes.length;j++){c.push(g[0].childNodes[j])}}else{c=Array.prototype.slice.call(g[0].childNodes)
}function f(){if(p.length&&h.filter(p,"notEmpty").length){h.wrap(p,document.createElement("p"))}p=[]}a.each(c,function(r,t){if(h.is(t,"block")){f()}else{if(p.length&&t.previousSibling!=p[p.length-1]){f()}p.push(t)}});f()}return g.html()},restore:function(c){var b=this,f=this.rte.options.restore||[];if(f.length){a.each(f,function(g,h){if(typeof(h)=="function"){c=h.call(b,c)}})}c=c.replace(/\<\!--\[CDATA\[([\s\S]*?)\]\]--\>/gi,"<![CDATA[$1]]>").replace(/\<\!--\s*ELRTE_SCRIPT\:\s*(script\d+)\s*--\>/gi,function(g,h){if(b.scripts[h]){g=b.scripts[h];
delete b.scripts[h]}return g||""}).replace(/\<\!-- ELRTE_COMMENT([\s\S]*?) --\>/gi,"$1").replace(this.serviceClassRegExp,function(k,r,g,p){var g=b.parseAttrs(g),h,q="";if(g["class"]["elrte-google-maps"]){var k="";if(b.scripts[g.id]){k=b.scripts[g.id];delete b.scripts[g.id]}return k}else{if(g["class"]["elrte-iframe"]){return b.scripts[g.id]||""}else{if(g["class"]["elrtebm"]){return""}else{if(g["class"]["elrte-media"]){h=b.scripts[g.rel]||{};h.params&&a.each(h.params,function(j,o){q+="<param "+b.serializeAttrs(o)+">\n"
});h.embed&&(q+="<embed "+b.serializeAttrs(h.embed)+">");h.obj&&(q="<object "+b.serializeAttrs(h.obj)+">\n"+q+"\n</object>\n");return q||k}else{if(g["class"]["elrte-pagebreak"]){return"<!-- pagebreak -->"}}}}}a.each(g["class"],function(j){if(/^elrte-\w+/i.test(j)){delete (g["class"][j])}});return"<"+r+" "+b.serializeAttrs(g)+">"+(p||"")});return c},compactStyles:function(c){var b=this;return c.replace(this.tagRegExp,function(g,j,h,f){f=!j&&f?b.serializeAttrs(b.parseAttrs(f),true):"";return"<"+j+h.toLowerCase()+(f?" ":"")+f+">"
})},xhtmlTags:function(b){return this.xhtml?b.replace(/<(img|hr|br|embed|param|link|area)([^>]*\/*)>/gi,"<$1$2 />"):b}};elRTE.prototype.filter.prototype.chains={wysiwyg:["replace","clean","allowedTags","deniedTags","compactStyles"],source:["clean","allowedTags","restore","compactStyles","xhtmlTags"],paste:["clean","allowedTags","cleanPaste","replace","deniedTags","compactStyles"],wysiwyg2wysiwyg:["clean","allowedTags","restore","replace","deniedTags","compactStyles"],source2source:["clean","allowedTags","replace","deniedTags","restore","compactStyles","xhtmlTags"]}
})(jQuery);(function(a){elRTE.prototype.history=function(b){this.rte=b;this._prev=[];this._next=[];this.add=function(){if(this.rte.options.historyLength>0&&this._prev.length>=this.rte.options.historyLength){this._prev.slice(this.rte.options.historyLength)}var c=this.rte.selection.getBookmark();this._prev.push([a(this.rte.doc.body).html(),c]);this.rte.selection.moveToBookmark(c);this._next=[]};this.back=function(){if(this._prev.length){var c=this.rte.selection.getBookmark(),f=this._prev.pop();this._next.push([a(this.rte.doc.body).html(),c]);
a(this.rte.doc.body).html(f[0]);this.rte.selection.moveToBookmark(f[1])}};this.fwd=function(){if(this._next.length){var c=this.rte.selection.getBookmark(),f=this._next.pop();this._prev.push([a(this.rte.doc.body).html(),c]);a(this.rte.doc.body).html(f[0]);this.rte.selection.moveToBookmark(f[1])}};this.canBack=function(){return this._prev.length};this.canFwd=function(){return this._next.length}}})(jQuery);(function(a){elRTE.prototype.options={doctype:'<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">',cssClass:"el-rte",cssfiles:[],height:null,resizable:true,lang:"en",toolbar:"normal",absoluteURLs:true,allowSource:true,stripWhiteSpace:true,styleWithCSS:false,fmAllow:true,fmOpen:null,allowTags:[],denyTags:["applet","base","basefont","bgsound","blink","body","col","colgroup","isindex","frameset","html","head","meta","marquee","noframes","noembed","o:p","title","xml"],denyAttr:[],pasteDenyAttr:["id","name","class","style","language","onclick","ondblclick","onhover","onkeup","onkeydown","onkeypress"],allowTextNodes:true,allowBrowsersSpecStyles:false,allowPaste:true,pasteOnlyText:false,replace:[],restore:[],pagebreak:'<div style="page-break-after: always;"></div>',buttons:{save:"Save",copy:"Copy",cut:"Cut",css:"Css style and class",paste:"Paste",pastetext:"Paste only text",pasteformattext:"Paste formatted text",removeformat:"Clean format",undo:"Undo last action",redo:"Redo previous action",bold:"Bold",italic:"Italic",underline:"Underline",strikethrough:"Strikethrough",superscript:"Superscript",subscript:"Subscript",justifyleft:"Align left",justifyright:"Ailgn right",justifycenter:"Align center",justifyfull:"Align full",indent:"Indent",outdent:"Outdent",rtl:"Right to left",ltr:"Left to right",forecolor:"Font color",hilitecolor:"Background color",formatblock:"Format",fontsize:"Font size",fontname:"Font",insertorderedlist:"Ordered list",insertunorderedlist:"Unordered list",horizontalrule:"Horizontal rule",blockquote:"Blockquote",div:"Block element (DIV)",link:"Link",unlink:"Delete link",anchor:"Bookmark",image:"Image",pagebreak:"Page break",smiley:"Smiley",flash:"Flash",table:"Table",tablerm:"Delete table",tableprops:"Table properties",tbcellprops:"Table cell properties",tbrowbefore:"Insert row before",tbrowafter:"Insert row after",tbrowrm:"Delete row",tbcolbefore:"Insert column before",tbcolafter:"Insert column after",tbcolrm:"Delete column",tbcellsmerge:"Merge table cells",tbcellsplit:"Split table cell",docstructure:"Toggle display document structure",elfinder:"Open file manager",fullscreen:"Toggle full screen mode",nbsp:"Non breakable space",stopfloat:"Stop element floating",about:"About this software"},panels:{eol:[],save:["save"],copypaste:["copy","cut","paste","pastetext","pasteformattext","removeformat","docstructure"],undoredo:["undo","redo"],style:["bold","italic","underline","strikethrough","subscript","superscript"],colors:["forecolor","hilitecolor"],alignment:["justifyleft","justifycenter","justifyright","justifyfull"],indent:["outdent","indent"],format:["formatblock","fontsize","fontname"],lists:["insertorderedlist","insertunorderedlist"],elements:["horizontalrule","blockquote","div","stopfloat","css","nbsp","smiley","pagebreak"],direction:["ltr","rtl"],links:["link","unlink","anchor"],images:["image"],media:["image","flash"],tables:["table","tableprops","tablerm","tbrowbefore","tbrowafter","tbrowrm","tbcolbefore","tbcolafter","tbcolrm","tbcellprops","tbcellsmerge","tbcellsplit"],elfinder:["elfinder"],fullscreen:["fullscreen","about"]},toolbars:{tiny:["style"],compact:["save","undoredo","style","alignment","lists","links","fullscreen"],normal:["save","copypaste","undoredo","style","alignment","colors","indent","lists","links","elements","images","fullscreen"],complete:["save","copypaste","undoredo","style","alignment","colors","format","indent","lists","links","elements","media","fullscreen"],maxi:["save","copypaste","undoredo","elfinder","style","alignment","direction","colors","format","indent","lists","links","elements","media","tables","fullscreen"],eldorado:["save","copypaste","elfinder","undoredo","style","alignment","colors","format","indent","lists","links","elements","media","tables","fullscreen"]},panelNames:{save:"Save",copypaste:"Copy/Pase",undoredo:"Undo/Redo",style:"Text styles",colors:"Colors",alignment:"Alignment",indent:"Indent/Outdent",format:"Text format",lists:"Lists",elements:"Misc elements",direction:"Script direction",links:"Links",images:"Images",media:"Media",tables:"Tables",elfinder:"File manager (elFinder)"}}
})(jQuery);(function(a){elRTE.prototype.selection=function(g){this.rte=g;var c=this;this.w3cRange=null;var o,b,j,k;a(this.rte.doc).keyup(function(p){if(p.ctrlKey||p.metaKey||(p.keyCode>=8&&p.keyCode<=13)||(p.keyCode>=32&&p.keyCode<=40)||p.keyCode==46||(p.keyCode>=96&&p.keyCode<=111)){c.cleanCache()}}).mousedown(function(p){if(p.target.nodeName=="HTML"){o=c.rte.doc.body}else{o=p.target}b=j=null}).mouseup(function(p){if(p.target.nodeName=="HTML"){b=c.rte.doc.body}else{b=p.target}b=p.target;j=null}).click();
function h(){return c.rte.window.getSelection?c.rte.window.getSelection():c.rte.window.document.selection}function f(t,r,q){while(t.nodeName!="BODY"&&t.parentNode&&t.parentNode.nodeName!="BODY"&&(r?t!==r&&t.parentNode!=r:1)&&((q=="left"&&c.rte.dom.isFirstNotEmpty(t))||(q=="right"&&c.rte.dom.isLastNotEmpty(t))||(c.rte.dom.isFirstNotEmpty(t)&&c.rte.dom.isLastNotEmpty(t)))){t=t.parentNode}return t}this.collapsed=function(){return this.getRangeAt().isCollapsed()};this.collapse=function(p){var q=h(),t=this.getRangeAt();
t.collapse(p?true:false);if(!a.browser.msie){q.removeAllRanges();q.addRange(t)}return this};this.getRangeAt=function(t){if(this.rte.browser.msie){if(!this.w3cRange){this.w3cRange=new this.rte.w3cRange(this.rte)}t&&this.w3cRange.update();return this.w3cRange}var p=h();var q=p.rangeCount>0?p.getRangeAt(0):this.rte.doc.createRange();q.getStart=function(){return this.startContainer.nodeType==1?this.startContainer.childNodes[Math.min(this.startOffset,this.startContainer.childNodes.length-1)]:this.startContainer
};q.getEnd=function(){return this.endContainer.nodeType==1?this.endContainer.childNodes[Math.min(this.startOffset==this.endOffset?this.endOffset:this.endOffset-1,this.endContainer.childNodes.length-1)]:this.endContainer};q.isCollapsed=function(){return this.collapsed};return q};this.saveIERange=function(){if(a.browser.msie){k=this.getRangeAt().getBookmark()}};this.restoreIERange=function(){a.browser.msie&&k&&this.getRangeAt().moveToBookmark(k)};this.cloneContents=function(){var v=this.rte.dom.create("div"),q,u,p;
if(a.browser.msie){try{q=this.rte.window.document.selection.createRange()}catch(t){q=this.rte.doc.body.createTextRange()}a(v).html(q.htmlText)}else{u=this.getRangeAt().cloneContents();for(p=0;p<u.childNodes.length;p++){v.appendChild(u.childNodes[p].cloneNode(true))}}return v};this.select=function(t,w){w=w||t;if(this.rte.browser.msie){var u=this.rte.doc.body.createTextRange(),q=u.duplicate(),p=u.duplicate();q.moveToElementText(t);p.moveToElementText(w);u.setEndPoint("StartToStart",q);u.setEndPoint("EndToEnd",p);
u.select()}else{var v=h(),u=this.getRangeAt();u.setStartBefore(t);u.setEndAfter(w);v.removeAllRanges();v.addRange(u)}return this.cleanCache()};this.selectContents=function(u){var q=this.getRangeAt();if(u&&u.nodeType==1){if(this.rte.browser.msie){q.range();q.r.moveToElementText(u.parentNode);q.r.select()}else{try{q.selectNodeContents(u)}catch(t){return this.rte.log("unable select node contents "+u)}var p=h();p.removeAllRanges();p.addRange(q)}}return this};this.deleteContents=function(){if(!a.browser.msie){this.getRangeAt().deleteContents()
}return this};this.insertNode=function(v,u){if(u&&!this.collapsed()){this.collapse()}if(this.rte.browser.msie){var p=v.nodeType==3?v.nodeValue:a(this.rte.dom.create("span")).append(a(v)).html();var t=this.getRangeAt();t.insertNode(p)}else{var t=this.getRangeAt();t.insertNode(v);t.setStartAfter(v);t.setEndAfter(v);var q=h();q.removeAllRanges();q.addRange(t)}return this.cleanCache()};this.insertHtml=function(p,q){if(q&&!this.collapsed()){this.collapse()}if(this.rte.browser.msie){this.getRangeAt().range().pasteHTML(p)
}else{var r=a(this.rte.dom.create("span")).html(p||"").get(0);this.insertNode(r);a(r).replaceWith(a(r).html())}return this.cleanCache()};this.insertText=function(q,p){var r=this.rte.doc.createTextNode(q);return this.insertHtml(r.nodeValue)};this.getBookmark=function(){this.rte.window.focus();var p,v,t,z,w,A=this.rte.dom.createBookmark(),x=this.rte.dom.createBookmark();if(a.browser.msie){try{p=this.rte.window.document.selection.createRange()}catch(x){p=this.rte.doc.body.createTextRange()}if(p.item){var u=p.item(0);
p=this.rte.doc.body.createTextRange();p.moveToElementText(u)}v=p.duplicate();t=p.duplicate();z=this.rte.dom.create("span");w=this.rte.dom.create("span");z.appendChild(A);w.appendChild(x);v.collapse(true);v.pasteHTML(z.innerHTML);t.collapse(false);t.pasteHTML(w.innerHTML)}else{var q=h();var p=q.rangeCount>0?q.getRangeAt(0):this.rte.doc.createRange();v=p.cloneRange();t=p.cloneRange();t.collapse(false);t.insertNode(x);v.collapse(true);v.insertNode(A);this.select(A,x)}return[A.id,x.id]};this.moveToBookmark=function(p){this.rte.window.focus();
if(p&&p.length==2){var q=this.rte.doc.getElementById(p[0]),v=this.rte.doc.getElementById(p[1]),u,t;if(q&&v){this.select(q,v);if(this.rte.dom.next(q)==v){this.collapse(true)}if(!a.browser.msie){u=h();t=u.rangeCount>0?u.getRangeAt(0):this.rte.doc.createRange();u.removeAllRanges();u.addRange(t)}q.parentNode.removeChild(q);v.parentNode.removeChild(v)}}return this};this.removeBookmark=function(p){this.rte.window.focus();if(p.length==2){var q=this.rte.doc.getElementById(p[0]),r=this.rte.doc.getElementById(p[1]);
if(q&&r){q.parentNode.removeChild(q);r.parentNode.removeChild(r)}}};this.cleanCache=function(){o=b=j=null;return this};this.getStart=function(){if(!o){var p=this.getRangeAt();o=p.getStart()}return o};this.getEnd=function(){if(!b){var p=this.getRangeAt();b=p.getEnd()}return b};this.getNode=function(){if(!j){j=this.rte.dom.findCommonAncestor(this.getStart(),this.getEnd())}return j};this.selected=function(r){var p={collapsed:false,blocks:false,filter:false,wrap:"text",tag:"span"};p=a.extend({},p,r);
if(p.blocks){var v=this.getNode(),u=null;if(u=this.rte.dom.selfOrParent(v,"selectionBlock")){return[u]}}var t=this.selectedRaw(p.collapsed,p.blocks);var A=[];var w=[];var B=null;function q(){function D(){for(var F=0;F<w.length;F++){if(w[F].nodeType==1&&(c.rte.dom.selfOrParent(w[F],/^P$/)||a(w[F]).find("p").length>0)){return false}}return true}if(w.length>0){var C=p.tag=="p"&&!D()?"div":p.tag;var E=c.rte.dom.wrap(w,C);A[B]=E;B=null;w=[]}}function z(E){if(E.nodeType==1){if(/^(THEAD|TFOOT|TBODY|COL|COLGROUP|TR)$/.test(E.nodeName)){a(E).find("td,th").each(function(){var F=p.tag=="p"&&a(this).find("p").length>0?"div":p.tag;
var G=c.rte.dom.wrapContents(this,F);return A.push(G)})}else{if(/^(CAPTION|TD|TH|LI|DT|DD)$/.test(E.nodeName)){var C=p.tag=="p"&&a(E).find("p").length>0?"div":p.tag;var E=c.rte.dom.wrapContents(E,C);return A.push(E)}}}var D=w.length>0?w[w.length-1]:null;if(D&&D!=c.rte.dom.prev(E)){q()}w.push(E);if(B===null){B=A.length;A.push("dummy")}}if(t.nodes.length>0){for(var x=0;x<t.nodes.length;x++){var v=t.nodes[x];if(v.nodeType==3&&(x==0||x==t.nodes.length-1)&&a.trim(v.nodeValue).length>0){if(x==0&&t.so>0){v=v.splitText(t.so)
}if(x==t.nodes.length-1&&t.eo>0){v.splitText(x==0&&t.so>0?t.eo-t.so:t.eo)}}switch(p.wrap){case"text":if((v.nodeType==1&&v.nodeName=="BR")||(v.nodeType==3&&a.trim(v.nodeValue).length>0)){z(v)}else{if(v.nodeType==1){A.push(v)}}break;case"inline":if(this.rte.dom.isInline(v)){z(v)}else{if(v.nodeType==1){A.push(v)}}break;case"all":if(v.nodeType==1||!this.rte.dom.isEmpty(v)){z(v)}break;default:if(v.nodeType==1||!this.rte.dom.isEmpty(v)){A.push(v)}}}q()}if(A.length){this.rte.window.focus();this.select(A[0],A[A.length-1])
}return p.filter?this.rte.dom.filter(A,p.filter):A};this.dump=function(p,t,w,v,q){var u=this.getRangeAt();this.rte.log("commonAncestorContainer");this.rte.log(p||u.commonAncestorContainer);this.rte.log("startContainer");this.rte.log(t||u.startContainer);this.rte.log("startOffset: "+(v>=0?v:u.startOffset));this.rte.log("endContainer");this.rte.log(w||u.endContainer);this.rte.log("endOffset: "+(q>=0?q:u.endOffset))};this.selectedRaw=function(z,p){var F={so:null,eo:null,nodes:[]};var q=this.getRangeAt(true);
var w=q.commonAncestorContainer;var H,E;var D=false;var B=false;function C(J,r,I){if(J.nodeType==3){I=I>=0?I:J.nodeValue.length;return(r==0&&I==J.nodeValue.length)||a.trim(J.nodeValue).length==a.trim(J.nodeValue.substring(r,I)).length}return true}function x(J,r,I){if(J.nodeType==1){return c.rte.dom.isEmpty(J)}else{if(J.nodeType==3){return a.trim(J.nodeValue.substring(r||0,I>=0?I:J.nodeValue.length)).length==0}}return true}if(q.startContainer.nodeType==1){if(q.startOffset<q.startContainer.childNodes.length){H=q.startContainer.childNodes[q.startOffset];
F.so=H.nodeType==1?null:0}else{H=q.startContainer.childNodes[q.startOffset-1];F.so=H.nodeType==1?null:H.nodeValue.length}}else{H=q.startContainer;F.so=q.startOffset}if(q.collapsed){if(z){if(p){H=f(H);if(!this.rte.dom.isEmpty(H)||(H=this.rte.dom.next(H))){F.nodes=[H]}if(this.rte.dom.isInline(H)){F.nodes=this.rte.dom.toLineStart(H).concat(F.nodes,this.rte.dom.toLineEnd(H))}if(F.nodes.length>0){F.so=F.nodes[0].nodeType==1?null:0;F.eo=F.nodes[F.nodes.length-1].nodeType==1?null:F.nodes[F.nodes.length-1].nodeValue.length
}}else{if(!this.rte.dom.isEmpty(H)){F.nodes=[H]}}}return F}if(q.endContainer.nodeType==1){E=q.endContainer.childNodes[q.endOffset-1];F.eo=E.nodeType==1?null:E.nodeValue.length}else{E=q.endContainer;F.eo=q.endOffset}if(H.nodeType==1||p||C(H,F.so,H.nodeValue.length)){H=f(H,w,"left");D=true;F.so=H.nodeType==1?null:0}if(E.nodeType==1||p||C(E,0,F.eo)){E=f(E,w,"right");B=true;F.eo=E.nodeType==1?null:E.nodeValue.length}if(p){if(H.nodeType!=1&&H.parentNode!=w&&H.parentNode.nodeName!="BODY"){H=H.parentNode;
F.so=null}if(E.nodeType!=1&&E.parentNode!=w&&E.parentNode.nodeName!="BODY"){E=E.parentNode;F.eo=null}}if(H.parentNode==E.parentNode&&H.parentNode.nodeName!="BODY"&&(D&&this.rte.dom.isFirstNotEmpty(H))&&(B&&this.rte.dom.isLastNotEmpty(E))){H=E=H.parentNode;F.so=H.nodeType==1?null:0;F.eo=E.nodeType==1?null:E.nodeValue.length}if(H==E){if(!this.rte.dom.isEmpty(H)){F.nodes.push(H)}return F}var t=H;while(t.nodeName!="BODY"&&t.parentNode!==w&&t.parentNode.nodeName!="BODY"){t=t.parentNode}var G=E;while(G.nodeName!="BODY"&&G.parentNode!==w&&G.parentNode.nodeName!="BODY"){G=G.parentNode
}if(!x(H,F.so,H.nodeType==3?H.nodeValue.length:null)){F.nodes.push(H)}var v=H;while(v!==t){var u=v;while((u=this.rte.dom.next(u))){F.nodes.push(u)}v=v.parentNode}v=t;while((v=this.rte.dom.next(v))&&v!=G){F.nodes.push(v)}var A=[];v=E;while(v!==G){var u=v;while((u=this.rte.dom.prev(u))){A.push(u)}v=v.parentNode}if(A.length){F.nodes=F.nodes.concat(A.reverse())}if(!x(E,0,E.nodeType==3?F.eo:null)){F.nodes.push(E)}if(p){if(this.rte.dom.isInline(H)){F.nodes=this.rte.dom.toLineStart(H).concat(F.nodes);F.so=F.nodes[0].nodeType==1?null:0
}if(this.rte.dom.isInline(E)){F.nodes=F.nodes.concat(this.rte.dom.toLineEnd(E));F.eo=F.nodes[F.nodes.length-1].nodeType==1?null:F.nodes[F.nodes.length-1].nodeValue.length}}return F}}})(jQuery);(function(a){elRTE.prototype.ui=function(f){this.rte=f;this._buttons=[];var v=this,o=this.rte.options.toolbars[f.options.toolbar&&f.options.toolbars[f.options.toolbar]?f.options.toolbar:"normal"],r=o.length,g,k,j,h,t,u,q;for(q in this.buttons){if(this.buttons.hasOwnProperty(q)&&q!="button"){this.buttons[q].prototype=this.buttons.button.prototype
}}while(r--){first=(r==0?true:false);if(o[r-1]=="eol"){first=true}k=o[r];if(k=="eol"){a(this.rte.doc.createElement("br")).prependTo(this.rte.toolbar);continue}g=a('<ul class="panel-'+k+(first?" first":"")+'" />').prependTo(this.rte.toolbar);g.bind("mousedown",function(b){b.preventDefault()});j=this.rte.options.panels[k].length;while(j--){h=this.rte.options.panels[k][j];t=this.buttons[h]||this.buttons.button;this._buttons.push((u=new t(this.rte,h)));g.prepend(u.domElem)}}this.update();this.disable=function(){a.each(v._buttons,function(){!this.active&&this.domElem.addClass("disabled")
})}};elRTE.prototype.ui.prototype.update=function(h){h&&this.rte.selection.cleanCache();var f=this.rte.selection.getNode(),c=this.rte.dom.parents(f,"*"),j=this.rte.rtl,q=j?" &laquo; ":" &raquo; ",o="",b,g;function k(r){var p=r.nodeName.toLowerCase();r=a(r);if(p=="img"){if(r.hasClass("elrte-media")){p="media"}else{if(r.hasClass("elrte-google-maps")){p="google map"}else{if(r.hasClass("elrte-yandex-maps")){p="yandex map"}else{if(r.hasClass("elrte-pagebreak")){p="pagebreak"}}}}}return p}if(f&&f.nodeType==1&&f.nodeName!="BODY"){c.unshift(f)
}if(!j){c=c.reverse()}for(g=0;g<c.length;g++){o+=(g>0?q:"")+k(c[g])}this.rte.statusbar.html(o);a.each(this._buttons,function(){this.update()});this.rte.window.focus()};elRTE.prototype.ui.prototype.buttons={button:function(f,c){var b=this;this.rte=f;this.active=false;this.name=c;this.val=null;this.domElem=a('<li style="-moz-user-select:-moz-none" class="'+c+' rounded-3" name="'+c+'" title="'+this.rte.i18n(this.rte.options.buttons[c]||c)+'" unselectable="on" />').hover(function(){a(this).addClass("hover")
},function(){a(this).removeClass("hover")}).click(function(g){g.stopPropagation();g.preventDefault();if(!a(this).hasClass("disabled")){b.command()}b.rte.window.focus()})}};elRTE.prototype.ui.prototype.buttons.button.prototype.command=function(){this.rte.history.add();try{this.rte.doc.execCommand(this.name,false,this.val)}catch(b){return this.rte.log("commands failed: "+this.name)}this.rte.ui.update(true)};elRTE.prototype.ui.prototype.buttons.button.prototype.update=function(){try{if(!this.rte.doc.queryCommandEnabled(this.name)){return this.domElem.addClass("disabled")
}else{this.domElem.removeClass("disabled")}}catch(b){return}try{if(this.rte.doc.queryCommandState(this.name)){this.domElem.addClass("active")}else{this.domElem.removeClass("active")}}catch(b){}}})(jQuery);(function(a){elRTE.prototype.utils=function(c){this.rte=c;this.url=null;this.reg=/^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/;this.baseURL="";this.path="";
this.entities={"&":"&amp;",'"':"&quot;","<":"&lt;",">":"&gt;"};this.entitiesRegExp=/[<>&\"]/g;this.media=[{type:"application/x-shockwave-flash",classid:["clsid:d27cdb6e-ae6d-11cf-96b8-444553540000"],codebase:"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"},{type:"application/x-director",classid:["clsid:166b1bca-3f9c-11cf-8075-444553540000"],codebase:"http://download.macromedia.com/pub/shockwave/cabs/director/sw.cab#version=8,5,1,0"},{type:"application/x-mplayer2",classid:["clsid:6bf52a52-394a-11d3-b153-00c04f79faa6","clsid:22d6f312-b0f6-11d0-94ab-0080c74c7e95","clsid:05589fa1-c356-11ce-bf01-00aa0055595a"],codebase:"http://activex.microsoft.com/activex/controls/mplayer/en/nsmp2inf.cab#Version=5,1,52,701"},{type:"video/quicktime",classid:["clsid:02bf25d5-8c17-4b23-bc80-d3488abddc6b"],codebase:"http://www.apple.com/qtactivex/qtplugin.cab#version=6,0,2,0"},{type:"audio/x-pn-realaudio-plugin",classid:["clsid:cfcdaa03-8be4-11cf-b84b-0020afbbccfa"],codebase:"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"}];
this.rgbRegExp=/\s*rgb\s*?\(\s*?([0-9]+)\s*?,\s*?([0-9]+)\s*?,\s*?([0-9]+)\s*?\)\s*/i;this.colorsRegExp=/aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|rgb\s*\([^\)]+\)/i;this.colors={aqua:"#00ffff",black:"#000000",blue:"#0000ff",fuchsia:"#ff00ff",gray:"#808080",green:"#008000",lime:"#00ff00",maroon:"#800000",navy:"#000080",olive:"#808000",orange:"#ffa500",purple:"#800080",red:"#ff0000",silver:"#c0c0c0",teal:"#008080",white:"#fffffff",yellow:"#ffff00"};
var b=this;this.rgb2hex=function(f){return this.color2Hex(""+f)};this.toPixels=function(g){var f=g.match(/([0-9]+\.?[0-9]*)\s*(px|pt|em|%)/);if(f){g=f[1];unit=f[2]}if(g[0]=="."){g="0"+g}g=parseFloat(g);if(isNaN(g)){return""}var h=parseInt(a(document.body).css("font-size"))||16;switch(unit){case"em":return parseInt(g*h);case"pt":return parseInt(g*h/12);case"%":return parseInt(g*h/100)}return g};this.absoluteURL=function(g){!this.url&&this._url();g=a.trim(g);if(!g){return""}if(g[0]=="#"){return g}var f=this.parseURL(g);
if(!f.host&&!f.path&&!f.anchor){return""}if(!this.rte.options.absoluteURLs){return g}if(f.protocol){return g}if(f.host&&(f.host.indexOf(".")!=-1||f.host=="localhost")){return this.url.protocol+"://"+g}if(g[0]=="/"){g=this.baseURL+g}else{if(g.indexOf("./")==0){g=g.substring(2)}g=this.baseURL+this.path+g}return g};this.parseURL=function(h){var g=h.match(this.reg);var f={};a.each(["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"],function(j){f[this]=g[j]
});if(!f.host.match(/[a-z0-9]/i)){f.host=""}return f};this.trimEventCallback=function(f){f=f?f.toString():"";return a.trim(f.replace(/\r*\n/mg,"").replace(/^function\s*on[a-z]+\s*\(\s*event\s*\)\s*\{(.+)\}$/igm,"$1"))};this._url=function(){this.url=this.parseURL(window.location.href);this.baseURL=this.url.protocol+"://"+(this.url.userInfo?parts.userInfo+"@":"")+this.url.host+(this.url.port?":"+this.url.port:"");this.path=!this.url.file?this.url.path:this.url.path.substring(0,this.url.path.length-this.url.file.length)
};this.makeObject=function(g){var f={};a.each(g,function(h,j){f[j]=j});return f};this.encode=function(f){var g=this.entities;return(""+f).replace(this.entitiesRegExp,function(h){return g[h]})};this.decode=function(f){return a("<div/>").html(f||"").text()};this.parseStyle=function(k){var h={},f=this.rte.options.allowBrowsersSpecStyles,j,q,g,o;if(typeof(k)=="string"&&k.length){a.each(k.replace(/&quot;/gi,"'").split(";"),function(p,r){if((o=r.indexOf(":"))!==-1){q=a.trim(r.substr(0,o));g=a.trim(r.substr(o+1));
if(q=="color"||q=="background-color"){g=g.toLowerCase()}if(q&&g&&(f||q.substring(0,1)!="-")){h[q]=g}}})}return h};this.compactStyle=function(g){var f=this;if(g.border=="medium none"){delete g.border}a.each(g,function(j,h){if(/color$/i.test(j)){g[j]=f.color2Hex(h)}else{if(/^(border|background)$/i.test(j)){g[j]=h.replace(f.colorsRegExp,function(k){return f.color2Hex(k)})}}});if(g["border-width"]){g.border=g["border-width"]+" "+(g["border-style"]||"solid")+" "+(g["border-color"]||"#000");delete g["border-width"];
delete g["border-style"];delete g["border-color"]}if(g["background-image"]){g.background=(g["background-color"]+" ")||""+g["background-image"]+" "+g["background-position"]||"0 0 "+g["background-repeat"]||"repeat";delete g["background-image"];delete ["background-image"];delete ["background-position"];delete ["background-repeat"]}if(g["margin-top"]&&g["margin-right"]&&g["margin-bottom"]&&g["margin-left"]){g.margin=g["margin-top"]+" "+g["margin-right"]+" "+g["margin-bottom"]+" "+g["margin-left"];delete g["margin-top"];
delete g["margin-right"];delete g["margin-bottom"];delete g["margin-left"]}if(g["padding-top"]&&g["padding-right"]&&g["padding-bottom"]&&g["padding-left"]){g.padding=g["padding-top"]+" "+g["padding-right"]+" "+g["padding-bottom"]+" "+g["padding-left"];delete g["padding-top"];delete g["padding-right"];delete g["padding-bottom"];delete g["padding-left"]}if(g["list-style-type"]||g["list-style-position"]||g["list-style-image"]){g["list-style"]=a.trim(g["list-style-type"]||" "+g["list-style-position"]||""+g["list-style-image"]||"");
delete g["list-style-type"];delete g["list-style-position"];delete g["list-style-image"]}return g};this.serializeStyle=function(g,h){var f=[];a.each(h?this.compactStyle(g):g,function(k,j){j&&f.push(k+":"+j)});return f.join(";")};this.parseClass=function(f){f=a.trim(f);return f.length?this.makeObject(f.split(/\s+/)):{};return f.length?f.split(/\s+/):[]};this.serializeClass=function(h){var g=[];var f=this.rte;a.each(h,function(j){g.push(j)});return g.join(" ")};this.mediaInfo=function(g,h){var f=this.media.length;
while(f--){if(g===this.media[f].type||(h&&a.inArray(h,this.media[f].classid)!=-1)){return this.media[f]}}};this.color2Hex=function(h){var f;h=h||"";if(h.indexOf("#")===0){return h}function g(j){j=parseInt(j).toString(16);return j.length>1?j:"0"+j}if(this.colors[h]){return this.colors[h]}if((f=h.match(this.rgbRegExp))){return"#"+g(f[1])+g(f[2])+g(f[3])}return""}}})(jQuery);(function(a){elRTE.prototype.w3cRange=function(c){var b=this;this.rte=c;this.r=null;this.collapsed=true;this.startContainer=null;
this.endContainer=null;this.startOffset=0;this.endOffset=0;this.commonAncestorContainer=null;this.range=function(){try{this.r=this.rte.window.document.selection.createRange()}catch(f){this.r=this.rte.doc.body.createTextRange()}return this.r};this.insertNode=function(f){this.range();b.r.collapse(false);var g=b.r.duplicate();g.pasteHTML(f)};this.getBookmark=function(){this.range();if(this.r.item){var f=this.r.item(0);this.r=this.rte.doc.body.createTextRange();this.r.moveToElementText(f)}return this.r.getBookmark()
};this.moveToBookmark=function(f){this.rte.window.focus();this.range().moveToBookmark(f);this.r.select()};this.update=function(){function h(x){var k="\uFEFF";var o=offset=0;var t=b.r.duplicate();t.collapse(x);var u=t.parentElement();if(!u||u.nodeName=="HTML"){return{parent:b.rte.doc.body,ndx:o,offset:offset}}t.pasteHTML(k);childs=u.childNodes;for(var q=0;q<childs.length;q++){var w=childs[q];if(q>0&&(w.nodeType!==3||childs[q-1].nodeType!==3)){o++}if(w.nodeType!==3){offset=0}else{var v=w.nodeValue.indexOf(k);
if(v!==-1){offset+=v;break}offset+=w.nodeValue.length}}t.moveStart("character",-1);t.text="";return{parent:u,ndx:Math.min(o,u.childNodes.length-1),offset:offset}}this.range();this.startContainer=this.endContainer=null;if(this.r.item){this.collapsed=false;var g=this.r.item(0);this.setStart(g.parentNode,this.rte.dom.indexOf(g));this.setEnd(g.parentNode,this.startOffset+1)}else{this.collapsed=this.r.boundingWidth==0;var j=h(true);var f=h(false);j.parent.normalize();f.parent.normalize();j.ndx=Math.min(j.ndx,j.parent.childNodes.length-1);
f.ndx=Math.min(f.ndx,f.parent.childNodes.length-1);if(j.parent.childNodes[j.ndx].nodeType&&j.parent.childNodes[j.ndx].nodeType==1){this.setStart(j.parent,j.ndx)}else{this.setStart(j.parent.childNodes[j.ndx],j.offset)}if(f.parent.childNodes[f.ndx].nodeType&&f.parent.childNodes[f.ndx].nodeType==1){this.setEnd(f.parent,f.ndx)}else{this.setEnd(f.parent.childNodes[f.ndx],f.offset)}this.select()}return this};this.isCollapsed=function(){this.range();this.collapsed=this.r.item?false:this.r.boundingWidth==0;
return this.collapsed};this.collapse=function(f){this.range();if(this.r.item){var g=this.r.item(0);this.r=this.rte.doc.body.createTextRange();this.r.moveToElementText(g)}this.r.collapse(f);this.r.select();this.collapsed=true};this.getStart=function(){this.range();if(this.r.item){return this.r.item(0)}var g=this.r.duplicate();g.collapse(true);var f=g.parentElement();return f&&f.nodeName=="BODY"?f.firstChild:f};this.getEnd=function(){this.range();if(this.r.item){return this.r.item(0)}var f=this.r.duplicate();
f.collapse(false);var g=f.parentElement();return g&&g.nodeName=="BODY"?g.lastChild:g};this.setStart=function(f,g){this.startContainer=f;this.startOffset=g;if(this.endContainer){this.commonAncestorContainer=this.rte.dom.findCommonAncestor(this.startContainer,this.endContainer)}};this.setEnd=function(f,g){this.endContainer=f;this.endOffset=g;if(this.startContainer){this.commonAncestorContainer=this.rte.dom.findCommonAncestor(this.startContainer,this.endContainer)}};this.setStartBefore=function(f){if(f.parentNode){this.setStart(f.parentNode,this.rte.dom.indexOf(f))
}};this.setStartAfter=function(f){if(f.parentNode){this.setStart(f.parentNode,this.rte.dom.indexOf(f)+1)}};this.setEndBefore=function(f){if(f.parentNode){this.setEnd(f.parentNode,this.rte.dom.indexOf(f))}};this.setEndAfter=function(f){if(f.parentNode){this.setEnd(f.parentNode,this.rte.dom.indexOf(f)+1)}};this.select=function(){function o(B,z){if(B.nodeType!=3){return -1}var A="\uFEFF";var x=B.nodeValue;var v=b.rte.doc.body.createTextRange();B.nodeValue=x.substring(0,z)+A+x.substring(z);v.moveToElementText(B.parentNode);
v.findText(A);var w=Math.abs(v.moveStart("character",-1048575));B.nodeValue=x;return w}this.r=this.rte.doc.body.createTextRange();var k=this.startOffset;var g=this.endOffset;var u=this.startContainer.nodeType==1?this.startContainer.childNodes[Math.min(k,this.startContainer.childNodes.length-1)]:this.startContainer;var q=this.endContainer.nodeType==1?this.endContainer.childNodes[Math.min(k==g?g:g-1,this.endContainer.childNodes.length-1)]:this.endContainer;if(this.collapsed){if(u.nodeType==3){var h=o(u,k);
this.r.move("character",h)}else{this.r.moveToElementText(u);this.r.collapse(true)}}else{var f=this.rte.doc.body.createTextRange();var j=o(u,k);var t=o(q,g);if(u.nodeType==3){this.r.move("character",j)}else{this.r.moveToElementText(u)}if(q.nodeType==3){f.move("character",t)}else{f.moveToElementText(q)}this.r.setEndPoint("EndToEnd",f)}try{this.r.select()}catch(q){}if(f){f=null}};this.dump=function(){this.rte.log("collapsed: "+this.collapsed);this.rte.log("startContainer: "+(this.startContainer?this.startContainer.nodeName:"non"));
this.rte.log("startOffset: "+this.startOffset);this.rte.log("endContainer: "+(this.endContainer?this.endContainer.nodeName:"none"));this.rte.log("endOffset: "+this.endOffset)}}})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.about=function(c,b){this.constructor.prototype.constructor.call(this,c,b);this.active=true;this.command=function(){var g,h,f;g={rtl:c.rtl,submit:function(j,k){k.close()},dialog:{width:560,title:this.rte.i18n("About this software"),buttons:{Ok:function(){a(this).dialog("destroy")
}}}};f='<div class="elrte-logo"></div><h3>'+this.rte.i18n("About elRTE")+'</h3><br clear="all"/><div class="elrte-ver">'+this.rte.i18n("Version")+": "+this.rte.version+" ("+this.rte.build+')</div><div class="elrte-ver">jQuery: '+a("<div/>").jquery+'</div><div class="elrte-ver">jQueryUI: '+a.ui.version+'</div><div class="elrte-ver">'+this.rte.i18n("Licence")+": BSD Licence</div><p>"+this.rte.i18n("elRTE is an open-source JavaScript based WYSIWYG HTML-editor.")+"<br/>"+this.rte.i18n("Main goal of the editor - simplify work with text and formating (HTML) on sites, blogs, forums and other online services.")+"<br/>"+this.rte.i18n("You can use it in any commercial or non-commercial projects.")+"</p><h4>"+this.rte.i18n("Authors")+'</h4><table class="elrte-authors"><tr><td>Dmitry (dio) Levashov &lt;dio@std42.ru&gt;</td><td>'+this.rte.i18n("Chief developer")+"</td></tr><tr><td>Troex Nevelin &lt;troex@fury.scancode.ru&gt;</td><td>"+this.rte.i18n("Developer, tech support")+"</td></tr><tr><td>Valentin Razumnyh &lt;content@std42.ru&gt;</td><td>"+this.rte.i18n("Interface designer")+"</td></tr><tr><td>Tawfek Daghistani &lt;tawfekov@gmail.com&gt;</td><td>"+this.rte.i18n("RTL support")+"</td></tr>"+(this.rte.options.lang!="en"?"<tr><td>"+this.rte.i18n("_translator")+"</td><td>"+this.rte.i18n("_translation")+"</td></tr>":"")+'</table><div class="elrte-copy">Copyright &copy; 2009-2011, <a href="http://www.std42.ru">Studio 42</a></div><div class="elrte-copy">'+this.rte.i18n("For more information about this software visit the")+' <a href="http://elrte.org">'+this.rte.i18n("elRTE website")+'.</a></div><div class="elrte-copy">Twitter: <a href="http://twitter.com/elrte_elfinder">elrte_elfinder</a></div>';
h=new elDialogForm(g);h.append(f);h.open()};this.update=function(){this.domElem.removeClass("disabled")}}})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.anchor=function(f,c){this.constructor.prototype.constructor.call(this,f,c);this.input=a('<input type="text" />').attr("name","anchor").attr("size","16");var b=this;this.command=function(){var g={rtl:this.rte.rtl,submit:function(j,k){j.stopPropagation();j.preventDefault();k.close();b.set()},dialog:{title:this.rte.i18n("Bookmark")}};this.anchor=this.rte.dom.selfOrParentAnchor(this.rte.selection.getEnd())||f.dom.create("a");
!this.rte.selection.collapsed()&&this.rte.selection.collapse(false);this.input.val(a(this.anchor).addClass("elrte-anchor").attr("name"));this.rte.selection.saveIERange();var h=new elDialogForm(g);h.append([this.rte.i18n("Bookmark name"),this.input],null,true).open();setTimeout(function(){b.input.focus()},20)};this.update=function(){var g=this.rte.selection.getNode();if(this.rte.dom.selfOrParentLink(g)){this.domElem.addClass("disabled")}else{if(this.rte.dom.selfOrParentAnchor(g)){this.domElem.removeClass("disabled").addClass("active")
}else{this.domElem.removeClass("disabled").removeClass("active")}}};this.set=function(){var g=a.trim(this.input.val());if(g){this.rte.history.add();if(!this.anchor.parentNode){this.rte.selection.insertHtml('<a name="'+g+'" title="'+this.rte.i18n("Bookmark")+": "+g+'" class="elrte-anchor"></a>')}else{this.anchor.name=g;this.anchor.title=this.rte.i18n("Bookmark")+": "+g}}else{if(this.anchor.parentNode){this.rte.history.add();this.anchor.parentNode.removeChild(this.anchor)}}}}})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.blockquote=function(c,b){this.constructor.prototype.constructor.call(this,c,b);
this.command=function(){var g,f;this.rte.history.add();if(this.rte.selection.collapsed()&&(g=this.rte.dom.selfOrParent(this.rte.selection.getNode(),/^BLOCKQUOTE$/))){a(g).replaceWith(a(g).html())}else{f=this.rte.selection.selected({wrap:"all",tag:"blockquote"});f.length&&this.rte.selection.select(f[0],f[f.length-1])}this.rte.ui.update(true)};this.update=function(){if(this.rte.selection.collapsed()){if(this.rte.dom.selfOrParent(this.rte.selection.getNode(),/^BLOCKQUOTE$/)){this.domElem.removeClass("disabled").addClass("active")
}else{this.domElem.addClass("disabled").removeClass("active")}}else{this.domElem.removeClass("disabled active")}}}})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.copy=function(c,b){this.constructor.prototype.constructor.call(this,c,b);this.command=function(){if(this.rte.browser.mozilla){try{this.rte.doc.execCommand(this.name,false,null)}catch(h){var f=" Ctl + C";if(this.name=="cut"){f=" Ctl + X"}else{if(this.name=="paste"){f=" Ctl + V"}}var g={dialog:{title:this.rte.i18n("Warning"),buttons:{Ok:function(){a(this).dialog("close")
}}}};var j=new elDialogForm(g);j.append(this.rte.i18n("This operation is disabled in your browser on security reason. Use shortcut instead.")+": "+f).open()}}else{this.constructor.prototype.command.call(this)}}};elRTE.prototype.ui.prototype.buttons.cut=elRTE.prototype.ui.prototype.buttons.copy;elRTE.prototype.ui.prototype.buttons.paste=elRTE.prototype.ui.prototype.buttons.copy})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.css=function(f,c){var b=this;this.constructor.prototype.constructor.call(this,f,c);
this.cssStyle=a('<input type="text" size="42" name="style" />');this.cssClass=a('<input type="text" size="42" name="class" />');this.elementID=a('<input type="text" size="42" name="id" />');this.command=function(){var j=this.node(),g;this.rte.selection.saveIERange();if(j){var g={submit:function(k,o){k.stopPropagation();k.preventDefault();o.close();b.set()},dialog:{title:this.rte.i18n("Style"),width:450,resizable:true,modal:true}};this.cssStyle.val(a(j).attr("style"));this.cssClass.val(a(j).attr("class"));
this.elementID.val(a(j).attr("id"));var h=new elDialogForm(g);h.append([this.rte.i18n("Css style"),this.cssStyle],null,true);h.append([this.rte.i18n("Css class"),this.cssClass],null,true);h.append([this.rte.i18n("ID"),this.elementID],null,true);h.open();setTimeout(function(){b.cssStyle.focus()},20)}};this.set=function(){var g=this.node();this.rte.selection.restoreIERange();if(g){a(g).attr("style",this.cssStyle.val());a(g).attr("class",this.cssClass.val());a(g).attr("id",this.elementID.val());this.rte.ui.update()
}};this.node=function(){var g=this.rte.selection.getNode();if(g.nodeType==3){g=g.parentNode}return g.nodeType==1&&g.nodeName!="BODY"?g:null};this.update=function(){this.domElem.toggleClass("disabled",this.node()?false:true)}}})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.rtl=function(f,c){this.constructor.prototype.constructor.call(this,f,c);var b=this;this.command=function(){var h=this.rte.selection.getNode(),g=this;if(a(h).attr("dir")=="rtl"||a(h).parents('[dir="rtl"]').length||a(h).find('[dir="rtl"]').length){a(h).removeAttr("dir");
a(h).parents('[dir="rtl"]').removeAttr("dir");a(h).find('[dir="rtl"]').removeAttr("dir")}else{if(this.rte.dom.is(h,"textNodes")&&this.rte.dom.is(h,"block")){a(h).attr("dir","rtl")}else{a.each(this.rte.dom.parents(h,"textNodes"),function(j,k){if(g.rte.dom.is(k,"block")){a(k).attr("dir","rtl");return false}})}}this.rte.ui.update()};this.update=function(){var g=this.rte.selection.getNode();this.domElem.removeClass("disabled");if(a(g).attr("dir")=="rtl"||a(g).parents('[dir="rtl"]').length||a(g).find('[dir="rtl"]').length){this.domElem.addClass("active")
}else{this.domElem.removeClass("active")}}};elRTE.prototype.ui.prototype.buttons.ltr=function(f,c){this.constructor.prototype.constructor.call(this,f,c);var b=this;this.command=function(){var h=this.rte.selection.getNode(),g=this;if(a(h).attr("dir")=="ltr"||a(h).parents('[dir="ltr"]').length||a(h).find('[dir="ltr"]').length){a(h).removeAttr("dir");a(h).parents('[dir="ltr"]').removeAttr("dir");a(h).find('[dir="ltr"]').removeAttr("dir")}else{if(this.rte.dom.is(h,"textNodes")&&this.rte.dom.is(h,"block")){a(h).attr("dir","ltr")
}else{a.each(this.rte.dom.parents(h,"textNodes"),function(j,k){if(g.rte.dom.is(k,"block")){a(k).attr("dir","ltr");return false}})}}this.rte.ui.update()};this.update=function(){var g=this.rte.selection.getNode();this.domElem.removeClass("disabled");if(a(g).attr("dir")=="ltr"||a(g).parents('[dir="ltr"]').length||a(g).find('[dir="ltr"]').length){this.domElem.addClass("active")}else{this.domElem.removeClass("active")}}}})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.div=function(c,b){this.constructor.prototype.constructor.call(this,c,b);
this.command=function(){var g,f;this.rte.history.add();if(this.rte.selection.collapsed()){g=this.rte.dom.selfOrParent(this.rte.selection.getNode(),/^DIV$/);if(g){a(g).replaceWith(a(g).html())}}else{f=this.rte.selection.selected({wrap:"all",tag:"div"});f.length&&this.rte.selection.select(f[0],f[f.length-1])}this.rte.ui.update(true)};this.update=function(){if(this.rte.selection.collapsed()){if(this.rte.dom.selfOrParent(this.rte.selection.getNode(),/^DIV$/)){this.domElem.removeClass("disabled").addClass("active")
}else{this.domElem.addClass("disabled active")}}else{this.domElem.removeClass("disabled active")}}}})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.docstructure=function(c,b){this.constructor.prototype.constructor.call(this,c,b);this.command=function(){this.domElem.toggleClass("active");a(this.rte.doc.body).toggleClass("el-rte-structure")};this.command();this.update=function(){this.domElem.removeClass("disabled")}}})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.elfinder=function(f,c){this.constructor.prototype.constructor.call(this,f,c);
var b=this,f=this.rte;this.command=function(){if(b.rte.options.fmAllow&&typeof(b.rte.options.fmOpen)=="function"){b.rte.options.fmOpen(function(h){var g=decodeURIComponent(h.split("/").pop().replace(/\+/g," "));if(f.selection.collapsed()){f.selection.insertHtml('<a href="'+h+'" >'+g+"</a>")}else{f.doc.execCommand("createLink",false,h)}})}};this.update=function(){if(b.rte.options.fmAllow&&typeof(b.rte.options.fmOpen)=="function"){this.domElem.removeClass("disabled")}else{this.domElem.addClass("disabled")
}}}})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.flash=function(f,c){this.constructor.prototype.constructor.call(this,f,c);var b=this;this.swf=null;this.placeholder=null;this.src={url:a('<input type="text" name="url" />').css("width","99%"),type:a('<select name="type"/>').append('<option value="application/x-shockwave-flash">Flash</option>').append('<option value="video/quicktime">Quicktime movie</option>').append('<option value="application/x-mplayer2">Windows media</option>'),width:a('<input type="text" />').attr("size",5).css("text-align","right"),height:a('<input type="text" />').attr("size",5).css("text-align","right"),wmode:a("<select />").append(a("<option />").val("").text(this.rte.i18n("Not set","dialogs"))).append(a("<option />").val("transparent").text(this.rte.i18n("Transparent"))),align:a("<select />").append(a("<option />").val("").text(this.rte.i18n("Not set","dialogs"))).append(a("<option />").val("left").text(this.rte.i18n("Left"))).append(a("<option />").val("right").text(this.rte.i18n("Right"))).append(a("<option />").val("top").text(this.rte.i18n("Top"))).append(a("<option />").val("text-top").text(this.rte.i18n("Text top"))).append(a("<option />").val("middle").text(this.rte.i18n("middle"))).append(a("<option />").val("baseline").text(this.rte.i18n("Baseline"))).append(a("<option />").val("bottom").text(this.rte.i18n("Bottom"))).append(a("<option />").val("text-bottom").text(this.rte.i18n("Text bottom"))),margin:a("<div />")};
this.command=function(){var r=this.rte.selection.getEnd(),j,k="",B="",t="",v,z,x,A,q,C;this.rte.selection.saveIERange();this.src.margin.elPaddingInput({type:"margin"});this.placeholder=null;this.swf=null;if(a(r).hasClass("elrte-media")&&(A=a(r).attr("rel"))&&this.rte.filter.scripts[A]){this.placeholder=a(r);q=this.rte.filter.scripts[A];k="";if(q.embed&&q.embed.src){k=q.embed.src}if(q.params&&q.params.length){l=q.params.length;while(l--){if(q.params[l].name=="src"||q.params[l].name=="movie"){k=q.params[l].value
}}}if(q.embed){B=q.embed.width||parseInt(q.embed.style.width)||"";t=q.embed.height||parseInt(q.embed.style.height)||"";C=q.embed.wmode||""}else{if(q.obj){B=q.obj.width||parseInt(q.obj.style.width)||"";t=q.obj.height||parseInt(q.obj.style.height)||"";C=q.obj.wmode||""}}if(q.obj){v=q.obj.style["float"]||"";z=q.obj.style["vertical-align"]||""}else{if(q.embed){v=q.embed.style["float"]||"";z=q.embed.style["vertical-align"]||""}}this.src.margin.val(r);this.src.type.val(q.embed?q.embed.type:"")}if(a(r).hasClass("elrte-swf-placeholder")){this.placeholder=a(r);
k=a(r).attr("rel");B=parseInt(a(r).css("width"))||"";t=parseInt(a(r).css("height"))||"";v=a(r).css("float");z=a(r).css("vertical-align");this.src.margin.val(r);this.src.wmode.val(a(r).attr("wmode"))}this.src.url.val(k);this.src.width.val(B);this.src.height.val(t);this.src.align.val(v||z);this.src.wmode.val(C);var j={rtl:this.rte.rtl,submit:function(h,o){h.stopPropagation();h.preventDefault();b.set();o.close()},dialog:{width:580,position:"top",title:this.rte.i18n("Flash")}};var x=new elDialogForm(j);
if(this.rte.options.fmAllow&&this.rte.options.fmOpen){var g=a("<span />").append(this.src.url.css("width","85%")).append(a("<span />").addClass("ui-state-default ui-corner-all").css({"float":"right","margin-right":"3px"}).attr("title",b.rte.i18n("Open file manger")).append(a("<span />").addClass("ui-icon ui-icon-folder-open")).click(function(){b.rte.options.fmOpen(function(h){b.src.url.val(h).change()})}).hover(function(){a(this).addClass("ui-state-hover")},function(){a(this).removeClass("ui-state-hover")
}))}else{var g=this.src.url}x.append([this.rte.i18n("URL"),g],null,true);x.append([this.rte.i18n("Type"),this.src.type],null,true);x.append([this.rte.i18n("Size"),a("<span />").append(this.src.width).append(" x ").append(this.src.height).append(" px")],null,true);x.append([this.rte.i18n("Wmode"),this.src.wmode],null,true);x.append([this.rte.i18n("Alignment"),this.src.align],null,true);x.append([this.rte.i18n("Margins"),this.src.margin],null,true);x.open();var u=a("<fieldset />").append(a("<legend />").text(this.rte.i18n("Preview")));
x.append(u,"main");var p=document.createElement("iframe");a(p).attr("src","#").addClass("el-rte-preview").appendTo(u);html=this.rte.options.doctype+'<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /></head><body style="padding:0;margin:0;font-size:9px"> Proin elit arcu, rutrum commodo, vehicula tempus, commodo a, risus. Curabitur nec arcu. Donec sollicitudin mi sit amet mauris. Nam elementum quam ullamcorper ante. Etiam aliquet massa et lorem. Mauris dapibus lacus auctor risus. Aenean tempor ullamcorper leo. Vivamus sed magna quis ligula eleifend adipiscing. Duis orci. Aliquam sodales tortor vitae ipsum. Aliquam nulla. Duis aliquam molestie erat. Ut et mauris vel pede varius sollicitudin</body></html>';
p.contentWindow.document.open();p.contentWindow.document.write(html);p.contentWindow.document.close();this.frame=p.contentWindow.document;this.preview=a(p.contentWindow.document.body);this.src.type.change(function(){b.src.url.change()});this.src.width.change(function(){if(b.swf){var h=parseInt(a(this).val())||"";a(this).val(h);b.swf.css("width",h);b.swf.children("embed").css("width",h)}else{a(this).val("")}});this.src.height.change(function(){if(b.swf){var o=parseInt(a(this).val())||"";a(this).val(o);
b.swf.css("height",o);b.swf.children("embed").css("height",o)}else{a(this).val("")}});this.src.wmode.change(function(){if(b.swf){var h=a(this).val();if(h){b.swf.attr("wmode",h);b.swf.children("embed").attr("wmode",h)}else{b.swf.removeAttr("wmode");b.swf.children("embed").removeAttr("wmode")}}});this.src.align.change(function(){var h=a(this).val(),o=h=="left"||h=="right";if(b.swf){b.swf.css({"float":o?h:"","vertical-align":o?"":h})}else{a(this).val("")}});this.src.margin.change(function(){if(b.swf){var h=b.src.margin.val();
if(h.css){b.swf.css("margin",h.css)}else{b.swf.css("margin-top",h.top);b.swf.css("margin-right",h.right);b.swf.css("margin-bottom",h.bottom);b.swf.css("margin-left",h.left)}}});this.src.url.change(function(){var h=b.rte.utils.absoluteURL(a(this).val()),o,w;if(h){o=b.rte.utils.mediaInfo(b.src.type.val());if(!o){o=b.rte.util.mediaInfo("application/x-shockwave-flash")}w='<object classid="'+o.classid+'" codebase="'+o.codebase+'"><param name="src" value="'+h+'" /><embed quality="high" src="'+h+'" type="'+o.type+'"></object>';
b.preview.children("object").remove().end().prepend(w);b.swf=b.preview.children("object").eq(0)}else{if(b.swf){b.swf.remove();b.swf=null}}b.src.width.trigger("change");b.src.height.trigger("change");b.src.align.trigger("change")}).trigger("change")};this.set=function(){b.swf=null;var g=this.rte.utils.absoluteURL(this.src.url.val()),B=parseInt(this.src.width.val())||"",t=parseInt(this.src.height.val())||"",C=this.src.wmode.val(),z=this.src.align.val(),v=z=="left"||z=="right"?z:"",A=this.placeholder?this.placeholder.attr("rel"):"",p,k,x,q=this.src.margin.val(),r;
if(!g){if(this.placeholder){this.placeholder.remove();delete this.rte.filter.scripts[A]}}else{i=b.rte.utils.mediaInfo(b.src.type.val());if(!i){i=b.rte.util.mediaInfo("application/x-shockwave-flash")}x=this.rte.filter.videoHostRegExp.test(g)?g.replace(this.rte.filter.videoHostRegExp,"$2"):i.type.replace(/^\w+\/(.+)/,"$1");p={obj:{classid:i.classid[0],codebase:i.codebase,style:{}},params:[{name:"src",value:g}],embed:{src:g,type:i.type,quality:"high",wmode:C,style:{}}};if(B){p.obj.width=B;p.embed.width=B
}if(t){p.obj.height=t;p.embed.height=t}if(v){p.obj.style["float"]=v}else{if(z){p.obj.style["vertical-align"]=z}}if(q.css){r={margin:q.css}}else{r={"margin-top":q.top,"margin-right":q.right,"margin-bottom":q.bottom,"margin-left":q.left}}p.obj.style=a.extend({},p.obj.style,r);if(this.placeholder&&A){k=this.rte.filter.scripts[A]||{};p=a.extend(true,k,p);delete p.obj.style.width;delete p.obj.style.height;delete p.embed.style.width;delete p.embed.style.height;this.rte.filter.scripts[A]=p;this.placeholder.removeAttr("class")
}else{var j="media"+Math.random().toString().substring(2);this.rte.filter.scripts[j]=p;this.placeholder=a(this.rte.dom.create("img")).attr("rel",j).attr("src",this.rte.filter.url+"pixel.gif");var u=true}this.placeholder.attr("title",this.rte.utils.encode(g)).attr("width",B||150).attr("height",t||100).addClass("elrte-protected elrte-media elrte-media-"+x).css(p.obj.style);if(v){this.placeholder.css("float",v).css("vertical-align","")}else{if(z){this.placeholder.css("float","").css("vertical-align",z)
}else{this.placeholder.css("float","").css("vertical-align","")}}if(u){this.rte.window.focus();this.rte.selection.restoreIERange();this.rte.selection.insertNode(this.placeholder.get(0))}}};this.update=function(){this.domElem.removeClass("disabled");var g=this.rte.selection.getNode();this.domElem.toggleClass("active",g&&g.nodeName=="IMG"&&a(g).hasClass("elrte-media"))}}})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.fontname=function(f,c){this.constructor.prototype.constructor.call(this,f,c);
var b=this;var g={tpl:'<span style="font-family:%val">%label</span>',select:function(h){b.set(h)},src:{"":this.rte.i18n("Font"),"andale mono,sans-serif":"Andale Mono","arial,helvetica,sans-serif":"Arial","arial black,gadget,sans-serif":"Arial Black","book antiqua,palatino,sans-serif":"Book Antiqua","comic sans ms,cursive":"Comic Sans MS","courier new,courier,monospace":"Courier New","georgia,palatino,serif":"Georgia","helvetica,sans-serif":"Helvetica","impact,sans-serif":"Impact","lucida console,monaco,monospace":"Lucida console","lucida sans unicode,lucida grande,sans-serif":"Lucida grande","tahoma,sans-serif":"Tahoma","times new roman,times,serif":"Times New Roman","trebuchet ms,lucida grande,verdana,sans-serif":"Trebuchet MS","verdana,geneva,sans-serif":"Verdana"}};
this.select=this.domElem.elSelect(g);this.command=function(){};this.set=function(j){this.rte.history.add();var h=this.rte.selection.selected({filter:"textContainsNodes"});a.each(h,function(){$this=/^(THEAD|TFOOT|TBODY|COL|COLGROUP|TR)$/.test(this.nodeName)?a(this).find("td,th"):a(this);a(this).css("font-family",j).find("[style]").css("font-family","")});this.rte.ui.update()};this.update=function(){this.domElem.removeClass("disabled");var j=this.rte.selection.getNode();if(j.nodeType!=1){j=j.parentNode
}var h=a(j).css("font-family");h=h?h.toString().toLowerCase().replace(/,\s+/g,",").replace(/'|"/g,""):"";this.select.val(g.src[h]?h:"")}}})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.fontsize=function(f,c){this.constructor.prototype.constructor.call(this,f,c);var b=this;var g={labelTpl:"%label",tpl:'<span style="font-size:%val;line-height:1.2em">%label</span>',select:function(h){b.set(h)},src:{"":this.rte.i18n("Font size"),"xx-small":this.rte.i18n("Small (8pt)"),"x-small":this.rte.i18n("Small (10px)"),small:this.rte.i18n("Small (12pt)"),medium:this.rte.i18n("Normal (14pt)"),large:this.rte.i18n("Large (18pt)"),"x-large":this.rte.i18n("Large (24pt)"),"xx-large":this.rte.i18n("Large (36pt)")}};
this.select=this.domElem.elSelect(g);this.command=function(){};this.set=function(j){this.rte.history.add();var h=this.rte.selection.selected({filter:"textContainsNodes"});a.each(h,function(){$this=/^(THEAD|TFOOT|TBODY|COL|COLGROUP|TR)$/.test(this.nodeName)?a(this).find("td,th"):a(this);$this.css("font-size",j).find("[style]").css("font-size","")});this.rte.ui.update()};this.update=function(){this.domElem.removeClass("disabled");var h=this.rte.selection.getNode();this.select.val((m=this.rte.dom.attr(h,"style").match(/font-size:\s*([^;]+)/i))?m[1]:"")
}}})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.forecolor=function(f,c){var b=this;this.constructor.prototype.constructor.call(this,f,c);var g={"class":"",palettePosition:"outer",color:this.defaultColor,update:function(h){b.indicator.css("background-color",h)},change:function(h){b.set(h)}};this.defaultColor=this.name=="forecolor"?"#000000":"#ffffff";this.picker=this.domElem.elColorPicker(g);this.indicator=a("<div />").addClass("color-indicator").prependTo(this.domElem);this.command=function(){};
this.set=function(k){if(!this.rte.selection.collapsed()){this.rte.history.add();var h=this.rte.selection.selected({collapse:false,wrap:"text"}),j=this.name=="forecolor"?"color":"background-color";a.each(h,function(){if(/^(THEAD|TBODY|TFOOT|TR)$/.test(this.nodeName)){a(this).find("td,th").each(function(){a(this).css(j,k).find("*").css(j,"")})}else{a(this).css(j,k).find("*").css(j,"")}});this.rte.ui.update(true)}};this.update=function(){this.domElem.removeClass("disabled");var h=this.rte.selection.getNode();
this.picker.val(this.rte.utils.rgb2hex(a(h.nodeType!=1?h.parentNode:h).css(this.name=="forecolor"?"color":"background-color"))||this.defaultColor)}};elRTE.prototype.ui.prototype.buttons.hilitecolor=elRTE.prototype.ui.prototype.buttons.forecolor})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.formatblock=function(f,c){this.constructor.prototype.constructor.call(this,f,c);var h=this.rte.browser.msie?function(j){b.val=j;b.constructor.prototype.command.call(b)}:function(j){b.ieCommand(j)};
var b=this;var g={labelTpl:"%label",tpls:{"":"%label"},select:function(j){b.formatBlock(j)},src:{span:this.rte.i18n("Format"),h1:this.rte.i18n("Heading 1"),h2:this.rte.i18n("Heading 2"),h3:this.rte.i18n("Heading 3"),h4:this.rte.i18n("Heading 4"),h5:this.rte.i18n("Heading 5"),h6:this.rte.i18n("Heading 6"),p:this.rte.i18n("Paragraph"),address:this.rte.i18n("Address"),pre:this.rte.i18n("Preformatted"),div:this.rte.i18n("Normal (DIV)")}};this.select=this.domElem.elSelect(g);this.command=function(){};
this.formatBlock=function(u){function t(z,v){function x(A){a(A).find("h1,h2,h3,h4,h5,h6,p,address,pre").each(function(){a(this).replaceWith(a(this).html())});return A}if(/^(LI|DT|DD|TD|TH|CAPTION)$/.test(z.nodeName)){!b.rte.dom.isEmpty(z)&&b.rte.dom.wrapContents(x(z),v)}else{if(/^(UL|OL|DL|TABLE)$/.test(z.nodeName)){b.rte.dom.wrap(z,v)}else{!b.rte.dom.isEmpty(z)&&a(x(z)).replaceWith(a(b.rte.dom.create(v)).html(a(z).html()))}}}this.rte.history.add();var w=u.toUpperCase(),p,o,r,q=this.rte.selection.collapsed(),k=this.rte.selection.getBookmark(),j=this.rte.selection.selected({collapsed:true,blocks:true,filter:"textContainsNodes",wrap:"inline",tag:"span"});
l=j.length,s=a(j[0]).prev(),e=a(j[j.length-1]).next();while(l--){o=j[l];r=a(o);if(w=="DIV"||w=="SPAN"){if(/^(H[1-6]|P|ADDRESS|PRE)$/.test(o.nodeName)){r.replaceWith(a(this.rte.dom.create("div")).html(r.html()||""))}}else{if(/^(THEAD|TBODY|TFOOT|TR)$/.test(o.nodeName)){r.find("td,th").each(function(){t(this,w)})}else{if(o.nodeName!=w){t(o,w)}}}}this.rte.selection.moveToBookmark(k);this.rte.ui.update(true)};this.update=function(){this.domElem.removeClass("disabled");var j=this.rte.dom.selfOrParent(this.rte.selection.getNode(),/^(H[1-6]|P|ADDRESS|PRE)$/);
this.select.val(j?j.nodeName.toLowerCase():"span")}}})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.fullscreen=function(g,f){var b=this;this.constructor.prototype.constructor.call(this,g,f);this.active=true;this.editor=g.editor;this.wz=g.workzone;this.height=0;this.delta=0;this._class="el-fullscreen";setTimeout(function(){b.height=b.wz.height();b.delta=b.editor.outerHeight()-b.height},50);function c(){b.wz.height(a(window).height()-b.delta);b.rte.updateHeight()}this.command=function(){var B=a(window),u=this.editor,k=u.parents().filter(function(h,p){return !/^(html|body)$/i.test(p.nodeName)&&a(p).css("position")=="relative"
}),q=this.wz,z=this._class,t=u.hasClass(z),j=this.rte,C=this.rte.selection,o=a.browser.mozilla,A,r;function x(){if(o){A=C.getBookmark()}}function v(){if(o){b.wz.children().toggle();b.rte.source.focus();b.wz.children().toggle();C.moveToBookmark(A)}}x();k.css("position",t?"relative":"static");if(t){u.removeClass(z);q.height(this.height);B.unbind("resize",c);this.domElem.removeClass("active")}else{u.addClass(z).removeAttr("style");q.height(B.height()-this.delta).css("width","100%");B.bind("resize",c);
this.domElem.addClass("active")}j.updateHeight();j.resizable(t);v()};this.update=function(){this.domElem.removeClass("disabled")}}})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.horizontalrule=function(f,c){this.constructor.prototype.constructor.call(this,f,c);var b=this;this.src={width:a('<input type="text" />').attr({name:"width",size:4}).css("text-align","right"),wunit:a("<select />").attr("name","wunit").append(a("<option />").val("%").text("%")).append(a("<option />").val("px").text("px")).val("%"),height:a('<input type="text" />').attr({name:"height",size:4}).css("text-align","right"),bg:a("<div />"),border:a("<div />"),"class":a('<input type="text" />').css("width","100%"),style:a('<input type="text" />').css("width","100%")};
this.command=function(){this.src.bg.elColorPicker({palettePosition:"outer","class":"el-colorpicker ui-icon ui-icon-pencil"});var k=this.rte.selection.getEnd();this.hr=k.nodeName=="HR"?a(k):a(f.doc.createElement("hr")).css({width:"100%",height:"1px"});this.src.border.elBorderSelect({styleHeight:73,value:this.hr});var g=this.hr.css("width")||this.hr.attr("width");this.src.width.val(parseInt(g)||100);this.src.wunit.val(g.indexOf("px")!=-1?"px":"%");this.src.height.val(this.rte.utils.toPixels(this.hr.css("height")||this.hr.attr("height"))||1);
this.src.bg.val(this.rte.utils.color2Hex(this.hr.css("background-color")));this.src["class"].val(this.rte.dom.attr(this.hr,"class"));this.src.style.val(this.rte.dom.attr(this.hr,"style"));var h={rtl:this.rte.rtl,submit:function(o,p){o.stopPropagation();o.preventDefault();b.set();p.close()},dialog:{title:this.rte.i18n("Horizontal rule")}};var j=new elDialogForm(h);j.append([this.rte.i18n("Width"),a("<span />").append(this.src.width).append(this.src.wunit)],null,true).append([this.rte.i18n("Height"),a("<span />").append(this.src.height).append(" px")],null,true).append([this.rte.i18n("Border"),this.src.border],null,true).append([this.rte.i18n("Background"),this.src.bg],null,true).append([this.rte.i18n("Css class"),this.src["class"]],null,true).append([this.rte.i18n("Css style"),this.src.style],null,true).open()
};this.update=function(){this.domElem.removeClass("disabled");if(this.rte.selection.getEnd().nodeName=="HR"){this.domElem.addClass("active")}else{this.domElem.removeClass("active")}};this.set=function(){this.rte.history.add();!this.hr.parentNode&&this.rte.selection.insertNode(this.hr.get(0));var h={noshade:true,style:this.src.style.val()};var g=this.src.border.val();var j={width:(parseInt(this.src.width.val())||100)+this.src.wunit.val(),height:parseInt(this.src.height.val())||1,"background-color":this.src.bg.val(),border:g.width&&g.style?g.width+" "+g.style+" "+g.color:""};
this.hr.removeAttr("class").removeAttr("style").removeAttr("width").removeAttr("height").removeAttr("align").attr(h).css(j);if(this.src["class"].val()){this.hr.attr("class",this.src["class"].val())}this.rte.ui.update()}}})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.image=function(b,c){this.constructor.prototype.constructor.call(this,b,c);var q=this,b=q.rte,h=0,f=0,p=0,g=null,j=function(t){a.each(q.src,function(u,v){a.each(v,function(x,w){if(x=="src"&&t){return}w.val("")})})},o=function(t){a.each(q.src,function(u,v){a.each(v,function(E,B){var C,x,D,A,z;
if(E=="width"){C=t.width()}else{if(E=="height"){C=t.height()}else{if(E=="border"){C="";z=t.css("border")||b.utils.parseStyle(t.attr("style")).border||"";if(z){x=z.match(/(\d(px|em|%))/);D=z.match(/(#[a-z0-9]+)/);C={width:x?x[1]:z,style:z,color:b.utils.color2Hex(D?D[1]:z)}}}else{if(E=="margin"){C=t}else{if(E=="align"){C=t.css("float");if(C!="left"&&C!="right"){C=t.css("vertical-align")}}else{C=t.attr(E)||""}}}}}if(u=="events"){C=b.utils.trimEventCallback(C)}B.val(C)})})},k=function(){var t=q.src.main.src.val();
j(true);if(!t){q.preview.children("img").remove();q.prevImg=null}else{if(q.prevImg){q.prevImg.removeAttr("src").removeAttr("style").removeAttr("class").removeAttr("id").removeAttr("title").removeAttr("alt").removeAttr("longdesc");a.each(q.src.events,function(v,u){q.prevImg.removeAttr(v)})}else{q.prevImg=a("<img/>").prependTo(q.preview)}q.prevImg.load(function(){q.prevImg.unbind("load");setTimeout(function(){f=q.prevImg.width();p=q.prevImg.height();h=(f/p).toFixed(2);q.src.main.width.val(f);q.src.main.height.val(p)
},100)}).attr("src",t)}},r=function(v){var t=parseInt(q.src.main.width.val())||0,u=parseInt(q.src.main.height.val())||0;if(q.prevImg){if(t&&u){if(v.target===q.src.main.width[0]){u=parseInt(t/h)}else{t=parseInt(u*h)}}else{t=f;u=p}q.src.main.height.val(u);q.src.main.width.val(t);q.prevImg.width(t).height(u);q.src.adv.style.val(q.prevImg.attr("style"))}};this.img=null;this.prevImg=null;this.preview=a('<div class="elrte-image-preview"/>').text("Proin elit arcu, rutrum commodo, vehicula tempus, commodo a, risus. Curabitur nec arcu. Donec sollicitudin mi sit amet mauris. Nam elementum quam ullamcorper ante. Etiam aliquet massa et lorem. Mauris dapibus lacus auctor risus. Aenean tempor ullamcorper leo. Vivamus sed magna quis ligula eleifend adipiscing. Duis orci. Aliquam sodales tortor vitae ipsum. Aliquam nulla. Duis aliquam molestie erat. Ut et mauris vel pede varius sollicitudin");
this.init=function(){this.labels={main:"Properies",link:"Link",adv:"Advanced",events:"Events",id:"ID","class":"Css class",style:"Css style",longdesc:"Detail description URL",href:"URL",target:"Open in",title:"Title"};this.src={main:{src:a('<input type="text" />').css("width","100%").change(k),title:a('<input type="text" />').css("width","100%"),alt:a('<input type="text" />').css("width","100%"),width:a('<input type="text" />').attr("size",5).css("text-align","right").change(r),height:a('<input type="text" />').attr("size",5).css("text-align","right").change(r),margin:a("<div />").elPaddingInput({type:"margin",change:function(){var t=q.src.main.margin.val();
if(q.prevImg){if(t.css){q.prevImg.css("margin",t.css)}else{q.prevImg.css({"margin-left":t.left,"margin-top":t.top,"margin-right":t.right,"margin-bottom":t.bottom})}}}}),align:a("<select />").css("width","100%").append(a("<option />").val("").text(this.rte.i18n("Not set","dialogs"))).append(a("<option />").val("left").text(this.rte.i18n("Left"))).append(a("<option />").val("right").text(this.rte.i18n("Right"))).append(a("<option />").val("top").text(this.rte.i18n("Top"))).append(a("<option />").val("text-top").text(this.rte.i18n("Text top"))).append(a("<option />").val("middle").text(this.rte.i18n("middle"))).append(a("<option />").val("baseline").text(this.rte.i18n("Baseline"))).append(a("<option />").val("bottom").text(this.rte.i18n("Bottom"))).append(a("<option />").val("text-bottom").text(this.rte.i18n("Text bottom"))).change(function(){var u=a(this).val(),t={"float":"","vertical-align":""};
if(q.prevImg){if(u=="left"||u=="right"){t["float"]=u;t["vertical-align"]=""}else{if(u){t["float"]="";t["vertical-align"]=u}}q.prevImg.css(t)}}),border:a("<div />").elBorderSelect({name:"border",change:function(){var t=q.src.main.border.val();if(q.prevImg){q.prevImg.css("border",t.width?t.width+" "+t.style+" "+t.color:"")}}})},adv:{},events:{}};a.each(["id","class","style","longdesc"],function(u,t){q.src.adv[t]=a('<input type="text" style="width:100%" />')});this.src.adv["class"].change(function(){if(q.prevImg){q.prevImg.attr("class",a(this).val())
}});this.src.adv.style.change(function(){if(q.prevImg){q.prevImg.attr("style",a(this).val());o(q.prevImg)}});a.each(["onblur","onfocus","onclick","ondblclick","onmousedown","onmouseup","onmouseover","onmouseout","onmouseleave","onkeydown","onkeypress","onkeyup"],function(){q.src.events[this]=a('<input type="text"  style="width:100%"/>')})};this.command=function(){!this.src&&this.init();var t,w={rtl:b.rtl,submit:function(z,A){z.stopPropagation();z.preventDefault();q.set();u.close()},close:function(){g&&b.selection.moveToBookmark(g)
},dialog:{autoOpen:false,width:500,position:"top",title:b.i18n("Image"),resizable:true,open:function(){a.fn.resizable&&a(this).parents(".ui-dialog:first").resizable("option","alsoResize",".elrte-image-preview")}}},u=new elDialogForm(w),v=!!b.options.fmOpen,x=v?a('<div class="elrte-image-src-fm"><span class="ui-state-default ui-corner-all"><span class="ui-icon ui-icon-folder-open"/></span></div>').append(this.src.main.src.css("width","87%")):this.src.main.src;j();this.preview.children("img").remove();
this.prevImg=null;t=b.selection.getEnd();this.img=t.nodeName=="IMG"&&!a(t).is(".elrte-protected")?a(t):a("<img/>");g=b.selection.getBookmark();if(v){x.children(".ui-state-default").click(function(){b.options.fmOpen(function(z){q.src.main.src.val(z).change()})}).hover(function(){a(this).toggleClass("ui-state-hover")})}u.tab("main",this.rte.i18n("Properies")).append([this.rte.i18n("Image URL"),x],"main",true).append([this.rte.i18n("Title"),this.src.main.title],"main",true).append([this.rte.i18n("Alt text"),this.src.main.alt],"main",true).append([this.rte.i18n("Size"),a("<span />").append(this.src.main.width).append(" x ").append(this.src.main.height).append(" px")],"main",true).append([this.rte.i18n("Alignment"),this.src.main.align],"main",true).append([this.rte.i18n("Margins"),this.src.main.margin],"main",true).append([this.rte.i18n("Border"),this.src.main.border],"main",true);
u.append(a("<fieldset><legend>"+this.rte.i18n("Preview")+"</legend></fieldset>").append(this.preview),"main");a.each(this.src,function(A,z){if(A=="main"){return}u.tab(A,b.i18n(q.labels[A]));a.each(z,function(B,C){q.src[A][B].val(A=="events"?b.utils.trimEventCallback(q.img.attr(B)):q.img.attr(B)||"");u.append([b.i18n(q.labels[B]||B),q.src[A][B]],A,true)})});u.open();if(this.img.attr("src")){o(this.img);this.prevImg=this.img.clone().prependTo(this.preview);h=(this.img.width()/this.img.height()).toFixed(2);
f=parseInt(this.img.width());p=parseInt(this.img.height())}};this.set=function(){var u=this.src.main.src.val(),t;this.rte.history.add();g&&b.selection.moveToBookmark(g);if(!u){t=b.dom.selfOrParentLink(this.img[0]);t&&t.remove();return this.img.remove()}!this.img[0].parentNode&&(this.img=a(this.rte.doc.createElement("img")));this.img.attr("src",u).attr("style",this.src.adv.style.val());a.each(this.src,function(v,w){a.each(w,function(x,A){var B=A.val(),z;switch(x){case"width":q.img.css("width",B);break;
case"height":q.img.css("height",B);break;case"align":q.img.css(B=="left"||B=="right"?"float":"vertical-align",B);break;case"margin":if(B.css){q.img.css("margin",B.css)}else{q.img.css({"margin-left":B.left,"margin-top":B.top,"margin-right":B.right,"margin-bottom":B.bottom})}break;case"border":if(!B.width){B=""}else{B="border:"+B.css+";"+a.trim((q.img.attr("style")||"").replace(/border\-[^;]+;?/ig,""));x="style";q.img.attr("style",B);return}break;case"src":case"style":return;default:B?q.img.attr(x,B):q.img.removeAttr(x)
}})});!this.img[0].parentNode&&b.selection.insertNode(this.img[0]);this.rte.ui.update()};this.update=function(){this.domElem.removeClass("disabled");var u=this.rte.selection.getEnd(),t=a(u);if(u.nodeName=="IMG"&&!t.hasClass("elrte-protected")){this.domElem.addClass("active")}else{this.domElem.removeClass("active")}}}})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.indent=function(f,c){this.constructor.prototype.constructor.call(this,f,c);var b=this;this.command=function(){this.rte.history.add();
var h=this.rte.selection.selected({collapsed:true,blocks:true,wrap:"inline",tag:"p"});function g(q){var o=/(IMG|HR|TABLE|EMBED|OBJECT)/.test(q.nodeName)?"margin-left":"padding-left";var p=b.rte.dom.attr(q,"style").indexOf(o)!=-1?parseInt(a(q).css(o))||0:0;a(q).css(o,p+40+"px")}for(var j=0;j<h.length;j++){if(/^(TABLE|THEAD|TFOOT|TBODY|COL|COLGROUP|TR)$/.test(h[j].nodeName)){a(h[j]).find("td,th").each(function(){g(this)})}else{if(/^LI$/.test(h[j].nodeName)){var k=a(h[j]);a(this.rte.dom.create(h[j].parentNode.nodeName)).append(a(this.rte.dom.create("li")).html(k.html()||"")).appendTo(k.html("&nbsp;"))
}else{g(h[j])}}}this.rte.ui.update()};this.update=function(){this.domElem.removeClass("disabled")}}})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.justifyleft=function(c,b){this.constructor.prototype.constructor.call(this,c,b);this.align=this.name=="justifyfull"?"justify":this.name.replace("justify","");this.command=function(){var g=this.rte.selection.selected({collapsed:true,blocks:true,tag:"div"}),f=g.length;f&&this.rte.history.add();while(f--){this.rte.dom.filter(g[f],"textNodes")&&a(g[f]).css("text-align",this.align)
}this.rte.ui.update()};this.update=function(){var f=this.rte.selection.getNode(),g=f.nodeName=="BODY"?f:this.rte.dom.selfOrParent(f,"textNodes")||(f.parentNode&&f.parentNode.nodeName=="BODY"?f.parentNode:null);if(g){this.domElem.removeClass("disabled").toggleClass("active",a(g).css("text-align")==this.align)}else{this.domElem.addClass("disabled")}}};elRTE.prototype.ui.prototype.buttons.justifycenter=elRTE.prototype.ui.prototype.buttons.justifyleft;elRTE.prototype.ui.prototype.buttons.justifyright=elRTE.prototype.ui.prototype.buttons.justifyleft;
elRTE.prototype.ui.prototype.buttons.justifyfull=elRTE.prototype.ui.prototype.buttons.justifyleft})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.link=function(f,c){this.constructor.prototype.constructor.call(this,f,c);var b=this;this.img=false;this.bm;function g(){b.labels={id:"ID","class":"Css class",style:"Css style",dir:"Script direction",lang:"Language",charset:"Charset",type:"Target MIME type",rel:"Relationship page to target (rel)",rev:"Relationship target to page (rev)",tabindex:"Tab index",accesskey:"Access key"};
b.src={main:{href:a('<input type="text" />'),title:a('<input type="text" />'),anchor:a("<select />").attr("name","anchor"),target:a("<select />").append(a("<option />").text(b.rte.i18n("In this window")).val("")).append(a("<option />").text(b.rte.i18n("In new window (_blank)")).val("_blank"))},popup:{use:a('<input type="checkbox" />'),url:a('<input type="text" />').val("http://"),name:a('<input type="text" />'),width:a('<input type="text" />').attr({size:6,title:b.rte.i18n("Width")}).css("text-align","right"),height:a('<input type="text" />').attr({size:6,title:b.rte.i18n("Height")}).css("text-align","right"),left:a('<input type="text" />').attr({size:6,title:b.rte.i18n("Left")}).css("text-align","right"),top:a('<input type="text" />').attr({size:6,title:b.rte.i18n("Top")}).css("text-align","right"),location:a('<input type="checkbox" />'),menubar:a('<input type="checkbox" />'),toolbar:a('<input type="checkbox" />'),scrollbars:a('<input type="checkbox" />'),status:a('<input type="checkbox" />'),resizable:a('<input type="checkbox" />'),dependent:a('<input type="checkbox" />'),retfalse:a('<input type="checkbox" />').attr("checked",true)},adv:{id:a('<input type="text" />'),"class":a('<input type="text" />'),style:a('<input type="text" />'),dir:a("<select />").append(a("<option />").text(b.rte.i18n("Not set")).val("")).append(a("<option />").text(b.rte.i18n("Left to right")).val("ltr")).append(a("<option />").text(b.rte.i18n("Right to left")).val("rtl")),lang:a('<input type="text" />'),charset:a('<input type="text" />'),type:a('<input type="text" />'),rel:a('<input type="text" />'),rev:a('<input type="text" />'),tabindex:a('<input type="text" />'),accesskey:a('<input type="text" />')},events:{}};
a.each(["onblur","onfocus","onclick","ondblclick","onmousedown","onmouseup","onmouseover","onmouseout","onmouseleave","onkeydown","onkeypress","onkeyup"],function(){b.src.events[this]=a('<input type="text" />')});a.each(b.src,function(){for(var j in this){var h=this[j].attr("type");if(!h||(h=="text"&&!this[j].attr("size"))){this[j].css("width","100%")}}})}this.command=function(){var p=this.rte.selection.getNode(),o,u,x,h,t,j,w,k,z;!this.src&&g();this.bm=this.rte.selection.getBookmark();function q(r){return r.nodeName=="A"&&r.href
}this.link=this.rte.dom.selfOrParentLink(p);if(!this.link){o=a.browser.msie?this.rte.selection.selected():this.rte.selection.selected({wrap:false});if(o.length){for(u=0;u<o.length;u++){if(q(o[u])){this.link=o[u];break}}if(!this.link){this.link=this.rte.dom.parent(o[0],q)||this.rte.dom.parent(o[o.length-1],q)}}}this.link=this.link?a(this.link):a(this.rte.doc.createElement("a"));this.img=p.nodeName=="IMG"?p:null;this.updatePopup();this.src.main.anchor.empty();a('a[href!=""][name]',this.rte.doc).each(function(){var r=a(this).attr("name");
b.src.main.anchor.append(a("<option />").val(r).text(r))});if(this.src.main.anchor.children().length){this.src.main.anchor.prepend(a("<option />").val("").text(this.rte.i18n("Select bookmark"))).change(function(){var r=a(this).val();if(r){b.src.main.href.val("#"+r)}})}h={rtl:this.rte.rtl,submit:function(r,v){r.stopPropagation();r.preventDefault();b.set();v.close()},tabs:{show:function(v,r){if(r.index==3){b.updateOnclick()}}},close:function(){b.rte.browser.msie&&b.rte.selection.restoreIERange()},dialog:{width:"auto",width:430,title:this.rte.i18n("Link")}};
d=new elDialogForm(h);t=a("<div />").append(a("<label />").append(this.src.popup.location).append(this.rte.i18n("Location bar"))).append(a("<label />").append(this.src.popup.menubar).append(this.rte.i18n("Menu bar"))).append(a("<label />").append(this.src.popup.toolbar).append(this.rte.i18n("Toolbar"))).append(a("<label />").append(this.src.popup.scrollbars).append(this.rte.i18n("Scrollbars")));j=a("<div />").append(a("<label />").append(this.src.popup.status).append(this.rte.i18n("Status bar"))).append(a("<label />").append(this.src.popup.resizable).append(this.rte.i18n("Resizable"))).append(a("<label />").append(this.src.popup.dependent).append(this.rte.i18n("Depedent"))).append(a("<label />").append(this.src.popup.retfalse).append(this.rte.i18n("Add return false")));
d.tab("main",this.rte.i18n("Properies")).tab("popup",this.rte.i18n("Popup")).tab("adv",this.rte.i18n("Advanced")).tab("events",this.rte.i18n("Events")).append(a("<label />").append(this.src.popup.use).append(this.rte.i18n("Open link in popup window")),"popup").separator("popup").append([this.rte.i18n("URL"),this.src.popup.url],"popup",true).append([this.rte.i18n("Window name"),this.src.popup.name],"popup",true).append([this.rte.i18n("Window size"),a("<span />").append(this.src.popup.width).append(" x ").append(this.src.popup.height).append(" px")],"popup",true).append([this.rte.i18n("Window position"),a("<span />").append(this.src.popup.left).append(" x ").append(this.src.popup.top).append(" px")],"popup",true).separator("popup").append([t,j],"popup",true);
w=this.link.get(0);k=this.rte.dom.attr(w,"href");this.src.main.href.val(k).change(function(){a(this).val(b.rte.utils.absoluteURL(a(this).val()))});if(this.rte.options.fmAllow&&this.rte.options.fmOpen){var z=a("<span />").append(this.src.main.href.css("width","87%")).append(a("<span />").addClass("ui-state-default ui-corner-all").css({"float":"right","margin-right":"3px"}).attr("title",b.rte.i18n("Open file manger")).append(a("<span />").addClass("ui-icon ui-icon-folder-open")).click(function(){b.rte.options.fmOpen(function(r){b.src.main.href.val(r).change()
})}).hover(function(){a(this).addClass("ui-state-hover")},function(){a(this).removeClass("ui-state-hover")}));d.append([this.rte.i18n("Link URL"),z],"main",true)}else{d.append([this.rte.i18n("Link URL"),this.src.main.href],"main",true)}this.src.main.href.change();d.append([this.rte.i18n("Title"),this.src.main.title.val(this.rte.dom.attr(w,"title"))],"main",true);if(this.src.main.anchor.children().length){d.append([this.rte.i18n("Bookmark"),this.src.main.anchor.val(k)],"main",true)}if(!(this.rte.options.doctype.match(/xhtml/)&&this.rte.options.doctype.match(/strict/))){d.append([this.rte.i18n("Target"),this.src.main.target.val(this.link.attr("target")||"")],"main",true)
}for(var p in this.src.adv){this.src.adv[p].val(this.rte.dom.attr(w,p));d.append([this.rte.i18n(this.labels[p]?this.labels[p]:p),this.src.adv[p]],"adv",true)}for(var p in this.src.events){var x=this.rte.utils.trimEventCallback(this.rte.dom.attr(w,p));this.src.events[p].val(x);d.append([this.rte.i18n(this.labels[p]?this.labels[p]:p),this.src.events[p]],"events",true)}this.src.popup.use.change(function(){var r=a(this).attr("checked");a.each(b.src.popup,function(){if(a(this).attr("name")!="use"){if(r){a(this).removeAttr("disabled")
}else{a(this).attr("disabled",true)}}})});this.src.popup.use.change();d.open()};this.update=function(){var h=this.rte.selection.getNode();if(this.rte.dom.selfOrParentLink(h)){this.domElem.removeClass("disabled").addClass("active")}else{if(this.rte.dom.selectionHas(function(j){return j.nodeName=="A"&&j.href})){this.domElem.removeClass("disabled").addClass("active")}else{if(!this.rte.selection.collapsed()||h.nodeName=="IMG"){this.domElem.removeClass("disabled active")}else{this.domElem.addClass("disabled").removeClass("active")
}}}};this.updatePopup=function(){var h=""+this.link.attr("onclick");if(h.length>0&&(m=h.match(/window.open\('([^']+)',\s*'([^']*)',\s*'([^']*)'\s*.*\);\s*(return\s+false)?/))){this.src.popup.use.attr("checked","on");this.src.popup.url.val(m[1]);this.src.popup.name.val(m[2]);if(/location=yes/.test(m[3])){this.src.popup.location.attr("checked",true)}if(/menubar=yes/.test(m[3])){this.src.popup.menubar.attr("checked",true)}if(/toolbar=yes/.test(m[3])){this.src.popup.toolbar.attr("checked",true)}if(/scrollbars=yes/.test(m[3])){this.src.popup.scrollbars.attr("checked",true)
}if(/status=yes/.test(m[3])){this.src.popup.status.attr("checked",true)}if(/resizable=yes/.test(m[3])){this.src.popup.resizable.attr("checked",true)}if(/dependent=yes/.test(m[3])){this.src.popup.dependent.attr("checked",true)}if((_m=m[3].match(/width=([^,]+)/))){this.src.popup.width.val(_m[1])}if((_m=m[3].match(/height=([^,]+)/))){this.src.popup.height.val(_m[1])}if((_m=m[3].match(/left=([^,]+)/))){this.src.popup.left.val(_m[1])}if((_m=m[3].match(/top=([^,]+)/))){this.src.popup.top.val(_m[1])}if(m[4]){this.src.popup.retfalse.attr("checked",true)
}}else{a.each(this.src.popup,function(){var j=a(this);if(j.attr("type")=="text"){j.val(j.attr("name")=="url"?"http://":"")}else{if(j.attr("name")=="retfalse"){this.attr("checked",true)}else{j.removeAttr("checked")}}})}};this.updateOnclick=function(){var o=this.src.popup.url.val();if(this.src.popup.use.attr("checked")&&o){var p="";if(this.src.popup.location.attr("checked")){p+="location=yes,"}if(this.src.popup.menubar.attr("checked")){p+="menubar=yes,"}if(this.src.popup.toolbar.attr("checked")){p+="toolbar=yes,"
}if(this.src.popup.scrollbars.attr("checked")){p+="scrollbars=yes,"}if(this.src.popup.status.attr("checked")){p+="status=yes,"}if(this.src.popup.resizable.attr("checked")){p+="resizable=yes,"}if(this.src.popup.dependent.attr("checked")){p+="dependent=yes,"}if(this.src.popup.width.val()){p+="width="+this.src.popup.width.val()+","}if(this.src.popup.height.val()){p+="height="+this.src.popup.height.val()+","}if(this.src.popup.left.val()){p+="left="+this.src.popup.left.val()+","}if(this.src.popup.top.val()){p+="top="+this.src.popup.top.val()+","
}if(p.length>0){p=p.substring(0,p.length-1)}var j=this.src.popup.retfalse.attr("checked")?"return false;":"";var k="window.open('"+o+"', '"+a.trim(this.src.popup.name.val())+"', '"+p+"'); "+j;this.src.events.onclick.val(k);if(!this.src.main.href.val()){this.src.main.href.val("#")}}else{var h=this.src.events.onclick.val();h=h.replace(/window\.open\([^\)]+\)\s*;?\s*return\s*false\s*;?/i,"");this.src.events.onclick.val(h)}};this.set=function(){var j,k;this.updateOnclick();this.rte.selection.moveToBookmark(this.bm);
this.rte.history.add();j=this.rte.utils.absoluteURL(this.src.main.href.val());if(!j){var p=this.rte.selection.getBookmark();this.rte.dom.unwrap(this.link[0]);this.rte.selection.moveToBookmark(p)}else{if(this.img&&this.img.parentNode){this.link=a(this.rte.dom.create("a")).attr("href",j);this.rte.dom.wrap(this.img,this.link[0])}else{if(!this.link[0].parentNode){k="#--el-editor---"+Math.random();this.rte.doc.execCommand("createLink",false,k);this.link=a('a[href="'+k+'"]',this.rte.doc);this.link.each(function(){var r=a(this);
if(!a.trim(r.html())&&!a.trim(r.text())){r.replaceWith(r.text())}})}}this.src.main.href.val(j);for(var o in this.src){if(o!="popup"){for(var q in this.src[o]){if(q!="anchors"){var h=a.trim(this.src[o][q].val());if(h){this.link.attr(q,h)}else{this.link.removeAttr(q)}}}}}this.img&&this.rte.selection.select(this.img)}this.rte.ui.update(true)}}})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.nbsp=function(c,b){this.constructor.prototype.constructor.call(this,c,b);this.command=function(){this.rte.history.add();
this.rte.selection.insertHtml("&nbsp;",true);this.rte.window.focus();this.rte.ui.update()};this.update=function(){this.domElem.removeClass("disabled")}}})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.outdent=function(f,c){this.constructor.prototype.constructor.call(this,f,c);var b=this;this.command=function(){var g=this.find();if(g.node){this.rte.history.add();a(g.node).css(g.type,(g.val>40?g.val-40:0)+"px");this.rte.ui.update()}};this.find=function(j){function g(p){var k={type:"",val:0};
var o;if((o=b.rte.dom.attr(p,"style"))){k.type=o.indexOf("padding-left")!=-1?"padding-left":(o.indexOf("margin-left")!=-1?"margin-left":"");k.val=k.type?parseInt(a(p).css(k.type))||0:0}return k}var j=this.rte.selection.getNode();var h=g(j);if(h.val){h.node=j}else{a.each(this.rte.dom.parents(j,"*"),function(){h=g(this);if(h.val){h.node=this;return h}})}return h};this.update=function(){var g=this.find();if(g.node){this.domElem.removeClass("disabled")}else{this.domElem.addClass("disabled")}}}})(jQuery);
(function(a){elRTE.prototype.ui.prototype.buttons.pagebreak=function(c,b){this.constructor.prototype.constructor.call(this,c,b);a(this.rte.doc.body).bind("mousedown",function(f){if(a(f.target).hasClass("elrte-pagebreak")){f.preventDefault()}});this.command=function(){this.rte.selection.insertHtml('<img src="'+this.rte.filter.url+'pixel.gif" class="elrte-protected elrte-pagebreak"/>',false)};this.update=function(){this.domElem.removeClass("disabled")}}})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.pasteformattext=function(f,c){this.constructor.prototype.constructor.call(this,f,c);
this.iframe=a(document.createElement("iframe")).addClass("el-rte-paste-input");this.doc=null;var b=this;this.command=function(){this.rte.selection.saveIERange();var g=this,h={submit:function(o,p){o.stopPropagation();o.preventDefault();g.paste();p.close()},dialog:{width:500,title:this.rte.i18n("Paste formatted text")}},k=new elDialogForm(h);k.append(this.iframe).open();this.doc=this.iframe.get(0).contentWindow.document;html=this.rte.options.doctype+'<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />';
html+="</head><body> <br /> </body></html>";this.doc.open();this.doc.write(html);this.doc.close();if(!this.rte.browser.msie){try{this.doc.designMode="on"}catch(j){}}else{this.doc.body.contentEditable=true}setTimeout(function(){g.iframe[0].contentWindow.focus()},50)};this.paste=function(){a(this.doc.body).find("[class]").removeAttr("class");var g=a.trim(a(this.doc.body).html());if(g){this.rte.history.add();this.rte.selection.restoreIERange();this.rte.selection.insertHtml(this.rte.filter.wysiwyg2wysiwyg(this.rte.filter.proccess("paste",g)));
this.rte.ui.update(true)}};this.update=function(){this.domElem.removeClass("disabled")}}})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.pastetext=function(f,c){this.constructor.prototype.constructor.call(this,f,c);this.input=a("<textarea />").addClass("el-rte-paste-input");var b=this;this.command=function(){this.rte.browser.msie&&this.rte.selection.saveIERange();var g={submit:function(j,k){j.stopPropagation();j.preventDefault();b.paste();k.close()},dialog:{width:500,title:this.rte.i18n("Paste only text")}};
var h=new elDialogForm(g);h.append(this.input).open()};this.paste=function(){var g=a.trim(this.input.val());if(g){this.rte.history.add();this.rte.browser.msie&&this.rte.selection.restoreIERange();this.rte.selection.insertText(g.replace(/\r?\n/g,"<br />"),true);this.rte.ui.update(true)}this.input.val("")};this.update=function(){this.domElem.removeClass("disabled")}}})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.save=function(c,b){this.constructor.prototype.constructor.call(this,c,b);
this.active=true;this.command=function(){this.rte.save()};this.update=function(){}}})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.smiley=function(f,c){this.constructor.prototype.constructor.call(this,f,c);var b=this;this.img=null;this.url=this.rte.filter.url+"smileys/";this.smileys={smile:"smile.png",happy:"happy.png",tongue:"tongue.png",surprised:"surprised.png",waii:"waii.png",wink:"wink.png",evilgrin:"evilgrin.png",grin:"grin.png",unhappy:"unhappy.png"};this.width=120;this.command=function(){var h=this,j=this.url,o,k,g;
this.rte.browser.msie&&this.rte.selection.saveIERange();k={dialog:{height:120,width:this.width,title:this.rte.i18n("Smiley"),buttons:{}}};o=new elDialogForm(k);a.each(this.smileys,function(q,p){o.append(a('<img src="'+j+p+'" title="'+q+'" id="'+q+'" class="el-rte-smiley"/>').click(function(){h.set(this.id,o)}))});o.open()};this.update=function(){this.domElem.removeClass("disabled");this.domElem.removeClass("active")};this.set=function(g,h){this.rte.browser.msie&&this.rte.selection.restoreIERange();
if(this.smileys[g]){this.img=a(this.rte.doc.createElement("img"));this.img.attr({src:this.url+this.smileys[g],title:g,alt:g});this.rte.selection.insertNode(this.img.get(0));this.rte.ui.update()}h.close()}}})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.stopfloat=function(c,b){this.constructor.prototype.constructor.call(this,c,b);this.find=function(){if(this.rte.selection.collapsed()){var f=this.rte.dom.selfOrParent(this.rte.selection.getEnd(),/^DIV$/);if(f&&(this.rte.dom.attr(f,"clear")||a(f).css("clear")!="none")){return f
}}};this.command=function(){var f;if((f=this.find())){var f=a(f);this.rte.history.add();if(!f.children().length&&!a.trim(f.text()).length){f.remove()}else{f.removeAttr("clear").css("clear","")}}else{this.rte.history.add();this.rte.selection.insertNode(a(this.rte.dom.create("div")).css("clear","both").get(0),true)}this.rte.ui.update(true)};this.update=function(){this.domElem.removeClass("disabled");if(this.find()){this.domElem.addClass("active")}else{this.domElem.removeClass("active")}}}})(jQuery);
(function(a){elRTE.prototype.ui.prototype.buttons.table=function(f,c){this.constructor.prototype.constructor.call(this,f,c);var b=this;this.src=null;this.labels=null;function g(){b.labels={main:"Properies",adv:"Advanced",events:"Events",id:"ID","class":"Css class",style:"Css style",dir:"Script direction",summary:"Summary",lang:"Language",href:"URL"};b.src={main:{caption:a('<input type="text" />'),rows:a('<input type="text" />').attr("size",5).val(2),cols:a('<input type="text" />').attr("size",5).val(2),width:a('<input type="text" />').attr("size",5),wunit:a("<select />").append(a("<option />").val("%").text("%")).append(a("<option />").val("px").text("px")),height:a('<input type="text" />').attr("size",5),hunit:a("<select />").append(a("<option />").val("%").text("%")).append(a("<option />").val("px").text("px")),align:a("<select />").append(a("<option />").val("").text(b.rte.i18n("Not set"))).append(a("<option />").val("left").text(b.rte.i18n("Left"))).append(a("<option />").val("center").text(b.rte.i18n("Center"))).append(a("<option />").val("right").text(b.rte.i18n("Right"))),spacing:a('<input type="text" />').attr("size",5),padding:a('<input type="text" />').attr("size",5),border:a("<div />"),rules:a("<select />").append(a("<option />").val("none").text(b.rte.i18n("No"))).append(a("<option />").val("all").text(b.rte.i18n("Cells"))).append(a("<option />").val("groups").text(b.rte.i18n("Groups"))).append(a("<option />").val("rows").text(b.rte.i18n("Rows"))).append(a("<option />").val("cols").text(b.rte.i18n("Columns"))),margin:a("<div />"),bg:a("<div />"),bgimg:a('<input type="text" />').css("width","90%")},adv:{id:a('<input type="text" />'),summary:a('<input type="text" />'),"class":a('<input type="text" />'),style:a('<input type="text" />'),dir:a("<select />").append(a("<option />").text(b.rte.i18n("Not set")).val("")).append(a("<option />").text(b.rte.i18n("Left to right")).val("ltr")).append(a("<option />").text(b.rte.i18n("Right to left")).val("rtl")),lang:a('<input type="text" />')},events:{}};
a.each(b.src,function(){for(var j in this){this[j].attr("name",j);var h=this[j].get(0).nodeName;if(h=="INPUT"&&j!="bgimg"){this[j].css(this[j].attr("size")?{"text-align":"right"}:{width:"100%"})}else{if(h=="SELECT"&&j!="wunit"&&j!="hunit"){this[j].css("width","100%")}}}});a.each(["onblur","onfocus","onclick","ondblclick","onmousedown","onmouseup","onmouseover","onmouseout","onmouseleave","onkeydown","onkeypress","onkeyup"],function(){b.src.events[this]=a('<input type="text" />').css("width","100%")
});b.src.main.align.change(function(){var j=a(this).val();if(j=="center"){b.src.main.margin.val({left:"auto",right:"auto"})}else{var h=b.src.main.margin.val();if(h.left=="auto"&&h.right=="auto"){b.src.main.margin.val({left:"",right:""})}}});b.src.main.bgimg.change(function(){var h=a(this);h.val(b.rte.utils.absoluteURL(h.val()))})}this.command=function(){var r=this.rte.dom.selfOrParent(this.rte.selection.getNode(),/^TABLE$/);if(this.name=="table"){this.table=a(this.rte.doc.createElement("table"))}else{this.table=r?a(r):a(this.rte.doc.createElement("table"))
}!this.src&&g();this.src.main.border.elBorderSelect({styleHeight:117});this.src.main.bg.elColorPicker({palettePosition:"outer","class":"el-colorpicker ui-icon ui-icon-pencil"});this.src.main.margin.elPaddingInput({type:"margin",value:this.table});if(this.table.parents().length){this.src.main.rows.val("").attr("disabled",true);this.src.main.cols.val("").attr("disabled",true)}else{this.src.main.rows.val(2).removeAttr("disabled");this.src.main.cols.val(2).removeAttr("disabled")}var D=this.table.css("width")||this.table.attr("width");
this.src.main.width.val(parseInt(D)||"");this.src.main.wunit.val(D.indexOf("px")!=-1?"px":"%");var z=this.table.css("height")||this.table.attr("height");this.src.main.height.val(parseInt(z)||"");this.src.main.hunit.val(z&&z.indexOf("px")!=-1?"px":"%");var B=this.table.css("float");this.src.main.align.val("");if(B=="left"||B=="right"){this.src.main.align.val(B)}else{var t=this.table.css("margin-left");var p=this.table.css("margin-right");if(t=="auto"&&p=="auto"){this.src.main.align.val("center")}}this.src.main.border.val(this.table);
this.src.main.rules.val(this.rte.dom.attr(this.table.get(0),"rules"));this.src.main.bg.val(this.table.css("background-color"));var j=(this.table.css("background-image")||"").replace(/url\(([^\)]+)\)/i,"$1");this.src.main.bgimg.val(j!="none"?j:"");var k={rtl:this.rte.rtl,submit:function(h,v){h.stopPropagation();h.preventDefault();b.set();v.close()},dialog:{width:530,title:this.rte.i18n("Table")}};var C=new elDialogForm(k);for(var q in this.src){C.tab(q,this.rte.i18n(this.labels[q]));if(q=="main"){var A=a("<table />").append(a("<tr />").append("<td>"+this.rte.i18n("Rows")+"</td>").append(a("<td />").append(this.src.main.rows))).append(a("<tr />").append("<td>"+this.rte.i18n("Columns")+"</td>").append(a("<td />").append(this.src.main.cols)));
var x=a("<table />").append(a("<tr />").append("<td>"+this.rte.i18n("Width")+"</td>").append(a("<td />").append(this.src.main.width).append(this.src.main.wunit))).append(a("<tr />").append("<td>"+this.rte.i18n("Height")+"</td>").append(a("<td />").append(this.src.main.height).append(this.src.main.hunit)));var u=a("<table />").append(a("<tr />").append("<td>"+this.rte.i18n("Spacing")+"</td>").append(a("<td />").append(this.src.main.spacing.val(this.table.attr("cellspacing")||"")))).append(a("<tr />").append("<td>"+this.rte.i18n("Padding")+"</td>").append(a("<td />").append(this.src.main.padding.val(this.table.attr("cellpadding")||""))));
C.append([this.rte.i18n("Caption"),this.src.main.caption.val(this.table.find("caption").eq(0).text()||"")],"main",true).separator("main").append([A,x,u],"main",true).separator("main").append([this.rte.i18n("Border"),this.src.main.border],"main",true).append([this.rte.i18n("Inner borders"),this.src.main.rules],"main",true).append([this.rte.i18n("Alignment"),this.src.main.align],"main",true).append([this.rte.i18n("Margins"),this.src.main.margin],"main",true).append([this.rte.i18n("Background"),a("<span />").append(a("<span />").css({"float":"left","margin-right":"3px"}).append(this.src.main.bg)).append(this.src.main.bgimg)],"main",true)
}else{for(var o in this.src[q]){var E=this.rte.dom.attr(this.table,o);if(q=="events"){E=this.rte.utils.trimEventCallback(E)}C.append([this.rte.i18n(this.labels[o]?this.labels[o]:o),this.src[q][o].val(E)],q,true)}}}C.open()};this.set=function(){if(!this.table.parents().length){var k=parseInt(this.src.main.rows.val())||0;var B=parseInt(this.src.main.cols.val())||0;if(k<=0||B<=0){return}this.rte.history.add();var D=a(this.rte.doc.createElement("tbody")).appendTo(this.table);for(var u=0;u<k;u++){var C="<tr>";
for(var t=0;t<B;t++){C+="<td>&nbsp;</td>"}D.append(C+"</tr>")}}else{this.table.removeAttr("width").removeAttr("height").removeAttr("border").removeAttr("align").removeAttr("bordercolor").removeAttr("bgcolor").removeAttr("cellspacing").removeAttr("cellpadding").removeAttr("frame").removeAttr("rules").removeAttr("style")}var I=a.trim(this.src.main.caption.val());if(I){if(!this.table.children("caption").length){this.table.prepend("<caption />")}this.table.children("caption").text(I)}else{this.table.children("caption").remove()
}for(var p in this.src){if(p!="main"){for(var o in this.src[p]){var G=a.trim(this.src[p][o].val());if(G){this.table.attr(o,G)}else{this.table.removeAttr(o)}}}}var A,E,H;if((A=parseInt(this.src.main.spacing.val()))&&A>=0){this.table.attr("cellspacing",A)}if((E=parseInt(this.src.main.padding.val()))&&E>=0){this.table.attr("cellpadding",E)}if((H=this.src.main.rules.val())){this.table.attr("rules",H)}var F=parseInt(this.src.main.width.val())||"",x=parseInt(this.src.main.height.val())||"",u=a.trim(this.src.main.bgimg.val()),D=this.src.main.border.val(),q=this.src.main.margin.val(),z=this.src.main.align.val();
this.table.css({width:F?F+this.src.main.wunit.val():"",height:x?x+this.src.main.hunit.val():"",border:a.trim(D.width+" "+D.style+" "+D.color),"background-color":this.src.main.bg.val(),"background-image":u?"url("+u+")":""});if(q.css){this.table.css("margin",q.css)}else{this.table.css({"margin-top":q.top,"margin-right":q.right,"margin-bottom":q.bottom,"margin-left":q.left})}if((z=="left"||z=="right")&&this.table.css("margin-left")!="auto"&&this.table.css("margin-right")!="auto"){this.table.css("float",z)
}if(!this.table.attr("style")){this.table.removeAttr("style")}if(!this.table.parents().length){this.rte.selection.insertNode(this.table.get(0),true)}this.rte.ui.update()};this.update=function(){this.domElem.removeClass("disabled");if(this.name=="tableprops"&&!this.rte.dom.selfOrParent(this.rte.selection.getNode(),/^TABLE$/)){this.domElem.addClass("disabled").removeClass("active")}}};elRTE.prototype.ui.prototype.buttons.tableprops=elRTE.prototype.ui.prototype.buttons.table})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.tablerm=function(c,b){this.constructor.prototype.constructor.call(this,c,b);
this.command=function(){var f=this.rte.dom.parent(this.rte.selection.getNode(),/^TABLE$/);if(f){this.rte.history.add();a(f).remove()}this.rte.ui.update(true)};this.update=function(){if(this.rte.dom.parent(this.rte.selection.getNode(),/^TABLE$/)){this.domElem.removeClass("disabled")}else{this.domElem.addClass("disabled")}}}})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.tbcellprops=function(f,c){this.constructor.prototype.constructor.call(this,f,c);var b=this;this.src=null;this.labels=null;
function g(){b.labels={main:"Properies",adv:"Advanced",events:"Events",id:"ID","class":"Css class",style:"Css style",dir:"Script direction",lang:"Language"};b.src={main:{type:a("<select />").css("width","100%").append(a("<option />").val("td").text(b.rte.i18n("Data"))).append(a("<option />").val("th").text(b.rte.i18n("Header"))),width:a('<input type="text" />').attr("size",4),wunit:a("<select />").append(a("<option />").val("%").text("%")).append(a("<option />").val("px").text("px")),height:a('<input type="text" />').attr("size",4),hunit:a("<select />").append(a("<option />").val("%").text("%")).append(a("<option />").val("px").text("px")),align:a("<select />").css("width","100%").append(a("<option />").val("").text(b.rte.i18n("Not set"))).append(a("<option />").val("left").text(b.rte.i18n("Left"))).append(a("<option />").val("center").text(b.rte.i18n("Center"))).append(a("<option />").val("right").text(b.rte.i18n("Right"))).append(a("<option />").val("justify").text(b.rte.i18n("Justify"))),border:a("<div />"),padding:a("<div />"),bg:a("<div />"),bgimg:a('<input type="text" />').css("width","90%"),apply:a("<select />").css("width","100%").append(a("<option />").val("").text(b.rte.i18n("Current cell"))).append(a("<option />").val("row").text(b.rte.i18n("All cells in row"))).append(a("<option />").val("column").text(b.rte.i18n("All cells in column"))).append(a("<option />").val("table").text(b.rte.i18n("All cells in table")))},adv:{id:a('<input type="text" />'),"class":a('<input type="text" />'),style:a('<input type="text" />'),dir:a("<select />").css("width","100%").append(a("<option />").text(b.rte.i18n("Not set")).val("")).append(a("<option />").text(b.rte.i18n("Left to right")).val("ltr")).append(a("<option />").text(b.rte.i18n("Right to left")).val("rtl")),lang:a('<input type="text" />')},events:{}};
a.each(b.src,function(){for(var h in this){this[h].attr("name",h);if(this[h].attr("type")=="text"&&!this[h].attr("size")&&h!="bgimg"){this[h].css("width","100%")}}});a.each(["onblur","onfocus","onclick","ondblclick","onmousedown","onmouseup","onmouseover","onmouseout","onmouseleave","onkeydown","onkeypress","onkeyup"],function(){b.src.events[this]=a('<input type="text" />').css("width","100%")})}this.command=function(){!this.src&&g();this.cell=this.rte.dom.selfOrParent(this.rte.selection.getNode(),/^(TD|TH)$/);
if(!this.cell){return}this.src.main.type.val(this.cell.nodeName.toLowerCase());this.cell=a(this.cell);this.src.main.border.elBorderSelect({styleHeight:117,value:this.cell});this.src.main.bg.elColorPicker({palettePosition:"outer","class":"el-colorpicker ui-icon ui-icon-pencil"});this.src.main.padding.elPaddingInput({value:this.cell});var j=this.cell.css("width")||this.cell.attr("width");this.src.main.width.val(parseInt(j)||"");this.src.main.wunit.val(j.indexOf("px")!=-1?"px":"%");var q=this.cell.css("height")||this.cell.attr("height");
this.src.main.height.val(parseInt(q)||"");this.src.main.hunit.val(q.indexOf("px")!=-1?"px":"%");this.src.main.align.val(this.cell.attr("align")||this.cell.css("text-align"));this.src.main.bg.val(this.cell.css("background-color"));var t=this.cell.css("background-image");this.src.main.bgimg.val(t&&t!="none"?t.replace(/url\(([^\)]+)\)/i,"$1"):"");this.src.main.apply.val("");var r={rtl:this.rte.rtl,submit:function(h,v){h.stopPropagation();h.preventDefault();b.set();v.close()},dialog:{width:520,title:this.rte.i18n("Table cell properties")}};
var u=new elDialogForm(r);for(var p in this.src){u.tab(p,this.rte.i18n(this.labels[p]));if(p=="main"){u.append([this.rte.i18n("Width"),a("<span />").append(this.src.main.width).append(this.src.main.wunit)],"main",true).append([this.rte.i18n("Height"),a("<span />").append(this.src.main.height).append(this.src.main.hunit)],"main",true).append([this.rte.i18n("Table cell type"),this.src.main.type],"main",true).append([this.rte.i18n("Border"),this.src.main.border],"main",true).append([this.rte.i18n("Alignment"),this.src.main.align],"main",true).append([this.rte.i18n("Paddings"),this.src.main.padding],"main",true).append([this.rte.i18n("Background"),a("<span />").append(a("<span />").css({"float":"left","margin-right":"3px"}).append(this.src.main.bg)).append(this.src.main.bgimg)],"main",true).append([this.rte.i18n("Apply to"),this.src.main.apply],"main",true)
}else{for(var o in this.src[p]){var k=this.cell.attr(o)||"";if(p=="events"){k=this.rte.utils.trimEventCallback(k)}u.append([this.rte.i18n(this.labels[o]?this.labels[o]:o),this.src[p][o].val(k)],p,true)}}}u.open()};this.set=function(){var x=this.cell,B=this.src.main.apply.val();switch(this.src.main.apply.val()){case"row":x=this.cell.parent("tr").children("td,th");break;case"column":x=a(this.rte.dom.tableColumn(this.cell.get(0)));break;case"table":x=this.cell.parents("table").find("td,th");break}for(var o in this.src){if(o!="main"){for(var k in this.src[o]){var C=a.trim(this.src[o][k].val());
if(C){x.attr(k,C)}else{x.removeAttr(k)}}}}x.removeAttr("width").removeAttr("height").removeAttr("border").removeAttr("align").removeAttr("bordercolor").removeAttr("bgcolor");var D=this.src.main.type.val();var A=parseInt(this.src.main.width.val())||"";var r=parseInt(this.src.main.height.val())||"";var q=a.trim(this.src.main.bgimg.val());var z=this.src.main.border.val();var u={width:A?A+this.src.main.wunit.val():"",height:r?r+this.src.main.hunit.val():"","background-color":this.src.main.bg.val(),"background-image":q?"url("+q+")":"",border:a.trim(z.width+" "+z.style+" "+z.color),"text-align":this.src.main.align.val()||""};
var j=this.src.main.padding.val();if(j.css){u.padding=j.css}else{u["padding-top"]=j.top;u["padding-right"]=j.right;u["padding-bottom"]=j.bottom;u["padding-left"]=j.left}x=x.get();a.each(x,function(){var w=this.nodeName.toLowerCase();var F=a(this);if(w!=D){var h={};for(var t in b.src.adv){var p=F.attr(t);if(p){h[t]=p.toString()}}for(var t in b.src.events){var p=F.attr(t);if(p){h[t]=p.toString()}}var G=F.attr("colspan")||1;var E=F.attr("rowspan")||1;if(G>1){h.colspan=G}if(E>1){h.rowspan=E}F.replaceWith(a("<"+D+" />").html(F.html()).attr(h).css(u))
}else{F.css(u)}});this.rte.ui.update()};this.update=function(){if(this.rte.dom.parent(this.rte.selection.getNode(),/^TABLE$/)){this.domElem.removeClass("disabled")}else{this.domElem.addClass("disabled")}}}})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.tbcellsmerge=function(g,f){this.constructor.prototype.constructor.call(this,g,f);var c=this;function b(){var j=c.rte.dom.selfOrParent(c.rte.selection.getStart(),/^(TD|TH)$/);var h=c.rte.dom.selfOrParent(c.rte.selection.getEnd(),/^(TD|TH)$/);
if(j&&h&&j!=h&&a(j).parents("table").get(0)==a(h).parents("table").get(0)){return[j,h]}return null}this.command=function(){var z=b();if(z){var x=this.rte.dom.indexOf(a(z[0]).parent("tr").get(0));var r=this.rte.dom.indexOf(a(z[1]).parent("tr").get(0));var q=Math.min(x,r);var u=Math.max(x,r)-q+1;var j=this.rte.dom.tableColumn(z[0],true,true);var h=this.rte.dom.tableColumn(z[1],true);var B=a.inArray(z[0],j.column);var w=a.inArray(z[1],h.column);var p=j.info.offset[B]<h.info.offset[w]?j:h;var v=j.info.offset[B]>=h.info.offset[w]?j:h;
var k=0;var t=null;var o="";this.rte.history.add();var A=a(a(z[0]).parents("table").eq(0).find("tr").get().slice(q,q+u)).each(function(E){var D=o.length;var C=false;a(this).children("td,th").each(function(){var K=a(this);var I=a.inArray(this,p.column);var H=a.inArray(this,v.column);if(I!=-1||H!=-1){C=I!=-1&&H==-1;var G=parseInt(K.attr("colspan")||1);if(E==0){k+=G}if(I!=-1&&E>0){var L=p.info.delta[I];if(L>0){if(K.css("text-align")=="left"){var F=K.clone(true);K.html("&nbsp;")}else{var F=K.clone().html("&nbsp;")
}F.removeAttr("colspan").removeAttr("id").insertBefore(this);if(L>1){F.attr("colspan",L)}}}if(H!=-1){var L=v.info.delta[H];if(G-L>1){var J=G-L-1;if(K.css("text-align")=="right"){var F=K.clone(true);K.html("&nbsp;")}else{var F=K.clone().html("&nbsp;")}F.removeAttr("colspan").removeAttr("id").insertAfter(this);if(J>1){F.attr("colspan",J)}}}if(!t){t=K}else{o+=K.html();K.remove()}}else{if(C){if(E==0){k+=parseInt(K.attr("colspan")||1)}o+=K.html();K.remove()}}});o+=D!=o.length?"<br />":""});t.removeAttr("colspan").removeAttr("rowspan").html(t.html()+o);
if(k>1){t.attr("colspan",k)}if(u>1){t.attr("rowspan",u)}this.rte.dom.fixTable(a(z[0]).parents("table").get(0))}};this.update=function(){if(b()){this.domElem.removeClass("disabled")}else{this.domElem.addClass("disabled")}}}})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.tbcellsplit=function(c,b){this.constructor.prototype.constructor.call(this,c,b);this.command=function(){var j=this.rte.dom.selfOrParent(this.rte.selection.getNode(),/^(TD|TH)$/);if(j){this.rte.history.add();var k=parseInt(this.rte.dom.attr(j,"colspan"));
var o=parseInt(this.rte.dom.attr(j,"rowspan"));if(k>1||o>1){var u=k-1;var v=o-1;var q=this.rte.dom.parent(j,/^TABLE$/);var p=this.rte.dom.tableMatrix(q);if(u){for(var t=0;t<u;t++){a(this.rte.dom.create(j.nodeName)).html("&nbsp;").insertAfter(j)}}if(v){var x=this.rte.dom.indexesOfCell(j,p);var h=x[0];var g=x[1];for(var f=h+1;f<h+v+1;f++){var w;if(!p[f][g].nodeName){if(p[f][g-1].nodeName){w=p[f][g-1]}else{for(var t=g-1;t>=0;t--){if(p[f][t].nodeName){w=p[f][t];break}}}if(w){for(var t=0;t<=u;t++){a(this.rte.dom.create(w.nodeName)).html("&nbsp;").insertAfter(w)
}}}}}a(j).removeAttr("colspan").removeAttr("rowspan");this.rte.dom.fixTable(q)}}this.rte.ui.update(true)};this.update=function(){var f=this.rte.dom.selfOrParent(this.rte.selection.getNode(),/^(TD|TH)$/);if(f&&(parseInt(this.rte.dom.attr(f,"colspan"))>1||parseInt(this.rte.dom.attr(f,"rowspan"))>1)){this.domElem.removeClass("disabled")}else{this.domElem.addClass("disabled")}}}})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.tbcolbefore=function(f,c){this.constructor.prototype.constructor.call(this,f,c);
var b=this;this.command=function(){var g=this;var h=this.rte.dom.tableColumn(this.rte.selection.getNode(),false,true);if(h.length){this.rte.history.add();a.each(h,function(){var k=a(this);var j=parseInt(k.attr("colspan")||1);if(j>1){k.attr("colspan",j+1)}else{var o=a(g.rte.dom.create(this.nodeName)).html("&nbsp;");if(g.name=="tbcolbefore"){o.insertBefore(this)}else{o.insertAfter(this)}}});this.rte.ui.update()}};this.update=function(){if(this.rte.dom.selfOrParent(this.rte.selection.getNode(),/^(TD|TH)$/)){this.domElem.removeClass("disabled")
}else{this.domElem.addClass("disabled")}}};elRTE.prototype.ui.prototype.buttons.tbcolafter=elRTE.prototype.ui.prototype.buttons.tbcolbefore})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.tbcolrm=function(f,c){this.constructor.prototype.constructor.call(this,f,c);var b=this;this.command=function(){var p=this.rte.selection.getNode();var o=this.rte.dom.selfOrParent(p,/^(TD|TH)$/);var k=a(o).prev("td,th").get(0);var j=a(o).next("td,th").get(0);var g=this.rte.dom.parent(p,/^TABLE$/);var h=this.rte.dom.tableColumn(p,false,true);
if(h.length){this.rte.history.add();a.each(h,function(){var r=a(this);var q=parseInt(r.attr("colspan")||1);if(q>1){r.attr("colspan",q-1)}else{r.remove()}});this.rte.dom.fixTable(g);if(k||j){this.rte.selection.selectContents(k?k:j).collapse(true)}this.rte.ui.update(true)}};this.update=function(){if(this.rte.dom.selfOrParent(this.rte.selection.getNode(),/^(TD|TH)$/)){this.domElem.removeClass("disabled")}else{this.domElem.addClass("disabled")}}}})(jQuery);elRTE.prototype.ui.prototype.buttons.tbrowbefore=function(b,a){this.constructor.prototype.constructor.call(this,b,a);
this.command=function(){var h=this.rte.selection.getNode();var t=this.rte.dom.selfOrParent(h,/^(TD|TH)$/);var f=this.rte.dom.selfOrParent(t,/^TR$/);var w=this.rte.dom.tableMatrix(this.rte.dom.selfOrParent(t,/^TABLE$/));if(t&&f&&w){this.rte.history.add();var u=this.name=="tbrowbefore";var q=$(f).prevAll("tr").length;var j=0;var p=[];function k(c,r){while(r>0){r--;if(w[r]&&w[r][c]&&w[r][c].nodeName){return w[r][c]}}}for(var o=0;o<w[q].length;o++){if(w[q][o]&&w[q][o].nodeName){var v=$(w[q][o]);var g=parseInt(v.attr("colspan")||1);
if(parseInt(v.attr("rowspan")||1)>1){if(u){j+=g}else{p.push(v)}}else{j+=g}}else{if(w[q][o]=="-"){v=k(o,q);v&&p.push($(v))}}}var x=$(this.rte.dom.create("tr"));for(var o=0;o<j;o++){x.append("<td>&nbsp;</td>")}if(u){x.insertBefore(f)}else{x.insertAfter(f)}$.each(p,function(){$(this).attr("rowspan",parseInt($(this).attr("rowspan")||1)+1)});this.rte.ui.update()}};this.update=function(){if(this.rte.dom.selfOrParent(this.rte.selection.getNode(),/^TR$/)){this.domElem.removeClass("disabled")}else{this.domElem.addClass("disabled")
}}};elRTE.prototype.ui.prototype.buttons.tbrowafter=elRTE.prototype.ui.prototype.buttons.tbrowbefore;(function(a){elRTE.prototype.ui.prototype.buttons.tbrowrm=function(f,c){this.constructor.prototype.constructor.call(this,f,c);var b=this;this.command=function(){var h=this.rte.selection.getNode(),x=this.rte.dom.selfOrParent(h,/^(TD|TH)$/),g=this.rte.dom.selfOrParent(x,/^TR$/),q=this.rte.dom.selfOrParent(x,/^TABLE$/),A=this.rte.dom.tableMatrix(q);if(x&&g&&A.length){this.rte.history.add();if(A.length==1){a(q).remove();
return this.rte.ui.update()}var u=[];var v=a(g).prevAll("tr").length;function p(r,C){while(C>0){C--;if(A[C]&&A[C][r]&&A[C][r].nodeName){return A[C][r]}}}function B(C,r){y=v+1;var E=null;if(A[y]){for(var D=0;D<r;D++){if(A[y][D]&&A[y][D].nodeName){E=A[y][D]}}C=C.remove();if(E){C.insertAfter(E)}else{C.prependTo(a(g).next("tr").eq(0))}}}function o(C){for(var r=0;r<C.length;r++){if(C[r]==x){return r<C.length-1?C[r+1]:C[r-1]}}}for(var t=0;t<A[v].length;t++){var z=null;var j=false;if(A[v][t]&&A[v][t].nodeName){z=A[v][t];
j=true}else{if(A[v][t]=="-"&&(z=p(t,v))){j=false}}if(z){z=a(z);var k=parseInt(z.attr("rowspan")||1);if(k>1){z.attr("rowspan",k-1);j&&B(z,t,v)}}}var w=o(this.rte.dom.tableColumn(x));if(w){this.rte.selection.selectContents(w).collapse(true)}a(g).remove()}this.rte.ui.update()};this.update=function(){if(this.rte.dom.selfOrParent(this.rte.selection.getNode(),/^TR$/)){this.domElem.removeClass("disabled")}else{this.domElem.addClass("disabled")}}}})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.undo=function(c,b){this.constructor.prototype.constructor.call(this,c,b);
this.command=function(){if(this.name=="undo"&&this.rte.history.canBack()){this.rte.history.back();this.rte.ui.update()}else{if(this.name=="redo"&&this.rte.history.canFwd()){this.rte.history.fwd();this.rte.ui.update()}}};this.update=function(){this.domElem.toggleClass("disabled",this.name=="undo"?!this.rte.history.canBack():!this.rte.history.canFwd())}};elRTE.prototype.ui.prototype.buttons.redo=elRTE.prototype.ui.prototype.buttons.undo})(jQuery);(function(a){elRTE.prototype.ui.prototype.buttons.unlink=function(c,b){this.constructor.prototype.constructor.call(this,c,b);
this.command=function(){var k=this.rte.selection.getNode(),f=this.rte.dom.selfOrParentLink(k);function j(o){return o.nodeName=="A"&&o.href}if(!f){var h=a.browser.msie?this.rte.selection.selected():this.rte.selection.selected({wrap:false});if(h.length){for(var g=0;g<h.length;g++){if(j(h[g])){f=h[g];break}}if(!f){f=this.rte.dom.parent(h[0],j)||this.rte.dom.parent(h[h.length-1],j)}}}if(f){this.rte.history.add();this.rte.selection.select(f);this.rte.doc.execCommand("unlink",false,null);this.rte.ui.update(true)
}};this.update=function(){var f=this.rte.selection.getNode();if(this.rte.dom.selfOrParentLink(f)){this.domElem.removeClass("disabled").addClass("active")}else{if(this.rte.dom.selectionHas(function(g){return g.nodeName=="A"&&g.href})){this.domElem.removeClass("disabled").addClass("active")}else{this.domElem.addClass("disabled").removeClass("active")}}}}})(jQuery); var rowSequenceNumberForREChoices=0;
function navigateToTargetPage(currentPage, targetPage, shipmentNumber, shipmentSequenceNumber, 
		shipmentCorrectionNumber,src){
	if(currentPage == targetPage)
		return
	if(targetPage == 'Maintain Bill'){
		document.location.href = _context+ "/shipment/showForm?shipment_number="+shipmentNumber+"&shipment_sequence_number="+shipmentSequenceNumber+
		"&shipment_correction_number="+shipmentCorrectionNumber+"&src=FTWQ";
	}else if (targetPage == 'Maintain Rate Bill'){
		if(shipmentSequenceNumber == null || shipmentSequenceNumber == "")
			shipmentSequenceNumber = "000";
		document.location.href = _context+ "/maintainRate/loadShipmentDetails?shipmentNumber="+ 
		shipmentNumber+'&shipmentSequenceNumber='+shipmentSequenceNumber+'&shipmentCorrectionNumber=000&navigationUrl='+src;
		
	}else if (targetPage == 'Bill SetUp'){
		document.location.href = _context+ "/billingSetup/loadBillSetUpDetail?shipmentNumber="+ 
		shipmentNumber;
	}else if (targetPage == 'Maintain Booking'){
		document.location.href = _context+ "/booking/showForm?bookingNumber="+shipmentNumber;
	}else if (targetPage == 'Variance list by booking'){
		document.location.href = _context+ "/cas/containerListbyBookingSearch.do?bookingId="+shipmentNumber+"&variance=Y";
	}else if (targetPage == 'Wiredown Maintenance'){
		document.location.href = _context+ "/wiredownMaintenance/showForm?bookingIds="+shipmentNumber;
	}else if ( targetPage == 'Send Booking Document'){
		document.location.href = _context+ "/booking/senddocument/create?nav=booking&bookingId="+shipmentNumber;
	}else if (targetPage == 'Container Billing Maintenance'){
		document.location.href= _context+"/receivedContainer/showForm";
	}else if ( targetPage == 'Print Freight Bill'){
		document.location.href = _context+ "/printFreightBill/go?shipmentNumber="+ 
		shipmentNumber+'&shipmentSequenceNumber='+shipmentSequenceNumber+'&shipmentCorrectionNumber=000';
	}else if( targetPage == 'Billing Print Options Override'){
		document.location.href = _context+ "/shipmentPrntOptnsOverride/getPrintOptionOverride";	
	}
		
	
}


function navigateToTargetPageForFurtherFlow(currentPage, targetPage, shipmentNumber, shipmentSequenceNumber, 
		shipmentCorrectionNumber,src){
	if(currentPage == targetPage)
		return
	if(targetPage == 'Maintain Bill'){
		document.location.href = _context+ "/shipment/showForm?shipment_number="+shipmentNumber+"&shipment_sequence_number="+shipmentSequenceNumber+
		"&shipment_correction_number="+shipmentCorrectionNumber+"&src=FTWQ&bookingFlow=true";
	}else if (targetPage == 'Maintain Rate Bill'){
		if(shipmentSequenceNumber == null || shipmentSequenceNumber == "")
			shipmentSequenceNumber = "000";
		document.location.href = _context+ "/maintainRate/loadShipmentDetails?shipmentNumber="+ 
		shipmentNumber+'&shipmentSequenceNumber='+shipmentSequenceNumber+'&shipmentCorrectionNumber=000&bookingFlow=true&navigationUrl='+src;
		//D026361
	}else if( targetPage == 'Billing Print Options Override'){
		document.location.href = _context+ "/shipmentPrntOptnsOverride/getPrintOptionOverride";	
	}else if (targetPage == 'Bill SetUp'){
		document.location.href = _context+ "/billingSetup/loadBillSetUpDetail?shipmentNumber="+ 
		shipmentNumber+"&bookingFlow=true";
	}else if (targetPage == 'Maintain Booking'){
		document.location.href = _context+ "/booking/showForm?bookingNumber="+shipmentNumber+"&bookingFlow=true";
	}else if (targetPage == 'Variance list by booking'){
		document.location.href = _context+ "/cas/containerListbyBookingSearch.do?bookingId="+shipmentNumber+"&variance=Y";
	}else if (targetPage == 'Wiredown Maintenance'){
		document.location.href = _context+ "/wiredownMaintenance/showForm?bookingIds="+shipmentNumber;
	}else if ( targetPage == 'Send Booking Document'){
		document.location.href = _context+ "/booking/senddocument/create?nav=booking&bookingId="+shipmentNumber;
	}else if (targetPage == 'Container Billing Maintenance'){
		document.location.href= _context+"/receivedContainer/showForm";
	}else if ( targetPage == 'Print Freight Bill'){
		document.location.href = _context+ "/printFreightBill/go?shipmentNumber="+ 
		shipmentNumber+'&shipmentSequenceNumber='+shipmentSequenceNumber+'&shipmentCorrectionNumber=000';
	}
		
	
}

function makeErorNChoiceGrids(source){
	$('#reErrCloseBtn').click(function(){
		$("#re_error_dialog").dialog('close');
		location.reload(true);
	});

	
	$('#reErrorListRateBtn').click(function(){
		window.open(_context+ "/cas/rateDesriptionBillSearch.do?from=item&sourceCode="+
				$('#tariffError').val()+"&groupCode="+$('#tariffError').val()
				+"&itemCode="+$('#itemError').val());
	});

	$('#reChoiceCloseBtn').click(function(){		
		$("#re_choice_dialog").dialog('close');
		location.reload(true);
	});
	
	$('#reChoiceListRateBtn').click(function() {
		var groupType = $('#groupTypeRE').val();
		var groupTypeCode = '';
		if(groupType != null){
			if("FRT" == groupType){
				groupTypeCode = "01";
			}
			else if("WFG" == groupType){
				groupTypeCode = "02";
			}
			else if("DRA" == groupType){
				groupTypeCode = "03";
			}
			else if("RDV" == groupType){
				groupTypeCode = "04";
			}
			else if("MSH" == groupType){
				groupTypeCode = "05";
			}
			else if("MEQ" == groupType){
				groupTypeCode = "06";
			}
			else if("ACC" == groupType){
				groupTypeCode = "07";
			}
		}
		window.open(_context+ "/cas/rateDesriptionBillSearch.do?from=item&groupTypeCode="+ groupTypeCode + "&sourceCode="+
				$('#sourceCodeRE').val()+"&groupCode="+$('#groupCodeRE').val()
				+"&itemCode="+$('#itemCodeRE').val()+"&hideColumn=true");
	});
	
	$('#reChoiceContinueBtn').click(function() {
		//TODO: Handle this scenario here. Call to RE should pursue from here.		
		$('#re_choice_dialog').dialog( "close" );
		concludeRating(0, source);		
	});

	
	$( "#re_choice_dialog" ).dialog({
		autoOpen: false, 
		width: 1000,
		modal: true,
		closeOnEscape: false,
		beforeClose: function() {
		}
	});

 

 $( "#re_error_dialog" ).dialog({
		autoOpen: false, 
		width: 1000,
		modal: true,
		closeOnEscape: false,
		beforeClose: function() {
			
			
		}
//		close : function() {
//			$("#re_error_dialog").validationEngine('hideAll');
//			$("#re_error_dialog").dialog('close');
//		//	$('#specialServicesGrid').jqGrid('GridUnload');
////			 $("#mixcommodityGrid").trigger('reloadGrid');  
//		}
	});


 var choiceGridColNames= ['Choice Id', 'Seq No', 'Selectable', 'Choices Text','Choice Assist Text'];
	var choiceGridColModel= [ 
	                        {name:'reRatingChoiceId',index:'reRatingChoiceId', hidden:true},
	          				{name:'choiceSeqNum',index:'choiceSeqNum', width:50, editable:false, formatter:'choiceFormatter'},
	                        {name:'selectable',index:'selectable', width:50, editable:false,hidden:true},
	        				{name:'messageTextValue',index:'messageTextValue', width:770, editable:false},
	        				{name:'choiceAssistText',index:'choiceAssistText', hidden:true, width:700, editable:false}
	                       ];
	
	jQuery.extend($.fn.fmatter , {
		choiceFormatter : function(cellvalue, options, rowdata) {
			if(rowdata.selectable == true){
				var value= rowdata.reRatingChoiceId + ",'" + source + "'";
				return '<a href=javascript:concludeRating('+value+');>'+cellvalue+"</a>";
			}
			else
				return cellvalue;
		}
	});	var jsonReaderChoice = {
		root : "rows",
		page : "page",
		total : "total",
		records : "records",
		repeatitems : false,
		cell : "cell",
		id : "reRatingChoiceId"
	};

	createGrid("reChoiceGrid", "pagerReChoiceGrid",
			'/gates/'+source+'/loadReChoiceGrid',
			'', '', '', '',
			choiceGridColNames, choiceGridColModel,
			"List Of Choice Messages", 250, 10, [ 10, 20, 30 ], false, false, false, true,
			jsonReaderChoice,true,true,true,false,false,false,false,onGridComplete,onChoiceGridLoad,false,true);

	var errorGridColNames= ['Error Id', 'Cmdy Line', 'Sev', 'Error Text','Group Type','Source Tariff','Group Name','Item','Rate'];
	var errorGridColModel= [ 
	                        {name:'reErrorMessageId',index:'reErrorMessageId', hidden:true},
	          				{name:'commoditySeqNbr',index:'commoditySeqNbr', width:100, editable:false },
	        				{name:'messageSeverity',index:'messageSeverity', width:50, sorttype:'date', editable:false },
	        				{name:'messageTextValue',index:'messageTextValue', width:260, editable:false },
	        				{name:'typeValue',index:'rate', width:80, editable:false },
	        				{name:'sourceTariffId',index:'sourceTariffId', width:127, editable:false },
	        				{name:'groupName',index:'groupName', width:127, editable:false },
	        				{name:'item',index:'item', width:80, editable:false },
	        				{name:'rate',index:'rate', width:80, editable:false }
	                         ];

	var jsonReaderError = {
		root : "rows",
		page : "page",
		total : "total",
		records : "records",
		repeatitems : false,
		cell : "cell",
		id : "reErrorMessageId"
	};

	createGrid("reErrorGrid", null,
			'/gates/'+source+'/loadReErrorGrid',
			'', '', '', '',
			errorGridColNames, errorGridColModel,
			"List Of Error/Warning Messages", 70, 5, [ 5, 10, 15 ], false, false, false, true,
			jsonReaderError,true,true,true,false,false,false,false,false,false,false,true);
}

//Defect-24737:Modified below method to enable the "List Rate" functionality 
function makeGridForReError(source){
	$('#reErrCloseBtn').click(function(){
		$("#re_error_dialog").dialog('close');
		location.reload(true);
	});
	//Defect-24737:Modified below method to enable the "List Rate" functionality 
	$('#reErrorListRateBtn').click(function(){
		
		window.open(_context+ "/cas/rateDesriptionBillSearch.do?from=item&sourceCode="+
				$('#tariffError').val()+"&groupCode="+$('#tariffError').val()
				+"&itemCode="+$('#itemError').val());
				
	});

	$('#reChoiceCloseBtn').click(function(){
		$("#re_choice_dialog").dialog('close');
		//Fix for D028587: 	Data related to this page has been updated since you have loaded the page. Please reload and try again.
		location.reload(true);
	});
	//Defect-24737:Modified below method to enable the "List Rate" functionality 
	$('#reChoiceListRateBtn').click(function() {
		
		var size=$('#size').val();
		var sizeEquipment= new Array();
		sizeEquipment=size.split("");
		var EquipFuncCode="";
		var EquipLength="";
		var EquipHeight="";
		if(sizeEquipment[0]!=undefined){
		EquipFuncCode=sizeEquipment[0];
		}
		if(sizeEquipment[1]!=undefined && sizeEquipment[2]!=undefined){
		EquipLength=sizeEquipment[1].concat(sizeEquipment[2]);
		}
		if(sizeEquipment[3]!=undefined){
		EquipHeight=sizeEquipment[3];
		}
		var freightReceivedDate=$('#statusCodeOverlayChoice').val();
		//change format of date
		if(freightReceivedDate!=null && freightReceivedDate!=""){
		freightReceivedDateArray= new Array();
		freightReceivedDateArray=freightReceivedDate.split("-");
		freightReceivedDate=freightReceivedDateArray[2].concat("-").concat(freightReceivedDateArray[1]).concat("-").concat(freightReceivedDateArray[0]);
		}
		
		var originCity=$('#blOriginCityCodeDescription').val();
		var originCityDesc="";
		if(originCity!=null && originCity!=""){
			var originCityArray=new Array();
			originCityArray=originCity.split("-");
			originCityDesc=originCityArray[0].concat(" ").concat(originCityArray[1]);
		}
		var groupType = $('#groupTypeRE').val();
		var groupTypeCode = '';
		if(groupType != null){
			if("FRT" == groupType){
				groupTypeCode = "01";
			}
			else if("WFG" == groupType){
				groupTypeCode = "02";
			}
			else if("DRA" == groupType){
				groupTypeCode = "03";
			}
			else if("RDV" == groupType){
				groupTypeCode = "04";
			}
			else if("MSH" == groupType){
				groupTypeCode = "05";
			}
			else if("MEQ" == groupType){
				groupTypeCode = "06";
			}
			else if("ACC" == groupType){
				groupTypeCode = "07";
			}
		}
		//modified for22214
		/*window.open(_context+ "/cas/rateDesriptionBillSearch.do?from=item&sourceCode="+
				$('#tariff').val()+"&groupCode="+$('#tariff').val()
				+"&itemCode="+$('#item').val()+"&hideColumn=true"
				+"&sizeEquipFuncCode="+EquipFuncCode+"&sizeEquipLength="+EquipLength+"&sizeEquipHeight="+EquipHeight
				+"&freightReceivedDate="+freightReceivedDate+"&originCityDesc="+originCityDesc);*/
		
		window.open(_context+ "/cas/rateDesriptionBillSearch.do?from=item&groupTypeCode="+ groupTypeCode + "&sourceCode="+
				$('#sourceCodeRE').val()+"&groupCode="+$('#groupCodeRE').val()
				+"&itemCode="+$('#itemCodeRE').val()+"&hideColumn=true"
								+"&sizeEquipFuncCode="+EquipFuncCode+"&sizeEquipLength="+EquipLength+"&sizeEquipHeight="+EquipHeight
								+"&freightReceivedDate="+freightReceivedDate+"&originCityDesc="+originCityDesc);
				
	});


	$('#reChoiceContinueBtn').click(function() {
		//TODO: Handle this scenario here. Call to RE should pursue from here.		
		$('#re_choice_dialog').dialog( "close" );
		concludeRating(0, source);		
	});
	
	
	 $( "#re_choice_dialog" ).dialog({
			autoOpen: false, 
			width: 1000,
			modal: true,
			closeOnEscape: false,
			beforeClose: function() {
			}
		});
	
	 

	 $( "#re_error_dialog" ).dialog({
			autoOpen: false, 
			width: 1000,
			modal: true,
			closeOnEscape: false,
			beforeClose: function() {
				
				
			}
//			close : function() {
//				$("#re_error_dialog").validationEngine('hideAll');
//				$("#re_error_dialog").dialog('close');
//			//	$('#specialServicesGrid').jqGrid('GridUnload');
////				 $("#mixcommodityGrid").trigger('reloadGrid');  
//			}
		});

	
	 var choiceGridColNames= ['Choice Id', 'Seq No', 'Selectable', 'Choices Text','Choice Assist Text'];
		var choiceGridColModel= [ 
		                        {name:'reRatingChoiceId',index:'reRatingChoiceId', hidden:true},
		          				{name:'choiceSeqNum',index:'choiceSeqNum', width:50, editable:false, formatter:'choiceFormatter'},
		                        {name:'selectable',index:'selectable', width:50, editable:false,hidden:true},
		        				{name:'messageTextValue',index:'messageTextValue', width:800, editable:false, formatter:lineFormatter},
		        				{name:'choiceAssistText',index:'choiceAssistText', editable:false,hidden:true,sortable:false}
		                       ];
		
		jQuery.extend($.fn.fmatter , {
			choiceFormatter : function(cellvalue, options, rowdata) {
				if(rowdata.selectable == true){
					
					var value= rowdata.reRatingChoiceId + ",'" + source + "'";
					if(source == "booking"){
						rowSequenceNumberForREChoices++;
						return "<a href='javascript:concludeRatingForBooking("+rowdata.reRatingChoiceId+");' >"+rowSequenceNumberForREChoices+"</a>";
					}else if(source == "houseHoldShipment"){
						rowSequenceNumberForREChoices++;
						return "<a href='javascript:concludeRatingForHHGS("+rowdata.reRatingChoiceId+");' >"+rowSequenceNumberForREChoices+"</a>";
						
					}else{
						rowSequenceNumberForREChoices++;
						return '<a href=javascript:concludeRating('+value+');>'+rowSequenceNumberForREChoices+"</a>";	
					}
				}
				else{
					rowSequenceNumberForREChoices++;
					return rowSequenceNumberForREChoices;
					//return cellvalue;
				}
			}
		});
		
		var jsonReaderChoice = {
			root : "rows",
			page : "page",
			total : "total",
			records : "records",
			repeatitems : false,
			cell : "cell",
			id : "reRatingChoiceId"
		};

		createGrid("reChoiceGrid", "pagerReChoiceGrid",
				'/gates/'+source+'/loadReChoiceGrid',
				'', '', '', '',
				choiceGridColNames, choiceGridColModel,
				"List Of Choice Messages", 250, 10, [ 10, 20, 30 ], false, false, false, true,
				jsonReaderChoice,true,true,true,false,false,false,false,onGridComplete,onChoiceGridLoad,false,true);

		var errorGridColNames= ['Error Id', 'Cmdy Line', 'Sev', 'Error Text','Group Type','Source Tariff','Group Name','Item','Rate'];
		var errorGridColModel= [ 
		                        {name:'reErrorMessageId',index:'reErrorMessageId', hidden:true},
		          				{name:'commoditySeqNbr',index:'commoditySeqNbr', width:60, editable:false },
		        				{name:'messageSeverity',index:'messageSeverity', width:50, sorttype:'date', editable:false },
		        				{name:'messageTextValue',index:'messageTextValue', width:340, editable:false, formatter:lineFormatterREerror },
		        				{name:'typeValue',index:'rate', width:80, editable:false },
		        				{name:'sourceTariffId',index:'sourceTariffId', width:90, editable:false },
		        				{name:'groupName',index:'groupName', width:90, editable:false },
		        				{name:'item',index:'item', width:70, editable:false },
		        				{name:'rate',index:'rate', width:80, editable:false }
		                         ];

		var jsonReaderError = {
			root : "rows",
			page : "page",
			total : "total",
			records : "records",
			repeatitems : false,
			cell : "cell",
			id : "reErrorMessageId"
		};

		createGrid("reErrorGrid", null,
				'/gates/'+source+'/loadReErrorGrid',
				'', '', '', '',
				errorGridColNames, errorGridColModel,
				"List Of Error/Warning Messages", 70, 5, [ 5, 10, 15 ], false, false, false, true,
				jsonReaderError,true,true,true,false,false,false,false,false,false,false,true);
}


function concludeRating(id, source)
{		
	$('#re_choice_dialog').dialog( "close" );
	//D027411
	captureChanges();
	blockUI();
	var url ="";
	
	if($('#optionToRate').val() != undefined && $('#optionToRate').val() != ""){
		url="/concludeRating?id="+id+"&optionToRate="+$('#optionToRate').val() ;
	}else{
		url="/concludeRating?id="+id;
	}
	if($('#reUseSelection').val() != undefined && $('#reUseSelection').val() != ""){
		url = url+"&reUseSelection="+$('#reUseSelection').val();
	}
	
	$.ajax({
		   type: "POST",				   							   
//		   url: _context +  "/"+source+"/concludeRating?id="+id,
		   url: _context +  "/"+source+url,
		   success: function(responseText){		
			   $.unblockUI();
			   if (responseText.data.rateView == "showError") {						
					$('#re_error_dialog').dialog('open');
					jQuery("#chargeGrid").setGridParam({rowNum:10,datatype:"json" }).trigger('reloadGrid');
					loadErrorOverLay(responseText);
					$("#reErrorGrid").trigger('reloadGrid');
//					$("#reErrEstShipDate").val(responseText.data.estimatedShipDateString);
				    jQuery("#reErrorGrid").setGridParam({rowNum:10,datatype:"json" }).trigger('reloadGrid');
					$('#reErrContinueBtn').hide();
					//D026049: NOT IT LIVE DRILL: Bill charges: not refreshed on return from rate engine error screen. Therefore not showing correct unreleased error hold. 
					if(source == "shipment"){
						reloadShipmentGrids();
					} else if(source == "billLadingPayable"){
						$("#billLadingPayableForm").loadJSON(responseText.data);
					}
					//refersh Screen
//					if(source == "billManager"){
//						postMethod('search',document.bookBillWorkQueueSearchForm.method);		
//					}

				}else if(responseText.data.rateView == "showChoices"){
					loadChoiceOverLay(responseText);
					$('#re_choice_dialog').dialog( "open" );
					$("#reChoiceGrid").trigger('reloadGrid');
//					$("#reChEstShipDate").val(responseText.data.estimatedShipDateString);
//					if(responseText.data.isAllChoicesUnSelectable != null 
//							&& responseText.data.isAllChoicesUnSelectable == "Y"){
//						$('#reChoiceCloseBtn').hide();	
//						$('#reChoiceContinueBtn').show();
//					}else{
//						$('#reChoiceCloseBtn').show();	
//						$('#reChoiceContinueBtn').hide();	
//					}
					//D027490 - Pagination issue - removed rowNum:10 grid param which is causing pagination issue 
				    jQuery("#reChoiceGrid").setGridParam({datatype:"json" }).trigger('reloadGrid');
				}else if(responseText.data.rateView == "showWarning"){
											
					$('#re_error_dialog').dialog('open');
					$("#ratingErrorForm").loadJSON(responseText.data);
//					$("#reErrEstShipDate").val(responseText.data.estimatedShipDateString);
					jQuery("#chargeGrid").setGridParam({rowNum:10,datatype:"json" }).trigger('reloadGrid');
				    jQuery("#reErrorGrid").setGridParam({rowNum:10,datatype:"json" }).trigger('reloadGrid');
					$('#reErrCloseBtn').hide();
					$('#shipmentForm').loadJSON(responseText.data);
					displayResponseMessages("msgDiv", responseText);
				}else if(responseText.data.rateView == "hold" || 
						responseText.data.rateView == "Hold"){
						var shipmentNo =  "";	
						var shipmentSeqNo =  "";
						if(responseText.data.header == undefined){
							shipmentNo = responseText.data.shipmentNumber;
							shipmentSeqNo = responseText.data.shipmentSequenceNumber;
						}
						else{
							shipmentNo = responseText.data.header.shipmentNumber;
							shipmentSeqNo = responseText.data.header.shipmentSequenceNumber;
						}
						if(responseText.data.flow == true){
							navigateToTargetPageForFurtherFlow('',responseText.data.targetPage, 
									shipmentNo, shipmentSeqNo,
										'000',
										"2");
							
						}
						navigateToTargetPage('',responseText.data.targetPage, 
							shipmentNo, shipmentSeqNo,
								'000',
								"2");

					
				}
				else if(responseText.data.rateView == "Success"){
					displayResponseMessages("msgDiv", responseText);
					if(responseText.data.shipmentSequenceNumber ==  undefined){
						var shipmentNo =  "";	
						var shipmentSeqNo =  "";
						if(responseText.data.header == undefined){
							shipmentNo = responseText.data.shipmentNumber;
							shipmentSeqNo = "000";
						}
						else{
							shipmentNo = responseText.data.header.shipmentNumber;
							shipmentSeqNo = responseText.data.header.shipmentSequenceNumber;
						}
						document.location.href = _context+ "/maintainRate/loadShipmentDetails?shipmentNumber="+ 
						shipmentNo+'&shipmentSequenceNumber='+shipmentSeqNo
						+'&shipmentCorrectionNumber=000&navigationUrl='+source+'&commodityDisplay=last';
					}
					else if(responseText.data.shipmentSequenceNumber == null ||
							responseText.data.shipmentSequenceNumber == ""){
						responseText.data.shipmentSequenceNumber ="000"
							document.location.href = _context+ "/maintainRate/loadShipmentDetails?shipmentNumber="+ 
							responseText.data.shipmentNumber+'&shipmentSequenceNumber='+responseText.data.shipmentSequenceNumber
							+'&shipmentCorrectionNumber=000&navigationUrl='+source+'&commodityDisplay=last';
					}else{
						document.location.href = _context+ "/maintainRate/loadShipmentDetails?shipmentNumber="+ 
						responseText.data.shipmentNumber+'&shipmentSequenceNumber='+responseText.data.shipmentSequenceNumber
						+'&shipmentCorrectionNumber=000&navigationUrl='+source+'&commodityDisplay=last';
					}
				}
				else {
					$('#shipmentForm').loadJSON(responseText.data);
					jQuery("#chargeGrid").setGridParam({rowNum:10,datatype:"json" }).trigger('reloadGrid');
					displayResponseMessages("msgDiv", responseText);
				}	
			   
		   }
	});	
}

function displayResponseMessages(msgDivId, responseText)  { 
  	if (responseText.messages) {

		var messages = responseText.messages;
		var messageContent = '';
		if (messages.error.length > 0) {
			var array = messages.error;
			var len = messages.error.length;
			for (var i=0; i<len; i++) {
				
				messageContent += '<div class="message_error">' + array[i] + '</div>';
			}
		}

		if (messages.warn.length > 0) {
			var array = messages.warn;
			var len = messages.warn.length;
			for (var i=0; i<len; i++) {
				messageContent += '<div class="message_warning">' + array[i] + '</div>';
			}
		}
		
		if (messages.info.length > 0) {
			var array = messages.info;
			var len = messages.info.length;
			for (var i=0; i<len; i++) {
				messageContent += '<div class="message_info">' + array[i] + '</div>';
			}
		}

		if (messages.success.length > 0) {
			var array = messages.success;
			var len = messages.success.length;
			for (var i=0; i<len; i++) {
				messageContent += '<div class="message_success">' + array[i] + '</div>';
			}
		}

		if(messageContent!=''){
			$('#'+msgDivId).html(messageContent);
			window.scrollTo(0, 0);
		}
  	}
}

function createGridsToDisplay(){
	var value =
	'<div id="re_error_dialog" title="RE Error Screen" class="span-24" style="display:none" ><div class="prepend-top span-21"></div><div class="span-23"><div class="span-22"><h3 class="content-title">RE Error and/or Warning Messages Display</h3></div></div><div class="span-24">	<fieldset class="span-23">		<div class="span-23"><div class="span-23">	<div class="span-7"><label for="shipment" class="span-3 label">Shipment No.</label>	<input type="text" id="shipmentNumOverLay" size="7" maxlength="7" disabled="true"/>	</div><div class="span-7"><label for="status" class="span-2 label">Status</label><input  id="statusCodeOverlay" type="text"  size="5" maxlength="5" disabled="true"/></div>	<div class="span-6 last"><label for="measureUnit" class="span-3 label">Measurement Unit</label>	<input  type="text" id="unitOfMeasureSourceOverLay" size="10" maxlength="10" disabled="true"/></div></div><div class="span-23"><div class="span-6"><label for="loadServices" class="span-3 label">Load Service</label><input  type="text" id="loadServicesOverLay" size="10" maxlength="10" disabled="true"/></div><div class="span-6"><label for="dischargeServices" class="span-3 label">Discharge Service</label><input  type="text" id="dischargeServicesOverlay" size="10" maxlength="10" disabled="true"/></div><div class="span-7"><label for="routing" class="span-3 label">Routing</label>'+
	'<input  type="text" id="routingDetOverLay" size="20" maxlength="20" disabled="true"/></div></div></div></fieldset></div><div class="span-24"><div id="jqgrid1" class="span-21"><table id="reErrorGrid"></table></div></div><div class="span-24"><div class="prepend-top span-24"></div><div id="buttondiv" class="buttonfooter" ><div Style=" width: 950px; margin: 0 auto; padding-top:8px;"><input  type="button" value="Close" class="buttonNoFloat" id="reErrCloseBtn"/><input  type="button" value="Continue" class="buttonNoFloat" id="reErrContinueBtn"/><form:input path="" type="button" value="Restore" class="buttonNoFloat" id="reErrRestoreBtn"/></div>'+
	'</div><div class="span-6 prepend-17"><label for="r" class="span-3 label">R</label><form:input path="reHeaderId" type="text" id="ratingId" size="12" maxlength="12" disabled="true"/></div><div class="span-24"><label for="shipmentId" class="span-20 label">Shipment Id</label><input  type="text" id="shipment" size="12" maxlength="12" disabled="true"/></div></div></div><div id="re_choice_dialog" title="RE Choices Screen" class="span-24" style="display:none">'+
	'<div class="prepend-top span-21"></div><div class="span-23"><div class="span-22"><h3 class="content-title">RE Choice Messages Display</h3>	</div></div><div class="span-24"><fieldset class="span-23"><div class="span-23"><div class="span-23"><div class="span-7"><label for="shipment" class="span-3 label">Shipment No.</label><input  type="text" id="shipmentNumOverLayChoice" size="7" maxlength="7" disabled="true"/></div><div class="span-7"><label for="status" class="span-2 label">Status</label><input  id="statusCodeOverlayChoice" type="text"  size="5" maxlength="5" disabled="true"/></div><div class="span-6"><label for="shipDate" class="span-3 label">Shipment Date</label><form:input path="reEstimatedShipDate" type="text" id="reErrEstShipDate" size="10" maxlength="10"  disabled="true"/><form:hidden path="itemCodeRE" id="itemCodeRE" /></div><div class="span-6 last">'+
	'<label for="measureUnit" class="span-3 label">Measurement Unit</label><input  type="text" id="unitOfMeasureSourceOverLayChoice" size="10" maxlength="10" disabled="true"/>	</div></div><div class="span-23"><div class="span-6"><label for="loadServices" class="span-3 label">Load Service</label><input  type="text" id="loadServicesOverLayChoice" size="10" maxlength="10" disabled="true"/></div><div class="span-6"><label for="dischargeServices" class="span-3 label">Discharge Service</label><input  type="text" id="dischargeServicesOverlayChoice" size="10" maxlength="10" disabled="true"/></div><div class="span-7"><label for="routing" class="span-3 label">Routing</label><input  type="text" id="routingDetOverLayChoice" size="20" maxlength="20" disabled="true"/></div>'+
	'</div></div></fieldset></div><div class="span-23"><div id="choiceGrid" class="span-21"><table id="reChoiceGrid"></table><div id="pagerReChoiceGrid"></div></div></div><div class="span-24"><div class="prepend-top span-24"></div>	<div id="buttondiv" class="buttonfooter" ><div Style=" width: 950px; margin: 0 auto; padding-top:8px;"><input  type="button" value="Close" class="buttonNoFloat" id="reChoiceCloseBtn"/><input  type="button" value="Continue" class="buttonNoFloat" id="reChoiceContinueBtn"/></div></div>	</div></div>'
	
	return value;
}

function loadChoiceOverLay(responseText){
	document.getElementById('choiceTypeSize').innerHTML = 'Type/Size';
	$('#shipmentNumOverLayChoice').val(responseText.data.ratingChoice.shipmentNumber);
	$('#shipmentSeqNumOverLayChoice').val(responseText.data.ratingChoice.shipmentSequenceNumber);
	
	////to change date format 022341
	if(responseText.data.ratingChoice.frtReceivedDate!=null){
		var initialDate=responseText.data.ratingChoice.frtReceivedDate.split(" ")[0];
		initialDate = initialDate.split("-");
	$('#statusCodeOverlayChoice').val( [ initialDate[1], initialDate[2], initialDate[0] ].join('-'));
	}
	//$('#statusCodeOverlayChoice').val(responseText.data.ratingChoice.frtReceivedDate);
	
	$('#reRateDate').val(responseText.data.ratingChoice.rateDate);
	$('#unitOfMeasureSourceOverLayChoice').val(responseText.data.ratingChoice.unitOfMeasureSourceCode);
	$('#loadServicesOverLayChoice').val(responseText.data.ratingChoice.loadServiceCodeRE);
	//D026902: 	CHOICE MESSAGE DISPLAY: DATES & ROUTING FIELDS TOO SHORT
	if(responseText.data.ratingChoice.routingDetailsRE!=null){
		$('#routingDetOverLayChoice').val(responseText.data.ratingChoice.routingDetailsRE.replace(/ /g, ""));
	}
	$('#dischargeServicesOverlayChoice').val(responseText.data.ratingChoice.dischargeServiceCodeRE);
	
	$('#cmdy').val(responseText.data.ratingChoice.commodityLineSeqNum);
	$('#cmdyDisplay').val(responseText.data.ratingChoice.commodityLineSeqNum);
	$('#commodityDescChoice').val(responseText.data.ratingChoice.commodityDesc);
	
	$('#commodityCode').val(responseText.data.ratingChoice.commodityCode);
	//if comm code id is duplicate
	$('.REChoiceCommCode').val(responseText.data.ratingChoice.commodityCode);
	
	$('#tariff').val(responseText.data.ratingChoice.tariffId);
	//if tariff id is duplicate
	$('.REChoiceTariff').val(responseText.data.ratingChoice.tariffId);
	
	$('#item').val(responseText.data.ratingChoice.itemNumber);
	$('#noteId').val(responseText.data.ratingChoice.note);
	$('#pieceChoice').val(responseText.data.ratingChoice.pieceCount);
	$('#kindChoice').val(responseText.data.ratingChoice.pieceKind);
	$('#itemCodeRE').val(responseText.data.ratingChoice.itemCodeRE);
	//$('#netWt').val(responseText.data.ratingChoice.weight);
	//$('#feet').val(responseText.data.ratingChoice.cubicFeet);
	
	var netWt=responseText.data.ratingChoice.weight;
	var feet=responseText.data.ratingChoice.cubicFeet;
	//for 022341
	//For D026643
	//if(responseText.data.ratingChoice.unitOfMeasureSourceCode=="I"){
		$('#netWt').val(Math.floor(netWt));
		$('#feet').val(Math.round(feet));
	/*}
	
	else{		
		$('#netWt').val((Math.round((parseFloat(netWt,3)*1000))/1000).toFixed(3));
		$('#feet').val((Math.round((parseFloat(feet,3)*1000))/1000).toFixed(3));
		
	}*/
	
	//$('#equipPc').val(responseText.data.ratingChoice.equipPiece);
	$('#size').val(responseText.data.ratingChoice.typeSize);
	$('#ef').val(responseText.data.ratingChoice.emptyFull);
	$('#frt').val(responseText.data.ratingChoice.frtCharges);

	$('#RtCdDelvChoice').val(responseText.data.ratingChoice.recDel);
	$('#RtCdPickUpChoice').val(responseText.data.ratingChoice.recPickup);
	$('#carrPkUpDelvChoice').val(responseText.data.ratingChoice.carrDelv);
	$('#carrPkUpChoice').val(responseText.data.ratingChoice.carrPickUp);
	$('#EqCubeChoice').val(responseText.data.ratingChoice.eqpCube);
	$('#EqWtChoice').val(responseText.data.ratingChoice.eqpWt);

	
	
	$('#chargeCodeRE').val(responseText.data.ratingChoice.chargeCodeRE);
	if(responseText.data.ratingChoice.levelRE=="C"){
		$('#processLevelRE').val("Commodity");
	}else if(responseText.data.ratingChoice.levelRE=="E"){
		$('#processLevelRE').val("Equipment");
	}else if(responseText.data.ratingChoice.levelRE=="S"){
		$('#processLevelRE').val("Shipment");
	}
	//$('#processLevelRE').val(responseText.data.ratingChoice.levelRE);
	$('#groupTypeRE').val(responseText.data.ratingChoice.groupTypeRE);
	$('#sourceCodeRE').val(responseText.data.ratingChoice.sourceCodeRE);
	$('#groupCodeRE').val(responseText.data.ratingChoice.groupCodeRE);
	
	//$('#ratingId').val(responseText.data.ratingChoice.reHeaderId);
	//D024328: 	Billing: GATES Rate Engine Choices Screen does not match FACTS
	$('#rateSetId').val(responseText.data.ratingChoice.reHeaderId);
	
	if(responseText.data.ratingChoice.isAllChoicesUnSelectable != null 
			&& responseText.data.ratingChoice.isAllChoicesUnSelectable == "Y"){
		$('#reChoiceContinueBtn').show();
	}else{
		$('#reChoiceContinueBtn').hide();	
	}											

	if(responseText.data.header!=undefined && responseText.data.shipmentItemForm != undefined 
			&& ((responseText.data.shipmentItemForm.imperialLengthFeet != null && responseText.data.shipmentItemForm.imperialLengthFeet > 0) || (responseText.data.shipmentItemForm.imperialLengthInches != null && responseText.data.shipmentItemForm.imperialLengthInches > 0) || (responseText.data.shipmentItemForm.metricLength != null && responseText.data.shipmentItemForm.metricLength > 0))
			&& ((responseText.data.shipmentItemForm.imperialBreathFeet != null && responseText.data.shipmentItemForm.imperialBreathFeet > 0) || (responseText.data.shipmentItemForm.imperialBreathInches != null && responseText.data.shipmentItemForm.imperialBreathInches > 0) || (responseText.data.shipmentItemForm.metricBreadth != null && responseText.data.shipmentItemForm.metricBreadth > 0))
			&& ((responseText.data.shipmentItemForm.imperialHeightFeet != null && responseText.data.shipmentItemForm.imperialHeightFeet > 0) || (responseText.data.shipmentItemForm.imperialHeightInches != null && responseText.data.shipmentItemForm.imperialHeightInches > 0) || (responseText.data.shipmentItemForm.metricHeight != null && responseText.data.shipmentItemForm.metricHeight > 0))){
		if(responseText.data.ratingChoice.unitOfMeasureSourceCode=="I"){
			$('#size').val("L: "+ responseText.data.shipmentItemForm.imperialLengthFeet+"' "+responseText.data.shipmentItemForm.imperialLengthInches+'"  W: '+ responseText.data.shipmentItemForm.imperialBreathFeet+"' "+responseText.data.shipmentItemForm.imperialBreathInches
					+'"  H: '+ responseText.data.shipmentItemForm.imperialHeightFeet+"' "+responseText.data.shipmentItemForm.imperialHeightInches+'"');
		}else{
			convertImperialIntoMetricAndDisplayREChoice(responseText.data.shipmentItemForm.metricLength, responseText.data.shipmentItemForm.metricBreadth, responseText.data.shipmentItemForm.metricHeight);
			}
		$('#size').addClass('typeSizeHasDimension');
		document.getElementById('choiceTypeSize').innerHTML = 'Dimension';
	}
	//for 24256
	if(responseText.data.ratingChoice.equipSubsScenario!=undefined &&
			responseText.data.ratingChoice.equipSubsScenario!=null && 
			responseText.data.ratingChoice.equipSubsScenario==true){
		document.getElementById('equipmentSubstitutionScenarioREChoice').innerHTML = 'EQP SUBS';
		$('#equipmentSubstitutionScenarioREChoice').attr('style','background:yellow');
		$('#cmdyDisplay').attr('style','background:yellow');
		$('#size').attr('style','background:yellow');
		$('#isEmptyFullREChoice').attr('style','background:yellow');
	}
	else{
		document.getElementById('equipmentSubstitutionScenarioREChoice').innerHTML = ' ';
		$('#cmdyDisplay').removeAttr('style','background');
		$('#size').removeAttr('style','background');
		$('#isEmptyFullREChoice').removeAttr('style','background');

	}
	//24328 start//////////////////////////////////////////////////////////////////////////////////////////////////////////
	//for empty full special service
	if(responseText.data.ratingChoice.emptyFull!=null){
		if(responseText.data.ratingChoice.emptyFull=="FULL"){
			document.getElementById('isEmptyFullREChoice').innerHTML = 'FULL  ';
		}else if(responseText.data.ratingChoice.emptyFull=="EMPTY") {
			document.getElementById('isEmptyFullREChoice').innerHTML = 'EMPTY  ';
		}
	}
	if(responseText.data.sizeOfItem!=undefined)
	$('#totalCmdyLines').val(responseText.data.sizeOfItem);
	else
	$('#totalCmdyLines').val(responseText.data.ratingChoice.commodityLineCount);
	
	//$('#totalFreightCount').val(responseText.data.shipmentFreightCount);
	
	if(responseText.data.freightForm!=undefined){
		$('#equipPc').val(responseText.data.freightForm.shipmentFreightSeqNumber);
		$('#totalFreightCount').val(responseText.data.freightForm.totalEquipment);
		$('#equipmentIdChoice').val(responseText.data.freightForm.equipmentId);
	
	
		
		if(responseText.data.freightForm.temperature!=null){
			document.getElementById('temperatureREChoice').innerHTML = responseText.data.freightForm.temperature+"  ";
			if(responseText.data.freightForm.temperatureCode!=null){
				document.getElementById('temperatureREChoice').innerHTML = responseText.data.freightForm.temperature+" "+ responseText.data.freightForm.temperatureCode+"  ";
			}
		}
		if(responseText.data.freightForm.overflow!=null){
			if(responseText.data.freightForm.overflow=="Y")
				document.getElementById('isOverFlowREChoice').innerHTML = 'Oflow:Y';
			//D025163
			//else if(responseText.data.freightForm.overflow=="N")
			//	document.getElementById('isOverFlowREChoice').innerHTML = 'Oflow:N';
		}
	}else if(responseText.data.shipmentFreightForm!=undefined){
		$('#equipmentIdChoice').val(responseText.data.shipmentFreightForm.equipmentId);
		$('#totalFreightCount').val(responseText.data.shipmentFreightForm.totalEquipment);
		$('#equipPc').val(responseText.data.shipmentFreightForm.shipmentFreightSeqNumber);
		
		if(responseText.data.shipmentFreightForm.isEmpty!=null){
			if(responseText.data.shipmentFreightForm.isEmpty=="F"){
				document.getElementById('isEmptyFullREChoice').innerHTML = 'FULL  ';
			}else{
				document.getElementById('isEmptyFullREChoice').innerHTML = 'EMPTY  ';
			}
		}
		if(responseText.data.shipmentFreightForm.temperature!=null){
			document.getElementById('temperatureREChoice').innerHTML = responseText.data.shipmentFreightForm.temperature+"  ";
			if(responseText.data.shipmentFreightForm.temperatureCode!=null){
				document.getElementById('temperatureREChoice').innerHTML = responseText.data.shipmentFreightForm.temperature+" "+ responseText.data.shipmentFreightForm.temperatureCode+"  ";
			}
		}
		if(responseText.data.shipmentFreightForm.overflow!=null){
			if(responseText.data.shipmentFreightForm.overflow=="Y")
				document.getElementById('isOverFlowREChoice').innerHTML = 'Oflow:Y';
			//D025163
			//else if(responseText.data.shipmentFreightForm.overflow=="N")
				//document.getElementById('isOverFlowREChoice').innerHTML = 'Oflow:N';
		}
	}
	
	//24328 end//////////////////////////////////////////////////////////////////////////////////////////////////////////
	
	//22179- to display commodity decription on mouse hover
	hoverChoicesDesc();
}


function loadErrorOverLay(responseText){
	document.getElementById('errorTypeSize').innerHTML = 'Type/Size';
	$('#shipmentNumOverLay').val(responseText.data.ratingError.shipmentNumber);
	$('#shipmentSeqNumOverLayError').val(responseText.data.ratingError.shipmentSequenceNumber);
	
	//to change date format 022341
	if(responseText.data.ratingError.frtReceivedDate!=null){
		var initialDate=responseText.data.ratingError.frtReceivedDate.split(" ")[0];
		initialDate = initialDate.split("-");
	$('#statusCodeOverlay').val( [ initialDate[1], initialDate[2], initialDate[0] ].join('-'));
	}
	
	$('#reErrRateDate').val(responseText.data.ratingError.rateDate);
	//$('#statusCodeOverlay').val(responseText.data.ratingError.frtReceivedDate);
	$('#commodityCodeError').val(responseText.data.ratingError.commodityCode);
	$('#unitOfMeasureSourceOverLay').val(responseText.data.ratingError.unitOfMeasureSourceCode);
	$('#loadServicesOverLay').val(responseText.data.ratingError.loadServiceCodeRE);
	//D026902: 	CHOICE MESSAGE DISPLAY: DATES & ROUTING FIELDS TOO SHORT
	if(responseText.data.ratingError.routingDetailsRE!=null){
		$('#routingDetOverLay').val(responseText.data.ratingError.routingDetailsRE.replace(/ /g, ""));
	}
	$('#dischargeServicesOverlay').val(responseText.data.ratingError.dischargeServiceCodeRE);
	
	$('#cmdyError').val(responseText.data.ratingError.commodityLineSeqNum);
	$('#commodityDescError').val(responseText.data.ratingError.commodityDesc);
	$('#tariffError').val(responseText.data.ratingError.tariffId);
	$('#itemError').val(responseText.data.ratingError.itemNumber);
	$('#noteError').val(responseText.data.ratingError.note);
	$('#pieceError').val(responseText.data.ratingError.pieceCount);
	$('#kindError').val(responseText.data.ratingError.pieceKind);
	
	
	//$('#netWtError').val(responseText.data.ratingError.weight);
	//$('#feetError').val(responseText.data.ratingError.cubicFeet);
	var netWtError=responseText.data.ratingError.weight;
	var feetError=responseText.data.ratingError.cubicFeet;
	//for 022341
	//For D026643
	//if(responseText.data.ratingError.unitOfMeasureSourceCode=="I"){
		$('#netWtError').val(Math.floor(netWtError));
		$('#feetError').val(Math.floor(feetError));
	/*}
	
	else{		
		$('#netWtError').val((Math.round((parseFloat(netWtError,3)*1000))/1000).toFixed(3));
		$('#feetError').val((Math.round((parseFloat(feetError,3)*1000))/1000).toFixed(3));
		
	}*/

	
	$('#RtCdDelvError').val(responseText.data.ratingError.recDel);
	$('#RtCdPickUpError').val(responseText.data.ratingError.recPickup);
	$('#carrPkUpDelvError').val(responseText.data.ratingError.carrDelv);
	$('#carrPkUpError').val(responseText.data.ratingError.carrPickUp);
	$('#EqCubeError').val(responseText.data.ratingError.eqpCube);
	$('#EqWtError').val(responseText.data.ratingError.eqpWt);

	
	//$('#equipPcError').val(responseText.data.ratingError.equipPiece);
	$('#sizeError').val(responseText.data.ratingError.typeSize);
	$('#efError').val(responseText.data.ratingError.emptyFull);
	$('#frtError').val(responseText.data.ratingError.frtCharges);
	//$('#ratingIdER').val(responseText.data.ratingError.reHeaderId);
	//D024328: 	Billing: GATES Rate Engine Choices Screen does not match FACTS
	$('#rateSetIdErr').val(responseText.data.ratingError.reHeaderId);
	
	
	if(responseText.data.header!=undefined && responseText.data.shipmentItemForm != undefined 
			&& ((responseText.data.shipmentItemForm.imperialLengthFeet != null && responseText.data.shipmentItemForm.imperialLengthFeet > 0) || (responseText.data.shipmentItemForm.imperialLengthInches != null && responseText.data.shipmentItemForm.imperialLengthInches > 0) || (responseText.data.shipmentItemForm.metricLength != null && responseText.data.shipmentItemForm.metricLength > 0))
			&& ((responseText.data.shipmentItemForm.imperialBreathFeet != null && responseText.data.shipmentItemForm.imperialBreathFeet > 0) || (responseText.data.shipmentItemForm.imperialBreathInches != null && responseText.data.shipmentItemForm.imperialBreathInches > 0) || (responseText.data.shipmentItemForm.metricBreadth != null && responseText.data.shipmentItemForm.metricBreadth > 0))
			&& ((responseText.data.shipmentItemForm.imperialHeightFeet != null && responseText.data.shipmentItemForm.imperialHeightFeet > 0) || (responseText.data.shipmentItemForm.imperialHeightInches != null && responseText.data.shipmentItemForm.imperialHeightInches > 0) || (responseText.data.shipmentItemForm.metricHeight != null && responseText.data.shipmentItemForm.metricHeight > 0))){
				if(responseText.data.ratingError.unitOfMeasureSourceCode=="I"){
					$('#sizeError').val("L: "+ responseText.data.shipmentItemForm.imperialLengthFeet+"' "+responseText.data.shipmentItemForm.imperialLengthInches+'"  W: '+ responseText.data.shipmentItemForm.imperialBreathFeet+"' "+responseText.data.shipmentItemForm.imperialBreathInches
							+'"  H: '+ responseText.data.shipmentItemForm.imperialHeightFeet+"' "+responseText.data.shipmentItemForm.imperialHeightInches+'"');
				}else{
					convertImperialIntoMetricAndDisplayREError(responseText.data.shipmentItemForm.metricLength, responseText.data.shipmentItemForm.metricBreadth,	responseText.data.shipmentItemForm.metricHeight);
					
				}
				$('#sizeError').addClass('typeSizeHasDimension');
				document.getElementById('errorTypeSize').innerHTML = 'Dimension';
	}
	
	//for 24256
	if(responseText.data.ratingError.equipSubsScenario!=undefined &&
			responseText.data.ratingError.equipSubsScenario!=null && 
			responseText.data.ratingError.equipSubsScenario==true){
		document.getElementById('equipmentSubstitutionScenarioREError').innerHTML = 'EQP SUBS';
		$('#equipmentSubstitutionScenarioREError').attr('style','background:yellow');
		$('#cmdyError').attr('style','background:yellow');
		$('#sizeError').attr('style','background:yellow');
		$('#isEmptyFullREError').attr('style','background:yellow');

	}
	else{
		document.getElementById('equipmentSubstitutionScenarioREError').innerHTML = ' ';
		$('#cmdyError').removeAttr('style','background');
		$('#sizeError').removeAttr('style','background');
		$('#isEmptyFullREError').removeAttr('style','background');

	}
	
	//24328 start//////////////////////////////////////////////////////////////////////////////////////////////////////////
	//for empty full special service
	if(responseText.data.ratingError.emptyFull!=null){
		if(responseText.data.ratingError.emptyFull=="FULL"){
			document.getElementById('isEmptyFullREChoice').innerHTML = 'FULL  ';
		}else if(responseText.data.ratingError.emptyFull=="EMPTY") {
			document.getElementById('isEmptyFullREChoice').innerHTML = 'EMPTY  ';
		}
	}
	if(responseText.data.sizeOfItem!=undefined)
	$('#totalCmdyLinesError').val(responseText.data.sizeOfItem);
	else
	$('#totalCmdyLinesError').val(responseText.data.ratingError.commodityLineCount);
	
	if(responseText.data.freightForm!=undefined){
		$('#equipmentIdError').val(responseText.data.freightForm.equipmentId);
		$('#totalFreightCountError').val(responseText.data.freightForm.totalEquipment);
		$('#equipPcError').val(responseText.data.freightForm.shipmentFreightSeqNumber);
	
		
		if(responseText.data.freightForm.temperature!=null){
			document.getElementById('temperatureREError').innerHTML = responseText.data.freightForm.temperature+"  ";
			if(responseText.data.freightForm.temperatureCode!=null){
				document.getElementById('temperatureREError').innerHTML = responseText.data.freightForm.temperature+" "+ responseText.data.freightForm.temperatureCode+"  ";
			}
		}
		if(responseText.data.freightForm.overflow!=null){
			if(responseText.data.freightForm.overflow=="Y")
				document.getElementById('isOverFlowREError').innerHTML = 'Oflow:Y';
			//D025163
			//else if(responseText.data.freightForm.overflow=="N")
				//document.getElementById('isOverFlowREError').innerHTML = 'Oflow:N';
		}
	}else if(responseText.data.shipmentFreightForm!=undefined){
		$('#equipmentIdError').val(responseText.data.shipmentFreightForm.equipmentId);
		$('#totalFreightCountError').val(responseText.data.shipmentFreightForm.totalEquipment);
		$('#equipPcError').val(responseText.data.shipmentFreightForm.shipmentFreightSeqNumber);
		
		if(responseText.data.shipmentFreightForm.isEmpty!=null){
			if(responseText.data.shipmentFreightForm.isEmpty=="F"){
				document.getElementById('isEmptyFullREError').innerHTML = 'FULL  ';
			}else{
				document.getElementById('isEmptyFullREError').innerHTML = 'EMPTY  ';
			}
		}
		if(responseText.data.shipmentFreightForm.temperature!=null){
			document.getElementById('temperatureREError').innerHTML = responseText.data.shipmentFreightForm.temperature+"  ";
			if(responseText.data.shipmentFreightForm.temperatureCode!=null){
				document.getElementById('temperatureREError').innerHTML = responseText.data.shipmentFreightForm.temperature+" "+ responseText.data.shipmentFreightForm.temperatureCode+"  ";
			}
		}
		if(responseText.data.shipmentFreightForm.overflow!=null){
			if(responseText.data.shipmentFreightForm.overflow=="Y")
				document.getElementById('isOverFlowREError').innerHTML = 'Oflow:Y';
			//D025163
			//else if(responseText.data.shipmentFreightForm.overflow=="N")
			//	document.getElementById('isOverFlowREError').innerHTML = 'Oflow:N';
		}
	}
	//24328 end//////////////////////////////////////////////////////////////////////////////////////////////////////////
	//22179- to display commodity decription on mouse hover
	hoverErrorDesc();
}

function onChoiceGridLoad(){
	var reccountContainerGrid = $('#reChoiceGrid').jqGrid('getDataIDs');
	for (var i = 0; i < reccountContainerGrid.length; i++) {
		if(jQuery("#reChoiceGrid").getRowData( $('#reChoiceGrid').jqGrid('getDataIDs')[i]). selectable
				 == 'false'){
			var id = jQuery("#reChoiceGrid").getRowData( $('#reChoiceGrid').jqGrid('getDataIDs')[i]). reRatingChoiceId;
			id= id.substring(0,id.indexOf("."));
			$("#jqg_reChoiceGrid_" + id).attr("disabled", true);	
//			$("div.ui-pg-div.ui-inline-edit", "#"+$('#commodityGrid').jqGrid('getDataIDs')[i]).hide();
//			jQuery("#reChoiceGrid").getRowData( $('#reChoiceGrid').jqGrid('getDataIDs')[i]).style.di
//        	$("#jqg_reChoiceGrid_" + rowdata.reRatingChoiceId).attr("disabled", true);
		}
	}
	rowSequenceNumberForREChoices=0;
}

function onGridComplete (){
	var rowIDs = jQuery("#reChoiceGrid").getDataIDs(); 
    for (var i=0;i<rowIDs.length;i=i+1){ 
      var rowData=jQuery("#reChoiceGrid").getRowData(rowIDs[i]);
      var trElement = jQuery("#"+ rowIDs[i],jQuery('#reChoiceGrid'));
      $(trElement.children()[3]).attr('title',rowData.choiceAssistText);
    }
}
//22179- to display commodity decription on mouse hover
function hoverErrorDesc(){
	var txtTool=document.getElementById('commodityDescError'); 
	txtTool.title=txtTool.value; 
}
function hoverChoicesDesc(){
	var txtTool=document.getElementById('commodityDescChoice'); 
	txtTool.title=txtTool.value; 
}
//for 22658
//changed because the font has been changed to courier new which takes more space. Also modified the formattter
function lineFormatter( input, options, rowObject )
{	
	if(input.length>95){
			var finalString="";
			var text1= input.substr(0, 95);
			//finalSting=text1;
			firstText="";
			var lengthFirstText=0;
			var array=[];
			var count=0;
			
			while(text1!=""){
				
		
				indexOfSpace= text1.lastIndexOf(" ");
				//indexOfSpace=text1.length-indexOfSpace;
				if(text1.length>=95){
					if(indexOfSpace>0){
					firstText= text1.substring(0, indexOfSpace+1);
					}else{
					firstText= text1.substring(0, 95);	
					}
				}else{
					firstText=text1;
				}
				lengthFirstText= firstText.length + lengthFirstText;
				finalString=finalString+firstText;
				
				text1=input.substr(lengthFirstText,95);
				
				//if(text1.indexOf(' ') >= 0){
				if(firstText.match(/^\s+$/) === null && firstText!="") {
				array[count]=firstText;
				count++;
				}
	
			}
			
			 //i=count;
			 var lineInGrid="";
			 for(var i=(count-1); i>=0;i--){
				 if(i==count-1){
					 lineInGrid=  array[i].trim() + lineInGrid;
				 }else{
				 lineInGrid= array[i].trim() + "</br>" +lineInGrid;
				 }
			 }
			 return lineInGrid;
	}
	else{
			return input;
	}
}

function lineFormatterREerror( input, options, rowObject )
{
	if(input.length>40){
			var finalString="";
			var text1= input.substr(0, 40);
			//finalSting=text1;
			firstText="";
			var lengthFirstText=0;
			var array=[];
			var count=0;
			
			while(text1!=""){
				
		
				indexOfSpace= text1.lastIndexOf(" ");
				//indexOfSpace=text1.length-indexOfSpace;
				if(text1.length>=40){
					if(indexOfSpace>0){
					firstText= text1.substring(0, indexOfSpace+1);
					}else{
					firstText= text1.substring(0, 40);	
					}
				}else{
					firstText= text1;
				}
				lengthFirstText= firstText.length + lengthFirstText;
				finalString=finalString+firstText;
				
				text1=input.substr(lengthFirstText,40);
				
				//if(text1.indexOf(' ') >= 0){
				if(firstText.match(/^\s+$/) === null && firstText!="") {
				array[count]=firstText;
				count++;
				}
	
			}
			
			 //i=count;
			 var lineInGrid="";
			 for(var i=(count-1); i>=0;i--){
				 if(i==count-1){
					 lineInGrid=  array[i] + lineInGrid;
				 }else{
				 lineInGrid=  array[i] + "</br>" +lineInGrid;
				 }
			 }
			 return lineInGrid;
	}
	else{
			return input;
	}
}

function convertImperialIntoMetricAndDisplayREError(imperialTotalLengthInInches, imperialTotalBreadthInInch, imperialTotalHeightInInch){
	var metricLength=0;
	var metricBreadth=0;
	var metricHeight=0;
	metricLength=(Math.round((imperialTotalLengthInInches)*0.0254)).toFixed(3);
	metricBreadth=(Math.round((imperialTotalBreadthInInch)*0.0254)).toFixed(3);
	metricHeight=(Math.round((imperialTotalHeightInInch)*0.0254)).toFixed(3);
	
	$('#sizeError').val("L: "+metricLength+"m  W: "+metricBreadth+"m  H: "+metricHeight+"m");
}
function convertImperialIntoMetricAndDisplayREChoice(imperialTotalLengthInInches, imperialTotalBreadthInInch, imperialTotalHeightInInch){
	var metricLength=0;
	var metricBreadth=0;
	var metricHeight=0;
	metricLength=(Math.round((imperialTotalLengthInInches)*0.0254)).toFixed(3);
	metricBreadth=(Math.round((imperialTotalBreadthInInch)*0.0254)).toFixed(3);
	metricHeight=(Math.round((imperialTotalHeightInInch)*0.0254)).toFixed(3);
	
	$('#size').val("L: "+metricLength+"m  W: "+metricBreadth+"m  H: "+metricHeight+"m");
}
;var domesticForeignIndicator = "none";



$(function() {

	var assignOrCreate="";
	//$('#shipmentForm').validationEngine('attach');	// it has been used on Go button click for removing PopUp on page load
	//$('#shipmentNumber').val('');
	
	
	$('#shipmentSequenceNumber').attr('disabled', false);
	$('#shipmentCorrectionNumber').attr('disabled', true);
	setDefaultForShipmentStatus();

	shipmentNumberPredictive();
	
	sequenceNumberPredictive();
	
	holdPredictive();	
	
	$('#shipmentNumber').change(function() {
		$('#shipmentSequenceNumber').val('');
		$('#shipmentCorrectionNumber option').remove();
		//$('#shipmentSequenceNumber').attr('disabled', true);
		$('#shipmentCorrectionNumber').attr('disabled', true);
		$('#anyChangesDone').val("Y");
		dirtyData=false;
	});

	$('#shipmentSequenceNumber').change(function() {
		$('#shipmentCorrectionNumber option').remove();
		$('#shipmentCorrectionNumber').attr('disabled', true);
		$('#anyChangesDone').val("Y");
		dirtyData=false;
	});
	$('#shipmentCorrectionNumber').change(function() {
		$('#anyChangesDone').val("Y");
		dirtyData=false;
	});
	
	// validate address roles based on trade
	$('#tradeCode').change(function() {
		if($('tradeCode').val()!=''){
			validateShipmentTrade();
		}
		
		setDomesticForeignIndicator();
	});
	
	// validate address roles based on trade
	$('#shipmentStatusCode').change(function() {
		checkIfTemplateToBeDisabled();
		isShipmentDeletable();
		if($('#shipmentStatusCode').val()!=''){
			var valid = validateShipmentStatusForActor();
			if(valid == true){
				$('#msgDiv').html("");
				$('#msgDiv').hide();
				validateShipmentStatusForActorOnServer();
			}else{
				$('#msgDiv').html("<div class=\"message_error\">New shipment status not valid for previous status.</div>");
				$('#msgDiv').show();
			}
		}
	});
	$('#rateDate').change(function() {
		updateFreightRateDate();
	});
	
	enableEnterEvent();
	//D026991,Fix for calendar date, which should show latest date instead of future date.
	//$("#rateDate").datepicker({ maxDate: getCurrentDate()});
	 $('#rateDate').datepicker({ dateFormat: 'mm-dd-yy',maxDate:"+0" });
});

var obj;
var TAB = 9;
function catchTAB(evt,elem)
{
	obj = elem;
	var keyCode;
	if ("keyCode" in evt){
		keyCode=evt.keyCode;
	}

	if (keyCode == TAB){
		$('#shipmentCorrectionNumber').attr('disabled', false);
		$.ajax({
			type : "POST",
			url : _context +"/shipment/header/shipmentCorrectionNumberList",
			data : {
				shipmentNumber : $("#shipmentNumber").val(),
				shipmentSequenceNumber : $("#shipmentSequenceNumber").val()
			},
			success : function(responseText) {
				var list= responseText.data.shipmentCorrectionNumberList;
				$('#shipmentCorrectionNumber option').remove();								
				$.each(list, function(index,codeDescription) {
					$("#shipmentCorrectionNumber").get(0).options[$("#shipmentCorrectionNumber").get(0).options.length] = new Option(codeDescription.description, codeDescription.code);
				});								
				document.getElementById("shipmentCorrectionNumber").selectedIndex=0;
				//$('#anyChangesDone').val("Y");
				$("#shipmentGoBtn").click();
			}
		});
 
	}
}

function setDefaultForShipmentStatus(){
	//if($("#shipmentNumber").val() == '' || $("#shipmentNumber").val() == null){
	if($("#shipmentId").val() == '' || $("#shipmentId").val() == null){
		$("#shipmentStatusCode").attr("disabled",true);
	}else{
		$("#shipmentStatusCode").attr("disabled",false);
	}
}

function validateShipmentStatusForActor(){
	var savedBKNGStatus = $('#savedShipmentStatusCode').val();
	var requestedBKNGStatus = $('#shipmentStatusCode').val();
	var valid = false;

	if(requestedBKNGStatus=='CANC' ){
		$('#shipmentStatusCode').val(savedBKNGStatus);
		return false;
	}
	
	//CANC to INCP
	if(requestedBKNGStatus=='INCP' ){
		return true;
	}
	
	if(savedBKNGStatus!=''){
		switch(savedBKNGStatus){
		case 'INCP':
			switch(requestedBKNGStatus){
				case 'CANC':
					return true;
			}
			break;
		case 'PEND':
			switch(requestedBKNGStatus){
				case 'CANC':
					return true;
			}
			break;
		case 'APPR':
			switch(requestedBKNGStatus){
				case 'CANC':
					return true;
			}
			break;
		case 'OFFR':
			switch(requestedBKNGStatus){
				case 'CANC':
					return true;
				case 'APPR':
					return true;
			}
			break;
		case 'CANC':
			switch(requestedBKNGStatus){
				case 'APPR':
					return true;
			}
			break;
		case 'ASGN':
			break;
		}
	}else{
		return true;
	}

	if(valid==false)
		$('#shipmentStatusCode').val(savedBKNGStatus);
	return valid;

}

function validateShipmentStatusForActorOnServer(){
	var queryString = $('#shipmentForm').formSerialize();
	$.ajax({
		type : "POST",
		url : _context +"/shipment/header/status",
		data : queryString + "&requestedShipmentStatus="+ $('#shipmentStatusCode').val(),
		success : function(responseText) {
			showResponseMessages("msgDiv",responseText);
			
		}
	});
}


function validateShipmentTrade(){
	$.ajax({
		type : "POST",
		url : _context +"/shipment/header/trade",
		data : {
			tradeCode : $('#tradeCode').val(),
			shipperAroleId : $('input[name="shipper\\.addressRoleId"]').val(),
			consigneeAroleId : $('input[name="consignee\\.addressRoleId"]').val(),
			pol : $('#originPortCityCode').val(),
			pod : $('#destinationPortCityCode').val()
		},
		success : function(responseText) {
			showResponseMessages("msgDiv",responseText);
		}
	});
}

function removePopUps(){
	$("#shipmentForm").validationEngine('hideAll');
}

function enableDisableBillType() {
	var loadDischargeServiceGroup = $('#loadDischargeServiceGroup').val();
	if (loadDischargeServiceGroup == 'CY' || loadDischargeServiceGroup == 'cy') {
		//Modified for Defect D028864
		 if(isHeaderModifiable){
		   $('#billType').attr('disabled', false);
		 }
	} else {
		$('#billType').attr('disabled', true);
	}
}

function enableDisableActionButtons() {
	var status = $('#statusCode').text();
	if($.trim(status) =='' || status==null){
		disableActionButtons();
	}else{
	if (status == 'ISSUED' || status == 'CORRECTED') {
		
		$('#shipmentSaveBtn').attr('disabled', true);
		//$('#shipmentCustomizeBtn').attr('disabled', true); ////against D022376 to enable button on the screen
		$('#shipmentHoldReleaseBtn').attr('disabled', true);
		$('#shipmentBillBtn').attr('disabled', true);
		$('#shipmentChargesBtn').attr('disabled', false);
		$('#shipmentPayablesBtn').attr('disabled', false);
		$('#shipmentCorrectionsBtn').attr('disabled', false);
		//$('#shipmentSendDocBtn').attr('disabled', true);	// for 22735
		$('#shipmentStatusBtn').attr('disabled', false);
		$('#shipmentDeleteBtn').attr('disabled', true);
		$('#shipmentTraceBtn').attr('disabled', false);
		$('#auditRelease').attr('disabled', true);
	} else {
		var unReleaseCount = $("#holdUnreleasedGrid").getGridParam("reccount");
		$('#shipmentSaveBtn').attr('disabled', false);
		//$('#shipmentCustomizeBtn').attr('disabled', false);  //against D022376 to enable button on the screen
		if(unReleaseCount>0){
			$('#shipmentHoldReleaseBtn').attr('disabled', false);
		}else{
			$('#shipmentHoldReleaseBtn').attr('disabled', true);
		}
		
		$('#shipmentBillBtn').attr('disabled', false);
		$('#shipmentChargesBtn').attr('disabled', false);
		$('#shipmentPayablesBtn').attr('disabled', false);
		$('#shipmentCorrectionsBtn').attr('disabled', false);
		//$('#shipmentSendDocBtn').attr('disabled', false);
		$('#shipmentStatusBtn').attr('disabled', false);
		 if (status == 'PENDING' || status == 'DESCRIBED' || status == 'RATED' || status == 'IN AUDIT') {
			$('#shipmentDeleteBtn').attr('disabled', false);
		} else {
			$('#shipmentDeleteBtn').attr('disabled', true);
		}
		$('#shipmentTraceBtn').attr('disabled', false);
		if( status == "IN AUDIT" || status == "F/C AUDIT")
		{
			$('#auditRelease').attr('disabled', false);
			$('#auditRelease').attr('title', $('#auditDesc').val());
		}else
		{
			$('#auditRelease').attr('disabled', true);
		}
	}
	}
}

function disableActionButtons() {		
		$('#shipmentSaveBtn').attr('disabled', true);
		$('#shipmentCustomizeBtn').attr('disabled', true);
		$('#shipmentHoldReleaseBtn').attr('disabled', true);
		$('#shipmentBillBtn').attr('disabled', true);
		$('#shipmentChargesBtn').attr('disabled', true);
		$('#shipmentPayablesBtn').attr('disabled', true);
		$('#shipmentCorrectionsBtn').attr('disabled', true);
		$('#shipmentSendDocBtn').attr('disabled', true);
		$('#shipmentStatusBtn').attr('disabled', true);
		$('#shipmentDeleteBtn').attr('disabled', true);
		$('#shipmentTraceBtn').attr('disabled', true);
		$('#auditRelease').attr('disabled',true);
	}

function updateFreightRateDate() {

	var rateDateOriginal = $('#rateDateOriginal').val();
	var rateDate = $('#rateDate').val();
	var receivedDate = $('#freightReceivedDate').val();
	var freightReceivedDateOriginal=$('#freightReceivedDateOriginal').val();
	if (((rateDateOriginal != rateDate) && ((freightReceivedDateOriginal == null) ||( freightReceivedDateOriginal == '')))) {
	    // D025429, receivedFreightDate needs to be in MM-dd-yyyy format
		$('#freightReceivedDate').val(isValidDate(rateDate));
	}
}
function enableDisableRateDate(){
	if(isRateDateModifiable==true && isRateDateDisplayOnly==true){
		$("#rateDate").css('visibility','visible');
		$("#rateDate").attr('disabled',false);
	}else if (isRateDateModifiable==false && isRateDateDisplayOnly==true){
		$("#rateDate").css('visibility','visible');
		$("#rateDate").attr('disabled',true);
	}else if (isRateDateModifiable==false && isRateDateDisplayOnly==false){
		$("#rateDate").css('visibility','hidden');
	}
} 

function clearDefaultDate(){
	
	if($('#freightReceivedDate').val()=='01-01-0001'){
		$('#freightReceivedDate').val("");
	}
	if($('#rateDate').val()=='01-01-0001'){
		$('#rateDate').val("");
	}
}

function clearHeaderData() {
	document.getElementById("tradeCodeDesc").innerText ="";
	$('#freightReceivedDate').val("");
	document.getElementById("shipmentTemplateNumber").innerText ="";
	document.getElementById("statusCode").innerText ="";
	$('#customerGroupId option').remove();	
	document.getElementById("billType").selectedIndex=0;
}
function checkForChangeInShipment(templateNumber)
{
	if($('#anyChangesDone').val()=='Y'){
		var isConfirm = confirm("All the unsaved Changes will be discarded. Continue?");
		if(isConfirm)
			document.location.href= _context + "/booking/template/showTemplateForm?templateNumber="+templateNumber;
	}
	else
		document.location.href= _context + "/booking/template/showTemplateForm?templateNumber="+templateNumber;
}
function sequenceNumberPredictive(){
	//var url1 =	_context+'/cas/autocomplete.do?method=searchShpmntSeqNo&searchType=354&parentSearch='+ $('#shipmentNumber').val();
	 $('#shipmentSequenceNumber').gatesAutocomplete({
		 	source:_context+'/cas/autocomplete.do',
		 	extraParams: {
		 		method: 'searchShpmntSeqNo',
		 		searchType: '354',
		 		parentSearch: function(){return  $('#shipmentNumber').val();}
		 	},
			formatItem: function(data) {
				return data.sequenceNo;
			},
			formatResult: function(data) {
				return data.sequenceNo;
			}, 
			select: function(data) {
				$('#shipmentSequenceNumber').val(data.sequenceNo);
				$('#shipmentCorrectionNumber').attr('disabled', false);
				$.ajax({
					type : "POST",
					url : _context +"/shipment/header/shipmentCorrectionNumberList",
					data : {
						shipmentNumber : $("#shipmentNumber").val(),
						shipmentSequenceNumber : $("#shipmentSequenceNumber").val()
					},
					success : function(responseText) {
						var list= responseText.data.shipmentCorrectionNumberList;
						$('#shipmentCorrectionNumber option').remove();								
						$.each(list, function(index,codeDescription) {
							$("#shipmentCorrectionNumber").get(0).options[$("#shipmentCorrectionNumber").get(0).options.length] = new Option(codeDescription.description, codeDescription.code);
						});								
						document.getElementById("shipmentCorrectionNumber").selectedIndex=0;
						//$('#anyChangesDone').val("Y");
						$("#shipmentGoBtn").click();
					}
				});
			}
		});
}

function shipmentNumberPredictive(){
	//Shipment# Predictive Search
	//var url =	_context+'/cas/autocomplete.do?method=searchShpmntNoForHeader&searchType=355'
	$('#shipmentNumber').gatesAutocomplete({
		minLength: 7,
		source:_context+'/cas/autocomplete.do',
	 	extraParams: {
	 		method: 'searchShpmntNoForHeader',
	 		searchType: '355'
	 	},
		formatItem: function(data) {
			return data.shpmntNo;
		},
		formatResult: function(data) {
			return data.shpmntNo;
		}, 
		select: function(data) {
			
			$('#shipmentNumber').val(data.shpmntNo);
			$('#shipmentNumberHidden').val($('#shipmentNumber').val());
			
			$('#shipmentSequenceNumber').attr('disabled', false);
			$('#shipmentSequenceNumber').val('');
			//if($('#shipmentSequenceNumber').val() == null	|| $('#shipmentSequenceNumber').val() == ""){
			//populate seq number and correction number default on shipment number change start
				$.ajax({
					async: false,
					type : "POST",
					url : _context + "/shipment/defaultShipmentSequenceNumber",
					data : {				
						shipment_number :$('#shipmentNumber').val()
					},
					success : function(responseText) {
						var shipmentSequenceNumber=responseText.data;
						$('#shipmentSequenceNumber').val(shipmentSequenceNumber);
						$('#shipmentCorrectionNumber').attr('disabled', false);
						$.ajax({
							type : "POST",
							url : _context +"/shipment/header/shipmentCorrectionNumberList",
							data : {
								shipmentNumber : $("#shipmentNumber").val(),
								shipmentSequenceNumber : $("#shipmentSequenceNumber").val()
							},
							success : function(responseText) {
								var list= responseText.data.shipmentCorrectionNumberList;
								$('#shipmentCorrectionNumber option').remove();								
								$.each(list, function(index,codeDescription) {
									$("#shipmentCorrectionNumber").get(0).options[$("#shipmentCorrectionNumber").get(0).options.length] = new Option(codeDescription.description, codeDescription.code);
								});								
								document.getElementById("shipmentCorrectionNumber").selectedIndex=0;
								//$('#anyChangesDone').val("Y");
							}
						});
					}			
				});
		}
	});
}
function checkActionValidation(){
	if($('#anyChangesDone').val()=='Y'){
		alert("Search filter has been modified.Please search again for the new parameters.");
		//showDisplayAgainBeforeAction();
		return false;
	}
	return true;
}
function showDisplayAgainBeforeAction() {
	$('#msgDiv').html("<div class=\"message_error\">Search filter has been modified.Please search again for the new parameters. </div>");
	$('#msgDiv').show();
}


function enableEnterEvent() {
	$("#shipmentCorrectionNumber").keyup(function(event) {
		if (event.keyCode == 13) {
			$("#shipmentGoBtn").click();
			$('#anyChangesDone').val("N");
		}
	});
	
	$("#shipmentNumber").keyup(function(event) {
		if (event.keyCode == 13) {
			$('#shipmentSequenceNumber').attr('disabled', false);
			$('#shipmentCorrectionNumber').attr('disabled', false);
			$("#shipmentGoBtn").click();
			$('#anyChangesDone').val("N");
		}
	});
	
	$("#shipmentSequenceNumber").keyup(function(event) {
		if (event.keyCode == 13) {
			$('#shipmentCorrectionNumber').attr('disabled', false);
			$("#shipmentGoBtn").click();
			$('#anyChangesDone').val("N");
		}
	});
}

function makeFormReadOnly(responseText,formId){
	if(responseText.data.header !=null){
	if(responseText.data.header.statusCode=='ISSUED' || responseText.data.header.statusCode=='CORRECTED'){		
		$('#partiesDialog').gatesDisable();
		$('#partiesAdd').gatesDisable();		
		$('#holdAdd').gatesDisable();
		$('#clausesAdd').gatesDisable();
		$('#specialSerivceAdd').gatesDisable();
		$('#marksAndNumbers').attr("readOnly", true);
		$('#loadServiceCode').attr("readOnly", true);
		$('#dischargeServiceCode').attr("readOnly", true);
		/*$('#marksAndNumbers').attr('readOnly', true);
		$('#marksAndNumbers').attr('readOnly', true);*/
		
		
		/*$("div.ui-pg-div.ui-inline-del").hide();
		$("div.ui-pg-div.ui-inline-edit").hide();*/
		
		$('#del_specialServiceGrid').hide();
		$('#del_holdGrid').hide();
		
		$("#shipperOneTimeCustDiv").html("<img height=\"16\" border=\"0\" align=\"absmiddle\" width=\"15\" height=\"15\" alt=\"search\" src=\""+_context+"/resources/images/u388_r.png\"></img>Add One Time Customer");
		$("#consigneeOneTimeCustDiv").html("<img height=\"16\" border=\"0\" align=\"absmiddle\" width=\"15\" height=\"15\" alt=\"search\" src=\""+_context+"/resources/images/u388_r.png\"></img>Add One Time Customer");
		
	}else{
		$('#partiesDialog').gatesEnable();
		if(isPartyAdd){
			$('#partiesAdd').gatesEnable();
		}
		if(isHoldManualAdd){
			$('#holdAdd').gatesEnable();
		}
		if(isClausesAdd){
			$('#clausesAdd').gatesEnable();
		}
		if(isSpecialServiceAdd){
			$('#specialSerivceAdd').gatesEnable();
		}
		if(isReferenceNumberMarksUpdate){
			$('#marksAndNumbers').attr("readOnly", false);
		}
		
		$('#loadServiceCode').attr("readOnly", false);
		$('#dischargeServiceCode').attr("readOnly", false);
		/*$('#marksAndNumbers').attr('readonly', false);
		$('#marksAndNumbers').attr('readonly', false);*/
		
	/*	$("div.ui-pg-div.ui-inline-del").show();
		$("div.ui-pg-div.ui-inline-edit").show();*/
		
		
		
		$('#del_specialServiceGrid').show();
		$('#del_holdGrid').show();
		if(isShipperConsigneeModifiable){
			$("#shipperOneTimeCustDiv").html("<a href=\"javascript:openOneTimeCustomer('shipper');\"><img height=\"16\" border=\"0\" align=\"absmiddle\" width=\"15\" height=\"15\" alt=\"search\" src=\""+_context+"/resources/images/u388_r.png\"></img>Add One Time Customer</a>");
			$("#consigneeOneTimeCustDiv").html("<a href=\"javascript:openOneTimeCustomer('consignee');\"><img height=\"16\" border=\"0\" align=\"absmiddle\" width=\"15\" height=\"15\" alt=\"search\" src=\""+_context+"/resources/images/u388_r.png\"></img>Add One Time Customer</a>");
		}else{
			$("#shipperOneTimeCustDiv").html("<img height=\"16\" border=\"0\" align=\"absmiddle\" width=\"15\" height=\"15\" alt=\"search\" src=\""+_context+"/resources/images/u388_r.png\"></img>Add One Time Customer");
			$("#consigneeOneTimeCustDiv").html("<img height=\"16\" border=\"0\" align=\"absmiddle\" width=\"15\" height=\"15\" alt=\"search\" src=\""+_context+"/resources/images/u388_r.png\"></img>Add One Time Customer");
		}
	}
	$("#shipmentNumber").attr('disabled', false);
	$("#shipmentGoBtn").attr('disabled', false);
	}
}
;    var dirtyData=false;
	var saveBillBeforeBillButton = false;
	var callBillActionAfterSave = false;
	var hideCustomizeField = false;	
	var isAutoBillVal=" ";
	var createUser="";
	var sessionId = $.cookie("JSESSIONID");
	var accordionIndex = 0;
	//added against 21739
/*	var changeInShipperConsignee=false;
	var changeInParties=false;
	var changeInRefNumberMarks=false;
	var changeInRoutingVVD=false;
	var changeInCommodity=false;
	var changeInMilitary=false;
	var changeInSpecialServices=false;
	var changeInClauses=false;
	var changeInShipmentHold=false;
	var changeInShipmentOverride=false;
	
	var changeInSpecialServiceGrid=false;
	var changeInHoldGrid=false;
	var changeInClausesGrid=false;
	
	var counterPartiesGridReloaded=0;
	var counterClausesGridReloaded=0;
	var counterRefNumberGridReloaded= 0;
	var counterConvGridReloaded=0;
	var counterSplServicesReloaded=0;
	var counterHoldGridReloaded=0;
	
	var numberOfInitialRowsHold=null;
	var numberOfInitialRowsSplServices=null;
	var numberOfInitialRowsConv=null;
	var numberOfInitialRowsRefNumberGrid=null;
	var numberOfInitialRowsClausesGrid=null;
	var numberOfInitialRowsParties=null;*/
	var shipmentNotFound = false;
	var ratedatesearch="";
	
	
	
	
	
$(function() {
	//$('#shipmentForm').validationEngine('attach');	// it has been used on Go button click for removing PopUp on page load 

	elRTE.prototype.options.panels.web2pyPanel = [ 'bold', 'italic',
	                                   			'underline', 'forecolor', 'hilitecolor', 'justifyleft',
	                                   			'justifyright', 'justifycenter', 'justifyfull', 'formatblock',
	                                   			'fontsize', 'fontname', 'insertorderedlist', 'insertunorderedlist',
	                                   			'link', 'image', ];

   	elRTE.prototype.options.toolbars.web2pyToolbar = [ 'web2pyPanel', 'tables' ];
		
	 setDefaultPrefMethod('consignee');
	 setDefaultPrefMethod('shipper');
	//Adding security Permissions Check for proratebill & auditrelease buttons as part of Defect D026555 
	 enforceSecurityDivAndButtons("prorateBill",isproratebilldisplay);
	 enforceSecurityDivAndButtons("auditRelease",isauditreleasedisplay);
	tabSequence('#shipmentForm');
	$('#msgDiv').hide();
	createDeleteShipmentConfirmDialog();  // can be moved
	//applycheckDirtyData();
	// Save Failed Issue added check for save before Bill Process
	$('input[type="text"],input[type="checkbox"]:not(:disabled),select,input[type="radio"]:not(:disabled),textarea:not(:disabled)').change(function(){ 
		saveBillBeforeBillButton=true;
		
	});
	$('.ui-inline-delete').click(function(){ saveBillBeforeBillButton=true;});
	$('.ui-inline-edit').click(function(){ saveBillBeforeBillButton=true;});
	

	
	disableActionButtons();
	setScreenDetails();
	clickShipmentChargesBtn();
	clickShipmentPayablesBtn();
	clickShipmentGoBtn();
	if (console) console.log('before calling clickShipmentSaveBtn()');
	clickShipmentSaveBtn();
	clickShipmentExitBtn();
	clickShipmentCustomizeBtn();
	clickShipmentDeleteBtn();	
	clickShipmentCorrectionsBtn();
	clickShipmentStatusBtn();
	clickShipmentSendDocBtn();
	enableDisableActualTrucker();

	
	//enableDisableSendDoc();
	
	//added against 21739
	//checkForChanges();
	
	//Fix for D026048: 	Bill Maintenance-commodity description: Word wrapping (word separation) failed
	$("#containerCommodityDesc").blur(function()
	{
		splitCommodity();
	});
	
	
	$('#shipmentTraceBtn').click(function(){
		$( "#trace_options_dialog" ).dialog("open");
		$('#lowTrace').attr('checked',true);
		$('#mediumTrace').attr('checked',false);
		$('#highTrace').attr('checked',false);
		$('#startRating').attr("disabled", false);
		$('#optionToRate').val("3");
	});
	
	$('#auditRelease').click(function(){
		if($('#auditId').val()!=''){
			var id=$('#auditId').val();
			$.ajax({
				   type: "GET",
				   url: _context +"/shipment/releaseAudit",
				   data: "id="+ id,
				   success: function(responseText, statusText, xhr, $form){		
					   showResponseMessages('msgDiv',responseText);
					   var messages = responseText.messages;
					   if (messages.success.length > 0 ) 
					   {
						   //D032052: 	When i release audit it refreshes to a different booking
						    window.location = _context + "/shipment/showForm";
					   }
						   
					 }
				 });
				
		}
		});
	
	$('#shipmentClearBtn').click(function(){
		/*if(somethingChanged == true){
			var isConfirm = confirm("All the unsaved Changes will be discarded. Please confirm!");
			if (isConfirm) {
				clearShipmentDataOnClearBtnClick();
			}
		}*/
		if(isAnyChangeOnPage()) {
			if(confirm('You have unsaved changes! \nContinue?')) {
				clearShipmentDataOnClearBtnClick();
				captureChanges();
			}else{
				return;
			}
		}else {
			clearShipmentDataOnClearBtnClick();
		}
	});
	
	$('#lowTrace').click(function(){
		$('#startRating').attr("disabled", false);
		$('#optionToRate').val("3");		
	});
	
	$('#mediumTrace').click(function(){
		$('#startRating').attr("disabled", false);
		$('#optionToRate').val("5");
	});
	
	$('#highTrace').click(function(){
		$('#startRating').attr("disabled", false);
		$('#optionToRate').val("7");
	});
	
	
	
	$('#cancelRating')
	.click(
		function() {
			$('#trace_options_dialog').dialog('close');
		});
	
	$('#startRating')
	.click(function(){
		
		$('#trace_options_dialog').dialog('close');
		blockUI();
		rateBill();
	});
	$('#HHGDSCommodity').click(function() {
        var reccountContainerGrid = $('#commodityGrid').jqGrid('getDataIDs');
	    var containerNumber = jQuery("#commodityGrid").getRowData(reccountContainerGrid[0]).equipmentId;
	    $.ajax({
            url: "/gates/workingContext/setContext",
            type: "POST",
            data: {key:"CONTAINER_NUMBER",value:containerNumber},
            success: function(responseText){
                $("#textfield5").removeAttr('style');
            }
    	});
    	var url = "/houseHoldShipment/showForm?";
    	if (containerNumber == null || containerNumber == undefined || containerNumber == "")
    	    url = url+"navigationUrl=2";
    	else
		    url = url+"equipmentId="+containerNumber+"&navigationUrl=2";
		window.location = _context + url;
	});
	
	
	if(null!=$('#shipmentNumber').val() && $.trim($('#shipmentNumber').val())!=''){
		displayShipment();
		setScreenFieldPropertiesforScreenFromFTWQ();
	}else{
		//createHoldGrid("shipment");	
		setScreenOnLoad();

	}
	
	$('#shipmentBillBtn').click(function() {
		//Defect-25031-Added to validate seal number before bill.
		//27472
		if($('#tradeCode').val()!='F' && $('#tradeCode').val()!='M' && $('#tradeCode').val()!='H'){
			//As per Atanus change 27472 seal is not required for H trade
			/*if($('#tradeCode').val()=='H'){
			if(isAutoBillVal=='N'){
		if(validateSealNumber()){ 
			if( $('#loadDschServiceGroupCode').val()=='CY'|| $('#loadDschServiceGroupCode').val()=='cy'){
				alert("Seal Number is required to Bill");
				return false;
			}
			}
			}
			}*/
			//D027041
			if($('#tradeCode').val()=='G'){
				if( $('#loadDschServiceGroupCode').val()=='CY'|| $('#loadDschServiceGroupCode').val()=='cy'){
					if(validateSealNumber()){
					alert("Seal Number is required to Bill");
					return false;
					}
				}
			}
		}
		//D032557
		if(!validateInvoiceNumbers()){
			$.unblockUI();
			return false;
		}
		 
		 callBillActionAfterSave = false;
		if(!checkActionValidation()){return; }
		//D026903: 	MAINTAIN BILL: AUTOBILL RATED "TO ORDER" B/L W/O NAME NOR TO ORDER B/L PARTY
		if(!validateShipmentUIFields()){return;}
		blockUI();
		if(saveBillBeforeBillButton !=null && saveBillBeforeBillButton ==true){
			validateShipmentForBillButton();
			//rateBill() method moved to saveShipmentForBillButton()on the path of validateShip method- for UnblockUI to load image before ajax calls
			/*if(callBillActionAfterSave){
				captureChanges();
				//setTimeout('rateBill()',500);
		   rateBill();
		    
			}*/
		}else{
			captureChanges();
			//setTimeout('rateBill()',500);
			$('#optionToRate').val("0");
			//rateBill(); D027069
			//D032676: 	GATES Performance - Maintain Bill - Bill Button - Merge save and rateBill transactions into one server call 
			//saveShipmentForBillButton();
			rateBill();
		}
	});
	
	
	 $( "#trace_options_dialog" ).dialog({
			autoOpen: false, 
			width: 200,
			modal: true,
			closeOnEscape: false,
			beforeClose: function() {
				
				
			}
		});
	 

	 	dirtyData=false;

	 	
	 	$('.ui-inline-save').click(function(){ saveBillBeforeBillButton=true;});
	 	$('#releaseHold').click(function(){ saveBillBeforeBillButton=true;});

	 	//added against 21739
	 	//resetChangeInInputBooleans();
	 	
	 	document.onreadystatechange = function () {
	 		
	 	    if (document.readyState == "complete") {
	 	       $.unblockUI();
	 	      var args = {
	 	 			entityType: 'SHMT',
	 	 			entityId: $('#shipmentId').val(),
	 	 			commentId:  'commentId',
	 	 			displayCommentTypes: 'CDBTR,DISPUTE,HZRD,OPS,PCCOL,PDBTR,WEBE,WIRE,CSS,DOC,KICK,PCACTY,PCCSS,SYS,WEBS'
	 	 		};
	 	      $("#comment_link").comments(args);
	 	       windowLocationAccordion();
	 	       accordionIndex = 0;
	 	    }
	 	    else if (document.readyState == "interactive"){
	 	    	blockUI();
	 	    	 
	 	    }
	 	};
	 	
	 	
	 	$('input[name="shipper\\.contact"]').change(function(){
	 		if($.trim($('input[name="shipper\\.contact"]').val())!=''){
	 			var name=$.trim($('input[name="shipper\\.contact"]').val());
	 			$('select[name="shipper\\.contactId"]').val('');
	 			$('select[name="shipper\\.contactId"]').trigger('change');	
	 			$('input[name="shipper\\.contact"]').val(name);
	 		}
	 	});
	 	$('input[name="consignee\\.contact"]').change(function(){
	 		if($.trim($('input[name="consignee\\.contact"]').val())!=''){
	 			var name=$.trim($('input[name="consignee\\.contact"]').val());
	 			$('select[name="consignee\\.contactId"]').val('');
	 			$('select[name="consignee\\.contactId"]').trigger('change');	
	 			$('input[name="consignee\\.contact"]').val(name);
	 		}
	 	});
	 	//for unsaved changes
	 	captureChanges();
	 	
	 	var oldRateDate ="";
	 	//D026991
	 	var currentDate= new Date();
	 	oldRateDate = $('#rateDate').val();
	 	 $('#rateDate').mouseover(function(){
	 		oldRateDate = $('#rateDate').val();
	 	 });

		$('#rateDate').change(function() {
		
		var newRateDate=$('#rateDate').val();			
		var isValidateDate= isValidDate(newRateDate);

		if(isValidateDate!=null )	
		{
		//D026991, For not to accept manual entry of future date.
			if(Date.parse(isValidateDate) > currentDate){
				alert(' Future date cannot be entered in rate date ');
				$('#rateDate').val(oldRateDate);
				ratedatesearch=$('#rateDate').val();
				if($('#freightReceivedDate').val() == "" || $('#freightReceivedDate').val() == null
				|| $('#freightReceivedDate').val() == undefined || newRateDate==$('#freightReceivedDate').val() )
				 $('#freightReceivedDate').val(oldRateDate);
			}
			else{
			$('#rateDate').val(isValidateDate);
			ratedatesearch=$('#rateDate').val();
			return true;	
			}
		}		
		else		
		{		
			if(newRateDate!=null && newRateDate!='')	
			{		
			alert('Effective/Expiration Date entered is not a valid Date.Enter date in Format(MM-dd-yyyy)');
			//D026991		
			if(!(Date.parse(oldRateDate) > currentDate)){
				if(isValidDate(oldRateDate)){	
			$('#rateDate').val(oldRateDate);
			ratedatesearch=$('#rateDate').val();
			if($('#freightReceivedDate').val() == "" || $('#freightReceivedDate').val() == null
            				|| $('#freightReceivedDate').val() == undefined || newRateDate==$('#freightReceivedDate').val() )
            				 $('#freightReceivedDate').val(oldRateDate);
			//D026991
			}else{
			    $('#rateDate').val("");
			  ratedatesearch=$('#rateDate').val();
			//$('#freightReceivedDate').val("");
			}}
			else{
				alert("Entered date greater than current date");
			  $('#rateDate').val("");
			  ratedatesearch=$('#rateDate').val();
			//$('#freightReceivedDate').val("");
			}	}
			else		
			{		
			$('#rateDate').val(oldRateDate);
			ratedatesearch=$('#rateDate').val();
			if($('#freightReceivedDate').val() == "" || $('#freightReceivedDate').val() == null
            				|| $('#freightReceivedDate').val() == undefined || newRateDate==$('#freightReceivedDate').val() )
            				 $('#freightReceivedDate').val(oldRateDate);
		    }
		}				
		});
	
		 $( "#hazardDialog" ).dialog({
				autoOpen: false, 
				width: 1050,
				modal: true,
				closeOnEscape: false,
				beforeClose: function() {
					
					
				},
				
			});
		  
		 checkSourcePageExpandGrid();
});


function clearShipmentDataOnClearBtnClick(){

	$('#msgDiv').html("<div class=\"message_info\">Please wait while screen is refreshed...</div>");
	$('#msgDiv').show();
	$.ajax({
		url: _context +"/shipment/clear",
		success: function(responseText){
			if (responseText.messages.error.length == 0) {
				clearAndResetShipmentScreen();
				collapseAll();
				reloadShipmentGrids();
				clearPageOnLoad();
				setShipmentTitle("");
				$('#overrideInitialLtvDate').val('');
				$('#unitOfCommodity').empty();
				$('#commodityLine').text('');
				$('.unchangeable').removeAttr("checked");
				$('#shipmentCorrectionNumber').empty();
				$('#shipmentCorrectionNumber').attr("disabled",true);
				$('#shipmentNumber').focus();
				ratedatesearch="";
			}
			showResponseMessages('msgDiv', responseText);
			window.scrollTo(0, 0);
		}
	});

}

function onCompletion(){
	var reccountContainerGrid = $('#reChoiceGrid').jqGrid('getDataIDs');
	for (var i = 0; i < reccountContainerGrid.length; i++) {
		if(jQuery("#reChoiceGrid").getRowData( $('#reChoiceGrid').jqGrid('getDataIDs')[i]). selectable
				 == 'false'){
			var id = jQuery("#reChoiceGrid").getRowData( $('#reChoiceGrid').jqGrid('getDataIDs')[i]). reRatingChoiceId;
			id= id.substring(0,id.indexOf("."));
			$("#jqg_reChoiceGrid_" + id).attr("disabled", true);	
//			$("div.ui-pg-div.ui-inline-edit", "#"+$('#commodityGrid').jqGrid('getDataIDs')[i]).hide();
//			jQuery("#reChoiceGrid").getRowData( $('#reChoiceGrid').jqGrid('getDataIDs')[i]).style.di
//        	$("#jqg_reChoiceGrid_" + rowdata.reRatingChoiceId).attr("disabled", true);
		}
	}
}

function displayShipment() {
	
	var shipment_number = $("#shipmentNumber").val();
	var shipment_sequence_number = $("#shipmentSequenceNumber").val();
	var shipment_correction_number = $("#shipmentCorrectionNumber").val();
	
	/** Populating Shipment sequence number from database*/
	if(shipment_sequence_number == null	|| shipment_sequence_number == ""){
		$.ajax({
			async: false,
			type : "POST",
			url : _context + "/shipment/defaultShipmentSequenceNumber",
			data : {				
				shipment_number :shipment_number
			},
			success : function(responseText) {
				var shipmentSequenceNumber=responseText.data;
				shipment_sequence_number=shipmentSequenceNumber;
				$('#anyChangesDone').val("N");
			}			
		});
	}
	if(shipment_sequence_number!=null){
	$("#shipmentSequenceNumber").val(shipment_sequence_number);
	
	/** Populating Shipment Correction Number number Hard coded*/
	//if(shipment_correction_number == ""	|| shipment_correction_number == null){
		// start for defect 019028
		$.ajax({
			async: false,
			type : "POST",
			url : _context +"/shipment/header/shipmentCorrectionNumberList",
			data : {
				shipmentNumber : shipment_number,
				shipmentSequenceNumber : shipment_sequence_number
			},
			success : function(responseText) {
				var list= responseText.data.shipmentCorrectionNumberList;
				$('#shipmentCorrectionNumber option').remove();								
				$.each(list, function(index,codeDescription) {
					$("#shipmentCorrectionNumber").get(0).options[$("#shipmentCorrectionNumber").get(0).options.length] = new Option(codeDescription.description, codeDescription.code);
				});
				if(shipment_correction_number == ""	|| shipment_correction_number == null){
					document.getElementById("shipmentCorrectionNumber").selectedIndex=0;
				}else{
					document.getElementById("shipmentCorrectionNumber").value=shipment_correction_number;
				}
				
				$('#anyChangesDone').val("N");
			}
		});
/*		$("#shipmentCorrectionNumber").get(0).options[$("#shipmentCorrectionNumber").get(0).options.length] = new Option("000", "000");
		$('select[id*="shipmentCorrectionNumber"]').attr("selectedIndex",0);
		shipment_correction_number="000";*/
		shipment_correction_number= $("#shipmentCorrectionNumber").val()==null ? '000' : $("#shipmentCorrectionNumber").val();
		// end for defect 019028
	//}
	if(shipment_correction_number!= '000' ){
		$('#shipmentBillBtn').attr('disabled', true);
		$('#shipmentTraceBtn').attr('disabled', true);
	}
	else{
		$('#shipmentBillBtn').attr('disabled', false);
		$('#shipmentTraceBtn').attr('disabled', false);
	}
	disableRepeatContact(true);
	if(document.getElementById("commentsDIV") != null)
		document.getElementById("commentsDIV").innerHTML='';
	/** Going to populate Shipment */
	
	$.ajax({
		async: false,
		type : "POST",
		url : _context + "/shipment/populateShipment",
		data : {
			shipment_number :shipment_number,
			shipment_sequence_number : shipment_sequence_number,
			shipment_correction_number : shipment_correction_number
		},
		success : function(responseText) {
			//	D021215: 	Session Variable clear/change shortcut
			getSearchFieldValue(500);
			// Clear fields of Shipment form and reset the defaults
			createHoldGrid("shipment");
			//openUnreleasedHoldGridOnIntialDisplay("shipment");
			if(responseText.data==null){
				$.unblockUI();
				// Clearing Page
				clearPageOnLoad();
				$('#anyChangesDone').val("N");
				$('#shipmentCorrectionNumber option').remove();	
				eanableDisableSectionsOnScreen(false);// D019870
				// loading data
				showJSON(responseText);
				showResponseMessages("msgDiv", responseText);
				// reload grids
				reloadShipmentGrids();
				shipmentNotFound = true;
				if(sessionId ==  $.cookie("JSESSIONID"))
					showNonExistBillMessage();
				else{
					 location.reload();
				}
				$('#maintain_commodity_shipment').gatesDisable();
				$('#updateCommodity').attr("disabled",true);
				$('#clearCommodity').attr("disabled",true);
				$('#addCommodity').attr("disabled",true);
				$('#deleteCommodity').attr("disabled",true);
				$('#marksAndNumbers').attr("disabled",true);
				hideCustomizeField = true;
				clearAllShipmentGrids();
				$("#shipmentNumber").val(shipment_number);
				disableActionButtons();
				setShipmentTitle("");
				return;
			}
			
			var shipmentId = responseText.data.shipmentId;
			//D030066
			createUser = responseText.data.createUser;
			if (shipmentId == null || shipmentId == undefined || shipmentId == "") {
				// loading data
				$.unblockUI();
				clearPageOnLoad();
				eanableDisableSectionsOnScreen(false); // D019870
				setScreenOnLoad();
				shipmentNotFound = true;
				if(sessionId ==  $.cookie("JSESSIONID"))
					showNonExistBillMessage();
				else{
					 location.reload();
				}
				$('#maintain_commodity_shipment').gatesDisable();
				$('#updateCommodity').attr("disabled",true);
				$('#clearCommodity').attr("disabled",true);
				$('#addCommodity').attr("disabled",true);
				$('#deleteCommodity').attr("disabled",true);
				$('#marksAndNumbers').attr("disabled",true);
				hideCustomizeField = true;
				clearAllShipmentGrids();
				setShipmentTitle("");
				return;
			} else {
				hideCustomizeField = false;
				shipmentNotFound = false;
				$('#maintain_commodity_shipment').gatesEnable();
				$('#updateCommodity').attr("disabled",false);
				$('#clearCommodity').attr("disabled",false);
				$('#addCommodity').attr("disabled",false);
				$('#deleteCommodity').attr("disabled",false);
				$('#marksAndNumbers').attr("disabled",false);
				eanableDisableSectionsOnScreen(true);
				$('#overridePlaceOfIssue').attr("disabled",false);
				if (responseText.messages.error.length == 0) {
					$.unblockUI();
					$('#shipmentForm').gatesEnable();
					//D026105: 	Rate Engine: RE Choice Messages Display - Can fields be grayed out, not enterable? 
					$('#re_choice_dialog').gatesDisable();
					$('#reChoiceCloseBtn').attr("disabled",false);
					$('#reChoiceListRateBtn').attr("disabled",false);
					$('#reChoiceContinueBtn').attr("disabled",false);
					$('#reUseSelection').removeAttr("disabled");
					$('#re_error_dialog').gatesDisable();
					$('#reErrCloseBtn').attr("disabled",false);
					$('#reErrorListRateBtn').attr("disabled",false);
					clearPageOnLoad();
					eanableDisableSectionsOnScreen(true); // D019870
					showJSON(responseText);
					$('#auditId').val(responseText.data.header.auditId);
					$('#auditDesc').val(responseText.data.header.auditDesc);
					setScreenOnLoad();
					//Performance Changes - Added asyc call to get BillTypePrintOverride value
					displayBillOfLading('loading...');
					displayInvoiceLinks(true);
					setBillTypePrintOverride(responseText.data);
					setDivNames();
					if($('#splServicesHeader').text()==""){
						setSpecialServiceHeader(responseText);
					}
					if($('#clauseHeader').text()==""){
						setClauseHeader(responseText);
					}
					if(domesticForeignIndicator!='china' || domesticForeignIndicator != "china")
					{
						$('#overrideInitialLtvDateDefaultvalue').val('');
					}
					else
					{
						$('#overrideInitialLtvDateDefaultvalue').val(responseText.data.routing.defaultSailDate);
					}
					if(!$('#isOverrideInitialLtvDate').attr("checked"))
					{
						$('#overrideInitialLtvDate').val($('#overrideInitialLtvDateDefaultvalue').val());
						$('#overrideInitialLtvDate').css('color','black');
						$('#isOverrideInitialLtvDate').attr("checked", false);
					}
					
					
					populateLoadDschPairValues(responseText.data.shipmentLDSPairForm);
					setIsRefNumberField(responseText.data.referenceNumber.refNumberExistForShipment);
					// Display Unreleased Holds Grid on initial display
					openUnreleasedHoldGridOnIntialDisplay("shipment");
					if ($('#shipmentId').val() != null && $('#shipmentId').val() != ''
						&& ($('#statusCode').text() == 'ISSUED' || $('#statusCode').text() == 'CORRECTED')) {
						$('#shipmentBillBtn').attr('disabled', true);
						$('#shipmentTraceBtn').attr('disabled', true);
					}else{
						$('#shipmentBillBtn').attr('disabled', false);
						$('#shipmentTraceBtn').attr('disabled', false);
						
					}
					makeFormReadOnly(responseText,'shipmentForm',true);
					if($('#statusCode').text()=="CORRECTED" || $('#statusCode').text()=="ISSUED")
					{
							eanableDisableSectionsOnScreen(false);
							//displayBillOfLading(responseText.data.header.billOfLadingLink);
							$('#maintain_commodity_shipment').gatesDisable();
							//$('#overridePlaceOfIssue').attr("disabled",true);
							enableDisableCommosityButtons();
					}
					dirtyData=false;
					
					
					populateCommodityCodeListBilling(responseText.data.shipmentItemForm.commodityCodeList);
				}
				createShipmentCommodityGrid();//Defect-25031
				collapseAll();//Defect-25031
				$.unblockUI();
			}
		
			setShipmentTitle();
			showSuccessLoadingBillMessage();
			tempImperialCubeValue=0;
			tempImperialWeightValue=0;
			tempMetricCubeValue=0;
			tempMetricWeightValue=0;
			changeCountForCube=0;
			changeCountForWeight=0;
			
			if($('#cube').val()!="" ){
				
				if($('#unitOfMeasureSourceCode').val()=="I" ){
					tempImperialCubeValue=$('#cube').val();
				}else{
					tempMetricCubeValue=$('#cube').val();
				}
				/*//D026553
				if( $('#piece').val()!=''&& $('#piece').val()!=0)
				{
					$('#cube').val($('#cube').val()*$('#piece').val());
				}*/
			}
			if($('#netWeight').val()!=""){
				
				if($('#unitOfMeasureSourceCode').val()=="I" ){
					tempImperialWeightValue=$('#netWeight').val();
				}else{
					tempMetricWeightValue=$('#netWeight').val();
				}
			}
			/*setCommunicationMethodCodeForShipper(responseText.data.shipper.communicationMethodCode);
			setCommunicationMethodCodeForConsignee(responseText.data.consignee.communicationMethodCode);*/
		},
		error : function(responseText) {
			//$.unblockUI();
			shipmentNotFound = true;
			if(sessionId ==  $.cookie("JSESSIONID"))
				showNonExistBillMessage();
			else{
				 location.reload();
			}
			$('#maintain_commodity_shipment').gatesDisable();
			$('#updateCommodity').attr("disabled",true);
			$('#clearCommodity').attr("disabled",true);
			$('#addCommodity').attr("disabled",true);
			$('#deleteCommodity').attr("disabled",true);
			clearAllShipmentGrids();
			setShipmentTitle("");
			//$.unblockUI();
		}
	});
	dirtyData=false;
	}else{
		$.unblockUI();
		
		var searchText = $("#shipmentNumber").val();
		if(searchText != '' && searchText.length == 7 && isNumeric(searchText)){
		$.ajax({
			url: _context + "/booking/bookingExists",
			type: "POST",
			data : {bookingString:searchText},
			
			success: function(responseText){
				if(responseText.success=="true"){
				$.ajax({
					url: "/gates/workingContext/setContext",
					type: "POST",
					data: {key:"BK_BOOKING",value:searchText},
					success: function(responseText){
						$("#textfield5").removeAttr('style');
					}
				});
				}
			}
		});
	    }
		clearPageOnLoad();
		eanableDisableSectionsOnScreen(false); // D019870
		setScreenOnLoad();
		shipmentNotFound = true;
		if(sessionId ==  $.cookie("JSESSIONID"))
			showNonExistBillMessage();
		else{
			 location.reload();
		}
		$('#maintain_commodity_shipment').gatesDisable();
		$('#updateCommodity').attr("disabled",true);
		$('#clearCommodity').attr("disabled",true);
		$('#addCommodity').attr("disabled",true);
		$('#deleteCommodity').attr("disabled",true);
		$('#marksAndNumbers').attr("disabled",true);
		hideCustomizeField = true;
		clearAllShipmentGrids();
		setShipmentTitle("");
	}
	
}

function populateCommodityCodeListBilling(list){
//	alert("Inside populateCommodityCodeListBilling, list length:"+list.length);
	var shmtCommCode = $('#shipmentCommodityCode').val();
//	alert("Inside populateCommodityCodeListBilling, shipment Commodity code:"+shmtCommCode);
	$('select#commodityCode').children().remove().end().append('<option selected value="">Select</option>');
	if(list != null)
	{
		for ( var i = 0; i < list.length; i++) {
			if((list[i].code!=""||list[i].description!=null)&&(list[i].code!=null||list[i].description!="")
					&& (list[i].code!=null||list[i].description!=null)&&(list[i].code!=""||list[i].description!="")){
			$('select#commodityCode').append($("<option/>", {
				value : list[i].code,
				text : list[i].code + " - " +list[i].description
			}));
//			alert("value:"+list[i].code+",text:"+list[i].code + " - " +list[i].description);
			if(shmtCommCode.length>0 && shmtCommCode==list[i].code){
				$('#commodityCode').val($.trim(list[i].code));
//				alert("Dropdown code set to:"+$('#commodityCode').val());
			}
			}
		}
		
		if(list.length==1){
//			alert("List length 1, code:"+$.trim(list[0].code));
			$('#commodityCode').val($.trim(list[0].code));
			$('#shipmentCommodityCode').val($.trim(list[0].code));
	
		}
		
	}
	
}

function clearCommodityCodeList(){
	$('#tariffItemCmdtyDescId').val(null);
	$('#commodityCode option').remove();
	$('#commodityCode').append('<option value="" selected="selected">Select</option>');
}

function clearPageOnLoad() {
	clearShipmentForm();
	clearShipperConsignee();
	resetDivNames();
	reloadShipmentGrids();
	resetDefault();
	$("#statusCode").attr("disabled", true);
}


function resetDivNames() {

	 $("#shipperConsigneeNameDiv").html("");
	 setAccordianTabDetails("shipperNameDiv", "");
	 setAccordianTabDetails("consigneeNameDiv", "");
	 setAccordianTabDetails("partiesHeader", "");
	 setAccordianTabDetails("refAndMarksId", "");
	 setAccordianTabDetails("routingHeader", "");
	 setAccordianTabDetails("shipmentCommodityHeader", "");
	 setAccordianTabDetails("shipmentHazardHeader", "");
	 setAccordianTabDetails("militaryHeader", "");
	 setAccordianTabDetails("splServicesHeader", "");
	 setAccordianTabDetails("clauseHeader", "");
	 setAccordianTabDetails("maintainShipmentHoldId", "");
	 setAccordianTabDetails("ShipmentOverridesText", "");
}

function prepareHeaderDataForBillingOverlay(responseText) {
	$("#billShipmentNumber").text($("#shipmentNumber").val());
	$("#billShipper").text($('input[name="shipper\\.organizationName"]').val());
	$("#billConsignee").text($('input[name="consignee\\.organizationName"]').val());
	$("#billPlaceOfReceipt").text($("#blOriginCityCode").val());
	$("#billPlaceOfDelivery").text($("#blDestinationCityCode").val());
	$("#billPortOfLoading").text($("#originPortCityCode").val());
	$("#billPortOfDischarge").text($("#destinationPortCityCode").val());
	$("#billLDSP").text($("#loadServiceCode").val() +" "+ $("#dischargeServiceCode").val());
	
	$("#billBooked").text(responseText.data.header.booked);
	$("#billReceived").text(responseText.data.header.received);
	$("#billPreReceived").text(responseText.data.header.preReceived);
	$("#billBilled").text(responseText.data.header.billed);
}

function setIsRefNumberField(isreferenceNumberRef){
	
	if(isreferenceNumberRef=="Y"){
		$('#referenceHeaderCheckBox').attr("checked","checked");
	}else{
		$('#referenceHeaderCheckBox').removeAttr("checked");
	}
}
function showLoadingMessage() {
	
	var shipment_number = $("#shipmentNumber").val();
	var shipment_sequence_number = $("#shipmentSequenceNumber").val();
	var shipment_correction_number = $("#shipmentCorrectionNumber").val();
	
	if(shipment_sequence_number == null	|| shipment_sequence_number == ""){
		shipment_sequence_number="000";
	}
	if(shipment_correction_number == ""	|| shipment_correction_number == null){
		shipment_correction_number="000";
	}
	$('#msgDiv').html("<div class=\"message_info\">Loading shipment "	+ shipment_number + "-"	+ shipment_sequence_number + "-"+ shipment_correction_number + " ...</div>");
	$('#msgDiv').show();
}

function showSavingMessage() {
	$("#shipmentSaveBtn").attr("disabled", true);
	var entity = "Shipment";
	$('#msgDiv').html("<div class=\"message_info\">Please wait while " + entity	+ " is updated...</div>");
	//window.scrollTo(0, 0);
	$('#msgDiv').show();
}

// common method for all UI fields...
function validateShipmentUIFields() {
	var uiFieldsValidationStatus = true;
/* commented while testing security
 * 	uiFieldsValidationStatus = validateShipmentNumber();
if (uiFieldsValidationStatus == false){
		return uiFieldsValidationStatus;
}*/
	/*commented for " Behavior of shipper, consignee and additional
parties should be same as additional parties on maintain booking screen".*/
	
if( isShipperConsigneeModifiable){
	uiFieldsValidationStatus = validateOrganisationAndAddressForShipperConsignee('shipper');
	if (uiFieldsValidationStatus == false)
		return uiFieldsValidationStatus;
	//D018663: 	GATES : Customer field behaviour
	//Contact details are not mandatory for billing
	/*if(uiFieldsValidationStatus)
		{
		uiFieldsValidationStatus = validateContactForShipperConsignee('shipper');
		if (uiFieldsValidationStatus == false)
			return uiFieldsValidationStatus;
		}*/

	/*not required as handled in validateContactForShipperConsignee method only
	 * puneet hasija*/
	/*	
	if($('#shipperComm1').attr('checked') ||
			$('#shipperComm2').attr('checked') ||
			$('#shipperComm3').attr('checked') ||
			$('#shipperComm4').attr('checked') ){
		uiFieldsValidationStatus = validateOrganisationAndAddressForShipperConsignee('shipper');
	}	
	*/
	uiFieldsValidationStatus = validateOrganisationAndAddressForShipperConsignee('consignee');
	if (uiFieldsValidationStatus == false)
		return uiFieldsValidationStatus;
	//D018663: 	GATES : Customer field behaviour
	//Contact details are not mandatory for billing
	/*if(uiFieldsValidationStatus)
		{
		uiFieldsValidationStatus = validateContactForShipperConsignee('consignee');
		if (uiFieldsValidationStatus == false)
			return uiFieldsValidationStatus;
		}*/

/*	uiFieldsValidationStatus = validateContactForShipperConsignee('consignee');
	if($('#consigneeComm1').attr('checked') ||
			$('#consigneeComm2').attr('checked') ||
			$('#consigneeComm3').attr('checked') ||
			$('#consigneeComm4').attr('checked') ){
		uiFieldsValidationStatus = validateOrganisationAndAddressForShipperConsignee('consignee');
	}
		
	if (uiFieldsValidationStatus == false)
		return uiFieldsValidationStatus;
*/}
if(isPartiesModifiable){
	uiFieldsValidationStatus = validatePartiesSectionOnSave();
	if (uiFieldsValidationStatus == false)
		return uiFieldsValidationStatus;
}
if(isRoutingModifiable){
	uiFieldsValidationStatus = validateRoutingFieldsOnSave();
	if (uiFieldsValidationStatus == false)
		return uiFieldsValidationStatus;
}
if(isRoutingOverrideModifiable){
	uiFieldsValidationStatus = validateOverridesFieldsOnSave();
	if (uiFieldsValidationStatus==false)
		return uiFieldsValidationStatus;
}
//D024736: Fields are not mandatory when tariffNumber and itemNumber are not present
if($('#unitOfCommodity').val()!=null && $('#unitOfCommodity').val()!=0 && ($('#tariffNumber').val() !="" || $('#itemNumber').val() !=""))
{
	
	uiFieldsValidationStatus = validateShipmentCommodityFieldsOnSave();
}
else
{
	$('#netWeight').removeClass("validate[required]");	
	$('#netWeight').removeClass("validate[custom[number]]");
	$('#netWeight').removeClass("validate[funcCall[validateNetWeight]]");
	$('#netWeight').removeClass("custom[max[9999999.999]]]");
	$('#netWeight').removeClass("custom[min[0000000.001]]]");
	$('#commodityDesc').removeClass("validate[required]");
	$('#commodityDesc').removeClass("validate[funcCall[validateTrfCmdDesc]]");	   
	
}

if(uiFieldsValidationStatus==false){
	return uiFieldsValidationStatus;
}
	return uiFieldsValidationStatus;
}
function validateShipmentNumber() {
}
function validateShipment() {
	if( isShipperConsigneeModifiable){
		if ($('input[name="shipper\\.addressRoleId"]').val() == ""
			|| $('input[name="consignee\\.addressRoleId"]').val() == "") {
			return false;
		}
	}
	 var length = $($('.ui-state-error',"#commodityGridDiv")).length;
	 for(i=0;i<length; i++){
		if(($($('.ui-state-error',"#commodityGridDiv"))[i]).innerHTML!=""){
			$($($('.ui-state-error',"#commodityGridDiv"))[i]).parent().remove();
			
		}
		 
	 }
	
	//checkForNoteValidation(); //for 21832 note validation
	//if(isNoteValid==true){
		updateCommodityBeforeSave();
	//}else 
	//$.unblockUI();
	// save shipment from here is moved to maintainContainerCommodity for CR : to save Shipment Commodity Section data before save
}
//Defect-25031-Added to validate seal number before bill.
function validateSealNumber() {
	var emptySeal = false;
	var reccountContainerGrid = $('#commodityGrid').jqGrid('getDataIDs');
	for ( var i = 0; i < reccountContainerGrid.length; i++) {
		var equiptype=jQuery("#commodityGrid").getRowData(
				$('#commodityGrid').jqGrid('getDataIDs')[i]).eqptType;
		var empty=jQuery("#commodityGrid").getRowData(
				$('#commodityGrid').jqGrid('getDataIDs')[i]).isEmpty;
		if ((jQuery("#commodityGrid").getRowData(
				$('#commodityGrid').jqGrid('getDataIDs')[i]).sealNumber).trim() == "") {//Defect-25437
			if(equiptype !="F" && equiptype !="T" && equiptype!="A" && equiptype!="B" && empty!="E"){			
			emptySeal = true;
			}
		}
	}
	return emptySeal;
}
function validateShipmentForBillButton() {
	if( isShipperConsigneeModifiable){
		if ($('input[name="shipper\\.addressRoleId"]').val() == ""
			|| $('input[name="consignee\\.addressRoleId"]').val() == "") {
			return false;
		}
	}
	updateCommodityBeforeSaveForBillButton(); 
	// save shipment from here is moved to maintainContainerCommodity for CR : to save Shipment Commodity Section data before save
}

function saveShipment() {
	
	showSavingMessage();
	//if(changeInCommodity){
	validateHHGSCheck();
	//}else{
	//	saveShipmentAfterValidation();
	//}
	
	
}
function saveShipmentAfterValidation(){
	//D028800
	$('#shipmentForm').gatesEnable();
	var shipment = $('#shipmentForm').formSerialize();
	var urlStr = '';
	urlStr = _context + "/shipment/save";
	$.ajax({
		//async:false,
		type : "POST",
		url : urlStr,
		data : shipment,
		success : function(responseText) {
			$("#shipmentSaveBtn").attr("disabled", false);
			if (responseText.success == true) {
				clearPageOnLoad();
				eanableDisableSectionsOnScreen(true);
				showJSON(responseText);
				setScreenOnLoad();
				//Performance Changes - Added asyc call to get BillTypePrintOverride value
				displayBillOfLading("updating...");
				setBillTypePrintOverride(responseText.data);
				displayInvoiceLinks(true);
				setDivNames();
				if($('#splServicesHeader').text()==""){
					setSpecialServiceHeader(responseText);
				}
				if($('#clauseHeader').text()==""){
					setClauseHeader(responseText);
				}
				dirtyData=false;
			} else {
				$("#shipmentStatusCode").attr("disabled", true);
			}
			if(domesticForeignIndicator!='china' || domesticForeignIndicator != "china")
			{
				$('#overrideInitialLtvDateDefaultvalue').val('');
			}
			else
			{
				$('#overrideInitialLtvDateDefaultvalue').val(responseText.data.routing.defaultSailDate);
			}
			if(!$('#isOverrideInitialLtvDate').attr("checked"))
			{
				$('#overrideInitialLtvDate').val($('#overrideInitialLtvDateDefaultvalue').val());
				$('#overrideInitialLtvDate').css('color','black');
				$('#isOverrideInitialLtvDate').attr("checked", false);
			}
			/*//D026553
			if( $('#piece').val()!=''&& $('#piece').val()!=0)
			{
				$('#cube').val($('#cube').val()*$('#piece').val());
			}*/
			showResponseMessages("msgDiv", responseText);
			//D028800
			enforceUserSecurityRolesAndPermissions();
			if (responseText.success == true) {
			    populateLoadDschPairValues(responseText.data.shipmentLDSPairForm);
			}
			//D033651 - Disable invoice field which is not applicable
			if($('#prepaidCollectCode :selected').val() == "P"){
				$('#fpInvoiceNbr').attr('disabled', false);
				$('#fcInvoiceNbr').attr('disabled', true);
			} else if($('#prepaidCollectCode :selected').val() == "C"){
				$('#fpInvoiceNbr').attr('disabled', true);
				$('#fcInvoiceNbr').attr('disabled', false);
			} else {
				$('#fpInvoiceNbr').attr('disabled', false);
				$('#fcInvoiceNbr').attr('disabled', false);
			}
			
			if($.trim($("#fpInvoiceNbr").val()) != "" || $.trim($("#fcInvoiceNbr").val()) != ""){
				$('#prepaidCollectCode').attr('disabled', true);
			} 

			//added against D21739
			//Commented for D032210
			//collapseAll();
			$.unblockUI();
			//resetChangeInInputBooleans();
			var args = {
					entityType: 'SHMT',
					entityId: $('#shipmentId').val(),
					commentId:  'commentId',
					displayCommentTypes: 'CDBTR,DISPUTE,HZRD,OPS,PCCOL,PDBTR,WEBE,WIRE,CSS,DOC,KICK,PCACTY,PCCSS,SYS,WEBS'
				};
			$("#comment_link").comments(args);
		}
	});
}

function setBillTypePrintOverride(data){
	
	var urlStr = _context +"/shipment/getBillTypePrintOverride";
	$.ajax({
		type: "GET", 
		url: urlStr,
		data : {
			originPortCityCode :data.routing.originPortCityCode,
			destinationPortCityCode :data.routing.destinationPortCityCode
		},
		success: function(responseData){			
			if(responseData.success==true){
				displayBillOfLading(responseData.data.header.billOfLadingLink);
				$('#hiddenonHoldLink').val(responseData.data.isHoldExist);
				displayOnHoldOrNot();
			} else {
				displayBillOfLading("");
			}
		},
		error: function(jqXHR,textStatus,errorThrown) {
			displayBillOfLading("");
		}
	});
	
}
function validateHHGSCheck(){
	
	
	var shipment = $('#shipmentForm').formSerialize();
	var urlStr = '';
	urlStr = _context + "/shipment/validateHHGSCheck";
	$.ajax({
		
		type : "POST",
		url : urlStr,
		data : shipment,
		success : function(responseText) {
			if (responseText.success == true) {
				if(responseText.data=="true"){
					var confirmCommodityChange= confirm('This bill is a member of a Household Goods set.'+
							      'The changes made will prevent the set being maintained on the Household Goods screen.'+
							                 'Continue with Save?"');
					if(confirmCommodityChange == true){
						saveShipmentAfterValidation();						
					}else{
						$('#msgDiv').attr("style","display:none");
						//D027228, Save btn disabled when clicked on cancel on warning message.
						$("#shipmentSaveBtn").attr("disabled", false);
						collapseAll();
						$.unblockUI();
						return false;
						
					}
				}else{saveShipmentAfterValidation();}
		}else{
			saveShipmentAfterValidation();
			}
		}
	});
}
function saveShipmentForBillButton(){
	//Added for D028800
	$('#shipmentForm').gatesEnable();
	var shipment = $('#shipmentForm').formSerialize();
	var urlStr = '';
	urlStr = _context + "/shipment/save";
	$.ajax({
		//async:false,//removed for blockUI image to load before the ajax call
		type : "POST",
		url : urlStr,
		data : shipment,
		success : function(responseText) {
			if (responseText.success == true) {
				callBillActionAfterSave = true;
				rateBill();//rateBill() is moved here
			} else {
				$("#shipmentStatusCode").attr("disabled", true);
				callBillActionAfterSave = false;
				showResponseMessages("msgDiv", responseText);
				$.unblockUI();
			}
			//Added for D028800
			enforceUserSecurityRolesAndPermissions();
			captureChanges();//to capture unsaved changes
		}
});
}
function setShipmentTitle() {
	// Workaround to fix dynamic setting of page title
if (($(document).getUrlParam("src")) != 'FTWQ'){
	window.location.hash = ""+new Date().getTime();
	//window.location = _context + "/shipment/showForm#" + new Date().getTime();
	
	var shipmentNumber= $("#shipmentNumber").val();
	var shipmentTitle = $('title').text().split("-");
	if (shipmentNumber != null && shipmentNumber != '') {
		var shipmentSequenceNumber = $("#shipmentSequenceNumber").val();
		var shipmentCorrectionNumber = $("#shipmentCorrectionNumber").val();
		if(shipmentCorrectionNumber!=null)
			document.title = shipmentTitle[0] + " - " + shipmentNumber + "-"+ shipmentSequenceNumber + "-" + shipmentCorrectionNumber;
		else
			document.title = shipmentTitle[0] + " - " + shipmentNumber;
	}else {
			document.title = shipmentTitle[0];
	}
}
}

function removePopUps() {
	$("#shipmentForm").validationEngine('hideAll');
}

function showJSON(responseText) {
	//alert("responseText.data="+responseText.data);
	if(responseText.data!=null){
		
	//Comment Id
	$('#commentId').val(responseText.data.commentId);
	
	// Shipment Id
	$("#shipmentId").val(responseText.data.shipmentId);
	
	$('#isOrderBlPartiesPresent').val(responseText.data.isOrderBlPartiesPresent);

	
	$('#hiddenonHoldLink').val(responseText.data.isHoldExist);
	//entityVersion
	$("#entityVersion").val(responseText.data.entityVersion);

	// Header
	$("#shipmentHeaderDiv").loadJSON(responseText.data.header);
	loadShipmentHeader(responseText);

	//Shipper
	shipperAddress = responseText.data.shipper.address;
	$('input[name="shipper\\.address"]').attr('title',shipperAddress);
	$("#shipper").loadJSON(responseText.data.shipper);
	$('input[name="shipper\\.contactEmailAddress"]').attr('title',$('input[name="shipper\\.contactEmailAddress"]').val());
	loadAdditionalShipperDetails(responseText);
	
	

	//Consignee
	consigneeAddress = responseText.data.consignee.address;
	$("#consignee").loadJSON(responseText.data.consignee);
	$('input[name="consignee\\.address"]').attr('title',consigneeAddress);
	$('input[name="consignee\\.organizationName"]').attr('title',responseText.data.consignee.organizationName);
	$('input[name="consignee\\.contactEmailAddress"]').attr('title',$('input[name="consignee\\.contactEmailAddress"]').val());
	loadAdditionalConsigneeDetails(responseText);
	
	//triming value of contact of shipper and consignee
	trimShipperAndConsignee();

	// Parties
	$("#maintainShipmentParties").loadJSON(responseText.data.parties);
	if($('#tradeCode').val() == 'A') {
		$('#invoiceDiv').show();
	} else {
		$('#invoiceDiv').hide();
	}

	$("#rateDate").val(responseText.data.header.rateDate);
	ratedatesearch=$('#rateDate').val();
	$("#totalWeight").val(responseText.data.header.totalWeight);
	$("#totalCube").val(responseText.data.header.totalCube);
	isAutoBillVal=(responseText.data.header.isAutobill);//Defect-25437
	// MarksNumbers
	$("#marksAndNumbers").val(responseText.data.header.markNumberString);
	
	//statusCode
	$("shipmentStatusCode").val(responseText.data.header.statusCode);
	

	// Routing
	$("#maintainShipmentRouting").loadJSON(responseText.data.routing);
	$("#maintainShipmentOverrides").loadJSON(responseText.data.routing);// Commented
	$('#routingTradeCode').val(responseText.data.routing.tradeCode);
	$("#maintainShipmentMilitary").loadJSON(responseText.data.militaryShipment);
	$("#maintainShipmentMilitary").loadJSON(responseText.data.routing);
	$("#maintainShipmentMilitary").loadJSON(responseText.data.header);
	updateMilitaryData(responseText);
	// By
																		// Mangesh:test
	populateLoadDischargeLists(responseText.data.routing);
	
	$('#isInBond').trigger('change');
	if (responseText.data.header.requiredDeliveryDate != null
			&& responseText.data.header.requiredDeliveryDate != '') {
		$("#requiredDeliveryDate").val(
				responseText.data.header.requiredDeliveryDate);
	} else {
		$("#requiredDeliveryDate").val('');
	}
	
	$("#maintainShipmentOverrides").loadJSON(responseText.data.routing);
	displayHideCommoditySection(responseText); // Shipment Security
	reloadShipmentCommodityData(responseText);
	
	setShipperConsigneeCustomized(responseText);
	document.getElementById("commentsDIV").innerHTML='<div class="span-2" id=comment_link>'+
				'<a class="comments" href="#"></a>'+
	 				'<input id="commentId" name="commentId" type="hidden" value="">'+
					'<span id ="count"></span>'+
				'</div>'+
				'<div class="comments" style="display: none">'+
		'<iframe id="commentsFrame" frameborder="0" marginheight="0" marginwidth="0" src=""></iframe>'+
	'</div>';
	
	//Comment Id
	$('#commentId').val(responseText.data.commentId);
	var commentReadOnly=true;
	/*var args = {
			entityType: 'SHMT',
			entityId: $('#shipmentId').val(),
			commentId:  'commentId',
			displayCommentTypes: 'CDBTR,DISPUTE,HZRD,OPS,PCCOL,PDBTR,WEBE,WIRE,CSS,DOC,KICK,PCACTY,PCCSS,SYS,WEBS'
		};
	$("#comment_link").comments(args);*/
	
	}
	
	if($('#tradeCode').val()!='A') {
		enableDisableSection('maintainShipmentHazards', 5, false, false,false); 
	} else {
		enableDisableSection('maintainShipmentHazards', 5, isRoutingDisplayOnly, isRoutingModifiable,true); 
	}
	if($('#tradeCode').val()!='A') {
		enableDisableSection('maintainShipmentStopOffs', 6, false, false,false); 
	} else {
		enableDisableSection('maintainShipmentStopOffs', 6, isRoutingDisplayOnly, isRoutingModifiable,true); 
	}
	
	// edi load/discharge
	// D032440
	var ediService = "";
	
	console.log("load type="+responseText.data.routing.ediLoadServiceCode);
	
	if(responseText.data.routing.ediLoadServiceCode) {
		ediService += responseText.data.routing.ediLoadServiceCode;
	}
	if(responseText.data.routing.ediLoadServiceCode || responseText.data.routing.ediDischargeServiceCode ) {
		ediService += " / ";
	}
	if(responseText.data.routing.ediDischargeServiceCode) {
		ediService += responseText.data.routing.ediDischargeServiceCode;
	}
	$('#ediServiceType').html(ediService);

}



function setClauseHeader(responseText){
	setAccordianTabDetails("clauseHeader", responseText.data.header.clauseHeader);
}

function setSpecialServiceHeader(responseText){
	setAccordianTabDetails("splServicesHeader", responseText.data.header.specialServiceHeader);
}
// post-submit callback
function showResponseMessages(msgDivId, responseText) {
	if (responseText.messages) {

		var messages = responseText.messages;
		var messageContent = '';
		if (messages.error.length > 0) {
			var array = messages.error;
			var len = messages.error.length;
			for ( var i = 0; i < len; i++) {

				messageContent += '<div class="message_error">' + array[i]
						+ '</div>';
			}
		}

		if (messages.warn.length > 0) {
			var array = messages.warn;
			var len = messages.warn.length;
			for ( var i = 0; i < len; i++) {
				messageContent += '<div class="message_warning">' + array[i]
						+ '</div>';
			}
		}

		if (messages.info.length > 0) {
			var array = messages.info;
			var len = messages.info.length;
			for ( var i = 0; i < len; i++) {
				messageContent += '<div class="message_info">' + array[i]
						+ '</div>';
			}
		}
		//D032210 - Do not show success message on commodity update
		if (messages.success.length > 0 && msgDivId != 'msgDivCommodity') {
			var array = messages.success;
			var len = messages.success.length;
			for ( var i = 0; i < len; i++) {
				messageContent += '<div class="message_success">' + array[i]
						+ '</div>';
			}
		}
		//D032210 - Scroll to the top only if there is any error
		if (messageContent != '') {
			$('#' + msgDivId).html(messageContent);
			if (messages.error.length > 0 || messages.warn.length > 0){
				window.scrollTo(0, 0);
			}
		}
	}
}

function selectForFormSerialize(radioButtonObj, value) {
	$(radioButtonObj).attr("checked", true);
	$(radioButtonObj).val(value);
}

// function to reset default values in form (in case clearForm() is called)
function resetDefault() {
	//$('select').attr('selectedIndex', 0);
	$('select option:first-child').attr("selected", "selected");
	$('#FormError').hide();
	//setDefaultForAssignLink();
	$('#overrideInitialLtvDate').val('01-01-0001');
	$('#overrideInitialLtvDate').css('color','black');
}

function populateLoadDischargeLists(routingData) {
	
	setLoadDischargeValuesWithDesc(routingData.dschServiceList,'#dischargeServiceCode',	routingData.dischargeServiceCode);
	setLoadDischargeValuesWithDesc(	routingData.loadServiceList,'#loadServiceCode', routingData.loadServiceCode);

}

function isShipmentDeletable() {
	if ($('#shipmentId').val() != null && $('#shipmentId').val() != ''
			&& ($('#statusCode').text() == 'ISSUED' || $('#statusCode').text() == 'CORRECTED')) {
		$("#shipmentDeleteBtn").attr("disabled", true);
	}
}

function deleteShipment() {
	blockUI();
	var shipment_number = $("#shipmentNumber").val();
	var shipment_sequence_number = $("#shipmentSequenceNumber").val();
	var shipment_correction_number = $("#shipmentCorrectionNumber").val();
	$.ajax({
		type : "POST",
		url : _context + "/shipment/delete",
		data : {
			shipment_number :shipment_number,
			shipment_sequence_number : shipment_sequence_number,
			shipment_correction_number : shipment_correction_number,
			shipmentId : $('#shipmentId').val()
		},
		success : function(responseText) {
			if (responseText.messages.error.length == 0) {
				//$.unblockUI();
				clearPageOnLoad();
				$('#overrideInitialLtvDate').val('');
				eanableDisableSectionsOnScreen(false);
				//showJSON(responseText);
				clearAndResetShipmentScreen();
				$("#shipmentNumber").val(shipment_number);
				$("#shipmentSequenceNumber").val(shipment_sequence_number);
				//$("#shipmentHeaderDiv").loadJSON(responseText.data.header);
				$('#shipmentCustomizeBtn').removeAttr("disabled");
				//showJSON(responseText);
				$('#overrideHeaderCheckBox').attr('checked', false);
				reloadShipmentGrids();
				clearHeaderData();
				$('#commentsDiv').hide();
				setShipmentTitle("");
				$("#shipmentDeleteBtn").attr("disabled", true);
				resetDivNames();
				setScreenOnLoad();
				
				//displayBillOfLading(responseText.data.header.billOfLadingLink);
				// TODO - readonly call removed
				disableBillingFields();
				//makeFormReadOnly(responseText,'shipmentForm', false);
				
			}
			// Messages
			showResponseMessages("msgDiv", responseText);
			$('#msgDiv').show();
			//D027046, For spin when clicked on delete btn in MBill.
			$.unblockUI();
		}
	});
	//$.unblockUI();
}

// common method for reloading all grids for shipment
function reloadShipmentGrids() {
	$("#gridIdForParties").setGridParam({'rowNum':3}); // FOR DEFECT MANUALLY SET
	$("#gridIdForParties").trigger('reloadGrid');
	
	$("#vvdRoutingGrid").setGridParam({'rowNum':3}); // FOR DEFECT MANUALLY SET
	$("#vvdRoutingGrid").trigger('reloadGrid');
	
	$("#referenceNumberGrid").setGridParam({'rowNum':10}); // FOR DEFECT MANUALLY SET
	$("#referenceNumberGrid").trigger('reloadGrid');
	
	$("#specialServiceGrid").setGridParam({'rowNum':10}); // FOR DEFECT MANUALLY SET
	$("#specialServiceGrid").trigger('reloadGrid');
	
	$("#gridIdForClauses").setGridParam({'rowNum':3}); // FOR DEFECT MANUALLY SET
	$("#gridIdForClauses").trigger('reloadGrid');
	
	$("#holdGrid").setGridParam({'rowNum':6}); // FOR DEFECT MANUALLY SET
	$("#holdGrid").trigger('reloadGrid');
	
	$("#commodityGrid").setGridParam({'rowNum':10}); // FOR DEFECT MANUALLY SET(Talib:updated for defect no. 18290)
	$("#commodityGrid").trigger('reloadGrid');
	
	$('#mixcommodityGrid').setGridParam({'rowNum':10}); 
	$("#mixcommodityGrid").trigger('reloadGrid');
	
	$('#povGrid').setGridParam({'rowNum':10}); 
	$("#povGrid").trigger('reloadGrid');
	
	$('#convGrid').setGridParam({'rowNum':10}); 
	$("#convGrid").trigger('reloadGrid');
	loadHoldGrid('D');
	
	//$('#hazardGrid').setGridParam({'rowNum':10}); 
	$("#hazardGrid").trigger('reloadGrid');
	$("#hazardDialogGrid").trigger('reloadGrid');
	
	if($('#tradeCode').val()=='A'){
		$('#stopOffsGrid').setGridParam({'rowNum':6}); 
		$("#stopOffsGrid").trigger('reloadGrid');
	}
	// $("#freightGrid").trigger('reloadGrid');
	// $("#dodaacGrid").trigger('reloadGrid');
}

// common method for making form read only [in case of opening cancelled
// shipment]

function setAccordianTabDetails(id, displayText) {
	// D026341, change to html
	$("#" + id).html(displayText);
}

function setScreenDetails() {
	$("#rateDate").datepicker({
		dateFormat : 'mm-dd-yy'
	});

	// // VVD and routing
	$('#shipmentVVDRoutingDiv').show();
	// $('#isAutoInlandMove').attr('disabled', false);
	// $('#dealerAuctionLocationCode').attr('disabled', false);
	// $('#militaryIbsStatusCode').attr('disabled', false);
	$('#freightMBU').show();

	$('#overrideInitialVesselName').attr('readonly', false);
	$('#overrideCustomsVesselName').attr('readonly', false);
	$('#overrideVoyageDirectionSeq').attr('readonly', false);
	//$('#overrideInitialLtvDate').attr('readonly', false);

	$('#overrideInitialLtvDate').datepicker({
		dateFormat : 'mm-dd-yy',defaultDate:''
	});
	$('#overrideInitialLtvDate').val("");
	
	disableRepeatContact(true);
}



//modified for 22735-- alredy handled at shipmentHeader.js
/*function enableDisableSendDoc() {
	if ($("#shipmentNumber").val() != null && $("#shipmentNumber").val() != "" && $('#statusCode').text()!="CORRECTED" && $('#statusCode').text()!="ISSUED") {
		$("#shipmentSendDocBtn").removeAttr("disabled");
	}
}*/

function setGlobalVariableValues() {
	lastBlOriginCode = $('#blOriginCityCode').val();
	lastBlOriginDescription = $('#blOriginCityDescription').val();
	lastBlOriginCodeDescription = $('#blOriginCityCodeDescription').val();
	
	lastOriginPortCode = $('#originPortCityCode').val();
	lastOriginPortDescription = $('#originPortCityDescription').val();
	lastOriginPortCodeDescription = $('#originPortCityCodeDescription').val();
	
	lastDestinationPortCode = $('#destinationPortCityCode').val();
	lastDestinationPortDescription = $('#destinationPortCityDescription').val();
	lastDestinationPortCodeDescription = $(
			'#destinationPortCityCodeDescription').val();
	
	lastBlDestinationCode = $('#blDestinationCityCode').val();
	lastBlDestinationDescription = $('#blDestinationCityDescription').val();
	lastBlDestinationCodeDescription = $('#blDestinationCityCodeDescription').val();

	if ($('#tradeCode').val() != '') {
		$('#overridePlaceOfIssue').attr("disabled", true);
		if ($('#tradeCode').val() == 'G' || $('#tradeCode').val() == 'M')
			domesticForeignIndicator = "international";
		else if ($('#tradeCode').val() == 'F') {
			if ($('#originPortCityCode').val() == '')
				domesticForeignIndicator = 'none';
			else {
				$
						.ajax({
							url : "/gates/shipment/routing/validateChinaTrade?cityCode="
									+ $('#originPortCityCode').val(),
							success : function(responseText) {
								if (responseText.data == "Y") {
									domesticForeignIndicator = "china";
									if ($('#direction').val() == 'E'){
										if(isRoutingOverrideModifiable){																				
										$('#overridePlaceOfIssue').attr("disabled", false);
										//validateDefaults('issuePlace');
										var queryString = $('#shipmentForm').formSerialize();
										$.ajax({
											type: 'POST',
											url: _context +"/shipment/routing/validateDefaults?identifier=issuePlace",
											data: queryString,
											success: function(responseText){
												
												$('#overridePlaceOfIssue').val(responseText.overridePlaceOfIssue);
												if(!responseText.isOverridePlaceOfIssue)
													$("#isOverridePlaceOfIssue").attr("checked", false);
												else
													$("#isOverridePlaceOfIssue").attr("checked", true);
												changeTextColour();
												setOverridesHeader();
											}
										});
										if($('#statusCode').text()=="CORRECTED" || $('#statusCode').text()=="ISSUED")										
											$('#overridePlaceOfIssue').attr("disabled", true);
															
										}
									}
								} else
									domesticForeignIndicator = "international";
							}
						});
			}
		} else
			domesticForeignIndicator = "domestic";
	} else
		domesticForeignIndicator = 'none';
	
}

function setDivNames() {
	if ($('input[name="shipper\\.organizationName"]').val() != ''
			&& $('input[name="shipper\\.organizationName"]').val() != null)
		setAccordianTabDetails("shipperNameDiv","-"+
				$('input[name="shipper\\.organizationName"]').val());
	else
		setAccordianTabDetails("shipperNameDiv", "");

	if ($('input[name="consignee\\.organizationName"]').val() != ''
			&& $('input[name="consignee\\.organizationName"]').val() != null)
		setAccordianTabDetails("consigneeNameDiv","-"+
				 $('input[name="consignee\\.organizationName"]').val());
	else
		setAccordianTabDetails("consigneeNameDiv", "");

	setPartiesHeader();
	setRefAndMarks();
	setRoutingDiv();
	setOverridesHeader();
	setSpecialServicesDiv();
	setMilitaryDiv(); 
	setClauseDiv(); 
	setShipmentHold();
	setShipmentHazards();
	if($('#tradeCode').val()=='A'){
		setShipmentStopOffs();
	}
	 
}




function validateDate(dateControl) {
	var date = $('#' + dateControl + '').val();
	var dateSize = date.length;
	var newDate = date;
	var dt1;
	var mon1;
	var year1;

	if (dateSize == 6) {
		dt1 = date.substring(2, 4);
		mon1 = date.substring(0, 2);
		year1 = date.substring(4, 6);
		newDate = mon1 + "-" + dt1 + "-20" + year1;
	} else if (dateSize == 8) {
		dt1 = date.substring(2, 4);
		mon1 = date.substring(0, 2);
		year1 = date.substring(4, 8);
		newDate = mon1 + "-" + dt1 + "-" + year1;
	}
	var valid = false;
	if (isValidDate(newDate)) {
		$('#' + dateControl + '').val(newDate);
		valid = true;
	} else {
		$('#' + dateControl + '').val("");
		$('#' + dateControl + '')
				.validationEngine(
						'showPrompt',
						'Date entered is not a valid Date. Enter date in Format(MM-dd-yyyy)',
						'error', 'topRight', true);
	}
	return valid;
}

function isValidDate(date) {
	var matches = /^(\d{2})[-\/](\d{2})[-\/](\d{4})$/.exec(date);
	var validDate = false;
	var len1 = date.length;
	if (matches == null) {
		if (len1 < '8' && len1 > '10') {
			return false;
		}
		if (len1 == '8') {
			var dt1 = date.substring(2, 4);
			var mon1 = date.substring(0, 2);
			var mn = mon1 - 1;
			var yr1 = date.substring(4, 8);
			var composedDate = new Date(yr1, mn, dt1);
			validDate = composedDate.getDate() == dt1
					&& composedDate.getMonth() == mn
					&& composedDate.getFullYear() == yr1;
			if (validDate) {
				var newDate = mon1 + "-" + dt1 + "-" + yr1;
				return newDate;
			} else {
				return null;
			}
		}
	} else {
		var d = matches[2];
		var m = matches[1] - 1;
		var y = matches[3];
		var composedDate = new Date(y, m, d);
		validDate = composedDate.getDate() == d && composedDate.getMonth() == m
				&& composedDate.getFullYear() == y;
		if (validDate) {
			var newDate = matches[1] + "-" + d + "-" + y;
			return newDate;
		} else {
			return null;
		}
	}
}

function loadShipmentHeader(responseText) {
	if (null != responseText.data.header) {
		$("#shipmentId").val(responseText.data.shipmentId);
		$("#shipmentHeaderDiv").loadJSON(responseText.data.header);
		$("#shipmentTemplateNumber").html("<a href='#' onclick=\"checkForChangeInShipment('" + responseText.data.header.template +"');\" style=\"color: blue\">"+ responseText.data.header.template +"</a>");
        $("#rateDateOriginal").val(responseText.data.header.rateDate);
        $('#domesticForeignIndicator').val(responseText.data.header.tradeType);
        domesticForeignIndicator = $('#domesticForeignIndicator').val(); 
        $("#freightReceivedDateOriginal").val(responseText.data.header.freightReceivedDate);                      
       // $('#overrideInitialLtvDateDefaultvalue').val(responseText.data.header.overrideInitialLtvDateDefaultvalue);
        var list= responseText.data.header.customerGroupList;
        var selectedCustomer= responseText.data.header.customerGroupId;
        var selectedCustomerIndex=0;
		$('#customerGroupId option').remove();								
		$.each(list, function(index,customerGroup) {
			if(customerGroup.customerGroupId==selectedCustomer && selectedCustomerIndex==0){
				selectedCustomerIndex=index;
			}
			$("#customerGroupId").get(0).options[$("#customerGroupId").get(0).options.length] = new Option(customerGroup.customerGroupName, customerGroup.customerGroupId);
		});
		document.getElementById("customerGroupId").selectedIndex=selectedCustomerIndex;
		
		// Shipper
		$("#shipper").loadJSON(responseText.data.shipper);
		loadAdditionalShipperDetails(responseText);

		// Consignee
		$("#consignee").loadJSON(responseText.data.consignee);
		loadAdditionalConsigneeDetails(responseText);

		// Parties
		$("#maintainShipmentParties").loadJSON(responseText.data.header);
		
		// MarksNumbers
		$("#marksAndNumbers").val(responseText.data.header.markNumberString);
	}
}




function clearShipmentForm() {
	var webPageSectionIds = [ 'maintainShipmentHeader',
			'maintainShipmentShipperConsignee', 'maintainShipmentParties',
			'maintainShipmentRefNumberMarks', 'marksAndNumbersSection',
			'maintainShipmentRouting', 'maintainShipmentOverrides',
			'maintain_commodity_shipment','maintainShipmentMilitary',
			'maintainShipmentSpecialServices','maintainBookingClauses',
			'maintainShipmentHold','maintainShipmentOverrides' ];// ,
																		// 'maintainShipmentCommodity',
																		// 'militarySection',
	for ( var i = 0; i < webPageSectionIds.length; i++) {
		clearWebPageSection(webPageSectionIds[i]);
	}
	resetShipmentForm();
}

function clearWebPageSection(webPageSectionId){
	var re = /^(?:color|date|datetime|email|month|number|password|range|search|tel|text|time|url|week|hidden)$/i;
	$("#" + webPageSectionId+" :input").each(function() {
		var t = this.type, tag = this.tagName.toLowerCase();
		if (re.test(t) || tag == 'textarea') {
			this.value = '';
		} else if (t == 'checkbox' || t == 'radio') {
			this.checked = false;
		} else if (tag == 'select') {
			this.selectedIndex = 0;
		}
	});
}

function resetShipmentForm(){
	resetDivNames();
	reloadShipmentGrids();
	$("#shipmentStatusCode").attr("disabled",true);
	$("#createDate").html("");
	$("#lastUpdateDate").html("");
	$("#lastUpdateDateTimeUser").html("");
	$("#createUser").html("");
	clearHeaderData();
	cleanShipperConsignee();
	$('#typeCode option:first-child').attr("selected", "selected");
	$('#referenceNumberNotation').val('');
	resetShipmentParties();
	
}

function showMadatoryBillMessage() {
	$('#msgDiv').html("<div class=\"message_error\">Please Provide Shipment Number </div>");
	$('#msgDiv').show();
}
function showNonExistBillMessage() {
	$('#msgDiv').html("<div class=\"message_error\">Shipment not found.</div>");
	$('#msgDiv').show();
}

function showSaveBillManagerMessage() {
	$('#msgDiv').html("<div class=\"message_error\">Error occured while saving changes for Bill Manager.</div>");
	$('#msgDiv').show();
}

function setSaveBillBeforeBillButton(){
	saveBillBeforeBillButton = true;
}
function showSuccessLoadingBillMessage() {
	//Added the shipment number to display message for DD024533
	$('#msgDiv').html("<div class=\"message_info\">Shipment "+document.getElementById('shipmentNumber').value+" successfully loaded.</div>");
	$('#msgDiv').show();
}

function clearAllMessage(){
	$('#msgDiv').html("");
	$('#msgDiv').show();
}

function expandAll(){
	 $('.ui-accordion-content').attr('style','display:block');
	 $('.ui-accordion-header.ui-helper-reset.ui-state-default.ui-corner-all').removeClass('ui-state-default').
	 removeClass('ui-corner-all').addClass('ui-state-active').addClass('ui-corner-top');
	 $('.ui-accordion-header.ui-helper-reset.ui-state-active.ui-corner-top span').removeClass('ui-icon-triangle-1-e')
	 .addClass('ui-icon-triangle-1-s');
	 window.scrollTo(0, 0);
	/* $('.shipment-section').each(function(index) {
			$(this).accordion('option', 'active', true);
		});*/
	 createShipmentPartieGrid();
	 createShipmentReferenceNumberGrid();
		createShipmentRoutingGrid();
		createShipmentCommodityGrid();
		createShipmentSpecialServiceGrid();
		createShipmentClauseGrid();
		createShipmentHazardGrid();
		if($('#tradeCode').val()=='A'){
			createShipmentStopOffsGrid();
		} 
}

/*function collapseAll() {
	$('.ui-accordion-content').attr('style', 'display:none');
}*/

function collapseAll(){
	 $('.ui-accordion-content').attr('style','display:none');
	 $('.ui-accordion-header.ui-helper-reset.ui-state-active.ui-corner-top').removeClass('ui-state-active').
	 removeClass('ui-corner-top').addClass('ui-state-default').addClass('ui-corner-all');
	 $('.ui-accordion-header.ui-helper-reset.ui-state-default.ui-corner-all span').removeClass('ui-icon-triangle-1-s')
	 .addClass('ui-icon-triangle-1-e');
	 //$('#conditionAccordians').accordion('activate', false);
	 //window.scrollTo(0, 0);
	 
	/* $('.shipment-section').each(function(index) {
			$(this).accordion('option', 'active', false);
		});*/
}

function shipmentHeaderLink(url){
	
	var shipmentIdHeader = $("#shipmentId").val();
	var shipmentNumberHeader = $("#shipmentNumber").val();
	
	var shipment_sequence_number = $("#shipmentSequenceNumber").val();
	var shipment_correction_number = $("#shipmentCorrectionNumber").val();
	
	if(shipment_sequence_number == null	|| shipment_sequence_number == ""){
		shipment_sequence_number="000";
	}
	if(shipment_correction_number == ""	|| shipment_correction_number == null){
		shipment_correction_number="000";
	}
	
	var originPortCityCode = $("#originPortCityCode").val();
	var destinationPortCityCode = $("#destinationPortCityCode").val();
	
	
	var tradeCodeHeader = $("#tradeCode").val();
	var tradeCodeValueHeader = $("#tradeCodeDesc").text();
	var shipmentStatusHeader = $("#statusCode").text();
	var customerGroupHeader = $("#customerGroupId option:selected").text();
	if(customerGroupHeader == 'Select') {
		customerGroupHeader = '';
	}
	var placeOfRecieptHeader = $("#blOriginCityCode").val();
	var portOfLoadingHeader = $('#originPortCityCode').val();
	var portOfDischargeHeader = $("#destinationPortCityCode").val();
	var placeOfDelevieryHeader = $("#blDestinationCityCode").val();
	
	var shipperHeader = $('input[name="shipper\\.organizationName"]').val();
	var consigneeHeader = $('input[name="consignee\\.organizationName"]').val();
	
	var vvdHeader = $("#vessel").val() + ' ' + $("#voyage").val() + ' ' + $("#direction").val();
	var ldSVCHeader = '';
	
	if($("#loadServiceCode").val() != '' && $("#dischargeServiceCode").val() != '') {
		ldSVCHeader = $("#loadServiceCode").val() + ' - ' + $("#dischargeServiceCode").val();	 
	} else if($("#loadServiceCode").val() == '' && $("#dischargeServiceCode").val() != '') {
		ldSVCHeader = $("#dischargeServiceCode").val();
	} else if($("#loadServiceCode").val() != '' && $("#dischargeServiceCode").val() == '') {
		ldSVCHeader = $("#loadServiceCode").val();
	}
	
	var debtorHeader =$("#prepaidCollectCode option:selected").val();
	var debtorValueHeader = $("#prepaidCollectCode option:selected").text();
	var firstPage = $(document).getUrlParam("firstPage");
	var shipmentHeaderParam= "?shipmentIdHeader="+shipmentIdHeader
			+ "&tradeCodeHeader=" + tradeCodeHeader 
			+ "&shipmentStatusHeader="+ shipmentStatusHeader 
			+ "&customerGroupHeader="+ customerGroupHeader 
			+ "&placeOfRecieptHeader="+ placeOfRecieptHeader 
			+ "&portOfLoadingHeader="+ portOfLoadingHeader 
			+ "&portOfDischargeHeader="	+ portOfDischargeHeader 
			+ "&placeOfDelevieryHeader="+ placeOfDelevieryHeader 
			+ "&shipperHeader=" + shipperHeader
			+ "&consigneeHeader=" + consigneeHeader 
			+ "&vvdHeader=" + vvdHeader
			+ "&ldSVCHeader=" + ldSVCHeader 
			+ "&debtorHeader=" + debtorHeader
			+ "&debtorValueHeader=" + debtorValueHeader
			+ "&tradeCodeValueHeader=" + tradeCodeValueHeader
			+ "&shipmentNumberHeader=" + shipmentNumberHeader 
			+ "&shipmentNumber=" + shipmentNumberHeader 
			+ "&originPortCityCode=" + originPortCityCode 
			+ "&destinationPortCityCode="+ destinationPortCityCode
			+ "&shipmentSequenceNumber=" + shipment_sequence_number 
			+ "&shipmentCorrectionNumber="+ shipment_correction_number
			+ "&firstPage="+ firstPage;

	//document.location.href= _context +"/booking/"+url+bookingHeaderParam; 
	//alert(shipmentHeaderParam);
	
	//window.open(_context + url+shipmentHeaderParam);
	document.location.href=_context + url+shipmentHeaderParam;
	
}

function reloadShipmentCommodityData( responseText){
	$('#shipmentCommodityHeader').text(responseText.data.commoditySectionHeader);
	//setFreightAccordianTabDetails(responseText.data.shipmentItemForm.commodityLine, responseText.data.header.tariffNumber, responseText.data.shipmentItemForm.itemNumber, responseText.data.shipmentItemForm.customerCommodityDescription, responseText.data.shipmentItemForm.commodityDesc);
	
	//$('#shipmentCommodityHeader').text($('#shipmentCommodityHeader').text()+" | "+$('#containerCommodityDesc').val().trim());
	$('#tariffNumber').val(responseText.data.header.tariffNumber);
	$('#tariffCheck').val(responseText.data.header.tariffNumber);
	$("#shipmentItemId").val(responseText.data.shipmentItemForm.shipmentItemId);
	$("#unitOfCommodity").val(responseText.data.shipmentItemForm.unitOfCommodity);
	$("#commodityLine").text(responseText.data.shipmentItemForm.commodityLine);
	$("#commodityDesc").val(responseText.data.shipmentItemForm.commodityDesc);
	$("#itemNumber").val(responseText.data.shipmentItemForm.itemNumber);
	$("#piece").val(responseText.data.shipmentItemForm.piece);
	$("#note").val(responseText.data.shipmentItemForm.note);
	$("#kind").val(responseText.data.shipmentItemForm.kind);
	
	setTimeout(function(){
		if($('#billType').val()=="HHGDS" && $("#kind").val().trim()=="")
			$("#kind").val("PCS");
		},3000);
	
	//D028093: Set Unit Of Measure Sourece Code
	$('#unitOfMeasureSourceCode').val(responseText.data.header.unitOfMeasureSourceCode);	
	if(responseText.data.header.unitOfMeasureSourceCode=="I"){
		$("#netWeight").val(Math.round(responseText.data.shipmentItemForm.netWeight).toFixed(0));
		$("#cube").val(Math.round(responseText.data.shipmentItemForm.cube).toFixed(0));
	}else{
	$("#netWeight").val(responseText.data.shipmentItemForm.netWeight);
	$("#cube").val(responseText.data.shipmentItemForm.cube);
	}
	$('#shipmentCommodityCode').val(responseText.data.shipmentItemForm.commodityCode);
	populateCommodityCodeListBilling(responseText.data.shipmentItemForm.commodityCodeList);
	$("#shipmentCommoditycommentId").val(responseText.data.shipmentItemForm.commentId);
	//$("#containerCommodityDesc").val(responseText.data.shipmentItemForm.ContainerCommodityDesc);
	if(responseText.data.shipmentItemForm.cmdLineLink!=null){
	$("#cmdLineLink").text(responseText.data.shipmentItemForm.cmdLineLink+"/");
	$("#pieceValue").text(responseText.data.shipmentItemForm.cmdLineLink);
	}else{
		$("#cmdLineLink").text("0"+"/");
	}
	if(responseText.data.shipmentItemForm.cmdLineLink!=null){
	    $("#cmdLineLinkPov").text(responseText.data.shipmentItemForm.cmdLineLink+"/");
	}else{
		$("#cmdLineLinkPov").text("0"+"/");
	}
	if(responseText.data.shipmentItemForm.totalEqpts!=null){
	    $("#totalEqptsPov").text(responseText.data.shipmentItemForm.totalEqpts);
	}else{
		
	}
	if(responseText.data.shipmentItemForm.cmdLinks!=null){
	$("#cmdLinks").text(responseText.data.shipmentItemForm.cmdLinks+"/");
	}else{
		$("#cmdLinks").text("0"+"/");
	}
	if(responseText.data.shipmentItemForm.totalEqpts!=null){
	$("#totalEqpts").text(responseText.data.shipmentItemForm.totalEqpts);
	}else{
		
	}
	$("#shipmentCommodityHeader").text(responseText.data.commoditySectionHeader);
	setFreightAccordianTabDetails(responseText.data.shipmentItemForm.commodityLine, responseText.data.header.tariffNumber, responseText.data.shipmentItemForm.itemNumber, responseText.data.shipmentItemForm.customerCommodityDescription, responseText.data.shipmentItemForm.commodityDesc);
	//$('#shipmentCommodityHeader').text($('#shipmentCommodityHeader').text()+" | "+$('#containerCommodityDesc').val().trim());
	
	$("#containerCommodityDesc").val(responseText.data.shipmentItemForm.customerCommodityDescription);
	$("#loadDschServiceGroupCode").val(responseText.data.routing.loadDschServiceGroupCode);
	enableDisableActualTrucker();
	$("#routingLoadDischargePair").val(responseText.data.routing.routingLoadDischargePair);
	 $("#statusCode").text(responseText.data.header.statusCode);
	// setting of mixed Commodity Details
	 $('.ui-state-error').parent().hide();
	 
	 $('#tr_shipmentFreightId').hide();
	 somethingChanged = false;
	updateKindList(responseText);
	updateCommodityLine(responseText);
	changeCommodtiySectionOnLdsDscBasis(responseText);
	enableCommoditySectionButtons("ALL");
	$('#msgDivCommodity').html("");
	dimensionFieldSetUp(responseText);
	reloadCommoditySectionButtons(responseText);
	if(responseText.data.header.tariffNumber!=null || responseText.data.header.tariffNumber!=""){
		$('#itemNumber').removeAttr("readOnly");
	}

	 removeMandatoryCheck();
	 
	
	}

//Method to get Parameter from request URL. Parameter to be fetchd should be passed as parameter.
function getSRC(name){
	   if(name=(new RegExp('[?&]'+encodeURIComponent(name)+'=([^&]*)')).exec(location.search))
	      return decodeURIComponent(name[1]);
	}


function disableRepeatContact(enableDisable){
	if(isShipperConsigneeModifiable){
		$('#shipperRepeatContact').attr('disabled', enableDisable);
		$('#consigneeRepeatContact').attr('disabled', enableDisable);
	}
	if(isPartyUpdate || isPartyAdd){
		$('#partiesRepeatContact').attr('disabled', enableDisable);
	}
}

function setScreenOnLoad(){
	clearDefaultDate();

	// Reloading shipment grids after changing data.
	reloadShipmentGrids();
	// BR - enabling disable Bill Type
	enableDisableBillType();
	enableDisableRateDate();
	// BR enable disable Action button
	enableDisableActionButtons();
	
	disableRepeatContact(false);
	
	//changeLabelTotalWeightAndQube();
	showHideLableAsPerValues();
						 
	//enableDisableSendDoc();
	// Display Unreleased Holds Grid on initial display
	//openUnreleasedHoldGridOnIntialDisplay("shipment");
	enableDisableTotalWeightAndQube();
	setGlobalVariableValues();
	setDomesticForeignIndicator();
	changeTextColour();
	processChangeSource();
	//populateOverrideFields();
	processShipperConsigneeColor("consignee");
	processShipperConsigneeColor("shipper");
	//createHoldGrid("shipment");
	
	/*if($.trim($('input[name="shipper\\.address"]').val())!='' &&
		$.trim($('select[name="shipper\\.contactId"]').val()) == '') {
		$('select[name="shipper\\.contactId"]').trigger('change');
	}
	if($.trim($('input[name="consignee\\.address"]').val())!='' && 
			$.trim($('select[name="consignee\\.contactId"]').val()) == '') {
		$('select[name="consignee\\.contactId"]').trigger('change');
	}*/

	
	 
	//To Display Hold Link
	displayOnHoldOrNot();
	
	if($.trim($('select[name="consignee\\.contactId"]').val())!=''){
		$('input[name="consignee\\.contact"]').val('');
	}
	if($.trim($('select[name="shipper\\.contactId"]').val())!=''){
		$('input[name="shipper\\.contact"]').val('');
	}
	
}

//D022276
function checkSourcePageExpandGrid(){
	var gridId = parent.location.hash;
	if(gridId == '#SpclSvc'){
		parent.location.hash="";
		createShipmentSpecialServiceGrid();
		accordionIndex=6;
		expandRelatedDivForSrc('#maintainShipmentSpecialServices');
	}else if(gridId == '#Hold'){
		parent.location.hash="";
		accordionIndex=8;
		expandRelatedDivForSrc('#maintainShipmentHold');
	}	
}
function expandRelatedDivForSrc(divId)
{
	collapseAll();
	window.scrollTo(0, 0);
	$(divId).css('display', 'block');
	$(divId).addClass('ui-accordion-content-active');
	$(divId).parent().find('h3')
		      .removeClass('ui-state-default').removeClass('ui-corner-all').addClass('ui-state-active').addClass('ui-corner-top')
		 	.find('span').removeClass('ui-icon-triangle-1-e').addClass('ui-icon-triangle-1-s');
	windowLocationAccordion();
}
function windowLocationAccordion(){
	if(accordionIndex!=''){		
		var offset = accordianPostionCoordinates(accordionIndex);
		window.scrollTo(offset.left, offset.top);
	}
} 

function accordianPostionCoordinates(accordionIndex){
	return $($('.shipment-section')[accordionIndex]).offset();
}

function enableDisableActualTrucker(){
	var loadDischargeGrpCd = $('#loadDschServiceGroupCode').val().trim();
	if(loadDischargeGrpCd=="CY"){

		$('#actualDeliveryCarrierCode').show();
		$('#actualDeliveryCarrierCodeLabel').show();
		$('#actualPickupCarrierCode').show();
		//$('#actualPickupCarrierCode').show().attr("disabled", true);
		$('#actualPickupCarrierCodeLabel').show();
		
	}
	else{
		
		$('#actualDeliveryCarrierCode').hide();
		$('#actualDeliveryCarrierCodeLabel').hide();
		$('#actualPickupCarrierCode').hide();
		$('#actualPickupCarrierCodeLabel').hide();

	}
}

function  clickShipmentChargesBtn(){
	
	$("#shipmentChargesBtn").click(function() {
		if(!checkActionValidation()){return; }
		//if(checkDirtyData()==false){return; }
		var shipmentNumberHeader = $("#shipmentNumber").val();
		
		var shipment_sequence_number = $("#shipmentSequenceNumber").val();
		var shipment_correction_number = $("#shipmentCorrectionNumber").val();
		
		if(shipment_sequence_number == null	|| shipment_sequence_number == ""){
			shipment_sequence_number="000";
		}
		if(shipment_correction_number == ""	|| shipment_correction_number == null){
			shipment_correction_number="000";
		}
		/*if((changeInShipperConsignee==true || changeInParties==true || changeInRefNumberMarks==true || changeInRoutingVVD==true ||
				changeInCommodity==true || changeInMilitary==true || changeInSpecialServices==true || changeInClauses==true ||
				changeInShipmentHold==true || changeInShipmentOverride==true ||
				changeInPartiesGrid==true || changeInSpecialServiceGrid==true || changeInClausesGrid==true || changeInHoldGrid==true || oneTimeCustomerAdded==true) 
				&& ($('#statusCode').text() != 'ISSUED') && ($('#statusCode').text() != 'CORRECTED') && ($('#statusCode').text() != "")){
					
					var conf= confirm('All unsaved changes will be discarded. Continue?');
			   		if(conf== true ){
			   			var url = "/maintainRate/loadShipmentDetails?shipmentNumber="+
						shipmentNumberHeader+"&shipmentSequenceNumber="+shipment_sequence_number+
						"&shipmentCorrectionNumber="+shipment_correction_number+"&navigationUrl=2";
					window.location = _context + url;
			   		}
		}else{*/
			var firstPage = $(document).getUrlParam("firstPage");
			var previousPage =  $(document).getUrlParam("src");
			if(previousPage == "BillAQ"){
				firstPage = "BillAQ";
			}
			var url = "/maintainRate/loadShipmentDetails?shipmentNumber="+
			shipmentNumberHeader+"&shipmentSequenceNumber="+shipment_sequence_number+
			"&shipmentCorrectionNumber="+shipment_correction_number+"&navigationUrl=2"+"&firstPage="+firstPage;
			window.location = _context + url;
		//}
		
			
	}	);	
}
function clickShipmentPayablesBtn(){
	$("#shipmentPayablesBtn").click(function() {
		if(!checkActionValidation()){return; }
		//if(checkDirtyData()==false){return; }
		var shipmentNumberHeader = $("#shipmentNumber").val();
		
		var shipment_sequence_number = $("#shipmentSequenceNumber").val();
		var shipment_correction_number = $("#shipmentCorrectionNumber").val();
		
		if(shipment_sequence_number == null	|| shipment_sequence_number == ""){
			shipment_sequence_number="000";
		}
		if(shipment_correction_number == ""	|| shipment_correction_number == null){
			shipment_correction_number="000";
		}
		var firstPage = $(document).getUrlParam("firstPage");
		var url = "/billLadingPayable/find?shipmentNumber="+
			shipmentNumberHeader+"&shipmentSequenceNumber="+shipment_sequence_number+
			"&shipmentCorrectionNumber="+shipment_correction_number+"&navigationUrl=2"+"&firstPage="+firstPage;
		window.location = _context + url;
			
	}	);
	}

function clickShipmentStatusBtn(){
	$("#shipmentStatusBtn").click(function() {
		if(!checkActionValidation()){return; }
		//if(checkDirtyData()==false){return; }
		var shipmentNumberHeader = $("#shipmentNumber").val();
		
		var shipment_sequence_number = $("#shipmentSequenceNumber").val();
		var shipment_correction_number = $("#shipmentCorrectionNumber").val();
		
		if(shipment_sequence_number == null	|| shipment_sequence_number == ""){
			shipment_sequence_number="000";
		}
		if(shipment_correction_number == ""	|| shipment_correction_number == null){
			shipment_correction_number="000";
		}
		var firstPage = $(document).getUrlParam("firstPage");
		var url = "/bill_status_history/find?shipmentNumber="+
			shipmentNumberHeader+"&shipmentSequenceNumber="+shipment_sequence_number+
			"&shipmentCorrectionNumber="+shipment_correction_number;
		if(firstPage == "BLSP"){
			url = url + "&navigationUrl=BLSP";
		} else{
			url = url + "&navigationUrl=2";
		}
			
		window.location = _context + url;
			
	}	);
	
	}
	
function clickShipmentGoBtn(){
	$('#shipmentGoBtn').click(
			
			function() {
				
				if(isAnyChangeOnPage()) {
					if(!confirm('You have unsaved changes! \nContinue?')) {
						return;
					}
				}
				
				window.itemList = null;
				
				$('#shipmentForm').validationEngine('attach');	// for removing PopUp on page Load,it is used here
				if(	$("#checkForLoadShipment").validationEngine('validate')){
				var shipment_number = $("#shipmentNumber").val();
	
				if (shipment_number == null || shipment_number == "") {
					showMadatoryBillMessage();
					return;
				}
				 var length = $($('.ui-state-error',"#commodityGridDiv")).length;
				 for(i=0;i<length; i++){
					if(($($('.ui-state-error',"#commodityGridDiv"))[i]).innerHTML!=""){
						$($($('.ui-state-error',"#commodityGridDiv"))[i]).parent().remove();
						
					}
					 
				 }
				 blockUI();
				showLoadingMessage();
				setTimeout('displayShipment()',200); 
				//displayShipment();
				collapseAll();
				//$.unblockUI();
				//added against 21739
				//resetChangeInInputBooleans();
				captureChanges();
			}});
	$('#anyChangesDone').val("N");
	dirtyData=false;
}

function clickShipmentSaveBtn() {
	
	if (console) console.log('clickShipmentSaveBtn click called');
	
	$('#shipmentSaveBtn').click(function() {
		
		if (console) console.log('shipmentSaveBtn click called');

		if(($('#tradeCode').val()=='F' || $('#tradeCode').val()=='M' || $('#tradeCode').val()=='G')
		    && $('#loadDschServiceGroupCode').val()=='CY'|| $('#loadDschServiceGroupCode').val()=='cy'){
        	if($('#statusCode').text() == "IN AUDIT" || $('#statusCode').text() ==  "F/C AUDIT"
        	    || $('#statusCode').text() == "RATED" || $('#statusCode').text() == "F/C RATED"){
        	   if( validateSealNumber() ){
        			alert("Seal Number is required to Bill");
        			return false;
        	    }
        	}
        }


		if(!checkActionValidation()){return; }
		//D024736: Fields are not mandatory when tariffNumber and itemNumber are not present
		if($('#unitOfCommodity').val()==null || $('#unitOfCommodity').val()==0 || ($('#tariffNumber').val() =="" && $('#itemNumber').val() ==""))
		{
			$('#netWeight').removeClass("validate[required]");	
			$('#netWeight').removeClass("validate[custom[number]]");
			$('#netWeight').removeClass("validate[funcCall[validateNetWeight]]");
			$('#netWeight').removeClass("custom[max[9999999.999]]]");
			$('#netWeight').removeClass("custom[min[0000000.001]]]");
			$('#commodityDesc').removeClass("validate[required]");
			$('#commodityDesc').removeClass("validate[funcCall[validateTrfCmdDesc]]");
		}
		
		 if (!$("#shipmentForm").validationEngine('validate') || !validateShipmentUIFields()) {
			 return;
		 }else{
			 hidePromptForUiFieldsAllSections(); // for defect D018373
		 }
		 dirtyData=false;
		 blockUI();
	 showWarningIfAroleChangeAndRefNumberRequiredShipper();
	 showWarningIfAroleChangeAndRefNumberRequiredConsignee();
	 
	//D032557
	if(!validateInvoiceNumbers()){
		$.unblockUI();
		return false;
	}
	 
	validateShipment();
	 //added for 21739
	// resetChangeInInputBooleans();
	 captureChanges();
	});
	}

function clickShipmentExitBtn() {
	$('#shipmentExitBtn')
			.click(
					function() {
						
						//added against 21739
						
						/*if((changeInShipperConsignee==true || changeInParties==true || changeInRefNumberMarks==true || changeInRoutingVVD==true ||
						changeInCommodity==true || changeInMilitary==true || changeInSpecialServices==true || changeInClauses==true ||
						changeInShipmentHold==true || changeInShipmentOverride==true ||
						changeInPartiesGrid==true || changeInSpecialServiceGrid==true || changeInClausesGrid==true || changeInHoldGrid==true || oneTimeCustomerAdded==true) 
						&& ($('#statusCode').text() != 'ISSUED') && ($('#statusCode').text() != 'CORRECTED') && ($('#statusCode').text() != "")){
							
							var conf= confirm('All unsaved changes will be discarded. Continue?');
					   		if(conf== true ){*/
								// D024515 - Fix for exit function
								var firstPage = $(document).getUrlParam("firstPage");
								var previousPage =  $(document).getUrlParam("src");
								if(firstPage=="BLSP"){
									document.location.href = _context+"/billingSetup/loadShipmentDetail";
								} else if (firstPage == "BillAQ"){
									document.location.href = _context+"/cas/auditApprovalSearch.do?reset=true";
								} else if (previousPage == "FTWQ"){
									document.location.href = _context+"/cas/bookBillWorkQueueSearch.do";
								} else if (previousPage == "BLSC"){
									document.location.href = _context+"/cas/shmtSelectionDeletionSearch.do";
								} else if (previousPage == "BillAQ"){
									document.location.href = _context+"/cas/auditApprovalSearch.do?reset=true";
								}
								else if (previousPage == "FIAQ"){
									document.location.href = _context+"/cas/freightInvoiceAssignmentQueueSearch.do?searchAgain=true";
								}
								else {								
										 var currentURL = document.location.href;
										 var urlIndex = currentURL.lastIndexOf('?');
										 if(urlIndex>0){
											 if(document.referrer.indexOf("/auditApprovalSearch") > 0)
											 {
												document.location.href = _context+"/cas/auditApprovalSearch.do?reset=true";
											 }
											else{		
											 document.location.href = _context;
											}
										 }else{
											 document.location.href = _context;
										 }
									 
									 }
					   			
					   			/*}
					   		else{}
						}
						else{
							
						
						
						var isConfirm = confirm("All the unsaved Changes will be discarded. Please confirm!");
						if (isConfirm) {
						
						//to go to Bill of lading setup if came from there on click of exit button
						previouspage = document.referrer;
						previouspage2 = document.referrer;
						 n = previouspage.lastIndexOf('/');
						 m=previouspage.lastIndexOf('=');
						 if (n >= 0) {
							 previouspage = previouspage.substring(n + 1);
						 }
						 if (m >= 0) {
							 previouspage2 = previouspage2.substring(m+1);
						 }
						 var s="loadShipmentDetail";
						 var t="BLFP";
						 
						if(s==previouspage)
							 document.location.href = _context+"/billingSetup/loadShipmentDetail";
							 
						
						else if(t==previouspage2){
							document.location.href = _context+"/billingSetup/loadShipmentDetail";
						}
						 else
							 {
							 document.location.href = _context
								+ '/shipment/exit';
							 var currentURL = document.location.href;
							 var urlIndex = currentURL.lastIndexOf('?');
							 if(urlIndex>0){
								 //window.history.back();
								 if(document.referrer.indexOf("/auditApprovalSearch") > 0)
								 {
									document.location.href = _context+"/cas/auditApprovalSearch.do?useCache=no&method=show";
								 }
								else{		
								 document.location.href = document.referrer;
								}
							 }else{
								 document.location.href = _context;
							}
							 
							 }
						}	*/
						//}
					});
}
function clickShipmentCustomizeBtn(){
	$('#shipmentCustomizeBtn').click(function() {
		if(!checkActionValidation()){return; }
		//if(checkDirtyData()==false){return; }
			shipmentHeaderLink("/shipment/customizednameandaddress/showForm");
	});
	}

function clickShipmentDeleteBtn(){
	$('#shipmentDeleteBtn').click(function() {
		if(!checkActionValidation()){return; }
		//if(checkDirtyData()==false){return; }
		$("#deleteShipmentDialog").dialog('open');
		captureChanges();
	});
}	

function clickShipmentCorrectionsBtn(){
	$("#shipmentCorrectionsBtn").click(	function() {
		if(!checkActionValidation()){return; }
		//if(checkDirtyData()==false){return; }
		var firstPage = $(document).getUrlParam("firstPage");
				document.location.href = _context+ "/bill/frtcorrection/find?shipmentNumber="+ $('#shipmentNumber').val()+'&shipmentSequenceNumber='+$('#shipmentSequenceNumber').val()+'&shipmentCorrectionNumber=000&source=BILL&firstPage='+firstPage;
			});
	}
function clickShipmentSendDocBtn(){
	$("#shipmentSendDocBtn").click(function() {
		if(!checkActionValidation()){return; }
		//if(checkDirtyData()==false){return; }
		var shipmentNumberHeader = $("#shipmentNumber").val();
		
		var shipment_sequence_number = $("#shipmentSequenceNumber").val();
		//D032364
		var shipment_correction_number = "000";
		
		if(shipment_sequence_number == null	|| shipment_sequence_number == ""){
			shipment_sequence_number="000";
		}
		
		var firstPage = $(document).getUrlParam("firstPage");
		var url = "/printFreightBill/go?shipmentNumber="+
			shipmentNumberHeader+"&shipmentSequenceNumber="+shipment_sequence_number+
			"&shipmentCorrectionNumber="+shipment_correction_number+"&source=maintainBill&firstPage="+firstPage;
		window.location = _context + url;
			
	}	);
	}
function clickShipmentStatusBtnBtn(){
	$("#shipmentStatusBtn").click(function() {
		if(!checkActionValidation()){return; }
		//if(checkDirtyData()==false){return; }
		var shipmentNumberHeader = $("#shipmentNumber").val();
		
		var shipment_sequence_number = $("#shipmentSequenceNumber").val();
		var shipment_correction_number = $("#shipmentCorrectionNumber").val();
		
		if(shipment_sequence_number == null	|| shipment_sequence_number == ""){
			shipment_sequence_number="000";
		}
		if(shipment_correction_number == ""	|| shipment_correction_number == null){
			shipment_correction_number="000";
		}
		var firstPage = $(document).getUrlParam("firstPage");
		var url = "/bill_status_history/find?" +
				"shipmentNumber="+shipmentNumberHeader+"&shipmentSequenceNumber="+shipment_sequence_number+"&shipmentCorrectionNumber="+shipment_correction_number+"&navigationUrl=2&firstPage="+firstPage;
		window.location = _context + url;
			
	});
	}

function createDeleteShipmentConfirmDialog() {
	$("#deleteShipmentDialog").dialog({
		autoOpen : false,
		width : 450,
		modal : true,
		title: "Delete Shipment",
		position: ['center','80'], 
		open : function() {
			$("#deleteShipmentDialog").dialog({height: 'auto'});
		},
		close : function() {
			$('#msgDiv').html('');
			$('#msgDiv').hide();
			$("#deleteShipmentDialog").dialog('close');
		},
		buttons:{
			OK: function() {
				blockUI();
				deleteShipment();
				$("#deleteShipmentDialog").dialog('close');
			}, 
			Close: function() {
				$("#deleteShipmentDialog").dialog('close');
			}
		}
	});
}

function setShipperConsigneeCustomized(responseText){
	if(responseText.data.shipperNameAddressCustomized){
		$('input[name="shipper\\.organizationName"]').css('color', 'green');
	}else{
		$('input[name="shipper\\.organizationName"]').css('color', 'black');
	}
	if(responseText.data.consigneeNameAddressCustomized){
		$('input[name="consignee\\.organizationName"]').css('color', 'green');
	}else{
		$('input[name="consignee\\.organizationName"]').css('color', 'black');
	}
}

function rateBill(){
	
//	if(dirtyData==true && checkActionValidation()){
//		 if (!$("#shipmentForm").validationEngine('validate') || !validateShipmentUIFields()) {
//			 return;
//		 }else{
//			 hidePromptForUiFieldsAllSections(); // for defect D018373
//		 }
//	 showWarningIfAroleChangeAndRefNumberRequiredShipper();
//	 showWarningIfAroleChangeAndRefNumberRequiredConsignee();
//	 validateShipment();
//	}
	 makeGridForReError("shipment");
	$('#shipmentForm').gatesEnable();
	var queryString = $("#shipmentForm").formSerialize();
	$.ajax({
		type : "POST",
		url : _context + "/shipment/rateBill",
		data : queryString,
		success : function(responseText) {
			//$.unblockUI();
			if(responseText.success==false){
			//D032676: 	GATES Performance - Maintain Bill - Bill Button - Merge save and rateBill transactions into one server call 
				$("#shipmentStatusCode").attr("disabled", true);
				showResponseMessages("msgDiv", responseText);			
				enforceUserSecurityRolesAndPermissions();
				$.unblockUI();
				return;
			}
			if (responseText.messages.error.length == 0) {
				somethingChanged= false;
				captureChanges();
				if(responseText.data.rateView != null) {
					if(responseText.data.rateView == "showError"){
						$("#shipmentForm").loadJSON(responseText.data);
						loadErrorOverLay(responseText);			
						$.unblockUI();
						$('#re_error_dialog').dialog( "open" );
						$("#reErrorGrid").trigger('reloadGrid');
						reloadShipmentGrids();
						openHoldsUnreleasedDialog('shipment');
						$("#holdDialog").dialog("close");
					}else if(responseText.data.rateView == "showChoices"){
						$("#shipmentForm").loadJSON(responseText.data);
						loadChoiceOverLay(responseText);
						$('#reUseSelection').val('S');
						$.unblockUI();
						$('#re_choice_dialog').dialog( "open" );
						$("#reChoiceGrid").trigger('reloadGrid');
					}else if(responseText.data.rateView == "hold"){
						$.unblockUI();
						if(responseText.data.flow == true){
							navigateToTargetPageForFurtherFlow('Maintain Booking',responseText.data.targetPage, 
								$("#shipmentNumber").val(), responseText.data.header.shipmentSequenceNumber,"000",
								"2");
							return;
						}
//						if(responseText.data.targetPage == "Maintain Bill"){
////							displayShipment();
//							reloadShipmentGrids();
//							openHoldsUnreleasedDialog('shipment');
//							$("#holdsUnreleased").attr("style","visibilty:visible");
//							$('#holdUnreleasedGrid').trigger('reloadGrid');
//							conculde
//							$("#holdDialog").dialog("close");
//							$('#msgDiv').html("<div class=\"message_success\">Bill Manager request successfully completed</div>");
//						}else{
							navigateToTargetPage('',responseText.data.targetPage, 
									$("#shipmentNumber").val(), responseText.data.header.shipmentSequenceNumber,
									$("#shipmentCorrectionNumber").val(),
									"2");
							
//						}
						
					}else if(responseText.data.rateView == "exception"){
						$('#msgDiv').html("<div class=\"message_error\">"+responseText.data.billManagerException+"</div>");
						$.unblockUI();
						return;
					}
					else if(responseText.data.rateView == "blank"){
						$.unblockUI();
						$('#msgDiv').html("<div class=\"message_success\">Bill Manager request successfully completed</div>");
						openHoldsUnreleasedDialog('shipment');
					}
					else if(responseText.data.rateView == "Success"){
						$.unblockUI();
						$("#statusCode").html(responseText.data.header.statusCode);
						showResponseMessages("msgDiv", responseText);
						var firstPage = $(document).getUrlParam("firstPage");
						//Changed for defect D025006 
						document.location.href = _context+ "/maintainRate/loadShipmentDetails?shipmentNumber="+ 
						$("#shipmentNumber").val()+'&shipmentSequenceNumber='+responseText.data.header.shipmentSequenceNumber
						+'&shipmentCorrectionNumber=000&navigationUrl=2&firstPage='+firstPage+'&commodityDisplay=last';
						//console.log("Navigating to BL charges");

					}
				}else{
					showResponseMessages("msgDiv", responseText);
					$.unblockUI();
					return;
				}
				$.unblockUI();
			}
		}
	});

	
}


function setScreenFieldPropertiesforScreenFromFTWQ(){
	$('#shipmentCorrectionNumber').attr('disabled', false);
	$('#shipmentSequenceNumber').attr('disabled', false);
	enableDisableContactId('shipper',false);
	enableDisableContactId('consignee',false);
}


//code addition start for defect --D018373
	function hidePromptForUiFieldsAllSections(){
		hidePromptForUiFields('shipper');
		hidePromptForUiFields('consignee');
		hidePromptForUiFields('parties');
		
	}
//code addition end for defect --D018373

	

	
	//*Added for Shipment Security*/
	function displayHideCommoditySection(responseText){
		if(responseText.data.routing.routingLoadDischargePair!=null && responseText.data.routing.routingLoadDischargePair!="" 
			&& responseText.data.routing.routingLoadDischargePair!="null"){
		if(responseText.data.routing.routingLoadDischargePair.trim() =="AU"){
			//Automotive
			_enforceSecuritySection('maintain_commodity_shipment', 4, isCommodityBLAUDisplayOnly, (isCommodityBLAUAdd || isCommodityBLAUUpdate || isCommodityBLAUDelete || isCommodityBLAULink));
		}
		if(responseText.data.routing.routingLoadDischargePair.trim() =="CY"){
			if(responseText.data.header.billType!=null && responseText.data.header.billType.trim()=="STANDARD" ||
					responseText.data.header.billType!=null && responseText.data.header.billType.trim()=="HHGDS"){
				//container
				_enforceSecuritySection('maintain_commodity_shipment', 4, isCommodityBLCNDisplayOnly, (isCommodityBLCNAdd || isCommodityBLCNUpdate || isCommodityBLCNDelete || isCommodityBLCNLink));
			}
			else if(responseText.data.header.billType!=null && responseText.data.header.billType.trim()=="MIXED"){
				//mixed
				_enforceSecuritySection('maintain_commodity_shipment', 4, isCommodityBLMXDisplayOnly, (isCommodityBLMXAdd || isCommodityBLMXUpdate || isCommodityBLMXDelete || isCommodityBLMXLink));
			}
		}
		if(responseText.data.routing.routingLoadDischargePair.trim() =="CON"){
			//conventional
			_enforceSecuritySection('maintain_commodity_shipment', 4, isCommodityBLCVDisplayOnly, (isCommodityBLCVAdd || isCommodityBLCVUpdate || isCommodityBLCVDelete || isCommodityBLCVLink));
		}
		if(responseText.data.routing.routingLoadDischargePair.trim() =="LCL"){
			//conventional
			_enforceSecuritySection('maintain_commodity_shipment', 4, isCommodityBLCVDisplayOnly, (isCommodityBLCVAdd || isCommodityBLCVUpdate || isCommodityBLCVDelete || isCommodityBLCVLink));
		}
		}
	}

	// D019870 code addition start
	function eanableDisableSectionsOnScreen(source)	{
		
		//Added for D029134
		_enforceSecurityHeader();
		/*Shipper|Consignee*/
		enableDisableSection('maintainShipmentShipperConsignee', 0, isShipperConsigneeDisplayOnly, isShipperConsigneeModifiable,source);
		
		/*Parties*/
		enableDisableSection('maintainShipmentParties', 1, isPartiesDisplayOnly, isPartiesModifiable,source);
		
		/*Reference Numbers*/
		enableDisableSection('maintainShipmentRefNumberMarks', 2, (isReferenceNumberMarksDisplayOnly || isMarksDisplayOnly), (isReferenceNumberMarksModifiable || isMarksModifiable),source);
		
		/*Routing*/
		enableDisableSection('maintainShipmentRouting', 3, isRoutingDisplayOnly, isRoutingModifiable,source);
		
		/*Commodity*/
		//enableDisableSection('maintain_commodity_shipment', 4, isCommodityDisplay, isCommodityModifiable,source);
		
		if($('#tradeCode').val()!='A') {
			enableDisableSection('maintainShipmentHazards', 5, false, false,source); 
			enableDisableSection('maintainShipmentStopOffs', 6, false, false,source);
		} else {
			enableDisableSection('maintainShipmentHazards', 5, isRoutingDisplayOnly, isRoutingModifiable,source); 
			enableDisableSection('maintainShipmentStopOffs', 6, isRoutingDisplayOnly, isRoutingModifiable,source);
			//D031445
			displayInvoiceLinks(true);
		}
		if(!isRoutingModifiable) {
			$("#hazardAddATag").contents().unwrap();
			$("#hazardAddPlus").remove();
		}
		
		
		/*Military*/
		enableDisableSection('militarySection', 7, isMilitaryDisplayOnly, isMilitaryModifiable,source);
		
		/*Special Services*/
		enableDisableSection('maintainShipmentSpecialServices', 8, isSpecialServiceDisplayOnly, isSpecialServiceModifiable ,source);
		
		/*Clauses*/
		enableDisableSection('maintainBookingClauses', 9, isClauseDisplayOnly, isClauseModifiable ,source);
		
		/*Holds*/
		enableDisableSection('maintainShipmentHold', 10, isHoldManualDisplayOnly, isHoldManualModifiable ,source);
			
		/*Booking Overrides*/
		enableDisableSection('maintainShipmentOverrides', 11, isRoutingOverrideDisplayOnly, isRoutingOverrideModifiable ,source);
		
	}

	function enableDisableSection(sectionId, accordian, _displayOnly, _modifiableOnly, source){
		console.log("Section="+sectionId+" dis="+ _displayOnly+" mod="+_modifiableOnly);
		
		if(_displayOnly && _modifiableOnly){
			//Commented all header fileds for defect D029134
			$($('.shipment-section')[accordian]).show();
			if(source){
				enableSection(sectionId);
			/*	$("#rateDate").attr("false",false);
				$("#customerGroupId").attr("false",false);
				$("#billType").attr("false",false); */
			}else{
				disableSection(sectionId);
				/*$("#rateDate").attr("disabled",true);
				$("#customerGroupId").attr("disabled",true);
				$("#billType").attr("disabled",true); */
			}
			//checkCopyButtons();
		}else if(_displayOnly && !_modifiableOnly){
			$($('.shipment-section')[accordian]).show();
			disableSection(sectionId);
		/*	$("#rateDate").attr("disabled",true);
			$("#customerGroupId").attr("disabled",true);
			$("#billType").attr("disabled",true); */
		}else if(!_displayOnly && _modifiableOnly ){
			$($('.shipment-section')[accordian]).show();
				if(source){
				enableSection(sectionId);
				/*$("#rateDate").attr("disabled",false);
				$("#customerGroupId").attr("disabled",false);
				$("#billType").attr("disabled",false); */
			}else{
				disableSection(sectionId);
			/*	$("#rateDate").attr("disabled",true);
				$("#customerGroupId").attr("disabled",true);
				$("#billType").attr("disabled",true); */
			}
			//checkCopyButtons();
		}else if(!_displayOnly && !_modifiableOnly){
			hideSectionAccordion(accordian);
			//Added for D028864
		/*	$("#customerGroupId").attr("disabled",true);
			$("#billType").attr("disabled",true); */
		}
	}
	
	// D019870 end
	
	function setRoutingLoadDischargeDetails()
	{
		if($('#loadServiceCode :selected').val()!='' && $('#dischargeServiceCode :selected').val()!='')
		{
			$.ajax({
				async: false,
				type : "GET",
				url: _context +"/shipment/routing/getLoadDschPair",
				data:{
					loadServiceCode:$('#loadServiceCode :selected').val(),
					dischargeServiceCode:$('#dischargeServiceCode :selected').val()
				},
				success: function(responseText)
				{
					populateLoadDschPairValues(data);
				}
			});
		}
		else
		{
			if(isRoutingModifiable)
			{
				$('#blOriginCityCodeDescription').attr('disabled', false);
				$('#blDestinationCityCodeDescription').attr('disabled', false);
				$('#pickupZipCode').attr('disabled', false);
				$('#deliveryZipCode').attr('disabled', false);
			}
		}
		checkPickupCarrier();
		checkDeliveryCarrier();
	}
	
	
	function populateLoadDschPairValues(data){
		if(isRoutingModifiable && data.isRequireBlOrigin!='N')
			$('#blOriginCityCodeDescription').attr('disabled', false);
		else if($('#blOriginCityCode').val()=='' && data.isRequireBlOrigin=='N')
			$('#blOriginCityCodeDescription').attr('disabled', true);
		
		if(isRoutingModifiable && data.isRequireBlDestination!='N')
			$('#blDestinationCityCodeDescription').attr('disabled', false);
		else if($('#blDestinationCityCode').val()=='' && data.isRequireBlDestination=='N')
			$('#blDestinationCityCodeDescription').attr('disabled', true);
		
		if(isRoutingModifiable && data.isRequirePickupZipCode!='N')
			$('#pickupZipCode').attr('disabled', false);
		else if($('#pickupZipCode').val()=='' && data.isRequirePickupZipCode=='N')
			$('#pickupZipCode').attr('disabled', true);
		
		if(isRoutingModifiable && data.isRequireDeliveryZipCode!='N')
			$('#deliveryZipCode').attr('disabled', false);
		else if($('#deliveryZipCode').val()=='' && data.isRequireDeliveryZipCode=='N')
			$('#deliveryZipCode').attr('disabled', true);
	}
	function applycheckDirtyData(){
				$("input").change(function() {
					dirtyData=true;
				});
				$("select").change(function() {
					dirtyData=true;
				});
				$("check").change(function() {
					dirtyData=true;
				});
				
				$('input[type="text"],input[type="checkbox"]:not(:disabled),select,input[type="radio"]:not(:disabled),textarea:not(:disabled)').change(function(){ 
					saveBillBeforeBillButton=true;
					
				});
				$('.ui-inline-delete,.ui-inline-delete, ').click(function(){ saveBillBeforeBillButton=true;});
				}
	
	function checkDirtyData(){
		if(dirtyData==true){
			var r=confirm("Data has been changed. Do you really want to proceed?");
			if (r==true) {
				return true;
			}
			else{
				return false;
			}
		}
		return true;
		}
	
	/*function setCommunicationMethodCodeForShipper(shipperCommunicationMethodCode){
		if(shipperCommunicationMethodCode =='P'){
			$('#shipperComm1').attr("checked",true);
		}else if(shipperCommunicationMethodCode =='C'){
			$('#shipperComm2').attr("checked",true);
		}else if (shipperCommunicationMethodCode =='F'){
			$('#shipperComm3').attr("checked",true);
		}else
			if(shipperCommunicationMethodCode =='E'){
				$('#shipperComm4').attr("checked",true);
			}
		
	}
	function setCommunicationMethodCodeForConsignee(consigneeCommunicationMethodCode){
		if(consigneeCommunicationMethodCode =='P'){
			$('#consigneeComm1').attr("checked",true);
		}else if(consigneeCommunicationMethodCode =='C'){
			$('#consigneeComm2').attr("checked",true);
		}else if (consigneeCommunicationMethodCode =='F'){
			$('#consigneeComm3').attr("checked",true);
		}else
			if(consigneeCommunicationMethodCode =='E'){
				$('#consigneeComm4').attr("checked",true);
			}
		
	}*/
	function disableBillingFields(){
		$('#maintain_commodity_shipment').gatesDisable();
		$('#partiesDialog').gatesDisable();
				$('#partiesAdd').gatesDisable();		
				$('#holdAdd').gatesDisable();
				$('#clausesAdd').gatesDisable();
				$('#specialSerivceAdd').gatesDisable();
				$('#marksAndNumbers').attr("readOnly", true);
				$('#loadServiceCode').attr("readOnly", true);
				$('#dischargeServiceCode').attr("readOnly", true);
		$('#partiesDialog').gatesDisable();
				$('#partiesAdd').gatesDisable();		
				$('#holdAdd').gatesDisable();
				$('#clausesAdd').gatesDisable();
				$('#specialSerivceAdd').gatesDisable();
				$('#marksAndNumbers').attr("readOnly", true);
				$('#loadServiceCode').attr("readOnly", true);
				$('#dischargeServiceCode').attr("readOnly", true);
		}
	function clearAllShipmentGrids()
	{
		$("#referenceNumberGrid").jqGrid("clearGridData", true);
		$("#specialServiceGrid").jqGrid("clearGridData", true);
		$("#vvdRoutingGrid").jqGrid("clearGridData", true);
		$("#mixcommodityGrid").jqGrid("clearGridData", true);
		$("#commodityGrid").jqGrid("clearGridData", true);
		$("#povGrid").jqGrid("clearGridData", true);
		$("#convGrid").jqGrid("clearGridData", true);
		$("#gridIdForClauses").jqGrid("clearGridData", true);
		$("#gridIdForParties").jqGrid("clearGridData", true);
		$("#holdGrid").jqGrid("clearGridData", true);	
		$("#stopOffsGrid").jqGrid("clearGridData", true);

	}
	
	//added against 21739
	/*function checkForChanges(){
		$('#maintainShipmentShipperConsignee').change(function(){
			changeInShipperConsignee=true;
		});
		$('#maintainShipmentParties').change(function(){
			changeInParties=true;
		});
		$('#maintainShipmentRefNumberMarks').change(function(){
			changeInRefNumberMarks=true;
		});
		$('#maintainShipmentRouting').change(function(){
			changeInRoutingVVD=true;
		});
		$('#maintain_commodity_shipment').change(function(){
			changeInCommodity=true;
		});
		$('#maintainShipmentMilitary').change(function(){
			changeInMilitary=true;
		});
		//$('#maintainShipmentSpecialServices').change(function(){
		//	changeInSpecialServices=true;
		//});
		$('#maintainBookingClauses').change(function(){
			changeInClauses=true;
		});
		//$('#maintainShipmentHold').change(function(){
		//	changeInShipmentHold=true;
		//});
		$('#maintainShipmentOverrides').change(function(){
			changeInShipmentOverride=true;
		});
		
		//changes in grids are handled as follows
		
		//handled in shipmentparties.js
		//handled with changeInRefNumberMarks
		//no grid as such for VVD Routing
		//handled with changeInCommodity
		//handled in shipmentSpecialService.js
		//handled at ShipmentClause.js
		//handled at shipmenthold.js
		//handled at shipmentReferencenumber.js
		//handled at convGrid.js
		
		
	}
	//added against 21739
	function resetChangeInInputBooleans(){
		changeInShipperConsignee=false;
		changeInParties=false;
		changeInRefNumberMarks=false;
		changeInRoutingVVD=false;
		changeInCommodity=false;
		changeInMilitary=false;
		changeInSpecialServices=false;
		changeInClauses=false;
		changeInShipmentHold=false;
		changeInShipmentOverride=false;
		changeInPartiesGrid=false;
		changeInSpecialServiceGrid=false;
		changeInClausesGrid=false;
		changeInHoldGrid=false;
		oneTimeCustomerAdded=false;
		counterPartiesGridReloaded=0;
		counterClausesGridReloaded=0;
		counterRefNumberGridReloaded= 0;
		counterConvGridReloaded=0;
		counterSplServicesReloaded=0;
		counterHoldGridReloaded=0;
	}*/
	
	//for defect D022184
	function trimShipperAndConsignee(){
		for(var i=0;i<$('.number').length;i++){
			$($('.number')[i]).val($($('.number')[i]).val().trim()); 
			}
	}
	
	
	function setFreightAccordianTabDetails(freightCount, tariffNumber, tariffItemNumber, commodityDescription, tariffCommodityDescription){
		if(freightCount==0){
			setAccordianTabDetails('shipmentCommodityHeader', "");
		}
		else if(freightCount>0){
			var currentRecord = parseInt($("#unitOfCommodity option:selected").text());
			if(!currentRecord)  currentRecord = 1;
			var commodityDisplayText = " ("+currentRecord+" of "+freightCount+") - ";
			if(tariffNumber!='undefined' && tariffNumber!=null && $.trim(tariffNumber)!=''){
				commodityDisplayText = commodityDisplayText + tariffNumber + " | ";
			}
			
			if(tariffItemNumber!='undefined' && tariffItemNumber!=null && $.trim(tariffItemNumber)!=''){
				commodityDisplayText = commodityDisplayText + tariffItemNumber + " | ";
			}
			
			commodityDisplayText = commodityDisplayText + (commodityDescription!=''&& commodityDescription!=null?commodityDescription.substring(0,30):tariffCommodityDescription);
			if(commodityDisplayText.indexOf("null")>0){ 
				commodityDisplayText=commodityDisplayText.substring(0,commodityDisplayText.indexOf("null"));
			}
			
			/*
			if(equipmentId!='undefined' && equipmentId!=null && $.trim(equipmentId)!=''){
				commodityDisplayText = commodityDisplayText + " | "+equipmentId;
			}*/
			
			// Adding commodity line total
			//commodityDisplayText += " | of "+$('#commodityLine').html();
				
			
			setAccordianTabDetails('shipmentCommodityHeader', commodityDisplayText);
		}
	}
	//21575- auto tab
	/*function autotab(event, object)
	{
		var keyCode = event.keyCode;
		
		if(keyCode==32 || (48<=keyCode && keyCode<=57)
				|| (65<=keyCode && keyCode<=90) || (96<=keyCode && keyCode<=107) 
				|| (109<=keyCode && keyCode<=111))
		{
			if(object.value.length >= object.getAttribute("maxlength"))
			{
					$(object).next().focus().select();
			}
		}
		return true;
	}*/
	
	/*function autoTabBillingNameSelector(source, CurrentElementID, NextElementID, FieldLength) {
	    //Get a reference to the two elements in the tab sequence.
	    //var CurrentElement = $('#' + CurrentElementID);
	    var CurrentElement = $('input[name="'+source+'\\.'+CurrentElementID+'"]');
	    var NextElement = $('input[name="'+source+'\\.'+NextElementID+'"]');
	    //var NextElement = $('#' + NextElementID);
	 
	    CurrentElement.keyup(function(e) {
	        //Retrieve which key was pressed.
	        var KeyID = (window.event) ? event.keyCode : e.keyCode;
	 
	        //If the user has filled the textbox to the given length and the user just pressed 
	        // a number or letter, then move the cursor to the next element in the tab sequence.   
	        if (CurrentElement.val().length >= FieldLength
	            && ((KeyID >= 48 && KeyID <= 90) ||
	            (KeyID >= 96 && KeyID <= 105)))
	            NextElement.focus();
	    });
	}*/
	function isTextSelected(input) {
		if(input.value.length==0) {
			return false;
		}
	    if (typeof input.selectionStart == "number") {
	        return input.selectionStart == 0 && input.selectionEnd == input.value.length;
	    } else if (typeof document.selection != "undefined") {
	        input.focus();
	    }
	}
	function autoTabShipper(CurrentElementID, NextElementID, FieldLength,CountryCodeID) {
 	    //Get a reference to the two elements in the tab sequence.
 		var source='shipper';
 		var CurrentElement = $('input[name="'+source+'\\.'+CurrentElementID+'"]');
 	    var NextElement = $('input[name="'+source+'\\.'+NextElementID+'"]');
 	    
 	
 	    CurrentElement.keydown(function(e) {
 	    	var thisElement=this;
 	    	setTimeout(function(){
 	        //Retrieve which key was pressed.
 	        var KeyID = (window.event) ? event.keyCode : e.keyCode;
 	       //console.log(isTextSelected(this));
 	 
 	        //If the user has filled the textbox to the given length and the user just pressed 
 	        // a number or letter, then move the cursor to the next element in the tab sequence. 
 	        var phoneCountryCode="contactPhoneCountryCode";
 	        var cellCountryCode="contactCellCountryCode";
 	        var faxCountryCode="contactFaxCountryCode";
 	        
 	        if ((CurrentElementID == phoneCountryCode) || (CurrentElementID == cellCountryCode)	|| (CurrentElementID == faxCountryCode)) 
 	        {
 	        	if ((CurrentElement.val()=='1' || 
 	        	        CurrentElement.val()=='01' ||  CurrentElement.val()=='001' || 
 	        	        CurrentElement.val().length == 3)
 					&& ((KeyID >= 48 && KeyID <= 90) || (KeyID >= 96 && KeyID <= 105)) && !isTextSelected(thisElement))
 	        		{
 	        			NextElement.select();
 	        		}
 	        	
 	        
 			}
 	        else {
 	        	
 	        	 
 	        	
 				if (((CurrentElement.val().length == FieldLength && isAmericanShip(CountryCodeID)) || 
 						(CurrentElement.val().length == 4))
 								&& ((KeyID >= 48 && KeyID <= 90) || (KeyID >= 96 && KeyID <= 105))  && !isTextSelected(thisElement))
 					{	
 					var value=$('#contactPhoneCountryCode').val();
 							NextElement.select();
 					}
 						
 				 }
 	        
 	      
 			/* * if (CurrentElement.val().length >= FieldLength && ((KeyID >= 48 &&
 			 * KeyID <= 90) || (KeyID >= 96 && KeyID <= 105))) NextElement.focus();*/
 	    	},5);
 	    });
 	}
	
	
	function autoTabConsignee(CurrentElementID, NextElementID, FieldLength,CountryCodeID) {
 	    //Get a reference to the two elements in the tab sequence.
 		var source='consignee';
 		var CurrentElement = $('input[name="'+source+'\\.'+CurrentElementID+'"]');
 	    var NextElement = $('input[name="'+source+'\\.'+NextElementID+'"]');
 	   
 	    
 	    CurrentElement.keydown(function(e) {
 	        //Retrieve which key was pressed.
 	        var KeyID = (window.event) ? event.keyCode : e.keyCode;
 	 
 	        //If the user has filled the textbox to the given length and the user just pressed 
 	        // a number or letter, then move the cursor to the next element in the tab sequence. 
 	        var phoneCountryCode="contactPhoneCountryCode";
 	        var cellCountryCode="contactCellCountryCode";
 	        var faxCountryCode="contactFaxCountryCode";
 	        
 	        if ((CurrentElementID == phoneCountryCode) || (CurrentElementID == cellCountryCode)	|| (CurrentElementID == faxCountryCode)) 
 	        {
 	        	if ((CurrentElement.val()=='1' || 
 	        	        CurrentElement.val()=='01' ||  CurrentElement.val()=='001' || 
 	        	        CurrentElement.val().length == 3)
 					&& ((KeyID >= 48 && KeyID <= 90) || (KeyID >= 96 && KeyID <= 105))  && !isTextSelected(this))
 	        		{
 	        		
 	        			NextElement.select();
 	        		}
 	        	
 	        
 			}
 	        else {
 	        	
 				if (((CurrentElement.val().length == FieldLength && isAmericanCons(CountryCodeID)) || 
 						(CurrentElement.val().length == 4))
 								&& ((KeyID >= 48 && KeyID <= 90) || (KeyID >= 96 && KeyID <= 105))  && !isTextSelected(this))
 					{	
 			
 							NextElement.select();
 					}
 						
 				 }
 	      
 	    });
 	}
	
	function isAmericanShip(id)
	{
		var source= 'shipper';
		var val = $('input[name="'+source+'\\.'+id+'"]').val();
		if(val=='' || val=='1' || val=='01' || val=='001')
			return true;
		else
			return false;
	}
	
	function isAmericanCons(id)
	{
		var source= 'consignee';
		var val = $('input[name="'+source+'\\.'+id+'"]').val();
		if(val=='' || val=='1' || val=='01' || val=='001')
			return true;
		else
			return false;
	}
	
	function isValidDate(date)
	{
			var matches = /^(\d{2})[-\/](\d{2})[-\/](\d{4})$/.exec(date);
			var validDate=false;
			

		    var len1=date.length;

		 //   alert('matches:'+matches);

			if (matches == null) 		
			{			
				if(len1<'8' && len1>'10')
				{
					return false;
				}
				if(len1=='0'){
					return date;
				}
				if(len1=='8')
				{	
					var dt1  = date.substring(2,4); 
				    var mon1 = date.substring(0,2); 
				    var mn=mon1-1;
				    var yr1  = date.substring(4,8);
					var composedDate = new Date(yr1, mn,dt1 );		
					validDate=composedDate.getDate() == dt1 &&
					
					composedDate.getMonth() == mn &&
					
					composedDate.getFullYear() == yr1;

					if(validDate)		
					{	var newDate=mon1+"-"+dt1+"-"+yr1;
						
						return newDate;		
					}				
					else		
					{
						return null;				
					}				
				}
		
			}
			else
			{
				var d = matches[2];
				var m = matches[1] - 1;
				var y = matches[3];
				
				var composedDate = new Date(y, m, d);			
				  
				validDate=composedDate.getDate() == d &&
				
				composedDate.getMonth() == m &&
				
				composedDate.getFullYear() == y;
				
				if(validDate)		
				{	
					var newDate=matches[1]+"-"+d+"-"+y;
					return newDate;		
				}
				
				else		
				{
					return null;
				
				}
			}



	}

	function trim(stringToTrim) {
		return stringToTrim.replace(/^\s+|\s+$/g,"");
	}


	function startsWith(expr, value) {
		return (value.substr(0, expr.length) == expr);
	}
	
	function mailtoKicker(id) {
		blockUI();
		if (console) console.log("mailtoKicker() shipment#:" + $('#shipmentId').val()+"&templateId="+id);
		var urlStr = _context +"/shipment/getMailto?shipmentId="+$('#shipmentId').val()+"&templateId="+id;
		$.ajax({
			type: "GET",
			url: urlStr,
			success: function(responseText){
				if(startsWith("mailto:",responseText)) {
					var key = "&body=";
					var start = responseText.indexOf(key) + key.length;
					var toEncode = responseText.substring(start);
					var noEncode = responseText.substring(0,start);
					var url = noEncode + encodeURIComponent(toEncode);
					if (console) console.log("mailTo url:" + url);
					$.unblockUI();
					window.location.href = url;
	 				//$('#sendKickerHref').attr("href",);
					//$('#sendKickerHref')[0].click();
				}  else {
					alert("Error getting template "+responseText);
					$.unblockUI();
				}
				
			},
			error: function(jqXHR,textStatus,errorThrown) {
				$.unblockUI();
				alert("Error getting template "+textStatus);
			}
		});
		
		
		
	}
	
	
	function wordwrap( str, width ) {
		 
	    var brk =  '\n';
	    width = width || 75;
	    var  cut = true;
	 
	    if (!str) { return str; }
	 
	    var regex = '.{1,' +width+ '}(\\s|$)' + (cut ? '|.{' +width+ '}|.+$' : '|\\S+?(\\s|$)');
	 
	    var result = str.match( RegExp(regex, 'g') );
	    for(var i=0;i<result.length;i++) {
	    	result[i] = result[i].trim();
	    }
	    
	    return result.join( brk );
	 
	}
	
	
	function wordwrap2Columns( str, width ) {
		 
	    var brk =  '\n';
	    width = width || 75;
	    var  cut = true;
	 
	    if (!str) { return str; }
	 
	    var regex = '.{1,' +width+ '}(\\s|$)' + (cut ? '|.{' +width+ '}|.+$' : '|\\S+?(\\s|$)');
	 
	    var result = str.match( RegExp(regex, 'g') );
	    var output = "";
	    for(var i=0;i<result.length;i++) {
	    	result[i] = result[i].trim();
	    	output += result[i];
	    	if(i == (result.length-1)) {
	    		// do nothing
	    	} else if(i%2 == 0) {
	    		output += " ";
	    	} else {
	    		output += "\n";
	    	}
	    	
	    }
	    
	    return output;
	 
	}
	
	// First line can only be width other lines can be second width.
	function wordwrapfirstline( str, width, secondwidth) {
		 
	    var brk =  '\n';
	    width = width || 75;
	    var  cut = true;
	 
	    if (!str) { return str; }
	 
	    var regex = '.{1,' +width+ '}(\\s|$)' + (cut ? '|.{' +width+ '}|.+$' : '|\\S+?(\\s|$)');
	 
	    var result = str.match( RegExp(regex, '') )[0];
	    
	    return result.trim() + brk + wordwrap2Columns(str.substring(result.length),secondwidth);
	 
	}
	
	
	function splitCommodity()
	{ 
		
		var i=0;j=0,k=0;
		var commDesc = $("#containerCommodityDesc").val();
		var newCommDesc ="";
		var splittedString;
		var finalcommDesc="";
		newCommDesc = commDesc.split('\n')
		for(k=0;k<newCommDesc.length;k++)
		{
			if(k ==0) // first line can only be 30 characters
			{
				if(newCommDesc[k].length <= 30) {
					console.log("do nothing");
					finalcommDesc = finalcommDesc + newCommDesc[k] + '\n';
				} else {
					var firstline = wordwrapfirstline(newCommDesc[k],30,30);
					console.log("firstline= "+firstline);
					finalcommDesc = finalcommDesc + firstline+ '\n';
				}
			} else 
			{
				console.log("original="+newCommDesc[k]);
				console.log("original="+newCommDesc[k].length);
				if(newCommDesc[k].length <= 30) {
					console.log("do nothing");
					finalcommDesc = finalcommDesc + newCommDesc[k] + '\n';
				} else {
					console.log("wordwrap "+wordwrap2Columns(newCommDesc[k],30));
					finalcommDesc = finalcommDesc + wordwrap2Columns(newCommDesc[k],30)+ '\n';
				}
			}
		}
		// remove trailing '\n'
		finalcommDesc = finalcommDesc.substring(0,finalcommDesc.length-1);
		$("#containerCommodityDesc").val(finalcommDesc);
	}
	
	
	
	/*
	function applyAndSendKicker(templateId) {
		$("#kickerTemplatesDivDialog").dialog('close'); // close templates grid
		console.log ('mailtoKicker called. templateId:' + templateId);
		blockUI();
		var urlStr = _context +"/shipment/getMailto?shipmentId="+$('#shipmentId').val()+"&templateId="+templateId;
		$.ajax({
			type: "GET",
			url: urlStr,
			success: function(responseText){
				if(startsWith("mailto:",responseText)) {
					var key = "&body=";
					var start = responseText.indexOf(key) + key.length;
					var toEncode = responseText.substring(start);
					var noEncode = responseText.substring(0,start);
	 				$('#sendKickerHref').attr("href",noEncode + encodeURIComponent(toEncode));
					$('#sendKickerHref')[0].click();
				}  else {
					alert("Error getting template "+responseText);
				}
				$.unblockUI();
			},
			error: function(jqXHR,textStatus,errorThrown) {
				$.unblockUI();
				alert("Error getting template "+textStatus);
			}
		});
	}
	*/
	

	function setShipmentStopOffs() {
		createShipmentStopOffsGrid();
	}
	
	var hazardGridComplete = function() {
		console.log("hazardGridComplete");
		
		
		
	}
	
	var hazardLoadComplete = function() {
		console.log("hazardLoadComplete");
		
		var userData = $("#hazardGrid").getGridParam('userData');
		var hazardText = "?"
		var sum = "";
		
		if(userData && userData.hazardText) { 
			hazardText = userData.hazardText
			$("#hazardAddHref").text(hazardText);
		
		}
		
		if(userData) {
			sum = userData.sum;
		}
		
		//console.log("accordian="+userData.accordianText+" sum="+userData.sum);
		setAccordianTabDetails('shipmentHazardHeader', userData.accordianText);
		jQuery("#hazardGrid").footerData('set',{hazPiecesUomCode:'Total',hazWeight:sum});
		
		
	}
	
	var hazardEditorGridComplete = function() {
		console.log("hazardEditorGridComplete");
	}
	
	var hazardEditorLoadComplete = function() {
		console.log("hazardEditorLoadComplete");
		var grid = jQuery("#hazardDialogGrid"),
		ids = grid.jqGrid("getDataIDs");
		

		for (var i = 0; i < ids.length; i++) {
			 var hazardId =   jQuery("#hazardDialogGrid").getRowData( ids[i]).shipmentHazardId;
			 var unitId =   jQuery("#hazardDialogGrid").getRowData( ids[i]).unitId;
			 var seq = jQuery("#hazardDialogGrid").getRowData( ids[i]).seqNumber;
			 
			 if(hazardId) {
				 grid.jqGrid("setSelection", ids[i]);
			 }
			 var rowId = grid.getCell(ids[i], 'gridId');
			 
			 
			 if( !seq || 0 === seq.length) {
				 grid.jqGrid('editRow', rowId, false, HazardOnEdit);
			 } else { 
				 // disbale checkbox
				 $("#jqg_hazardDialogGrid_"+ids[i]).attr("disabled",true);
			 }
			 
			
		}
		
	}
	
	var HazardOnEdit=function(rowId) {
		
		
	}
	
	
	function setShipmentHazards() {
		createShipmentHazardGrid();
	}
	
	function sleep(milliseconds) {
		  var start = new Date().getTime();
		  for (var i = 0; i < 1e7; i++) {
		    if ((new Date().getTime() - start) > milliseconds){
		      break;
		    }
		  }
		}
	
	var isHazardChange = false;
	
	function openHazDialog() {
		var urlStr = _context +"/shipment/hazard/saveHazard";
		console.log('openHazDialog');
		createShipmentHazardDialogGrid();
		
		$("#hazardDialog").dialog("option", "title", 'Unassigned Hazards');
		$("#hazardDialog").dialog("option", "buttons",
				
			[{
				text : "Cancel",
				click : function() {
					if(isHazardChange)
					{
						var r = confirm("All unsaved changes will be discarded.Continue?");
						if(r){
							$("#hazardDialog").dialog("close");
						}else
							return;
					}
					else{
						$("#hazardDialog").dialog("close");
					}
				}
			},
			{
				text : "Ok",
				click : function() {
					blockUI();
					var data = [];
				    var grid = $('#hazardDialogGrid');
				    var selected = grid.jqGrid('getGridParam','selarrrow');
				    
				    for(i=0; i < selected.length;i++) {
				    	 
				    	 var item = {};
				    	 item['id'] =  selected[i];
				    	 item['unitId'] = $('#' + selected[i] + '_unitId').val(); 
				    	 data.push(item);
				    	
				    }
				    
				    
				    var jsonString = JSON.stringify(data);
				    //console.log("data="+jsonString);
				    
				    $.ajax({
						type: "POST",
						url: urlStr,
						data: jsonString,
						dataType:'json',
						beforeSend: function(xhr) {
		                    xhr.setRequestHeader("Accept", "application/json");
		                    xhr.setRequestHeader("Content-Type", "application/json");
		                },
						success: function(responseData){
							dirtyData = true;
							console.log('Sending alert ... Success');
							$.unblockUI();
							$("#hazardDialog").dialog("close");
							$("#hazardGrid").trigger('reloadGrid');
						},
						error: function(jqXHR,textStatus,errorThrown) {
							console.log('Sending alert ... Error');
							$.unblockUI();
							alert("Hazards could not be update");
							$("#hazardDialog").dialog("close");
						}
					});
					
				}
			} ]);
			
			$("#hazardDialog").dialog("open");
	}

	
	function validateInvoiceNumbers(){
		var validInvoice  = true;
		if($('#tradeCode').val()=='A'){
			if($.trim($("#fpInvoiceNbr").val()) != ""){
				$.ajax({
					type : "GET",
					url : _context +"/cas/autocomplete.do?method=searchInvoiceNoForParty&searchType=6652&term="+$('#fpInvoiceNbr').val(),						
					async : false,
					success : function(responseText) {			
						if(responseText!= null && responseText.length==1){
							if(responseText[0].invoiceArol != prepaidArol){
								if(!$('#maintainShipmentParties').is(':visible')) {
									expandPartiesDiv();
								}
								$('#fpInvoiceNbr').validationEngine('showPrompt', 'Address role of selected invoice does not match debtor address role on bill.', 'error', true);
								var position = $('#fpInvoiceNbr').position();
								window.scrollTo(position.left, position.top);
								validInvoice = false;
							}
						} 
					}
				});
			} 
			if ($.trim($("#fcInvoiceNbr").val()) != ""){
				$.ajax({
					type : "GET",
					url : _context +"/cas/autocomplete.do?method=searchInvoiceNoForParty&searchType=6652&term="+$('#fcInvoiceNbr').val(),						
					async : false,
					success : function(responseText) {			
						if(responseText!= null && responseText.length==1){
							if(responseText[0].invoiceArol != collectArol){
								if(!$('#maintainShipmentParties').is(':visible')) {
									expandPartiesDiv();
								}
								$('#fcInvoiceNbr').validationEngine('showPrompt', 'Address role of selected invoice does not match debtor address role on bill.', 'error', true);
								var position = $('#fcInvoiceNbr').position();
								window.scrollTo(position.left, position.top);
								validInvoice = false;
							}
						} 
					}
				});
			}
		}
		return validInvoice;
	}
	
	
	
	;var debtorCode = "";
var isPartyChanged = "";
var prepaidArol = "ALL";
var collectArol = "ALL";

//added against 21739
//var changeInPartiesGrid=false;

$(document).ready(
function() {
	
	debtorCode = $('#prepaidCollectCode :selected').val();

	
	$('#parties :input').change(function()
	{
		if(this.type!='checkbox')
			console.log('change');
			isPartyChanged = "Y";
	});

	/*if($("#shipmentStatusCode").val()!='CANC')
		autoBillOnchangeEventFunction();
	
	$('#isAutobill').change(function(){
		if($('#isAutobill :selected').val()=="true"){
			if($('#loadDschServiceGroupCode').val()=="CON"){
				$('#msgDiv').html('<div class="message_error">'+'Auto Bill cannot be true for the provided load and discharge service'+'</div>');
				window.scrollTo(0, 0);
				$('#isAutobill').val(false);
			}
			else if($("#freightGrid").getGridParam("reccount")==1){
				var rowData = jQuery("#freightGrid").getRowData("1");
				if($.trim($("#tariffNumber").val())=='' || rowData.tariffCommodityDescription=='' || rowData.tariffItemNumber=='' || rowData.commodityCode==''){
					$('#msgDiv').html('<div class="message_error">Tariff, Tariff Commodity Description, Item and Commodity Code are mandatory for commodity if Auto Bill indicator is Y</div>');
					window.scrollTo(0, 0);
					$('#isAutobill').val(false);
				}
				else{
					$('#msgDiv').html("");
					autoBillOnchangeEventFunction();
				}
			}
			else if($("#freightGrid").getGridParam("reccount")>1){
				$('#msgDiv').html('<div class="message_error">'+'Cannot update Auto Bill Indicator as multiple commodity lines exist'+'</div>');
				window.scrollTo(0, 0);
				$('#isAutobill').val(false);
			}
			else{
				autoBillOnchangeEventFunction();
			}
		}
		else{
			autoBillOnchangeEventFunction();
		}
	});
	
	//--------------changed after discussion with nitin----------------
	$('#autobillOptionCode').change(function()
	{
		if($('#autobillOptionCode :selected').val()=='C')
			$('#autobillTriggerCode').val('I');
	});
	
	$('#autobillTriggerCode').change(function()
	{
		if($('#autobillTriggerCode :selected').val()=='I')
			$('#autobillOptionCode').val('C');
	});*/

	
	$('#isProrate').change(function(){
				enableDisableTotalWeightAndQube();
	});
	
	$('#unitOfMeasureSourceCode').change(function(){
		//changeLabelTotalWeightAndQube();
	});
	// create parties dialog at body onload
	$("#partiesDialog").dialog({
		autoOpen : false,
		width : 587,
		modal : true,
		close : function() {
			removePartiesPopUps();
			clearPartiesForm();
			$("#parties").validationEngine('detach');
			partyOrg = "";
			partyAddr = "";
			tabSequence('#shipmentForm',true,false);
		},
		open: function()
		{
			isPartyChanged = "";
			tabSequence('#partiesDialog',false,false);
		}
	});
	
	// create parties override dialog at body onload
	$("#partiesOverrideDialog").dialog({
		autoOpen : false,
		/*open: function()
		{
			var length = $('.ui-widget-overlay').length - 1;
			$('.ui-widget-overlay').css("background", "transparent");
		},
		close: function()
		{
			var length = $('.ui-widget-overlay').length - 1;
			$('.ui-widget-overlay').css("background", "");
		},*/
		width : 300,
		modal : true
	});
	
	//
	$('#partiesAdd').click(function() {
		if (!(($("#statusCode").text()=='ISSUED')|| ($("#statusCode").text()=='CORRECTED' || isPartyAdd==false)))  {
			clearPartiesForm(); //for defect --D018588
			if(shipmentNotFound!=true)
			showAddPartyDialog();
			return false;
		}
	});
	//D026112
	$('#del_gridIdForParties').click(function(){ 

	    var checkDelFlag= true;
		var rowIDs = jQuery("#gridIdForParties").getDataIDs();
		for (var i=0;i<rowIDs.length;i=i+1)
		{ 
		var rowData=jQuery("#gridIdForParties").getRowData(rowIDs[i]);
	    // You'll get a pop-up confirmation dialog, and if you say yes,

		/// only show the message if only last party and thats Prepaid type and not override , which only happen user
		// checked "checked all" checked box
	    if (rowIDs.length ==1 && (rowData.partyTypeDescription =='Prepaid Bill To Party' || rowData.partyTypeDescription =='Collect Bill To Party')
	    	&& rowData.isCpPartyOverridden !='Yes')
			{
				checkDelFlag=false;
			}
		}
		
		if(!checkDelFlag)
		{
			$('#delmodgridIdForParties').hide();
			$('#eData').trigger('click');
			alert("No parties have been selected for removal. If no check box is available,you may only update this bill-to party.");
		}
	});
	//change D026341
	
	//console.log("No to order " + $('#isToOrderParty').attr('checked'));
	if($('#isToOrderParty').attr('checked')) {
		// do nothing
	} else {
		$('#toOrderPartyName').attr('readonly','readonly');
		console.log("readonly");
	} 
	
	$('#isToOrderParty').change(function(){
		changeEvent($('#isToOrderParty'));
		
		if($('#isToOrderParty').attr('checked')) {
			
			
			$('#toOrderPartyName').removeAttr('readonly');
		} else {
			if(toOrderPartyPopulated) {
				alert('To Order B/L Party must be deleted first');
				$('#isToOrderParty').attr('checked', true);
			} else {
				$('#toOrderPartyName').attr('readonly','readonly');
				$('#toOrderPartyName').val('');
			}
			
			
		}
		
		setPartiesHeader();
	});
	
	
	
	
	$('#partiesClear').click(function() {
		clearPartiesForm();
	});
	
	$('#prepaidCollectCode').change(function() {
				var defaultDebtor = $('#prepaidCollectCode :selected').val();
				
				if (defaultDebtor == "P"
					&& ( $('input[name="shipper\\.organizationId"]').val() == '' || 
						 $('input[name="shipper\\.addressRoleId"]').val()=='') ) {
					$('#msgDiv').html('<div class="message_error">Shipper must be specified for Prepaid payment</div>');
					window.scrollTo(0, 0);
					$('#prepaidCollectCode').val(debtorCode);
					return;
				} else if (defaultDebtor == "C"
					&& ( $('input[name="consignee\\.organizationId"]').val() == '' ||
						 $('input[name="consignee\\.addressRoleId"]').val()== '') ) {
					$('#msgDiv').html('<div class="message_error">Consignee must be specified for Collect payment</div>');
					window.scrollTo(0, 0);
					$('#prepaidCollectCode').val(debtorCode);
					return;
				} else if (defaultDebtor == "B"
					&& ( $('input[name="shipper\\.organizationId"]').val() == '' || 
						 $('input[name="consignee\\.organizationId"]').val() == '' || 
						 $('input[name="shipper\\.addressRoleId"]').val()=='' ||
						 $('input[name="consignee\\.addressRoleId"]').val()== '') ) {
					$('#msgDiv').html('<div class="message_error">Shipper and Consignee must be specified for Both payment</div>');
					window.scrollTo(0, 0);
					$('#prepaidCollectCode').val(debtorCode);
					return;
				}
				
				var queryString = $('#shipmentForm').formSerialize();
				$.ajax({
						url : _context +"/shipment/party/defaultDebtors",
						type : "POST",
						data : queryString,
						success : function(responseText) {
							showResponseMessages('msgDiv', responseText);	
							$("#gridIdForParties").trigger("reloadGrid");
						}
				});
				
				debtorCode = defaultDebtor;
				//D033651 - Disable invoice field which is not applicable
				if(defaultDebtor == "P"){
					$('#fpInvoiceNbr').attr('disabled', false);
					$('#fcInvoiceNbr').attr('disabled', true);
				} else if(defaultDebtor == "C"){
					$('#fpInvoiceNbr').attr('disabled', true);
					$('#fcInvoiceNbr').attr('disabled', false);
				} else {
					$('#fpInvoiceNbr').attr('disabled', false);
					$('#fcInvoiceNbr').attr('disabled', false);
				}
				setPartiesHeader();
			});
	//D031201: 	Alaska - Prepaid and Collect Invoice # on Maintain Billing - Parties section
	var invoiceNo = null;
	var invoiceArol = null;
	$('#fpInvoiceNbr').gatesAutocomplete({
		//minLength: 8,
		minLength: 1,
		source:_context+'/cas/autocomplete.do',
		autoSelectFirst:true,
		mustMatch:true,
	 	extraParams: {
	 		method: 'searchInvoiceNoForParty',
	 		searchType: '6652'
	 	},
		formatItem: function(data) {
			return data.invoiceNbr;
		},
		formatResult: function(data) {
			invoiceNo = data.invoiceNbr;
			invoiceArol = data.invoiceArol;
			return data.invoiceNbr;
		}, 
		select: function(data) {
			//$(this).val(data.invoiceNbr);
		},
		onBlur:function(){
			invoiceNo = null;
			invoiceArol = null;
		},
		onChange:function(){
			if(invoiceNo != null){
				$('#fpInvoiceNbr').val(invoiceNo);
				if(invoiceArol != prepaidArol){
					$('#fpInvoiceNbr').validationEngine('showPrompt', 'Address role of selected invoice does not match debtor address role on bill.', 'error', true);
					$('#fpInvoiceNbr').val("");
				}
				invoiceNo = null;
				invoiceArol = null;
			} 
			displayInvoiceLinks(false);
		}
	});
	
	$('#fcInvoiceNbr').gatesAutocomplete({
		//minLength: 8,
		minLength: 1,
		source:_context+'/cas/autocomplete.do',
		autoSelectFirst:true,
		mustMatch:true,
	 	extraParams: {
	 		method: 'searchInvoiceNoForParty',
	 		searchType: '6652'
	 	},
		formatItem: function(data) {
			return data.invoiceNbr;
		},
		formatResult: function(data) {
			invoiceNo = data.invoiceNbr;
			invoiceArol = data.invoiceArol;
			return data.invoiceNbr;
		}, 
		select: function(data) {
			//$(this).val(data.invoiceNbr);
		},
		onBlur:function(){
			invoiceNo = null;
			invoiceArol = null;
		},
		onChange:function(){
			if(invoiceNo != null){
				$('#fcInvoiceNbr').val(invoiceNo);
				if(invoiceArol != collectArol){
					$('#fcInvoiceNbr').validationEngine('showPrompt', 'Address role of selected invoice does not match debtor address role on bill.', 'error', true);
					$('#fcInvoiceNbr').val("");
				}
				invoiceNo = null;
				invoiceArol = null;
			}
			displayInvoiceLinks(false);
		}
	});
	
	$("#fpInvoiceNbr, #fcInvoiceNbr").keyup(function() {
		$(this).validationEngine('hideAll');
		if($.trim($("#fpInvoiceNbr").val()) != "" || $.trim($("#fcInvoiceNbr").val()) != ""){
			$('#prepaidCollectCode').attr('disabled', true);
		} else {
			$('#prepaidCollectCode').attr('disabled', false);
		}
	});
	
	//D031201: 	Alaska - Prepaid and Collect Invoice # on Maintain Billing - Parties section 
	/*$("#fpInvoiceNbr, #fcInvoiceNbr").change(function() {
		if(invoiceNo != null && $(this).val() == invoiceNo){
			$(this).val(invoiceNo);
			if(this.id == 'fpInvoiceNbr'){
				if(invoiceArol != prepaidArol){
					$('#fpInvoiceNbr').validationEngine('showPrompt', 'Address role of selected invoice does not match debtor address role on bill.', 'error', true);
					//alert("");
					$('#fpInvoiceNbr').val("");
				}
			} else {
				if(invoiceArol != collectArol){
					$('#fcInvoiceNbr').validationEngine('showPrompt', 'Address role of selected invoice does not match debtor address role on bill.', 'error', false);
					//alert("");
					$('#fcInvoiceNbr').val("");
				}
			}
			invoiceNo = null;
			invoiceArol = null;
		} else {
			$(this).val("");
		}
		displayInvoiceLinks(false);
	});*/
});


//--------Supporting Functions-----------------
var partiesGridComplete = function()
{
	 $('#pagerIdForParties .ui-pg-input').attr("readonly", true);
	 
	 var rowIDs = jQuery("#gridIdForParties").getDataIDs();
	 prepaidArol = "ALL";
	 collectArol = "ALL";
	 for (var i=0;i<rowIDs.length;i=i+1)
     { 
       var rowData=jQuery("#gridIdForParties").getRowData(rowIDs[i]);
       if(!($("#statusCode").text()=="ISSUED" || $("#statusCode").text()=="CORRECTED" ) ){
    	   if(isPartyDelete==false){
    		   $("div.ui-pg-div.ui-inline-del", "#gbox_gridIdForParties #"+rowIDs[i]).hide();
    	   }
    	   if ((rowData.partyTypeDescription=='Prepaid Bill To Party' || rowData.partyTypeDescription=='Collect Bill To Party') && 
    			   (rowData.isCpPartyOverridden == false || rowData.isCpPartyOverridden == 'false' || rowData.isCpPartyOverridden == '')) 	{
    		   $("div.ui-pg-div.ui-inline-del", "#gbox_gridIdForParties #"+rowIDs[i]).hide();
    		   $("input.cbox", "#gbox_gridIdForParties #"+rowIDs[i]).hide();
    	   	}
    	   
       }else{
    	   $("div.ui-pg-div.ui-inline-del", "#gbox_gridIdForParties #"+rowIDs[i]).hide();   
       }
      // alert("rowData.partyAddressCustomized="+rowData.partyAddressCustomized+ "   rowData.partyTypeDescription="+rowData.partyTypeDescription);
       if(((rowData.partyAddressCustomized == 'true') || (rowData.partyAddressCustomized == true))  ) { 
    	   $('#gridIdForParties').jqGrid('setCell', rowIDs[i], 'organizationName','','',{style: 'color : green'},'');
       } else {
    	   $('#gridIdForParties').jqGrid('setCell', rowIDs[i], 'organizationName','','',{style: 'color : black'},'');
       }
       if(rowData.orgCreditStatus== 'CASH')
	   {
	   $('#gridIdForParties').jqGrid('setCell', rowIDs[i], 'orgCreditStatus','','',{style: 'color : red'},'');
	   }else {
    	   $('#gridIdForParties').jqGrid('setCell', rowIDs[i], 'orgCreditStatus','','',{style: 'color : black'},'');
       }
       //D033925: 	MAINTAIN BILL: DEBTOR - ONE TIMER DEBTOR'S DETAIL 
       /*if($.trim($("#fpInvoiceNbr").val()) != "" || $.trim($("#fcInvoiceNbr").val()) != ""){
    	   if (rowData.partyTypeDescription=='Prepaid Bill To Party') {
    		   $("a", "#gbox_gridIdForParties #"+rowIDs[i]).parent().html("Prepaid Bill To Party");
    	   }
    	   if(rowData.partyTypeDescription=='Collect Bill To Party'){
    		   $("a", "#gbox_gridIdForParties #"+rowIDs[i]).parent().html("Collect Bill To Party");
    	   }
       }*/
       
       if (rowData.partyTypeDescription=='Prepaid Bill To Party') {
    	   prepaidArol = rowData.addressRoleId;
       } else if(rowData.partyTypeDescription=='Collect Bill To Party'){
    	   collectArol = rowData.addressRoleId;
       }
       // debtor one timer ...change background to yellow
       if (rowData.isOneTimeCustomer=='Yes') {
    	   $('#gridIdForParties').jqGrid('setRowData',rowIDs[i],false, {background:'#ffffcc'});
       }
     }
	 	//added against 21739
	 	/*if(counterPartiesGridReloaded==0){
	 		numberOfInitialRowsParties=jQuery("#gridIdForParties").jqGrid('getGridParam', 'records');
	 		counterPartiesGridReloaded++;
	 	}
	 	if(numberOfInitialRowsParties != jQuery("#gridIdForParties").jqGrid('getGridParam', 'records')){
	 		changeInParties=true;
	 	}*/
	 	//22735
	 	disablePartiesCheckBoxes();
	 	var rowStpIDs=jQuery("#stopOffsGrid").getDataIDs();
		for (var j=0;j<rowStpIDs.length;j=j+1) {
			var rowStpData=jQuery("#stopOffsGrid").getRowData(rowStpIDs[j]);
			var rowIDs = jQuery("#gridIdForParties").getDataIDs();
				for (var i=0;i<rowIDs.length;i=i+1)
				 { 
				   var id = $('#gridIdForParties').getCell(rowIDs[i], 'partySeqNo');
				   var rowData=jQuery("#gridIdForParties").getRowData(rowIDs[i]);
				   if(rowStpData.addressRoleId==rowData.addressRoleId){
					  
				   $(".ui-inline-del", "#gbox_gridIdForParties #"+rowIDs[i]).hide();
					   $('#jqg_gridIdForParties_'+id).attr("checked",false);
					   $('#jqg_gridIdForParties_'+id).hide();
					    $('#jqg_gridIdForParties_'+id).attr('disabled','disabled');
					   $('table[aria-labelledby="gbox_gridIdForParties"] tbody tr#' + rowIDs[i]).removeClass('ui-state-highlight');
				   }
				 } 
		}
	 	
	 	// D026341
	 	setToOrderPartyDisplay();
};

var toOrderPartyPopulated = false;
//D026341
//D026341: reeval, remove uncheck
function setToOrderPartyDisplay() {
	
	 
	var userData = $("#gridIdForParties").getGridParam('userData');
	
	if(userData && userData.TOORDERNAME) { 
		  toOrderPartyPopulated = true;
		  $('#toOrderPartyDisplay').html(userData.TOORDERNAME); 
		  $('#isToOrderParty').attr('checked',true);
		  $('#toOrderPartyName').attr('readonly','readonly');
		  $('#toOrderPartyName').val('');
//	} else if(toOrderPartyPopulated) {
		// It was populated so uncheck it
		//toOrderPartyPopulated = false;
		//$('#isToOrderParty').removeAttr('checked');
	//	$('#toOrderPartyName').attr('readonly','readonly');
	//	$('#toOrderPartyName').val('');
	//	$('#toOderPartyDisplay').html(''); 
	} else {
		toOrderPartyPopulated = false;
		$('#toOrderPartyDisplay').html(""); 
		
		if($('#isToOrderParty').attr('checked')) {
			$('#toOrderPartyName').removeAttr('readonly');
		} else {
			$('#toOrderPartyName').attr('readonly','readonly');
		} 

		
		
	}
	
	setPartiesHeader();
	
}

// clears the parties form
function clearPartiesForm() {
	//$("#parties").clearForm();
	$('input[name="partySeqNo"]').val('');
	$('input[name="organizationId"]').val('');
	$('input[name="organizationCode"]').val('');
	$('input[name="isOneTimeCustomer"]').val('');
	$('input[name="addressRoleId"]').val('');
	$('select[name="partyTypeCode"]').children().remove();
	$('select[name="partyTypeCode"]').append(
			"<option value=''></option>");
	$('select[name="contactId"]').children().remove();
	$('select[name="contactId"]').append("<option value=''>Select</option>");
	$('input[name="careOf"]').val('');
	$('input[name="city"]').val('');
	$('input[name="state"]').val('');
	$('input[name="zip"]').val('');
	$('input[name="countryName"]').val('');
	$('input[name="provinceName"]').val('');
	// code added start for defect --D018588
	$('input[name="organizationName"]').val('');
	$('input[name="organizationName"]').removeAttr('title');
	$('input[name="address"]').val('');
	$('input[name="address"]').removeAttr('title');
	clearContactInfo(true);
	// code added end for defect --D018588
}


function countryCodeDetailsPopulate(){
	var source= ["contactFax","contactPhone","contactCell"];
	for(var i=0;i<source.length;i++){
		var areaCode = $('input[name="'+source[i]+'AreaCode"]').val();
		var exchange =$('input[name="'+source[i]+'Exchange"]').val();
		var station = $('input[name="'+source[i]+'Station"]').val();
		var countryCode = $('input[name="'+source[i]+'CountryCode"]').val();
		if(countryCode==""&&(station!=""||exchange!=""||areaCode!=""))
		{
			var defaultCountryCode="";
			$.ajax({
				async: false,
				type : "POST",
				url : _context +"/shipment/phoneCountryCode",
				data : {
					addressRoleId : $('#addressRoleId').val()
				},
				success : function(responseText) {
					defaultCountryCode=responseText.data;
				}
			});
			$('input[name="'+source[i]+'CountryCode"]').val(defaultCountryCode);
			countryCode=defaultCountryCode;
		}
	}
}


function showAddPartyDialog() {

	if(($("#statusCode").text()=='CANC') || ($("#statusCode").text()=='ISSUED') || ($("#statusCode").text()=='CORRECTED')|| isPartyAdd==false){
		$("#partiesDialog").gatesDisable();
	}else{
		$("#partiesDialog").gatesEnable();
	$.ajax({
		url : _context +"/shipment/party/showFormAdd",
		success : function(responseText) {
			clearPartiesForm();
			$.each(responseText.partyTypeList, function(key, value) {
				$('select[name="partyTypeCode"]').append($("<option/>", {
					value : key,
					text : value
				}));
			});
			$("#partiesDialog").dialog("option", "title", 'Add Party');
			$("#partiesDialog").dialog("option", "buttons", [ {
				text : "Cancel",
				click : function() {
					if(isPartyChanged!="")
					{
						var r = confirm("All unsaved changes will be discarded.Continue?");
						if(r){
							$('#partiesMsgDiv').hide();
							$(this).dialog("close");
						}else
							return;
					}
					else{
						$('#partiesMsgDiv').hide();
						$(this).dialog("close");
					}
				}
			}, {
				text : "Ok",
				click : function() {
					if($("#statusCode").text()!='ISSD' && $("#statusCode").text()!='CORR' && (isPartyAdd)){
						countryCodeDetailsPopulate();
						addParty();
						setPartiesHeader();
					}else{
						$("#partiesDialog").dialog('close');
					}
					//added against 21739
					//changeInPartiesGrid=true;
				}
			} ]);
			
			$('#parties').validationEngine('attach');
			$("#partiesDialog").dialog('open');
			//addition start for defect DDO17159
			//$('#partyComm1').attr('checked', true);
			//$('#partyComm1').val("P");
			//addition end for defect DDO17159
		}
	});
	}
}

function showEditPartyDialog(id) {
	if( $("#statusCode").text()=='CORRECTED' || $("#statusCode").text()=='ISSUED' || isPartyUpdate==false){
		$("#partiesDialog").gatesDisable();
	}
	else{
		$("#partiesDialog").gatesEnable();
	}
	var seqNo = id.split('=')[1];
	$.ajax({
		url : _context +"/shipment/party/showPartyFormEdit",
		type : "GET",
		data : {
			partySeqNo : seqNo
		},
		success : function(responseText) {
			if(responseText.success)
			{
				clearPartiesForm();
				$.each(responseText.data.partyTypeList, function(key, value) {
					$('select[name="partyTypeCode"]').append($("<option/>", {
						value : key,
						text : value
					}));
				});
				
				$.each(responseText.data.contactList, function(key, value) {
					$('select[name="contactId"]').append($("<option/>", {
						value : key,
						text : value
					}));
				});
						
				$("#parties").loadJSON(responseText.data);
				partyOrg = responseText.data.organizationName;
				partyAddr = responseText.data.address;				
				setPartyCommMethodValue(responseText.data);
				$("#partiesDialog").dialog("option", "title", 'Edit Party');
				$("#partiesDialog").dialog("option", "buttons", [ {
					text : "Cancel",
					click : function() {
						if(isPartyChanged!="")
						{
							var r = confirm("All unsaved changes will be discarded.Continue?");
							if(r){
								$('#partiesMsgDiv').hide();
								$(this).dialog("close");
							}else
								return;
						}
						else{
							$('#partiesMsgDiv').hide();
							$(this).dialog("close");
						}
					}
				}, {
					text : "Ok",
					click : function() {
						if($("#statusCode").text()!='ISSUED' && $("#statusCode").text()!='CORRECTED' && (isPartyUpdate)){
							countryCodeDetailsPopulate();
							updateParty();
						}else{
							$("#partiesDialog").dialog('close');
						}
						//added against 21739
						//changeInPartiesGrid=true;
					}
				} ]);
				partyOrg = $('input[name="organizationName"]').val();
				partyAddr = $('input[name="address"]').val();
				$('#parties').validationEngine('attach');
				//$("#partiesDialog").dialog('open');
				//D033925: 	MAINTAIN BILL: DEBTOR - ONE TIMER DEBTOR'S DETAIL 
				var disablePartyEdit = false;
				if($.trim($("#fpInvoiceNbr").val()) != "" || $.trim($("#fcInvoiceNbr").val()) != ""){
		    	   if ($.trim($('#partyTypeCode').text())=='Prepaid Bill To Party' || $.trim($('#partyTypeCode').text())=='Collect Bill To Party') {
		    		   disablePartyEdit = true;
		    	   }
				}
				
				//D029864
				if(($("#statusCode").text()=='CANC') ){
					$("#partiesDialog").gatesDisable();
					$("#partiesDialog").dialog('open');
				}
				else if(($("#statusCode").text()=='ISSUED') || ($("#statusCode").text()=='CORRECTED') || isPartyUpdate==false || disablePartyEdit){
					$("#partiesDialog").gatesDisable();
					$("#partiesDialog").dialog('open');
				}
				else
					{
						$("#partiesDialog").gatesEnable();
						$("#partiesDialog").dialog('open');
					}
				
			
			}
		}
	});
}

function addParty() {
		var validateFields= $("#parties").validationEngine('validate') ; // added For Defect D017161
		//D018663: 	Contact not mandatory for billing
		//var validateFields1= validateContactDetails(); 					// added For Defect D017161
		
		if(validateFields){ // Changes done for Defect D017161
			$('form[id="parties"] input[name="address"]').attr("disabled",false);
			$('form[id="parties"] input[name="city"]').attr("disabled",false);
			$('form[id="parties"] input[name="state"]').attr("disabled",false);
			$('form[id="parties"] input[name="zip"]').attr("disabled",false);
			$('form[id="parties"] input[name="organizationName"]').attr("disabled",false);
		var queryString = $('#parties').formSerialize();
		$.ajax({
			url : _context +"/shipment/party/addParty",
			type : "POST",
			data : queryString,
			success : function(responseText) {
				if (responseText.success == true) {
					$("#gridIdForParties").trigger("reloadGrid");
					$("#partiesDialog").dialog('close');
					$('form[id="parties"] input[name="address"]').attr("disabled",true);
					$('form[id="parties"] input[name="city"]').attr("disabled",true);
					$('form[id="parties"] input[name="state"]').attr("disabled",true);
					$('form[id="parties"] input[name="zip"]').attr("disabled",true);
					$('form[id="parties"] input[name="organizationName"]').attr("disabled",true);
				} else 
					//alert(responseText.messages.error[0]);
					showResponseMessages("partiesMsgDiv", responseText);
			}
		});
	} else
		return;
}

function updateParty() {
	
	var validateFields= $("#parties").validationEngine('validate') ;
	//D018663: 	Contact not mandatory for billing
	//var validateFields1= validateContactDetails();
	
	if(validateFields){ // Changes done for Defect D017161
		
		var queryString = $('#parties').formSerialize();
		var selectedParty = $('select[name="partyTypeCode"]').selected().val();
		var relationshipTypeCode = "";
		var orgAroleId = "";
		
		if(selectedParty=='20')
		{
			relationshipTypeCode = "04";
			orgAroleId = $('input[name="shipper\\.addressRoleId"]').val();
		}
		else if(selectedParty=='30')
		{
			relationshipTypeCode = "12";
			orgAroleId = $('input[name="shipper\\.addressRoleId"]').val();
		}
		else if(selectedParty=='21')
		{
			relationshipTypeCode = "04";
			orgAroleId = $('input[name="consignee\\.addressRoleId"]').val();
		}
		else if(selectedParty=='22')
		{
			relationshipTypeCode = "02";
			orgAroleId = $('input[name="consignee\\.addressRoleId"]').val();
		}
		
		if(relationshipTypeCode!="")
		{
			$.ajax({
				url : _context +"/shipment/party/validateOverrideUpdate?relationshipTypeCode="
						+relationshipTypeCode+"&orgAroleId="+orgAroleId
						+"&tradeCode="+$('#tradeCode').val()+"&tradeType="+domesticForeignIndicator,
				data : queryString,
				type : "POST",
				success : function(responseTextValidate) {
					
					if(responseTextValidate=="N")
					{
						updatePartyConfirm(queryString, "N", relationshipTypeCode, orgAroleId);
					}
					else
					{
						if(responseTextValidate=="OD")
							$("#partiesOverrideDialog").dialog("option", "buttons", [ {
								text : "Override",
								click : function() {
									updatePartyConfirm(queryString, "O", relationshipTypeCode, orgAroleId);
									$("#partiesOverrideDialog").dialog("close");
								}
							}, {
								text : "Default",
								click : function() {
									updatePartyConfirm(queryString, "D", relationshipTypeCode, orgAroleId);
									$("#partiesOverrideDialog").dialog("close");
								}
							},{
								text : "Cancel",
								click : function() {
									$("#partiesOverrideDialog").dialog('close');
								}
							} ]);
						else if(responseTextValidate=="O")
							$("#partiesOverrideDialog").dialog("option", "buttons", [ {
								text : "Override",
								click : function() {
									updatePartyConfirm(queryString, "O", relationshipTypeCode, orgAroleId);
									$("#partiesOverrideDialog").dialog("close");
									$('#partiesMsgDiv').hide();
								}
							}, {
								text : "Cancel",
								click : function() {
									$("#partiesOverrideDialog").dialog('close');
								}
							} ]);
						
						$("#partiesOverrideDialog").dialog().parents(".ui-dialog").find(".ui-dialog-titlebar").hide(); 
						$("#partiesOverrideDialog").dialog('open');
					}
				}
			});
		}
		else
			updatePartyConfirm(queryString, "N", relationshipTypeCode, orgAroleId);
	}
	else
		return false;
}

function updatePartyConfirm(queryString, confirm, relationshipTypeCode, orgAroleId)
{
	$.ajax({
		url : _context +"/shipment/party/updateParty",
		type : "POST",
		data : queryString+"&confirm="+confirm+"&relationshipTypeCode="+relationshipTypeCode+"&orgAroleId="+orgAroleId+"&tradeCode="+$('#tradeCode').val(),
		success : function(responseText) {
			if (responseText.success == true) {
				$("#gridIdForParties").trigger("reloadGrid");
				$("#partiesDialog").dialog('close');
				showResponseMessages("msgDiv", responseText);
				$('#partiesMsgDiv').hide();
			}
			else 
				//alert(responseText.messages.error[0]);
				showResponseMessages("partiesMsgDiv", responseText);
		}
	});
}

function validateContactDetails()
{
	var isValid = true;
/*	if($('input[name="contact"]').val()==''){
		$('input[name="contact"]').validationEngine('showPrompt', 'Please provide a contact name', 'error', true);
		isValid = false;
	}
	if(!$('#partyComm1').attr('checked') && !$('#partyComm2').attr('checked') && !$('#partyComm3').attr('checked') && !$('#partyComm4').attr('checked'))
		{
			$("#partyComm1").validationEngine('showPrompt', 'Please select a communication mode', 'error', true);
			isValid = false;
		}*/
	if($('input[name="contact"]').val()!='' && $('select[name="contactId"] :selected').val()=='' && 
			!$('#partyComm1').attr('checked') && !$('#partyComm2').attr('checked') && !$('#partyComm3').attr('checked') && !$('#partyComm4').attr('checked'))
	{
		//$("#partyComm1").validationEngine('showPrompt', 'Please select a communication mode', 'error', true);
		isValid = true;
	}
	/*if($('input[name="contact"]').val()!='')
	{*/ // Changes done for Defect D017161
	
		else if($('#partyComm1').attr('checked') && $('input[name="contactPhoneCountryCode"]').val()=='' && $('input[name="contactPhoneAreaCode"]').val()=='' && $('input[name="contactPhoneExchange"]').val()=='' && $('input[name="contactPhoneStation"]').val()=='' && $('input[name="contactPhoneExtension"]').val()=='')
		{
			$('#partyComm1').validationEngine('showPrompt', 'Preferred communication (Phone) cannot be empty', 'error', true);
			isValid = false;
		}
		else if($('#partyComm2').attr('checked') && $('input[name="contactCellCountryCode"]').val()=='' && $('input[name="contactCellAreaCode"]').val()=='' && $('input[name="contactCellExchange"]').val()=='' && $('input[name="contactCellStation"]').val()=='' && $('input[name="contactCellExtension"]').val()=='')
		{
			$('#partyComm2').validationEngine('showPrompt', 'Preferred communication (Cell) cannot be empty', 'error', true);
			isValid = false;
		}
		else if($('#partyComm3').attr('checked') && $('input[name="contactFaxCountryCode"]').val()=='' && $('input[name="contactFaxAreaCode"]').val()=='' && $('input[name="contactFaxExchange"]').val()=='' && $('input[name="contactFaxStation"]').val()=='' && $('input[name="contactFaxExtension"]').val()=='')
		{
			$('#partyComm3').validationEngine('showPrompt', 'Preferred communication (Fax) cannot be empty', 'error', true);
			isValid = false;
		}
		else if($('#partyComm4').attr('checked') && $('input[name="contactEmailAddress"]').val()=='')
		{
			$('#partyComm4').validationEngine('showPrompt', 'Preferred communication (Email) cannot be empty', 'error', 'topRight', true);
			isValid = false;
		}
		
		if(!validatePhoneNo('contactPhone'))
			isValid = false;
		if(!validatePhoneNo('contactCell'))
			isValid = false;
		if(!validatePhoneNo('contactFax'))
			isValid = false;
	/*}*/ // Changes done for Defect D017161
	
	return isValid;
}

function validatePhoneNo(namePrefix)
{
	if($('input[name="'+namePrefix+'CountryCode"]').val()=='' && $('input[name="'+namePrefix+'AreaCode"]').val()=='' && $('input[name="'+namePrefix+'Exchange"]').val()=='' && $('input[name="'+namePrefix+'Station"]').val()=='' && $('input[name="'+namePrefix+'Extension"]').val()=='')
		return true;
	else
	{
		if(!validateForPositiveIntegers($('input[name="'+namePrefix+'CountryCode"]').val()))
		{
			$('input[name="'+namePrefix+'CountryCode"]').validationEngine('showPrompt', 'Please enter only numbers', 'error', 'topRight', true);
			return false;
		}
		else if(!validateForPositiveIntegers($('input[name="'+namePrefix+'AreaCode"]').val()))
		{
			$('input[name="'+namePrefix+'AreaCode"]').validationEngine('showPrompt', 'Please enter only numbers', 'error', 'topRight', true);
			return false;
		}
		else if(!validateForPositiveIntegers($('input[name="'+namePrefix+'Station"]').val()))
		{
			$('input[name="'+namePrefix+'Station"]').validationEngine('showPrompt', 'Please enter only numbers', 'error', 'topRight', true);
			return false;
		}
		else if(!validateForPositiveIntegers($('input[name="'+namePrefix+'Exchange"]').val()))
		{
			$('input[name="'+namePrefix+'Exchange"]').validationEngine('showPrompt', 'Please enter only numbers', 'error', 'topRight', true);
			return false;
		}
		else if($('input[name="'+namePrefix+'Extension"]').val()!='' && 
				!validateForPositiveIntegers($('input[name="'+namePrefix+'Extension"]').val()))
		{
			$('input[name="'+namePrefix+'Extension"]').validationEngine('showPrompt', 'Please enter only numbers', 'error', 'topRight', true);
		}
		else if($('input[name="'+namePrefix+'CountryCode"]').val()=='')
		{
			$('input[name="'+namePrefix+'CountryCode"]').validationEngine('showPrompt', 'Please enter country code', 'error', 'topRight', true);
			return false;
		}
		else if($('input[name="'+namePrefix+'AreaCode"]').val()=='')
		{
			$('input[name="'+namePrefix+'AreaCode"]').validationEngine('showPrompt', 'Please enter area code', 'error', 'topRight', true);
			return false;
		}
		else if($('input[name="'+namePrefix+'Exchange"]').val()=='')
		{
			$('input[name="'+namePrefix+'Exchange"]').validationEngine('showPrompt', 'Please enter exchange code', 'error', 'topRight', true);
			return false;
		}
		else if($('input[name="'+namePrefix+'Station"]').val()=='')
		{
			$('input[name="'+namePrefix+'Station"]').validationEngine('showPrompt', 'Please enter station code', 'error', 'topRight', true);
			return false;
		}
		
		if($('input[name="'+namePrefix+'CountryCode"]').val()=='01' || $('input[name="'+namePrefix+'CountryCode"]').val()=='1')
		{
			if($('input[name="'+namePrefix+'AreaCode"]').val().length!=3)
			{
				$('input[name="'+namePrefix+'AreaCode"]').validationEngine('showPrompt', 'Area code must be of 3 digits', 'error', 'topRight', true);
				return false;
			}
			else if($('input[name="'+namePrefix+'Exchange"]').val().length!=3)
			{
				$('input[name="'+namePrefix+'Exchange"]').validationEngine('showPrompt', 'Exchange must be of 3 digits', 'error', 'topRight', true);
				return false;
			}
			else if($('input[name="'+namePrefix+'Station"]').val().length!=4)
			{
				$('input[name="'+namePrefix+'Station"]').validationEngine('showPrompt', 'Station code must be of 4 digits', 'error', 'topRight', true);
				return false;
			}
			else
				return true;
		}
		else
		{
			if($('input[name="'+namePrefix+'AreaCode"]').val().length<2)
			{
				$('input[name="'+namePrefix+'AreaCode"]').validationEngine('showPrompt', 'Area code must be of 2-4 digits', 'error', 'topRight', true);
				return false;
			}
			else if($('input[name="'+namePrefix+'Exchange"]').val().length<3)
			{
				$('input[name="'+namePrefix+'Exchange"]').validationEngine('showPrompt', 'Exchange must be of 3-4 digits', 'error', 'topRight', true);
				return false;
			}
			else if($('input[name="'+namePrefix+'Station"]').val().length!=4)
			{
				$('input[name="'+namePrefix+'Station"]').validationEngine('showPrompt', 'Station code must be of 4 digits', 'error', 'topRight', true);
				return false;
			}
			else
				return true;
		}
	}
}

function removePartiesPopUps() {
	$("#parties").validationEngine('hideAll');
}

function setPartyCommMethodValue(party){
	if(party.communicationMethodCode=='P'){
		$('#partyComm1').attr('checked', true);
		$('#partyComm1').val("P");
	}
	else if(party.communicationMethodCode=='C'){
		$('#partyComm2').attr('checked', true);
		$('#partyComm2').val("C");
	}
	else if(party.communicationMethodCode=='F'){
		$('#partyComm3').attr('checked', true);
		$('#partyComm3').val("F");
	}
	else if(party.communicationMethodCode=='E'){
		$('#partyComm4').attr('checked', true);
		$('#partyComm4').val("E");
	}
}

function autoBillOnchangeEventFunction()
{
	if($('#isAutobill :selected').val()==false || $('#isAutobill :selected').val()=='false')
	{
		//$('#autobillOptionCode').val('');
		//$('#autobillOptionCode').attr("disabled", true);
		$('#autobillTriggerCode').val('');
		$('#autobillTriggerCode').attr("disabled", true);
	}
	else
	{
		$('#autobillOptionCode').attr("disabled", false);
		$('#autobillTriggerCode').attr("disabled", false);
	}
}

function setAutobill(){
	$.ajax({
		url : _context +"/shipment/party/setAutobill",
		data : {
			isAutoBill : $('#isAutobill :selected').val()
		}
	});
}

function setPartiesHeader()
{
	var orderBLPresent = false;
	
	var partyHeader='';
	
	if($('#isToOrderParty').attr('checked')) 
	{
		//setAccordianTabDetails('partiesHeader', ' - '+$("#prepaidCollectCode option:selected").text()+ ' | ' + 'To Order B/L' );
		partyHeader =' | <font color="red">To Order B/L</font>';
	}
	createShipmentPartieGrid();
	//$("#gridIdForParties").trigger("reloadGrid");
	var rowIDs = jQuery("#gridIdForParties").getDataIDs();
	var cash=false;
	var deliveryPartyCount = 0;
	for (var i=0;i<rowIDs.length;i=i+1)
		{ 
		var rowData=jQuery("#gridIdForParties").getRowData(rowIDs[i]);
		 if(rowData.orgCreditStatus=='CASH')
			  {
			  cash=true;
			  }
		 if(rowData.totalDeliveryPartyCount != null && rowData.totalDeliveryPartyCount != 0){
			 deliveryPartyCount = rowData.totalDeliveryPartyCount;
		 }
		}
		
	if(cash)
		{
			var status='<font color="red">CASH</font>';
			partyHeader=partyHeader+' | '+status;
		}
	if(deliveryPartyCount != 0){
		partyHeader = ' | Delivery ('+deliveryPartyCount+') '+partyHeader;
	}
	if($('#prepaidCollectCode :selected').val()!='')
			setAccordianTabDetails('partiesHeader', ' - '+$("#prepaidCollectCode option:selected").text()+ partyHeader);
		else
			setAccordianTabDetails('partiesHeader', ''+ partyHeader);
			
		
}

function validatePartiesSectionOnSave()
{
	var isValid = true;
		if($('#prepaidCollectCode :selected').val()=='' || $('#prepaidCollectCode :selected').val()==null )
		{
			if(!$('#maintainShipmentParties').is(':visible'))
				expandPartiesDiv();
			$('#prepaidCollectCode').validationEngine('showPrompt', 'Debtor is required', 'error', 'topRight', true);
			isValid = false;
		}

		if($('#isToOrderParty').attr('checked')) {
			if($('#toOrderPartyName').val() == '' && !toOrderPartyPopulated) {
				if(!$('#maintainShipmentParties').is(':visible')) {
					expandPartiesDiv();
				}
				$('#isToOrderParty').validationEngine('showPrompt', 'To Order B/L Party is required for a To Order B/L. Enter name or select a To Order B/L Party address role.', 'error', 'topRight', true);
				isValid = false; 
			}
			
		}
		
/*	if($('#totalWeight').val()=='' || $('#totalWeight').val()==null )
	{
		if($('#isProrate :selected').val()=='Y'){
			if(!$('#maintainShipmentParties').is(':visible'))
				expandPartiesDiv();
			$('#totalWeight').validationEngine('showPrompt', 'Total Weight is required', 'error', 'topRight', true);
			isValid = false;
		}
		
	}else{
		if(parseFloat($('#totalWeight').val())<=0.0){
			if($('#isProrate :selected').val()=='Y'){
			if(!$('#maintainShipmentParties').is(':visible'))
				expandPartiesDiv();
		$('#totalWeight').validationEngine('showPrompt', 'Total Weight should be greater than 0', 'error', 'topRight', true);
		isValid = false;
		}
		}
	}
		if($('#totalCube').val()=='' || $('#totalCube').val()==null )
		{
			if($('#isProrate :selected').val()=='Y'){
				if(!$('#maintainShipmentParties').is(':visible'))
					expandPartiesDiv();
			$('#totalCube').validationEngine('showPrompt', 'Total Cube is required', 'error', 'topRight', true);
			isValid = false;
		}
		}else{
			if(parseFloat($('#totalCube').val())<=0.0){
				if($('#isProrate :selected').val()=='Y'){
				if(!$('#maintainShipmentParties').is(':visible'))
					expandPartiesDiv();
			$('#totalCube').validationEngine('showPrompt', 'Total Cube should be greater than 0', 'error', 'topRight', true);
			isValid = false;
			}
			}
		}*/
	
	
	//-------------- Changed after discussion with nitin not according to UI specs-------
	/*if($('#autobillOptionCode :selected').val()=='C' && $('#autobillTriggerCode :selected').val()!='I')
	{
		expandPartiesDiv();
		$('#autobillTriggerCode').validationEngine('showPrompt', 'Trigger event must be Ingated when Autobill option is Container', 'error', 'topRight', true);
		isValid = false;
	}
	else if($('#autobillOptionCode :selected').val()!='C' && $('#autobillTriggerCode :selected').val()=='I')
	{
		if(!$('#maintainShipmentParties').is(':visible'))
			expandPartiesDiv();
		$('#autobillOptionCode').validationEngine('showPrompt', 'Autobill option must be container when trigger event is Ingated', 'error', 'topRight', true);
		isValid = false;
	}
	
	var regexp = '^[a-zA-z0-9]+$';
	var re = new RegExp(regexp);
	
	if($('#secondaryNotifyScacCode1').val()!='')
	{
		if(!re.test($('#secondaryNotifyScacCode1').val()))
		{
			if(!$('#maintainShipmentParties').is(':visible'))
				expandPartiesDiv();
			$('#secondaryNotifyScacCode1').validationEngine('showPrompt', 'Only alphanumeric characters allowed', 'error', 'topRight', true);
			isValid = false;
		}
	}
	
	if($('#secondaryNotifyScacCode2').val()!='')
	{
		if(!re.test($('#secondaryNotifyScacCode2').val()))
		{
			if(!$('#maintainShipmentParties').is(':visible'))
				expandPartiesDiv();
			$('#secondaryNotifyScacCode2').validationEngine('showPrompt', 'Only alphanumeric characters allowed', 'error', 'topRight', true);
			isValid = false;
		}
	}
	*/
	return isValid;
}

function validateForPositiveIntegers(value) {
	var re = new RegExp("^[0-9]+$");
	if (value<=0) {
		return false;
	} else if (!re.test(value)) {
		return false;
	} else {
		return true;
	}
}

function expandPartiesDiv()
{
	collapseAll();
	$('.ui-accordion-header.ui-helper-reset.ui-state-default.ui-corner-all')[1].className
	= "ui-accordion-header ui-helper-reset ui-state-active ui-corner-top";
	$('.ui-accordion-header.ui-helper-reset.ui-state-active.ui-corner-top span').removeClass('ui-icon-triangle-1-e')
	 .addClass('ui-icon-triangle-1-s');
	$('#maintainShipmentParties').css('display', 'block');
	window.scrollTo(0, 0);
}

function enableDisableTotalWeightAndQube(){	
	var prorateValue= $('#isProrate :selected').val();
	if(prorateValue=='N'){
		$('#totalWeight').attr('disabled', true);
		$('#totalCube').attr('disabled', true);
	}else{
		$('#totalWeight').attr('disabled', false);
		$('#totalCube').attr('disabled', false);
	}
}

function changeLabelTotalWeightAndQube(){
	var measureSource= $('#unitOfMeasureSourceCode :selected').val();
	var totalWeightValue= $('#totalWeight').val();
	var totalCubeValue= $('#totalCube').val();
	if(totalWeightValue!="" &&totalCubeValue!="")
		{
		//Defect# D026701...Begin
		//$('#totalWeight').val($('#netWeight').val());
		//$('#totalCube').val($('#cube').val());
		//Defect# D026701...End
	if(measureSource=='M'){
		document.getElementById("totalWeightLBS").style.display = "none";
		document.getElementById("totalWeightKGS").style.display = "inline";
		document.getElementById("totalCubeFT").style.display = "none";
		document.getElementById("totalCubeM").style.display = "inline";
		//$('#totalWeightLBS').attr('hidden', true);
		//$('#totalWeightKGS').attr('hidden', false);
		//$('#totalCubeFT').attr('hidden', true);
		//$('#totalCubeM').attr('hidden', false);
		$('#totalCube').attr('maxlength', '6');
	}else if(measureSource=='I'){
		document.getElementById("totalWeightLBS").style.display = "inline";
		document.getElementById("totalWeightKGS").style.display = "none";
		document.getElementById("totalCubeFT").style.display = "inline";
		document.getElementById("totalCubeM").style.display = "none";
		/*$('#totalWeightLBS').attr('hidden', false);
		$('#totalWeightKGS').attr('hidden', true);
		$('#totalCubeFT').attr('hidden', false);
		$('#totalCubeM').attr('hidden', true);*/
		$('#totalCube').attr('maxlength', '7');
	}
	//add else block if measurement source is other then M or I in future
		}
	//this else block get executed when no value is present
	else
		{
		document.getElementById("totalWeight").style.display = "none";
		document.getElementById("totalWeightLBS").style.display = "none";
		document.getElementById("totalWeightKGS").style.display = "none";
		document.getElementById("totalCube").style.display = "none";
		document.getElementById("totalCubeFT").style.display = "none";
		document.getElementById("totalCubeM").style.display = "none";
		}
		
}

function displayOnHoldOrNot(holdCount){	
	var holdCount = $("#holdGrid").getGridParam("reccount"); // for Defect -- DD017560
	if(holdCount > 0){
		if($('#hiddenonHoldLink').val()=="true")
			$('#onHoldLink').html(" - ON hold ");
	}else{
		$('#onHoldLink').html("");
	}
}

function displayBillOfLading(billOfLading1){
	if(billOfLading1!="" || billOfLading1!=undefined){
		billOfLading = billOfLading1;
	}else{
	  billOfLading="Bill Of Lading";
	}
	 var tradeTypeCode=$("#tradeTypeCode").val();
	 if(tradeTypeCode!=''){
		
					
				
					$('#billOfLadingLink').html("<a href=\"javascript:shipmentHeaderLink('/shipmentPrntOptnsOverride/getPrintOptionOverride');\">"+billOfLading+"</a>");
					 $('#billOfLadingLink').css('color','blue');	
					 $('#billOfLadingLink').css('text-decoration','underline');
					 $('#billOfLadingLink').css('font-size','8');
					$("#gridIdForParties").trigger("reloadGrid");
				
	
	 //if( $('#statusCode').text() !='ISSUED' && $('#statusCode').text() !='CORRECTED' && isPrintoverrideButtonEnable==true){
		 
	 /*}else{
		 $('#billOfLadingLink').html(billOfLading);
	 }*/
	 
	 }else{
		 clearBillOfLadingHyperlink();
	 }
}
//D031201: 	Alaska - Prepaid and Collect Invoice # on Maintain Billing - Parties section 
function displayInvoiceLinks(enable){
	if($('#tradeCode').val() == 'A') {
		var prepaidInvoiceLabel = "Prepaid Invoice #";
		var collectInvoiceLabel = "Collect Invoice #";
		if(enable && $.trim($("#fpInvoiceNbr").val()) != ""){
			$('#prepaidInvoiceNbrLbl').html("<a style=\"font-size: 8pt;font-weight: bold;color: #0202FF;text-decoration: underline;text-align: right;line-height:25px;height: 29px;\" href=\"javascript:openInvoiceScreen('prepaid');\">"+prepaidInvoiceLabel+"</a>");
		} else{
			$('#prepaidInvoiceNbrLbl').html(prepaidInvoiceLabel);
		}
		if(enable && $.trim($("#fcInvoiceNbr").val()) != ""){
			$('#collectInvoiceNbrLbl').html("<a style=\"font-size: 8pt;font-weight: bold;color: #0202FF;text-decoration: underline;text-align: right;line-height:25px;height: 29px;\" href=\"javascript:openInvoiceScreen('collect');\">"+collectInvoiceLabel+"</a>");
		} else {
			$('#collectInvoiceNbrLbl').html(collectInvoiceLabel);
		}
		//D031445
		if($('#statusCode').text()!="CORRECTED" && $('#statusCode').text()!="ISSUED"){
			//D033651 - Disable invoice field which is not applicable
			if($('#prepaidCollectCode :selected').val() == "P"){
				$('#fpInvoiceNbr').attr('disabled', false);
				$('#fcInvoiceNbr').attr('disabled', true);
			} else if($('#prepaidCollectCode :selected').val() == "C"){
				$('#fpInvoiceNbr').attr('disabled', true);
				$('#fcInvoiceNbr').attr('disabled', false);
			} else {
				$('#fpInvoiceNbr').attr('disabled', false);
				$('#fcInvoiceNbr').attr('disabled', false);
			}
			if($.trim($("#fpInvoiceNbr").val()) != "" || $.trim($("#fcInvoiceNbr").val()) != ""){
				$('#prepaidCollectCode').attr('disabled', true);
			} else {
				$('#prepaidCollectCode').attr('disabled', false);
			}
		}
	}
}

function openInvoiceScreen(pc){
    //D031445
	var url = "/cas/freightInvoiceAssignmentQueueSearch.do";
	if(pc == "prepaid"){
		url = url +"?invoiceNbr=" + $("#fpInvoiceNbr").val();
	} else if (pc == "collect"){
		url = url +"?invoiceNbr=" + $("#fcInvoiceNbr").val();
	}
	document.location.href=_context + url;
}

function clearBillOfLadingHyperlink(){
	var billOfLading="Bill Of Lading";
	 $('#billOfLadingLink').html(billOfLading);
	 $('#billOfLadingLink').css('color','Black');	
	 $('#billOfLadingLink').css('text-decoration','none');
	 $('#billOfLadingLink').css('font-size','8');
}
function hideLablesForTotalWeightAndCube(){
	$('#totalWeightLBS').attr('hidden', true);
	$('#totalWeightKGS').attr('hidden', true);
	$('#totalCubeFT').attr('hidden', true);
	$('#totalCubeM').attr('hidden', true);
}

function showHideLableAsPerValues(){
	hideLablesForTotalWeightAndCube();
	var totalWeightValue= $('#totalWeight').val();
	var totalCubeValue= $('#totalCube').val();
	
	var valueExistWeight=true;
	var valueExistCube=true;
	if((totalWeightValue ==null || totalWeightValue=='' || totalWeightValue=='0' || totalWeightValue=='0.0' || totalWeightValue=='0.00' || totalWeightValue=='0.000')) {
		valueExistWeight=false;
		//$('#totalWeight').attr('hidden', true);
		document.getElementById("totalWeight").style.display = "none";
		document.getElementById("totalWeightLBS").style.display = "none";
		document.getElementById("totalWeightKGS").style.display = "none";
	}else{
		//$('#totalWeight').attr('hidden', false);
		document.getElementById("totalWeight").style.display = "inline";
		
	}
	if((totalCubeValue==null || totalCubeValue=='' || totalCubeValue=='0' || totalCubeValue=='0.0' || totalCubeValue=='0.00' || totalCubeValue=='0.000')){
		valueExistCube=false;
		//$('#totalCube').attr('hidden', true);
		document.getElementById("totalCube").style.display = "none";
		document.getElementById("totalCubeFT").style.display = "none";
		document.getElementById("totalCubeM").style.display = "none";
	}else{
		//$('#totalCube').attr('hidden', false);
		document.getElementById("totalCube").style.display = "inline";
	}
	if(valueExistCube || valueExistWeight){
		changeLabelTotalWeightAndQube();
	}
		
}
function resetShipmentParties(){
	hideLablesForTotalWeightAndCube();
	clearBillOfLadingHyperlink();
}
//22735
function disablePartiesCheckBoxes(){
	if($("#statusCode").text()=="ISSUED" || $("#statusCode").text()=="CORRECTED" ){
	   //disable checkboxes
	   $("#cb_gridIdForParties").attr('disabled',true);
	   $("[id^=jqg_gridIdForParties]").attr('disabled',true);
	}
};function createShipmentPartieGrid(){
	//$('#maintainShipmentParties').block({ message: "Loading Shipment Party ..." });
	// party grid config
	var colNames = [ 'Id','Type Code', '','Type', 'One Time Customer',
			'Organization Name','C/O Org Name', 'Address','Province', 'Country', 'Override', 'Cash',
			'', '', '' ];
	var colModel = [ {
		name : 'partySeqNo', 
		index : 'partySeqNo',
		hidden : true
	}, {
		name : 'partyTypeCode',
		index : 'partyTypeCode',
		hidden : true
	}, {
		name : 'totalDeliveryPartyCount',
		index : 'totalDeliveryPartyCount',
		hidden : true
	},{
		name : 'partyTypeDescription',
		index : 'partyTypeDescription',
		width : 150,
		formatter : ('showlink'),
		formatoptions : {
			baseLinkUrl : "javascript:",
			showAction : "showEditPartyDialog('",
			addParam : "');"
		}
	}, {
		name : 'isOneTimeCustomer',
		index : 'isOneTimeCustomer',
		width : 70,
		formatter : 'oneTimeViewFormatter'
	}, {
		name : 'organizationName',
		index : 'organizationName',
		width : 250
	}, {
		name : 'careOf',
		index : 'careOf',
		width : 120
	}, {
		name : 'address',
		index : 'address',
		width : 250
	},{
		name : 'provinceName',
		index : 'provinceName',
		width : 50	
	},{
		name : 'countryName',
		index : 'countryName',
		width : 50	
	}, {
		name : 'isCpPartyOverridden',
		index : 'isCpPartyOverridden',
		width : 70,
		formatter : 'overrideViewFormatter' // Changed for Defect D018129
	}, {
		name : 'orgCreditStatus',
		index : 'orgCreditStatus',
		width : 70
	}, {
		name : 'partyAddressCustomized',
		index : 'partyAddressCustomized',
		hidden : true
	}, {
		name : 'addressRoleId',
		index : 'addressRoleId',
		hidden : true
	}, {
		name : 'actions',
		index : 'actions',
		width : 70,
		hidden : true,
		formatter : 'actions',
		formatoptions : {
			keys : true,
			editbutton : false,
			delbutton : true
			/*delOptions : {
				delData : {
					debtor : defaultDebtor
				}
			}*/
		}
	} ];
	
	jQuery.extend($.fn.fmatter,
			{
				creditViewFormatter : function(cellvalue,
						options, rowdata) {
					if (cellvalue == 'Y'
							|| cellvalue == 'true' || cellvalue == true)
						return "Yes";
					else if (rowdata.partyTypeDescription!='Also Notify Party'
						&& rowdata.partyTypeDescription!='To Order B/L Party' &&
							(cellvalue == 'N'
							|| cellvalue == 'false' || cellvalue == false))
						return "No";
					else
						return "";
				},
				//Added start for defect --D018129
				overrideViewFormatter : function(cellvalue,
						options, rowdata) {
					if (cellvalue == true
							|| cellvalue == 'true'|| cellvalue == 'Y')
						return "Yes";
					/*else if (rowdata.partyTypeDescription!='Also Notify Party'
						&& rowdata.partyTypeDescription!='To Order B/L Party' &&
							(cellvalue == false
							|| cellvalue == 'false' || cellvalue == 'N'))
						return "No";*/
					else
						return "";
				},
				//Added end for defect --D018129
				oneTimeViewFormatter : function(cellvalue,
						options, rowdata) {
					if (cellvalue == 'Y'
							|| cellvalue == 'true' || cellvalue == true)
						return "Yes";
					else if (cellvalue == 'N'
							|| cellvalue == 'false' || cellvalue == false)
						return "No";
					else
						return "";
				},
				formatLink : function(cellvalue,
						options, rowdata) {
						return cellvalue;
				}
			});

	var jsonReader = {
		root : "rows",
		page : "page",
		total : "total",
		records : "records",
		cell : "cell",
		repeatitems : false,
		id : "partySeqNo"
	};

	var partiesDelData = {
		shipperArolId : function() { return $('input[name="shipper\\.addressRoleId"]').val(); },
		consigneeArolId : function() { return $('input[name="consignee\\.addressRoleId"]').val(); },
		tradecode : function() { return $('#tradeCode').val(); }
	};

	createGrid("gridIdForParties", // grid id for party
	"pagerIdForParties", // page id for party
	_context+'/shipment/party/load', // geturl
	'', // addurl
	'', // edit url
	'',
	_context+'/shipment/party/delete',// delete selected URL
	colNames, colModel, "Parties",// caption
	83,// height
	3,// row num
	[ 3, 6, 9 ],// row list
	true,// multiselect
	true,// multidelete
	false,// load once
	true, // read only grid
	jsonReader, // json reader
	true, // hide edit
	true, // hide delete
	true, // autowidth
	true, // rownumbers
	true, // hide custom add row
	false,// hide pager row
	null,// custom edit method
	partiesGridComplete,// custom grid complete
	null,// custom load complete
	false,// default hidden
	true,// row Color Based On status
	false,// celledit
	partiesAfterSubmit,
	false, // isSearch
	partiesDelData//delExtraParam
	);
	
	
	$("#gridIdForParties").jqGrid('setGridParam',{
		delOptions: {url: _context+'/shipment/party/deleteParty', caption: "Confirmation", msg: "Do you want to delete record(s)?",/* delData : {
			debtor : $('#prepaidCollectCode :selected').val()
		},*/
			afterSubmit:function(response, postdata)
			{
				var result = eval('(' + response.responseText + ')');
				if(result.success==false)
				{
					var messageContent = '';
					var len = result.messages.length;
					for (var i=0; i<len; i++) {
						messageContent += '<div class="message_error">' + result.messages[i] + '</div>';
					}
					$('#msgDiv').html(messageContent);
					window.scrollTo(0, 0);
				}
				return [true,""];
			}
		}
	});
	//$('#maintainShipmentParties').unblock();
}
var partiesAfterSubmit = function(result)
{
	//if(result.success)
	//	isBookingChanged = "Y";
};
function createShipmentReferenceNumberGrid(){
//	$('#maintainShipmentRefNumberMarks').block({ message: "Loading Shipment Reference ..." });

	var isEdit=false;
	var colNamesReferenceNumber = [ 'Id', 'Process Level',
			'Copy Bill To Header', 'SHAC', 'Type',
			'Reference Number', 'Actions' ];
	var colModelReferenceNumber = [
			{
				name : 'seqNo',
				index : 'seqNo',
				width : 55,
				hidden : true
			},
			{
				name : 'processLevelCode',
				index : 'processLevelCode',
				width : 55,
				hidden : true
			},
			{
				name : 'isCopyBillToHeader',
				index : 'isCopyBillToHeader',
				width : 55,
				hidden : true
			},
			{
				name : 'shipmentAddnlChrsticIdDs',
				index : 'shipmentAddnlChrsticIdDs',
				width : 55,
				hidden : true
			},
			{
				name : 'typeCode',
				index : 'typeCode',
				width : 200,
				editable : true,
				editrules : {
					required : true,
					custom : true,
					custom_func : function(value, colname) {
						if (value == '') {
							return [ false,
									"Type cannot be blank." ];
						} else {
							return [ true, "" ];
						}
					}
				},
				formatter : 'select',
				edittype : "select",
				editoptions : {
					value : "S:Shipper;C:Consignee;B:Both S&C;F:Forwarder;I:ITN;E:ITN-Exempt;T:Military TCN;A:Alaska/Hawaii Booking;O: Original Booking"
				}
			},
			{
				name : 'referenceNumberNotation',
				index : 'referenceNumberNotation',
				width : 200,
				editable : true,
				editrules : {
					maxlength : 20,
					custom : true,
					custom_func : function(value, colname) {
						var result = true;
						if(! isEdit){
							if (value.indexOf(',') != -1) {
								var patt = value.split(',');
								for ( var i = 0; i < patt.length; i++) {
									if ($.trim(patt[i]) == '') {
										result = false;
										break;
									}
								}
							}
						}
						if (null == value || $.trim(value) == '') {
							return [ false,
									"Reference Number cannot be spaces when Reference Type is present." ];
						}
						if (!result) {
							return [ false,
									"Reference Number cannot be spaces when Reference Type is present." ];
						} else {
							return [ true, "" ];
						}
					}
				},
				editoptions : {
					maxlength : 20
				},
				//formatter : "textarea",
				//edittype : "textarea",								
				//editoptions : {multiple: true}
				
			}, {
				name : 'actions',
				index : 'actions',
				width : 100,
				align : "center",
				editable : false,
				search : false,
				sortable : false,
				formatter : 'actions',
				formatoptions : {
					keys : true,
					onEdit: function(rowId){
						isEdit=true;
						$("div.ui-pg-div.ui-inline-del","#gbox_referenceNumberGrid").css("visibility", 'hidden');
					}
				}
			} ];

	var jsonReaderReference = {
		root : "rows",
		page : "page",
		total : "total",
		records : "records",
		repeatitems : false,
		cell : "cell",
		id : "seqNo"
	};

	var hideAdd=isReferenceNumberMarksAdd==true?false:true;
	var hideUpdate=isReferenceNumberMarksUpdate==true?false:true;
	var hideDelete=isReferenceNumberMarksDelete==true?false:true;		
	//hidedelete and hideupdate added for D028800
	createGrid("referenceNumberGrid", // grid id for user
	"pagerGrid", // page id for user
	_context+'/shipment/referenceNumber/load',
			_context+'/shipment/referenceNumber/add',
			_context+'/shipment/referenceNumber/update',
			_context+'/shipment/referenceNumber/delete',
			_context+'/shipment/referenceNumber/deleteSelected',
			colNamesReferenceNumber, colModelReferenceNumber,
			"Reference Number(s)", 275, 10, [ 10, 20, 30], !hideDelete,	//height changes as per defect 21876
			!hideDelete, false, // load once hideEdit/Del
			false, jsonReaderReference, hideUpdate, true, true,
			true, true, false, false, false,
			referenceGridLoadComplete, false, true);
	$('#del_referenceNumberGrid').bind('click',function(){ saveBillBeforeBillButton = true; });
	$('#sData','#gbox_referenceNumberGrid').bind('click',function(){ saveBillBeforeBillButton = true; });
	
	//$('#maintainShipmentRefNumberMarks').unblock();
}

function createShipmentRoutingGrid(){
//	$('#maintainShipmentRouting').block({ message: "Loading Shipment Routing ..." });
	//Create VVD Table on main page
	var colNames = [ 'Sequence No', 'Route Sequence No', 'Vessel Voyage Direction', 'Port of Loading', 'Port of Discharge', 'Sail Date', 'Arrival Date','extensionType'];
	
	var colModel = [ {
		name : 'bookingVoyageSeqNo',
		width : 70
	}, {
		name : 'routeSequenceNumber',
		hidden : true
	}, {
		name : 'vesselVoyageDirection',
		width : 170
	}, {
		name : 'loadPortCode',
		width : 130
	}, {
		name : 'dischargePortCode',
		width : 130
	},
	{
		name : 'sailDate',
		width : 100
	}, {
		name : 'arrivalDate',
		width : 100
	}, {
		name: 'extensionType',
		hidden : true
	}];
	

	var jsonReader = {
		root : "rows",
		page : "page",
		total : "total",
		records : "records",
		cell : "cell",
		repeatitems : false,
		id : "bookingVoyageSeqNo"
	};

	createGrid("vvdRoutingGrid", // grid id for party
	"vvdRoutingPager", // page id for party
	_context+'/shipment/routing/loadVVDGrid', // geturl
	'', // addurl
	'', // edit url
	'', //delete url
	'',// delete selected URL
	colNames, colModel, "",// caption
	83,// height
	3,// row num
	[ 3, 6, 9 ],// row list
	false,// multiselect
	false,// multidelete
	false,// load once
	true, // read only grid
	jsonReader, // json reader
	true, // hide edit
	true, // hide delete
	true, // autowidth
	false, // rownumbers
	true, // hide custom add row
	false,// hide pager row
	null,// custom edit method
	null,// custom grid complete
	null,// custom load complete
	false,// default hidden
	true);// row Color Based On status
	
//	$('#maintainShipmentRouting').unblock();
	createShipmentCommodityGrid();
}

function createShipmentCommodityGrid(){
	//$('#maintain_commodity_shipment').block({ message: "Loading Shipment Commodity..." });
	if($('#loadDschServiceGroupCode').val()!=null && $('#loadDschServiceGroupCode').val().trim()=="CY"){
		
		createContainerGrid();
		createShipmentMixedCommodityGrid();
	}
  if($('#loadDschServiceGroupCode').val()!=null && $('#loadDschServiceGroupCode').val().trim()=="AU"){
		
		createShipmentCommodityAutoGrid();
	}
	
  if($('#loadDschServiceGroupCode').val()!=null && $('#loadDschServiceGroupCode').val().trim()=="CON"){
	  $('#convGrid').GridUnload();
		createShipmentCommodityConvGrid();
	}
  if($('#loadDschServiceGroupCode').val()!=null && $('#loadDschServiceGroupCode').val().trim()=="LCL"){
	  $('#convGrid').GridUnload();
		createShipmentCommodityLclGrid();
	}
	
 // $('#maintain_commodity_shipment').unblock();
}

function createContainerGrid(){
	//D031125: 	Implement design for KFF Temperature and Dual Temperature Refers for the Alaska trade
	var colNamesForContainer = ['id', 'This','', 'Line', '  +  ','','','W/C', 'Equipment #','','Seal Nbr','Type/Size','','Temp','Scale','Temp2','Overflow','Sub','',''];
	var colModelForContainer = [ {name:'shipmentFreightId', index:'shipmentFreightId', width:5,editable:false, hidden:true, formatter:'integer'},
	                             {name:'isContainerLinked', index:'isContainerLinked', width:42, editable: false },
	                             {name:'shipmentFreightSeqNumber', index:'shipmentFreightSeqNumber',width:35, editable:false, hidden:true, formatter:'integer', width:70},
	                             {name:'firstCommodityLineNumber', index:'firstCommodityLineNumber',width:30, editable:false, hidden:false,  width:70},
	                              {name:'isLinkedMoreCommodity', index:'isLinkedMoreCommodity', width:35, editable:false},
	                              {name:'eqptType', index:'eqptType', width:15, editable: false,hidden:true},
	                              {name:'isEmpty', index:'isEmpty', width:15, editable: false,hidden:true},
	                              {name:'prorateCode', index:'prorateCode', width:35, hidden:false,editable: false},
	                              {name:'equipDesc', index:'equipDesc', width:102, hidden:false,editable: false},
	                               {name:'equipmentId', index:'equipmentId', width:110, hidden:true,editable: false},
	                               {name:'sealNumber', index:'sealNumber', width:85, editable:true,editoptions: {maxlength: 10} },
	                               {name:'eqptDetail', index:'eqptDetail', width:88, editable:false},
	                               {name:'isPreReceivedContainer', index:'isPreReceivedContainer',hidden:true, editable:false},
	                               {name:'temperature', index:'temperature', width:50, editable:true,editrules:{ required:true },
	                            	   editoptions: {maxlength: 5,
	                            		   dataEvents: [
	        											{
	        			        		                    type: 'change',
	        			        		                    fn: function(e) {
	        			        		                    	var el = $(this);
	        			        		                    	$(el).val($(el).val().toUpperCase());
	        			        		                    }
	        		            		                }
	        			            		            ]
	                            		   },
	                            	   editrules:{
	           	                		custom:true,
	           	                		custom_func:function (value, colname) {
	           	                			var tradeCode = $('#tradeCode').val();
	           	                			//alert("currentRowId: "+currentRowId);
	           	                			
	           	                		/*	if($.trim($("#"+currentRowId+"eqptType").val())!='R' && $.trim(value)!=''){
	           		            				return [false, colname+": This is valid only for refrigerated equipment."];
	           								}*/
	           	                			var currentRowId = jQuery("#commodityGrid").jqGrid('getGridParam','selrow');
	           	                			var invalidTempMsg = "This is invalid.";
	           	                			
	           	                			var isTempFirstLetterPlusMinusDot = /^[+-.]$/;
	           	                			var isTempFirstLetterPlusDot = /^[+-](\.)$/;
	           	                			//alert("isTempFirstLetterPlusDot: " + isTempFirstLetterPlusDot.test(value));
	           	                			var regTemp = /^[+-]?[0-9]{0,2}(\.[0-9]{0,2})?$/;
	           	                			//alert("regTemp: " + regTemp.test(value));
	           	                			if ( $.trim(value) == "amb"){
												value = "AMB";											
												$("#"+currentRowId+"_temperature").add("AMB");
											}
	           	                			if ( $.trim(value) == "kff"){
												value = "KFF";											
												$("#"+currentRowId+"_temperature").add("KFF");
											}
	           	                			var tempValid = false;
	           	                			var equipType = jQuery("#commodityGrid").getRowData(currentRowId).eqptType.toUpperCase();
	           	                			if((tradeCode == 'A' && $.trim(value) == "KFF") || (equipType == 'R' && $.trim(value) == "AMB")){
	           	                				tempValid = true;
	           	                			}
	           	                			if(!tempValid){
		           	                			if(isTempFirstLetterPlusMinusDot.test($.trim(value))){
		           	                				return [false, colname+": "+invalidTempMsg];
		           	                			}
		           	                			if(isTempFirstLetterPlusDot.test($.trim(value))){
		           	                				return [false, colname+": "+invalidTempMsg];
		           	                			}
		           	                			if(!regTemp.test($.trim(value))){
		           	                				return [false, colname+": "+invalidTempMsg];
		           	                			}
		           	                			if(equipType != 'R' && $.trim(value) != 'KFF' && $.trim(value) != ''){
		           	                				return [false, colname+": This value is not allowed for Non-Reefer container."];
		           	                			}
		           	                			if($.trim($("#"+currentRowId+"eqpType").val())!='' && $.trim($("#"+currentRowId+"eqptType").val()).toUpperCase()=='R' && $("#"+currentRowId+"isEmpty").val()=='F' && $.trim(value)==''){
		           		            				//return [false, colname+": This must be specified for refrigerated equipment."];
		           								}
		           	                			else{
		           									return [true,""];
		           								}
	           	                			}
	           		            			else{
	           									return [true,""];
	           								}
	           	                		}
	           	                	}
	                               },
	                               {name:'temperatureCode', index:'temperatureCode', width:40, editable:true,edittype:'select',editoptions:{value:":;C:C;F:F"},editrules:{ required:true },
	                               editrules:{
	       	                		custom:true,
	       	                		custom_func:function (value, colname,id) {
	       	                			currentRowId= id;
	       	                			var temp = $.trim($("#"+currentRowId+"temperature").val());
	       	                			
	       									return [true,""];
	       								
	       	                		}
	       	                	}
	                               },
	                               {name:'temperatureDual', index:'temperatureDual', width:50, editable:true,editrules:{ required:true },
	                            	   editoptions: {maxlength: 5,
	                            		   dataEvents: [
	        											{
	        			        		                    type: 'change',
	        			        		                    fn: function(e) {
	        			        		                    	var el = $(this);
	        			        		                    	$(el).val($(el).val().toUpperCase());
	        			        		                    }
	        		            		                }
	        			            		            ]
	                            		   },
	                            	   editrules:{
	           	                		custom:true,
	           	                		custom_func:function (value, colname) {
	           	                			var tradeCode = $('#tradeCode').val();
	           	                			//alert("currentRowId: "+currentRowId);
	           	                			
	           	                		/*	if($.trim($("#"+currentRowId+"eqptType").val())!='R' && $.trim(value)!=''){
	           		            				return [false, colname+": This is valid only for refrigerated equipment."];
	           								}*/
	           	                			var currentRowId = jQuery("#commodityGrid").jqGrid('getGridParam','selrow');
	           	                			var invalidTempMsg = "This is invalid.";
	           	                			
	           	                			var isTempFirstLetterPlusMinusDot = /^[+-.]$/;
	           	                			var isTempFirstLetterPlusDot = /^[+-](\.)$/;
	           	                			//alert("isTempFirstLetterPlusDot: " + isTempFirstLetterPlusDot.test(value));
	           	                			var regTemp = /^[+-]?[0-9]{0,2}(\.[0-9]{0,2})?$/;
	           	                			//alert("regTemp: " + regTemp.test(value));
	           	                			if ( $.trim(value) == "amb"){
												value = "AMB";											
												$("#"+currentRowId+"_temperatureDual").add("AMB");
											}
	           	                			if ( $.trim(value) == "kff"){
												value = "KFF";											
												$("#"+currentRowId+"_temperatureDual").add("KFF");
											}
	           	                			var tempValid = false;
	           	                			var equipType = jQuery("#commodityGrid").getRowData(currentRowId).eqptType.toUpperCase();
	           	                			if((tradeCode == 'A' && $.trim(value) == "KFF") || (equipType == 'R' && $.trim(value) == "AMB")){
	           	                				tempValid = true;
	           	                			}
	           	                			if(!tempValid){
		           	                			if(isTempFirstLetterPlusMinusDot.test($.trim(value))){
		           	                				return [false, colname+": "+invalidTempMsg];
		           	                			}
		           	                			if(isTempFirstLetterPlusDot.test($.trim(value))){
		           	                				return [false, colname+": "+invalidTempMsg];
		           	                			}
		           	                			if(!regTemp.test($.trim(value))){
		           	                				return [false, colname+": "+invalidTempMsg];
		           	                			}
		           	                			if(equipType != 'R' && $.trim(value) != 'KFF' && $.trim(value) != ''){
		           	                				return [false, colname+": This value is not allowed for Non-Reefer container."];
		           	                			}
		           	                			if($.trim($("#"+currentRowId+"eqpType").val())!='' && $.trim($("#"+currentRowId+"eqptType").val()).toUpperCase()=='R' && $("#"+currentRowId+"isEmpty").val()=='F' && $.trim(value)==''){
		           		            				//return [false, colname+": This must be specified for refrigerated equipment."];
		           								}
		           	                			else{
		           									return [true,""];
		           								}
	           	                			}
	           		            			else{
	           									return [true,""];
	           								}
	           	                		}
	           	                	}
	                               },
	                               {name:'overflow', index:'overflow', width:60, editable:true,edittype:'select',editoptions:{value:"Y:Yes;N:No"}, editrules:{ required:true } }, 
	                               {name:'sub', index:'sub', width:50, editable:false },
	                               
	                              {name:'actionLinkUnlink', index:'actionLinkUnlink', width:80, formatter:(isCommodityBLCNLink==true?'showlink': 'formatLinkBLCN'), formatoptions : {
		                   				baseLinkUrl : "javascript:",
		                				showAction: "actionToLinkUnLink('",
		                				addParam: "');" }
		                               },
		                               {name:'edit', index:'edit', width:55, editable:false, formatter:'actions',formatoptions:{
		                            	   onEdit:function(rowid) {
		                            		if(
		                            				jQuery("#commodityGrid").getRowData(rowid).isContainerLinked =="" ||
		                            				jQuery("#commodityGrid").getRowData(rowid).isContainerLinked ==null)
		                            			{ 
		                            			$('#FormError').html("");
		                            			$("div.ui-pg-div.ui-inline-del", "#"+rowid).remove();
		                            			$("div.ui-pg-div.ui-inline-cancel", "#"+rowid).remove();
		                            			$("div.ui-pg-div.ui-inline-save", "#"+rowid).remove();
		                            			$("#commodityGrid").jqGrid('restoreRow',rowid) ; 
		                            			$('#commodityGrid').trigger('reloadGrid');
		                            			$("div.ui-pg-div.ui-inline-del", "#"+rowid).remove();
		                            			
		                            			return;
		                            			}
		                            		$("div.ui-pg-div.ui-inline-del", "#"+rowid).remove();
		                            		saveBillBeforeBillButton = true;
		                            		var equipType = jQuery("#commodityGrid").getRowData(rowid).eqptType;
		                            		var tradeCode = $('#tradeCode').val();
		                            		if((tradeCode != "A" && equipType!="R") || 
		                            				(tradeCode == "A" && equipType != "R" && equipType != "D" && equipType != "I")){
		                            		var grid = $("#commodityGrid");
		                            				var pos=getColumnIndexByName(grid,'temperature');
		                            				var pos2=getColumnIndexByName(grid,'temperatureCode');
		                            				var pos3=getColumnIndexByName(grid,'temperatureDual');
		                            				var allIds = $('#commodityGrid').jqGrid('getDataIDs');
		                            				var cells = $("tbody > tr.jqgrow > td:nth-child("+(pos+1)+")",grid[0]);
		                            				var cells2 = $("tbody > tr.jqgrow > td:nth-child("+(pos2+1)+")",grid[0]);
		                            				var cells3 = $("tbody > tr.jqgrow > td:nth-child("+(pos3+1)+")",grid[0]);
		                            				for (var i = 0; i < allIds.length; i++) {
		                            			        var cell = $(cells[i]);
		                            			        var cell2 = $(cells2[i]);
		                            			        var cell3 = $(cells3[i]);
		                            			        $('input[type="text"]',cell).attr("disabled",true);
		                            			        $('input[type="text"]',cell3).attr("disabled",true);
		                            			       $('select',cell2).attr("disabled",true);
		                            				}
		                            		}
		                            		var equip=jQuery("#commodityGrid").getRowData(rowid).eqptType;
		                            		var emptyval=jQuery("#commodityGrid").getRowData(rowid).isEmpty;
		                            		//D027650 ---changed and enabled seal number for all types--- D034169
		                            		/*if(equip=="F"||equip=="T"||equip=="A"||emptyval=="E"){
		                            			var grid = $("#commodityGrid");
	                            				var pos=getColumnIndexByName(grid,'sealNumber');
	                            				var allIds = $('#commodityGrid').jqGrid('getDataIDs');
	                            				var cells = $("tbody > tr.jqgrow > td:nth-child("+(pos+1)+")",grid[0]);
	                            				for (var i = 0; i < allIds.length; i++) {
	                            			        var cell = $(cells[i]);
	                            			        $('input[type="text"]',cell).attr("disabled",true);
	                            				}
	                            				
		                            		}*/
		                            		
		                            	   },
		                            	 //D027692 start
		                            	   afterSave: function()
											{
		                            		  $('#isAnyGridChanged').val("true");
		                            		  return true;
											}
		                            	 //D027692 end
		                               }
		                               }
	                              
	                              
	                               ];
	// for security
	jQuery.extend($.fn.fmatter,{
		formatLinkBLCN : function(cellvalue,
				options, rowdata) {
				return '';
		}
	});
	
	var jsonReaderContainer = {
									root:"rows",
									page:"page",
									total:"total",
									records:"records", 
									cell:"cell",
									repeatitems:false,
									id:"shipmentFreightId"
				               };
	
	createGrid("commodityGrid", "pagerCommodityGrid",
			'../shipmentCommodity/loadContainerGrid',
			'', '../shipmentCommodity/updateContainerGrid', 
			'',
			'',
			colNamesForContainer, colModelForContainer, "Containers", 
			"auto", 10, [ 10, 20, 30 ],false, false, false, false,
			jsonReaderContainer,isCommodityBLCNUpdate?false:true,true,false,false,false,false,false,false,containerGridLoad,false,false);
	
	
}

function createShipmentMixedCommodityGrid(){
	currentRowId='';
	
	var colNamesForCommodity = ['id', 'Line', '','Item', ' Net Wt(kg)','Cube(M)','Pieces','Kind','Note','Commodity Descripition',''];
	var colModelForCommodity = [ {name:'shipmentItemId', index:'shipmentItemId', width:5,editable:false, hidden:true, formatter:'integer'},
	                             {name:'unitOfCommodityDisplay', index:'unitOfCommodityDisplay',width:58, editable: false },
	                             {name:'unitOfCommodity', index:'unitOfCommodity',hidden:true ,width:58, editable: false },
	                             {name:'itemNumber', index:'itemNumber',width:65, editable:false, hidden:false, width:70, align:'right', classes:'monotype'},
	                             {name:'netWeight', index:'netWeight', width:75,formatter:'number', editable:false, align:'right',formatoptions: {decimalPlaces: 3, thousandsSeparator: ""}},
	                             {name:'cube', index:'cube', width:75, editable: false,formatter:'integer',hidden:false, align:'right'},
	                             {name:'piece', index:'piece', width:75, editable: false,formatter:'integer',hidden:false,align:'right'},
	                              
	                              {name:'kind', index:'kind', width:90, editable: false},
	                               {name:'note', index:'note', width:70, editable:false },
	                               {name:'commodityDesc', index:'commodityDesc', width:200, editable:false},
	                               {
	   								name : 'actions',
	   								index : 'actions',
	   								width : 100,
	   								align : "center",
	   								editable : true,
	   								search : false,
	   								sortable : false,
	   								formatter : 'actions',
	   								formatoptions : {
	   									keys : true,
	   									onEdit: function(rowId){
	   										
	   										openUpdateComodityOverLay(rowId);
	   									}
	                               
	   								}
	   							}  
	                               ];
	var jsonReaderContainer = {
									root:"rows",
									page:"page",
									total:"total",
									records:"records", 
									cell:"cell",
									repeatitems:false,
									id:"unitOfCommodity"
				               };
	$('#mixcommodityGrid').gatesGrid({
		caption: "Commodity",
		colNames: colNamesForCommodity,
		colModel: colModelForCommodity,
		jsonReader: jsonReaderContainer,
		pager: '#pagermixCommodityGrid',
		rownumbers :false,
		rowList: [ 10,20,30 ],
		height:"auto",
		footerrow: true,
		userDataOnFooter: false,
		gatesOptions: {
			urls: {
				load: '../shipmentCommodity/loadCommodityGrid',
				del:'../shipmentCommodity/deleteCommodityGrid'	
			},
			controls: {
				navBar: true,
				navBarAdd: false,
				navBarEdit: false,
				navBarDelete: false, //- multiDelete
				
				inlineAdd: isCommodityBLMXAdd, //- hideCustomAddRow
				inlineEdit: isCommodityBLMXUpdate, //- hideEdit
				inlineDelete: isCommodityBLMXDelete //- hideDelete
			},
			loadComplete :loadComplete
		}
	
		
	});
	
	
}

function createShipmentCommodityAutoGrid(){
	
	currentRowId='';
	var colNamesForPov = ['id','','This','Line','Vinsight#','Make','Model', 'Year','Dimensions(LxWxH)','VIN','LSB','Tier','Equip#','Wgt','',''];
	var colModelForPov = [
	                       {name:'shipmentFreightAutoId', index:'shipmentFreightAutoId',editable:false, hidden:true, formatter:'integer'},
	                       {name:'shipmentFreightId', index:'shipmentFreightId',editable:false, hidden:true, formatter:'integer'},
                             {name:'isContainerLinked', index:'isContainerLinked', width:20, editable: false },
	                       {name:'firstCommodityLineNumber', index:'firstCommodityLineNumber',width:20, editable:false, hidden:false, formatter:'integer', width:70},
	                       {name:'receivedUnitId', index:'receivedUnitId', width:80, editable:false},
	                       {name:'vehicalMade', index:'vehicalMade', width:50, editable: false,hidden:false},
	                       {name:'vehicalModel', index:'vehicalModel', width:50, editable: false,hidden:false},
	                       {name:'vehicalYear', index:'vehicalYear', width:30, hidden:false,editable: false},
	                       {name:'receivedUnitDimension', index:'receivedUnitDimension', width:100, hidden:false,editable: false},
	                       {name:'vin', index:'vin', width:80, editable:false },
	                       {name:'autoLSB', index:'autoLSB', width:30, editable:false},
	                       {name:'rateCatCode', index:'rateCatCode', width:35, editable:false },
	                       {name:'equipmentId', index:'equipmentId', width:80, editable:true,editrules:{ required:true },editoptions: {maxlength: 10},
	                            	   editrules:{}
	                               },
	                       {name:'weight', index:'weight', width:35, editable:false},
	                       {name:'edit', index:'edit', width:60, editable:false, formatter:'actions',formatoptions:{
	                            	   onEdit:function(rowid) {
	                            		if(jQuery("#povGrid").getRowData(rowid).action =="LINK")
	                            			{ $("#povGrid").jqGrid('restoreRow',rowid) ; 
	                            			$('#FormError').html("");
	                            			$("div.ui-pg-div.ui-inline-del", "#"+rowid).remove();
	                            			$("div.ui-pg-div.ui-inline-cancel", "#"+rowid).remove();
	                            			$("div.ui-pg-div.ui-inline-save", "#"+rowid).remove();
	                            			$('#povGrid').trigger('reloadGrid');
	                            			$("div.ui-pg-div.ui-inline-del", "#"+rowid).remove();
	                            			
	                            			return;
	                            			}
	                            		$("div.ui-pg-div.ui-inline-del", "#"+rowid).remove();
	                            		 
	                            		  $("div.ui-pg-div.ui-inline-del","#povGrid").remove();
	                            	
	                                   }
	                               }
	                            	    },
	                               {name:'actionLinkUnlink', 
	                                    index:'actionLinkUnlink',formatter : 'showlink',
	                                    formatoptions : {
	                    					baseLinkUrl : "javascript:",
	                    					showAction : "actionToLinkUnLinkPov('",
	                    					addParam : "');"
	                    				}
	                            	    
	                               	,
	            				    width:50,
	            				    editable:false }
	                              
	                               ];
	// for security
	jQuery.extend($.fn.fmatter,{
		formatLinkBLAU : function(cellvalue,
				options, rowdata) {
				return '';
		}
	});
	
	var jsonReaderPov = {
									root:"rows",
									page:"page",
									total:"total",
									records:"records", 
									cell:"cell",
									repeatitems:false,
									id:"shipmentFreightId"
				               };
	$('#povGrid').gatesGrid({
		
		colNames: colNamesForPov,
		colModel: colModelForPov,
		jsonReader: jsonReaderPov,
		pager: '#pagerPovGrid',
		rowNum:10,
		height:"auto",
		rowList: [ 10, 20 ,30 ],
		
		gatesOptions: {
			urls: {
				load: '../shipmentCommodity/loadAutoGrid', 
				edit: '../shipmentCommodity/editAutoGrid' 
			},
			controls: {
				navBar: true,
				navBarAdd: false,
				navBarEdit: false,
				navBarDelete: false, //- multiDelete
				
				inlineAdd: false, //- hideCustomAddRow
				inlineEdit: true, //- hideEdit
				inlineDelete: false //- hideDelete
				
				
				
				
				
				
			},
			loadComplete: callloadCompleteAuto
		},
		beforeEditCell: function(rowid, cellname, value, iRow, iCol) {
		   // here identify row based on rowid
		   // if the row should not be editable than simply make the cells noneditable using
			jQuery('#commodityGrid').editCell(iRow, iCol, false);
			jQuery('#commodityGrid').jqGrid("restoreCell", iRow, iCol);
		}
          
		
		
	});
}

function createShipmentCommodityLclGrid(){
	
	currentRowId='';
	var colNamesForLcl = ['id','','','', 'This', 'Line', 'Unit Description ','Dims(LxWxH)','', 'VinSight#','','','Equip#','Temperature','Scale','','','',''];
	var colModelForLcl = [ 
	                            	{name:'shipmentConvFreightId', index:'shipmentConvFreightId',editable:false, hidden:true, formatter:'integer'},
	                            	{name:'shipmentFreightSeqNumber', index:'shipmentFreightSeqNumber',editable:false, hidden:true},
	                            	{name:'militaryTcnHidden', index:'militaryTcnHidden',editable:false, hidden:true},
	                            	 {name:'shipmentFreightId', index:'shipmentFreightId',editable:false, hidden:true, formatter:'integer'},
	                            	 {name:'isContainerLinked', index:'isContainerLinked', width:20,shrinkToFit:true, editable: false },
	                            	 {name:'firstCommodityLineNumber', index:'firstCommodityLineNumber',width:20,shrinkToFit:true, editable:false, hidden:false, formatter:'integer'},
	                            	 //Increased the maxlnegth for defect D028271
	                            	 {name:'unitDescription', index:'unitDescription',width:90,shrinkToFit:true, editable:true, edittype:'text',hidden:false,editoptions: {size:10, maxlength: 29}, 
	                            		 },
	                            	 {name:'receivedUnitDimension', index:'receivedUnitDimension', width:70,shrinkToFit:true, hidden:false,editable: false},
	                            	 
	                            	 {name:'routingLoadDischargePairCode', index:'routingLoadDischargePairCode', hidden:true, editable:false},
	                            	 {name:'receivedUnitId', index:'receivedUnitId', width:70, editable:false},
	                            	 {name:'receivedUnitPackageType', index:'receivedUnitPackageType', hidden:true, editable:false},
	                            	 {name:'receivedUnitPieceCount', index:'receivedUnitPieceCount', hidden:true, editable:false},
	                            	 {name:'equipmentId', index:'equipmentId', width:70,shrinkToFit:true, editable:true,required:false,editoptions: {maxlength: 10}},
	                            	 {name:'temperature', index:'temperature', width:60,shrinkToFit:true, editable:true,required:false,editoptions: {maxlength: 10}},
	                            	   {name:'temperatureCode', index:'temperatureCode', width:40, editable:true,edittype:'select',editoptions:{value:":;C:C;F:F"},editrules:{ required:true },
                                     	                               editrules:{
                                     	       	                		custom:true,
                                     	       	                		custom_func:function (value, colname,id) {
                                     	       	                			currentRowId= id;
                                     	       	                			var temp = $.trim($("#"+currentRowId+"temperature").val());

                                     	       									return [true,""];

                                     	       	                		}
                                     	       	                	}
                                     	                               },
	                            	 {name:'edit', index:'edit', width:50,shrinkToFit:true, editable:false, formatter:'actions',formatoptions:{
		                            	  onEdit:function(rowid) {
			                            		
		                            		  if(jQuery("#convGrid").getRowData(rowid).actionLinkUnlink =="LINK" )
		                            			{ $("#convGrid").jqGrid('restoreRow',rowid) ; 
		                            			$('#FormError').html("");
		                            			$("div.ui-pg-div.ui-inline-del", "#"+rowid).remove();
		                            			$("div.ui-pg-div.ui-inline-cancel", "#"+rowid).remove();
		                            			$("div.ui-pg-div.ui-inline-save", "#"+rowid).remove();
		                            			$('#convGrid').trigger('reloadGrid');
		                            			if($("#convGrid").getGridParam("reccount")>0){ $('#tr_shipmentConvFreightId').hide();};
		                            			$("div.ui-pg-div.ui-inline-del", "#"+rowid).remove();
		                            			
		                            			return;
		                            			}
		                            		  $("div.ui-pg-div.ui-inline-del", "#"+rowid).remove();
		                            		 
		                            		  $("div.ui-pg-div.ui-inline-del","#convGridDiv").remove();
		                            		 
		                            		
		                                   }
		                               }
		                              },
		                              {name:'isDeletable', index:'isDeletable', width:30,shrinkToFit:true, formatter:(isCommodityBLCVDelete==true?'showlink': 'formatLinkBLCV'), formatoptions : {
			                   				baseLinkUrl : "javascript:",
			                				showAction: "actionDelete('",
			                				addParam: "');" }
			                               },
						             {name:'actionLinkUnlink', index:'actionLinkUnlink', width:50,shrinkToFit:true, formatter: (isCommodityBLCVLink==true?'showlink': 'formatLinkBLCV'), formatoptions : {
							                   				baseLinkUrl : "javascript:",
							                				showAction: "actionToLinkUnLinkConv('",
							                				addParam: "');" }
							                               },
							         {name:'loadDischargeServicePair', index:'loadDischargeServicePair',hidden:true}
	                            	 
	                            	 ];
		// for security
		jQuery.extend($.fn.fmatter,{
			formatLinkBLCV : function(cellvalue,
					options, rowdata) {
					return '';
			}
		});
	
	var jsonReaderLcl = {
									root:"rows",
									page:"page",
									total:"total",
									records:"records", 
									cell:"cell",
									repeatitems:false,
									id:"shipmentFreightSeqNumber"
				               };


	createGrid("convGrid", "pagerconvGrid",
			'../shipmentCommodity/loadConventionalGrid',
			'../shipmentCommodity/addConventionalGrid',
			'../shipmentCommodity/updateConventionalGrid', 
			'',
			'',
			colNamesForLcl, colModelForLcl, "Less Than Container Load", 
			"auto", 10, [ 10, 20, 30 ],false, false, false, false,
			jsonReaderLcl,isCommodityBLCVUpdate?false:true,true,true,true,false,false,false,false,lclGridLoadComplete,false,false);	
	
	

}
function createShipmentStpOffGrid(){
	var isStopOffUpdate=true;
	//var isStopOffsDelete=true;
	var stopOffsCol = [ 'Stop#','Organization','Description','TotalQuantity/Weight','Port','Arole'];
	var stopOffsMod = [
	                   
					{name :'positionInContainer',index: 'positionInContainer',width:40,editable:false,editoptions:{readonly:true,size:5}},  
	                {name:'party',index:'party', width:350,editable:false, formatter:(isStopOffUpdate==true?'showlink': 'formatLink'), formatoptions : {
	             				baseLinkUrl : "javascript:",
	          				showAction: "editStopOff('",
	          				addParam: "');" }
	                         }, 
	               
	                {name:'description',index:'description', width:250,editable:false},
	                {name:'totalQuantityByWeight',index:'totalQuantityByWeight', width:150,editable:false},
					 {name:'portCode',index:'portCode', width:40,editable:false},
					{name:'addressRoleId', index:'addressRoleId',editable:false, hidden:true}
	                  ];
	     jQuery.extend($.fn.fmatter,
				{
				formatLink : function(cellvalue,
					options, rowdata) {
					return cellvalue;
					}
				});
		var jsonReaderStopOff = {
		root : "rows",
		page : "page",
		total : "total",
		records : "records",
		repeatitems : false,
		cell : "cell",
		id : "positionInContainer",
		clear:true
	};
		createGrid(
				"stpOffGrid", // grid id for user
				"stpOffPager", // page id for user
				_context+'/shipment/stopoff/load', 
				_context+'/shipment/stopoff/add', 
				_context+'/shipment/stopoff/update', 
				'', 
				'',
				stopOffsCol, 
				stopOffsMod, 
				"Stop Offs",
				"auto",
				3,
				[3,6,9],
				true,
				false,
				false, //load once
				true, jsonReaderStopOff,false,false,true,true,true,false,false,false,stopOffsGridLoadComplete,false,true);
		
		//$('#maintainShipmentSpecialServices').unblock();
		
		$('#del_stopOffsGrid').bind('click',function(){ saveBillBeforeBillButton = true; });
		
	}
function createShipmentStopOffsGrid(){
var isStopOffUpdate=true;
var isStopOffsDelete=true;
var stopOffsCol = [ 'Stop#','Organization','Description','TotalQuantity/Weight','Port','Arole'];
var stopOffsMod = [
                   
				{name :'positionInContainer',index: 'positionInContainer',width:40,editable:false,editoptions:{readonly:true,size:5}},  
                {name:'party',index:'party', width:350,editable:false, formatter:(isStopOffUpdate==true?'showlink': 'formatLink'), formatoptions : {
             				baseLinkUrl : "javascript:",
          				showAction: "editStopOff('",
          				addParam: "');" }
                         }, 
               
                {name:'description',index:'description', width:250,editable:false},
                {name:'totalQuantityByWeight',index:'totalQuantityByWeight', width:150,editable:false},
				 {name:'portCode',index:'portCode', width:40,editable:false},
				{name:'addressRoleId', index:'addressRoleId',editable:false, hidden:true}
                  ];
     jQuery.extend($.fn.fmatter,
			{
			formatLink : function(cellvalue,
				options, rowdata) {
				return cellvalue;
				}
			});
	var jsonReaderStpOff = {
	root : "rows",
	page : "page",
	total : "total",
	records : "records",
	repeatitems : false,
	cell : "cell",
	id : "positionInContainer",
	clear:true
};
	createGrid(
			"stopOffsGrid", // grid id for user
			"stopOffsPager", // page id for user
			_context+'/shipment/stopoff/load', 
			_context+'/shipment/stopoff/add', 
			_context+'/shipment/stopoff/update', 
			_context+'/shipment/stopoff/deleteStop', 
			_context+'/shipment/stopoff/delete',
			stopOffsCol, 
			stopOffsMod, 
			"Stop Offs",
			"auto",
			10,
			[10,20,30],
			true,
			isStopOffsDelete,
			false, //load once
			true, jsonReaderStpOff,false,false,true,true,true,false,false,false,stopOffsGridLoadComplete,false,true);
	
	//$('#maintainShipmentSpecialServices').unblock();
	
	$('#del_stopOffsGrid').bind('click',function(){ saveBillBeforeBillButton = true; });
	
}
function createShipmentItemStopOffsGrid(){
	var counter=0;
	//var isStopOffUpdate=true;
	//var isStopOffsDelete=true;
	var itemStopOffsCol = [ 'Seq #','shipmentItemId','shipmentStopOffSeqNo','shipmentItemStopOffId','Tariff Item','Description','TotalItemQty','Qty','TotalItemWeight','Weight','action'];
	var itemStopOffsMod = [
					{name:'itemStopOffSeqNumber', index:'itemStopOffSeqNumber',editable:false,hidden:true, formatter:'integer'},
					{name:'shipmentItemId', index:'shipmentItemId',editable:false, hidden:true, formatter:'integer'},
	                {name:'shipmentStopOffSeqNo', index:'shipmentStopOffSeqNo',editable:false, hidden:true, formatter:'integer'},
	                {name:'shipmentItemStopOffId', index:'shipmentItemStopOffId',editable:false, hidden:true, formatter:'integer'},
	                {name :'tariffItem',index: 'tariffItem',width:20,editable:false,editoptions:{readonly:true,size:7}},  
					 {name:'description',index:'description', width:70,editable:false},
					  {name:'totalItemQuantity',index:'totalItemQuantity', width:30,editable:false},
	                {name:'quantity',index:'quantity', width:20,editable:true,edittype:'text',editoptions: {
	            		   maxlength: 5, dataEvents: [
	            		                {
	            		                    type: 'change',
	            		                    fn: function(e) {
	            		                    	var row = $(e.target).closest('tr.jqgrow');
            		                            var rowId = row.attr('id');
												counter=rowId;
												isStopChanged='Y';
	            		                    	//disableAddDelete(rowId);
												if(rowId==undefined){
	            		                    		if($.trim($('#quantity').val())==''){
	            		                    			$('#quantity').val('');
		            		                    	}
            		                            }
	            		                    	else{
	            		                    		if($.trim($('#'+rowId+'_quantity').val())==''){
	            		                    			$('#'+rowId+'_quantity').val('');
		            		                    	}
	            		                    	}
	            		                    }
	            		                }]},editrules:{
	            		   custom:true,
	            		   custom_func:function (value, colname) {
									
									var wgt = $.trim($("#"+counter+"_weight").val());
									if(wgt != '' && value == '' ){
		                			return [false, colname+":weight without quantity."];
		                			} 
									if(wgt == '' && value != '' ){
		                			return [false, colname+":quantity without weight."];
		                			}
	            				   if($.trim(value)!='undefined' && $.trim(value)!=null && $.trim(value)!=''){
	            					   if($.trim(value)<0){
			            				   return [false, colname+": Must be zero or greater than zero."];
			            			   }
		            				   else if(!/^[0-9\ ]+$/.test($.trim(value)) || $.trim(value)>32767){
			            				   return [false, colname+": Only numerics allowed between range[0-32767]."];
			            			   }
			            			   else{
			            				   return [true,""];
			            			   }
	            				   }
	            				   else{
		            				   return [true,""];
		            			   }
	            			  }
	            		   }},
	                {name:'totalItemWeight',index:'totalItemWeight', width:30,editable:false           		   },
										   {name:'weight',index:'weight', width:20,editable:true, edittype:'text',
										   editoptions: {
											dataEvents: [
	            		                {
	            		                    type: 'change',
	            		                    fn: function(e) {
	            		                    	var row = $(e.target).closest('tr.jqgrow');
            		                            var rowId = row.attr('id');
            		                            counter=rowId;
            		                            isStopChanged='Y';	            		        
												if(rowId==undefined){
	            		                    		if($.trim($('#weight').val())==''){
	            		                    			$('#weight').val('');
		            		                    	}
            		                            }
	            		                    	else{
	            		                    		if($.trim($('#'+rowId+'_weight').val())==''){
	            		                    			$('#'+rowId+'_weight').val('');
		            		                    	}
	            		                    	}
	            		                    }
	            		                }]},
										   editrules:{
	                		custom:true,
	                		custom_func:function (value, colname){
	                			var reg7Number3DecimalPlaces = /^[0-9]{0,7}(\.[0-9]{1,3})?$/;
	                			var reg7Number = /^[0-9]{1,7}$/;
	                			var qty = $.trim($("#"+counter+"_quantity").val());
									if(qty != '' && value == '' ){
		                			return [false, colname+":quantity without weight."];
		                			} 
									if(qty == '' && value != '' ){		                			
									return [false, colname+":weight without quantity."];
		                			}
		                		//	else{
		                				 //switch($('#unitOfMeasureSourceCode').val())
		                			     //{
		                			       //  case "M": 
		                			        	 if(isNaN(value)){ 
		         		            				return [false,colname+ ": Weight must be numeric."];
		         		            			 }
		                			        	 if(!reg7Number3DecimalPlaces.test(value)) {
		                			        		 return [false, colname+": Only 7 numbers before decimal and 3 numbers after decimal are allowed.No blank spaces are allowed."];
		                			        	 }
		                			        	 /*if(!isNaN(parseFloat(value)) && $.trim(parseFloat(value))>parseFloat($("#metricWeightLimit").val())) {
		                			        		 return [false, colname+": Weight can't exceed "+$("#metricWeightLimit").val()+"."];
		                			        	 }*/
		                			       //  break;
		                			       //  case "I": 
		                			        	// if(isNaN(value)){ 
		         		            			//	return [false,colname+ ": Weight must be numeric."];
		         		            			// }
		                			        	// if(!reg7Number.test(value)) {
		                			        	//	 return [false, colname+": Max 7 numbers are allowed. No blank spaces are allowed."];
		                			        	// }
		                			        	 
		                			        	 /*if(!isNaN(parseFloat(value)) && $.trim(parseFloat(value))>parseFloat($("#imperialWeightLimit").val())) {
		                			        		 return [false, colname+": Weight can't exceed "+$("#imperialWeightLimit").val()+"."];
		                			        	 }*/
		                			        // break;
		                			    // }
		                			//}
	                			//}
	                			return [true, ""];
	                		}
	            	   },
	            	   formatter:float3DecimalFormat
	                            		   },
										   {name:'actions', index:'actions', width:20, align:"center", editable:false, search:false, sortable:false, formatter:'actions', 
                				formatoptions:{keys:true,
					          	delbutton : false, 
					          	editbutton:true,
						   		}}
	                  ];
       jQuery.extend($.fn.fmatter,
				{
				formatLink : function(cellvalue,
					options, rowdata) {
					return cellvalue;
					}
				});
	var jsonReaderItmStpOff = {
		root : "rows",
		page : "page",
		total : "total",
		records : "records",
		repeatitems : false,
		cell : "cell",
		id : "itemStopOffSeqNumber",
		clear:true
	};
			createGrid(
				"itemstopOffsGrid", // grid id for user
				"itemstopOffsPager", // page id for user
				_context+'/shipment/stopoff/loadItemStops', 
				_context+'/shipment/stopoff/addItemStops', 
				_context+'/shipment/stopoff/updateItemStops', 
				'', 
				'',
				itemStopOffsCol, 
				itemStopOffsMod, 
				"ItemStopOffs",
				"auto",
				10,
				[10,20,30],
				false,
				false,
				false, //load once
				false, jsonReaderItmStpOff,false, // hide edit
			true, // hide delete
			true, // autowidth
			true, // rownumbers
			true, // hide custom add row,
			true,false,false,itemStopOffsGridComplete,itemStopOffsGridLoadComplete,false,false);
		
		//$('#maintainShipmentSpecialServices').unblock();
		
		$('#del_stopOffsGrid').bind('click',function(){ saveBillBeforeBillButton = true; });
		
	}
		function createShipmentStopOffHazardGrid(){
	
	  console.log("createStopOffHazardGrid");
	  var colNames = ['Id','Stop #', 'Unit Id','UN/NA #','Hzd Class','Description','Pkg Grp','Pieces','Kind','Weight','Lmt Qty' ];
	  
	  var colModel = [
	       {name:'shipmentHazardId',hidden:true},
	       {name:'stopNumber',  width:50},
	       {name:'unitId', width:50},	       
	       {name:'hazTypeAndNumber',width:50},
	       {name:'hazPrimaryClass',width:50},
	       {name:'hazCommodityName',width:100},
	       {name:'hazPackageGroup',width:50},
	       {name:'hazPieces',width:50},
	       {name:'hazPiecesUomCode',width:50},
	       {name:'hazWeight',width:50},
	       {name:'hazLimitedQuantity',width:50,formatter:'select', stype:'select', edittype:'select', editoptions: { value: "false:No;true:Yes" }}
	   ];
	  
	  var jsonReaderHaz = {
				root : "rows",
				page : "page",
				total : "total",
				records : "records",
				cell : "cell",
				repeatitems : false,
				id : "shipmentHazardId"
			};
		createGrid("StpOffHazardGrid", // grid id for hazard
			"StpOffHazardPager", // page id for hazard
			_context+'/shipment/stopoff/loadHazard', // geturl
			'', // addurl
			'',
			'',
			'',
			colNames, colModel, "Hazardous",// caption
			"auto",// height
			10,// row num
			[5,10,20],// row list
			true,// multiselect
			false,// multidelete 
			false,// load once
			true, // read only grid
			jsonReaderHaz, // json reader
			true, // hide edit
			true, // hide delete
			true, // autowidth
			true, // rownumbers
			true, // hide custom add row
			false,// hide pager row
			null,// custom edit method
			stpoffHazardGridComplete,// custom grid complete
			stpoffHazardLoadComplete,// custom load complete
			false,// default hidden
			true);// row Color Based On status
			
			
}
function createShipmentCommodityConvGrid(){
	
	
	currentRowId='';
	var colNamesForConventional = ['id','','','', 'This', 'Line', 'Unit Description ','Dims(LxWxH)','VIN','', 'VinSight#','Equip#','TCN#','','','',''];
	var colModelForConventional = [ 
	                            	{name:'shipmentConvFreightId', index:'shipmentConvFreightId',editable:false, hidden:true, formatter:'integer'},
	                            	{name:'shipmentFreightSeqNumber', index:'shipmentFreightSeqNumber',editable:false, hidden:true},
	                            	{name:'militaryTcnHidden', index:'militaryTcnHidden',editable:false, hidden:true},
	                            	 {name:'shipmentFreightId', index:'shipmentFreightId',editable:false, hidden:true, formatter:'integer'},
	                            	 {name:'isContainerLinked', index:'isContainerLinked', width:25,shrinkToFit:true, editable: false },
	                            	 {name:'firstCommodityLineNumber', index:'firstCommodityLineNumber',width:30,shrinkToFit:true, editable:false, hidden:false, formatter:'integer'},
	                            	 //Increased the maxlnegth for defect D028271
	                            	 {name:'unitDescription', index:'unitDescription',width:110,shrinkToFit:true, editable:true, edittype:'text',hidden:false,editoptions: {size:10, maxlength: 29}, 
	                            		 editrules:{ required:true,
	                            			         custom:true,
			           	                		     custom_func:function (value, colname) {
			           	                			var invalidCharMsg = "This is invalid.";
			           	                			var charRegex = /^[0-9a-zA-Z\ \'\&]+$/;
			           	                		    if(!charRegex.test($.trim(value))){
			           	                				return [false, colname+": "+invalidCharMsg];
			           	                			}
			           	                		 else{
			           									return [true,""];
			           								}}}},
	                            	 {name:'receivedUnitDimension', index:'receivedUnitDimension', width:100,shrinkToFit:true, hidden:false,editable: false},
	                            	 {name:'vinNumber', index:'vinNumber', width:130,shrinkToFit:true, hidden:false,editable: true, editoptions: {maxlength: 17}, 
	                            		 editrules:{ required:false,
                        			         custom:true,
	           	                		     custom_func:function (value, colname) {
	           	                			/*var invalidCharMsg = "This is invalid.";
	           	                			var alphaRegex = /^[0-9a-zA-Z\ \'\&]+$/;
	           	                		    if(!alphaRegex.test($.trim(value))){
	           	                				return [false, colname+": "+invalidCharMsg];
	           	                			}else{*/
	           									return [true,""];
	           								//}
	           	                		    }}
	                            	 ,edittype:'text',editoptions: {maxlength: 17}},
	                            	 {name:'routingLoadDischargePairCode', index:'routingLoadDischargePairCode', hidden:true, editable:false},
	                            	 {name:'receivedUnitId', index:'receivedUnitId', width:60, editable:false},
	                            	 {name:'equipmentId', index:'equipmentId', width:85,shrinkToFit:true, editable:true,required:false,editoptions: {maxlength: 10}},
	                            	 {name:'militaryTcn', index:'militaryTcn', width:140,shrinkToFit:true, editable:true, editoptions: {maxlength: 17},  editrules:{
	             	            		custom:true,
	            	            	
	            	            		custom_func:function (value, colname) {
	            	            			
	            	            			// D030696
	            	            			if($.trim(value) == null || $.trim(value) == ''){
	            	            				if($('#militaryIbsStatusCode').val()!=''){
	            	            					return [false, colname+": Field is required."];
	            	            				}
	            	            				return [true,""];
	            	            			}else{
	            	            				if(value.length != 17){
            		            					return [false, colname+": This must be 17 characters long."];
            		            				}
	            	            				else if(!/^[0-9A-Za-z$]+$/.test(value)){
	            	                				return [false, colname+": This contains invalid characters."];
	            	                			}
	            		            			else{
	            		            				var valTIN= false;
	            		            				
	            		            				if($.trim(value)!=null ){
	            		            					$.ajax({
	            		            						async:false,
	            		            						url : _context +"/shipmentCommodity/validateTIN",
	            		            						type : "GET",
	            		            						data : {
	            		            							
	            		            							validateTIN: $.trim(value)
	            		            						},
	            		            						success : function(responseText) {
	            		            							if(responseText.success==false){
	            		            								valTIN= true;
	            		            						}
	            		            							else{
	            		            								var isConfirm = confirm("TCN is not unique. Exists on another Shipment. Override? (Y/N)");
	            		            								if (isConfirm) {
	            		            									valTIN= true;
	            		            							}else{
	            		            								valTIN= false;
	            		            								
	            		            							}
	            		            							}}});
	            		            					}
	            		            				
	            		            				
	            		            				
	            		            				if(valTIN == true){
	            		            					return [true,""];
	            		            				}else{
	            		            					return [false,""];
	            		            				}
	            		            				
	            		            				
	            		            				if($.trim(value).length == 17){
	            		            					return [true,""];
	            		            				}
	            		            				else {
	            		            					return [false, colname+": This must be 17 characters long."];
	            		            				}
	            								}
	            	            			}
	            		            			
	           	                		 }},editoptions: {maxlength: 17}},
	           	                			{name:'edit', index:'edit', width:50,shrinkToFit:true, editable:false, formatter:'actions',formatoptions:{
				                            	  onEdit:function(rowid) {
				                            		
				                            		  if(jQuery("#convGrid").getRowData(rowid).actionLinkUnlink =="LINK" )
				                            			{ $("#convGrid").jqGrid('restoreRow',rowid) ; 
				                            			$('#FormError').html("");
				                            			$("div.ui-pg-div.ui-inline-del", "#"+rowid).remove();
				                            			$("div.ui-pg-div.ui-inline-cancel", "#"+rowid).remove();
				                            			$("div.ui-pg-div.ui-inline-save", "#"+rowid).remove();
				                            			$('#convGrid').trigger('reloadGrid');
				                            			if($("#convGrid").getGridParam("reccount")>0){ $('#tr_shipmentConvFreightId').hide();};
				                            			$("div.ui-pg-div.ui-inline-del", "#"+rowid).remove();
				                            			
				                            			return;
				                            			}
				                            		  $("div.ui-pg-div.ui-inline-del", "#"+rowid).remove();
				                            		 
				                            		  $("div.ui-pg-div.ui-inline-del","#convGridDiv").remove();
				                            		 
				                            		
				                                   }
				                               }
				                              },
	           	                				                              
	           	                	{name:'isDeletable', index:'isDeletable', width:30,shrinkToFit:true, formatter:(isCommodityBLCVDelete==true?'showlink': 'formatLinkBLCV'), formatoptions : {
						                   				baseLinkUrl : "javascript:",
						                				showAction: "actionDelete('",
						                				addParam: "');" }
						                               },
						             {name:'actionLinkUnlink', index:'actionLinkUnlink', width:60,shrinkToFit:true, formatter: (isCommodityBLCVLink==true?'showlink': 'formatLinkBLCV'), formatoptions : {
							                   				baseLinkUrl : "javascript:",
							                				showAction: "actionToLinkUnLinkConv('",
							                				addParam: "');" }
							                               },
							         {name:'loadDischargeServicePair', index:'loadDischargeServicePair',hidden:true}
	                            	 
	                            	 ];
		// for security
		jQuery.extend($.fn.fmatter,{
			formatLinkBLCV : function(cellvalue,
					options, rowdata) {
					return '';
			}
		});
	
	var jsonReaderConventional = {
									root:"rows",
									page:"page",
									total:"total",
									records:"records", 
									cell:"cell",
									repeatitems:false,
									id:"shipmentFreightSeqNumber"
				               };


	createGrid("convGrid", "pagerconvGrid",
			'../shipmentCommodity/loadConventionalGrid',
			'../shipmentCommodity/addConventionalGrid',
			'../shipmentCommodity/updateConventionalGrid', 
			'',
			'',
			colNamesForConventional, colModelForConventional, "Conventional", 
			"auto", 10, [ 10, 20, 30 ],false, false, false, false,
			jsonReaderConventional,isCommodityBLCVUpdate?false:true,true,true,true,false,false,false,false,convGridLoadComplete,false,false);	
	
	
}

function createShipmentSpecialServiceGrid(){
	
//	$('#maintainShipmentSpecialServices').block({ message: "Loading Shipment Special Service ..." });
var specialServiceCol = [ 'NO','Special Service','Lvl','All','Equipment/<br>VINsight#','Units','Rate', 'Rate Basis', 'User', 'Last Update', 'Payee','C/O Org','Amount'];
	
	var specialServiceMod = [
	                         {name:'seqNo',index:'seqNo', width:55,editable:false, editoptions:{readonly:true,size:10}, hidden:true},
	                         {name:'specialServiceCode',index:'specialServiceCode', width:80,editable:false, formatter:(isSpecialServiceUpdate==true?'showlink': 'formatLink'), formatoptions : {
	                   				baseLinkUrl : "javascript:",
	                				showAction: "editSpecialService('",
	                				addParam: "');" }
	                               }, 
	                         {name:'processLevelCode',index:'processLevelCode', width:30,editable:false},
	                         {name:'isApplyToAll',index:'isApplyToAll', width:30,editable:false},
	                         //Increased width for defect D026220
	                         {name:'equipmentVinsight',index:'equipmentVinsight', width:90,editable:false}, 
	                         {name:'numberOfUnit',index:'numberOfUnit', width:60,editable:false}, 
	                         {name:'manualUserRate',index:'manualUserRate', width:60,formatter:'number',formatoptions: {prefix:'$', thousandsSeparator:',', defaultValue:''},editable:false, align: 'right'}, //for currency formatter
	                         {name:'rateBasisCode',index:'rateBasisCode', width:40,editable:false},
	                        
	                         //Defect 24939
	                         //Added code to create User,Date and Time grids in Special Service overlay
	                         {name:'lastUpdateUser',index:'lastUpdateUser', width:60,editable:false},
	                         {name:'lastUpdateDate',index:'lastUpdateDate', width:90,editable:false},
	                         //{name:'specialServiceDate',index:'specialServiceDate', width:60,editable:false}, 
	                         {name:'payee',index:'payee', width:100,editable:false}, 
	                         {name:'careOf',index:'careOf', width:90,editable:false},
	                         {name:'amount',index:'amount', width:70,formatter:'number',formatoptions: {prefix:'$', thousandsSeparator:',', defaultValue:''},editable:false, align: 'right'} //for currency formatter
	                        ];
				jQuery.extend($.fn.fmatter,
					{
					formatLink : function(cellvalue,
						options, rowdata) {
						return cellvalue;
				}
				});
	
	var jsonReaderSpSvc = {
			root : "rows",
			page : "page",
			total : "total",
			records : "records",
			repeatitems : false,
			cell : "cell",
			id : "seqNo",
			clear:true
		};

	createGrid(
			"specialServiceGrid", // grid id for user
			"specialServicePager", // page id for user
			_context+'/shipment/specialservice/load', 
			_context+'/shipment/specialservice/add', 
			_context+'/shipment/specialservice/update', 
			_context+'/shipment/specialservice/delete', 
			_context+'/shipment/specialservice/delete',
			specialServiceCol, 
			specialServiceMod, 
			"Special Services",
			"auto",
			10,
			[10,20,30],
			true,
			isSpecialServiceDelete,
			false, //load once
			true, jsonReaderSpSvc,true,true,true,true,true,false,false,false,specialServiceGridLoadComplete,false,true);
	
	//$('#maintainShipmentSpecialServices').unblock();
	createShipmentCommodityGrid();
	$('#del_specialServiceGrid').bind('click',function(){ saveBillBeforeBillButton = true; });
	
}

function createShipmentClauseGrid(){
	
//	$('#maintainBookingClauses').block({ message: "Loading Shipment Clause ..." });
	  var colNames = ['Id','Clause Code', 'Is Editable', 'Clause Type','Text','Source','' ];
	  
	  var colModel = [
	       {name:'clauseSeqNo', hidden:true},
	       {name:'standardClauseCode', index:'standardClauseCode', width:100},
	       {name:'isEditable', hidden:true},
	       {name:'clauseTypeCode', index:'clauseTypeCode', width:100},
	       {name:'clauseText',index:'clauseText', width:350, editable:true, edittype:"textarea", editrules : { required : true, custom:true, custom_func:validateMaxlength}, editoptions : {rows : 2, cols : 50}},
	       {name:'clauseSource',index:'clauseSource', width:150}, 
	       {name:'actions', width:50,hidden : true, formatter:'actions',formatoptions:{keys:true, editbutton:true, delbutton:true,
	    	   afterRestore:function()
	    	   {
	    		 //Clears and hides error row
	    			$('table[aria-labelledby="gbox_gridIdForClauses"] thead tr[id="FormError"] td').html("");
	    			$('table[aria-labelledby="gbox_gridIdForClauses"] thead tr[id="FormError"]').hide();
	    	   }
	       }}];
	  
	  //alert("TTEEEEEEEEEset");
	  var jsonReader = {
				root : "rows",
				page : "page",
				total : "total",
				records : "records",
				cell : "cell",
				repeatitems : false,
				id : "clauseSeqNo"
			};

			createGrid("gridIdForClauses", // grid id for party
			"pagerIdForClauses", // page id for party
			_context+'/shipment/clause/load', // geturl
			'', // addurl
			_context+'/shipment/clause/updateClause', // edit url
			'',
			_context+'/shipment/clause/delete',// delete selected URL
			colNames, colModel, "Clauses",// caption
			90,// height
			3,// row num
			[3,6,9],// row list
			true,// multiselect
			isClausesDelete,// multidelete //Modified to this value from default true for D028950 
			false,// load once
			false, // read only grid
			jsonReader, // json reader
			false, // hide edit
			true, // hide delete
			true, // autowidth
			true, // rownumbers
			true, // hide custom add row
			false,// hide pager row
			null,// custom edit method
			clauseGridComplete,// custom grid complete
			clauseLoadComplete,// custom load complete
			false,// default hidden
			true);// row Color Based On status
			

			$("#gridIdForClauses").jqGrid('setGridParam',{
				delOptions: {url: _context+'/shipment/clause/deleteClause', caption: "Confirmation", msg: "Please CONFIRM request to DELETE",
					beforeSubmit:function(postdata)
					{
						rowData=jQuery("#gridIdForClauses").getRowData(postdata);
						/*if(rowData.standardClauseCode=='BOND' )//&& $('#isInBond :selected').val()=='true'
						{
							$('#msgDiv').html('<div class="message_error">'+'BOND clause cannot be deleted'+'</div>');
							window.scrollTo(0, 0);
							$('#eData').trigger('click');
							return [false,""];
						}
						else*/{
							return [true,""];
						}
					}
				}
			});
		
			
	//		$('#maintainBookingClauses').unblock();
			
}


function createShipmentHazardGrid(){
	
	  console.log("createHazardGrid");
	  var colNames = ['Id','gridid','hazid','archivehazid','seq','Stop #', 'Unit Id', 'UN/NA','UN/NA #','Hzd Code','Hzd Class','Description','Pkg Grp','Pieces','Kind','Weight','Lmt Qty' ];
	  
	  var colModel = [
	       {name:'shipmentHazardId', hidden:true},
	       {name:'gridId', hidden:true},
	       {name:'commodityLineId', hidden:true},
	       {name:'archiveCommodityLineId', hidden:true},
	       {name:'seqNumber', hidden:true},
	       {name:'stopNumber',  width:40},
	       {name:'unitId', width:100},
	       {name:'hazType', hidden:true},
	       {name:'hazTypeAndNumber',width:70},
	       {name:'hazNumber', hidden:true},
	       {name:'hazPrimaryClass',width:50},
	       {name:'hazCommodityName',width:200},
	       {name:'hazPackageGroup',width:50},
	       {name:'hazPieces',width:50},
	       {name:'hazPiecesUomCode',width:50},
	       {name:'hazWeight',width:50},
	       {name:'hazLimitedQuantity',width:50,formatter:'select', stype:'select', edittype:'select', editoptions: { value: "false:No;true:Yes" }}
	       
	   ];
	  
	  var jsonReader = {
				root : "rows",
				page : "page",
				total : "total",
				records : "records",
				cell : "cell",
				repeatitems : false,
				id : "gridId"
			};

			createGrid("hazardGrid", // grid id for hazard
			"hazardPager", // page id for hazard
			_context+'/shipment/hazard/load', // geturl
			'', // addurl
			'',
			'',
			'',
			colNames, colModel, "Hazardous",// caption
			"auto",// height
			10000,// row num
			[10000],// row list
			false,// multiselect
			false,// multidelete 
			false,// load once
			true, // read only grid
			jsonReader, // json reader
			true, // hide edit
			true, // hide delete
			true, // autowidth
			true, // rownumbers
			true, // hide custom add row
			true,// hide pager row
			null,// custom edit method
			hazardGridComplete,// custom grid complete
			hazardLoadComplete,// custom load complete
			false,// default hidden
			true, // row Color Based On status
			null,
			null,
			null,
			null,
			true); // Footer
			

			
			
}


function createShipmentHazardDialogGrid(){
	
	  console.log("createHazardDialogGrid");
	  var colNames = ['Id','gridid','Haz id','archive id','Stop #', 'Unit Id', 'UN/NA','UN/NA #','Hzd Code','Hzd Class','Description','Pkg Grp','Pieces','Kind','Weight','Lmt Qty','Seq' ];
	  
	  var colModel = [
	       {name:'shipmentHazardId', hidden:true},
	       {name:'gridId', hidden:true},
	       {name:'commodityLineId', hidden:true},
	       {name:'archiveCommodityLineId', hidden:true},
	       {name:'stopNumber',  width:40},
	       {name:'unitId', index:'unitId', jsonMap:'unitId', width:100,  edittype:'select', editable:false}, 
	       {name:'hazType', hidden:true},
	       {name:'hazTypeAndNumber',width:70},
	       {name:'hazNumber', hidden:true},
	       {name:'hazPrimaryClass',width:50},
	       {name:'hazCommodityName',width:200},
	       {name:'hazPackageGroup',width:50},
	       {name:'hazPieces',width:50},
	       {name:'hazPiecesUomCode',width:50},
	       {name:'hazWeight',width:50},
	       {name:'hazLimitedQuantity',width:50,formatter:'select', stype:'select', edittype:'select', editoptions: { value: "false:No;true:Yes" }},
	       {name:'seqNumber',width:50}
	   ];
	  
	  var jsonReader = {
				root : "rows",
				page : "page",
				total : "total",
				records : "records",
				cell : "cell",
				repeatitems : false,
				id : "gridId"
			};

			createGrid("hazardDialogGrid", // grid id for hazard
			"hazardDialogGrid", // page id for hazard
			_context+'/shipment/hazard/loadEditor', // geturl
			'', // addurl
			'',
			'',
			'',
			colNames, colModel, "Hazard Editor",// caption
			"auto",// height
			10000,// row num
			[5,10,20],// row list
			true,// multiselect
			false,// multidelete 
			false,// load once
			true, // read only grid
			jsonReader, // json reader
			true, // hide edit
			true, // hide delete
			true, // autowidth
			true, // rownumbers
			true, // hide custom add row
			true,// hide pager row
			null,// custom edit method
			hazardEditorGridComplete,// custom grid complete
			hazardEditorLoadComplete,// custom load complete
			false,// default hidden
			true // row Color Based On status		
			);
			

			

			// Disable grids on select
			$("#hazardDialogGrid").jqGrid('setGridParam',{
				beforeSelectRow: function(rowid, e) //this function is used when you select rows
				{
					console.log('before row select');
				    //means when your check box is disabled,you can't check your check box              
					if( $("#jqg_hazardDialogGrid_"+rowid).attr("disabled") )
					{
						return false;
					}
				    	return true; 
					},
				onSelectAll: function(aRowids,status) // this function is used when you select all check box
				{
					console.log('onSelectAll');
					if (status) 
					{
						for(var i=0;i<aRowids.length;i++)
						{
							if( $("#jqg_hazardDialogGrid_"+aRowids[i]).attr("disabled"))
							{
								$("#jqg_hazardDialogGrid_" + aRowids[i]).removeAttr("checked");
								$("#hazardDialogGrid").setSelection(aRowids[i],false);

							}
						}

				     }

				}
			});	
			
}
;var isOneTimerChanged = "";
//added against 21739
var oneTimeCustomerAdded=false;
var isCustomerOverridden = false;
var provinces = "";	
$(function() {
	$("#shipmentonetimecustomer").clearForm();
	clearOneTimeCustomerForm();
	trimOnetimeContactOnChange(); //	D018433
	if($('#oneTimeCountry').val() != null && (new String($('#oneTimeCountry').val().toLowerCase())=="ca" || new String($('#oneTimeCountry').val().toLowerCase()).ignoreCase=="canada")){
		provinces=$('#oneTimeState').val() + "-" + $('#oneTimeProvince').val();
	}
	$("#oneTimeCustomerDialog").dialog({
		autoOpen : false,
		width : 1010,
		modal : true,
		open : function()
		{
			$("#shipmentonetimecustomer").validationEngine('attach');
			isOneTimerChanged ="";
			tabSequence('#oneTimeCustomerDialog',false,false);
		},
		close : function()
		{
			removeOneTimeCustomerPopUps();
			$("#shipmentonetimecustomer").validationEngine('detach');			
			//clearOneTimeCustomerForm();
			/*This line is commented because it is calling clearContactInfo() of shipment_parties_overlay.js
			 and clear its contact info on save, that is not desirable. Hence I have manually called the thing 
			 except clearing contact info of parties overlay*/
			clearHiddenFields();
			$("#oneTimeCustomerDialog input[type=text]").val("");
//			$('input[name="dataAdminCode"]').attr("disabled", true);
			$('#existingAddressLine1').attr("disabled", true);
			//$('#otCommunicationMethodCode').attr("checked", true);
			//$('#otCommunicationMethodCode').val("P"); //addition start for defect DDO17159
			$('#oneTimeCustMsgDiv').html('');
			$('#oneTimeCity').val(''); //addition start for defect DDO17061
			$('#oneTimeState').val(''); //addition start for defect DDO17061
			$('#oneTimeZip').val('');
			$('#custContactId').val('');
			
			$('#oneTimeContactPhoneCountryCode').val('');
			$('#oneTimeContactPhoneAreaCode').val('');
			$('#oneTimeContactPhoneExchange').val('');
			$('#oneTimeContactPhoneStation').val('');
			$('#oneTimeContactPhoneExtension').val('');
			
			$('#oneTimeContactCellCountryCode').val('');
			$('#oneTimeContactCellAreaCode').val('');
			$('#oneTimeContactCellExchange').val('');
			$('#oneTimeContactCellStation').val('');
			$('#oneTimeContactCellExtension').val('');
			
			$('#oneTimeContactFaxCountryCode').val('');
			$('#oneTimeContactFaxAreaCode').val('');
			$('#oneTimeContactFaxExchange').val('');
			$('#oneTimeContactFaxStation').val('');
			$('#oneTimeContactFaxExtension').val('');
			
			$('#oneTimeContactEmailAddress').val('');
			
			$('input[name="communicationMethodCode"]').attr("checked", false);
			$('#otCommunicationMethodCode').attr("checked", false);
			tabSequence('#shipmentForm',true,false);
			
			
		}
	});
	
	$('#shipmentonetimecustomer :input').change(function()
	{
		if((this.type=='text' || this.type=='radio') && this.name!='dataAdminCode')
			isOneTimerChanged = "Y";
	});
	
	$('#oneTimeZip').blur(function()
	{
		usZipDisplay();
	});
	$('#oneTimeContactEmailAddress').blur(function()
			{
		$('#oneTimeContactEmailAddress').attr('title',$('#oneTimeContactEmailAddress').val());
			});
	
	$('#oneTimeCountry').blur(function()
	{
		usZipDisplay();	
		//populateOneTimeContactPhoneCountryCode(); // New method added for BR.....
    });
	
	$('#contactFirstName').blur(function()
	{
		if($.trim($('#contactFirstName').val())=='' && $('#custContactId').val()!='')
		{
			/*if($('#dataAdminCode:checked').val()=="A")
				$('#dataAdminCode:checked').attr("checked", false);
			$('#dataAdminCode').attr("disabled", true);*/
			
			$('#custContactId').val('');
			$('#contactLastName').val('');
			
			$('#oneTimeContactPhoneCountryCode').val('');
			$('#oneTimeContactPhoneAreaCode').val('');
			$('#oneTimeContactPhoneExchange').val('');
			$('#oneTimeContactPhoneStation').val('');
			$('#oneTimeContactPhoneExtension').val('');
			
			$('#oneTimeContactCellCountryCode').val('');
			$('#oneTimeContactCellAreaCode').val('');
			$('#oneTimeContactCellExchange').val('');
			$('#oneTimeContactCellStation').val('');
			$('#oneTimeContactCellExtension').val('');
			
			$('#oneTimeContactFaxCountryCode').val('');
			$('#oneTimeContactFaxAreaCode').val('');
			$('#oneTimeContactFaxExchange').val('');
			$('#oneTimeContactFaxStation').val('');
			$('#oneTimeContactFaxExtension').val('');
			
			$('#oneTimeContactEmailAddress').val('');
			
			$('input[name="communicationMethodCode"]').attr("checked", false);
			$('#otCommunicationMethodCode').attr("checked", true);
		}	
    });
	$('#contactFirstName').change(function(){
		deriveOrganizationName();
	});
	$('#contactLastName').change(function(){
		deriveOrganizationName();
	});

	$('#customerName').blur(function()
	{
		
		var defaultCustomerName = "";
		if($('#contactFirstName').val()!='' && $('#contactLastName').val()!='')
			defaultCustomerName = $('#contactFirstName').val()+ " " + $('#contactLastName').val();
		else if($('#contactFirstName').val()!='')
			defaultCustomerName = $('#contactFirstName').val();
		else if($('#contactLastName').val()!='')
			defaultCustomerName = $('#contactLastName').val();
		
		if($.trim($('#customerName').val()) != defaultCustomerName)
			isCustomerOverridden = true;
		else
			isCustomerOverridden = false;
		 /*if($.trim($('#customerName').val())=='' && $('#customerId').val()!='')
		{
			var additionalInfo = $('#additionalInfo').val();
			clearOneTimeCustomerForm();
			$('#additionalInfo').val(additionalInfo);
		}
		if($.trim($('#customerName').val())=='')
		{
			if($('#dataAdminCode:checked').val()=="A")
				$('#dataAdminCode:checked').attr("checked", false);
			$('#dataAdminCode').attr("disabled", true);
		}
		else
			$('#dataAdminCode').attr("disabled", false); */
    });
	
	$('#addressLine1').blur(function()
	{
		if($.trim($('#addressLine1').val())=='' && $('#addressId').val()!='')
		{
			$('#addressId').val('');
			$('#custAddressRoleId').val('');
			$('#customerNameQualifier').val('');
			$('#addressLine2').val('');
			$('#addressLine3').val('');
			$('#oneTimeCity').val('');
			$('#oneTimeState').val('');
			$('#oneTimeZip').val('');
			$('#oneTimeProvince').val('');
			$('#oneTimeCountry').val('');
		}
    });	
	
	$('#existingAddressLine1').gatesPopUpSearch({
		func : function() {
			if($('#replaceOrganizationId').val()!='')
				customerAddressPopupSearch();
			else
				alert("Please select organization first");
		}
	});
	
	$('.trimmedField').change(function()
	{
		$(this).val($.trim($(this).val()));
	});
	
	$('#existingOrganization').gatesAutocomplete(
			{
				source:_context+'/cas/autocomplete.do',
				name: "Customer Name",
			 	extraParams: {
			 		 method: 'searchOrg',
			 		 searchType: '229',
			 		parentSearch:  function() { return "BK|"; }
			 	},
			 	
				autoSelectWhenSingle:true,
				autoSelectFirst:true,
					autoSelectCriteria:function(item) {
					   if(item != null){
					     return 'true';
					  }
					  else {
					     return 'false';
					  }
					},
				//source : urlShipperOrg,
				formatItem : function(data) {
					return data.name + "-" + data.abbr;
				},
				formatResult : function(data) {
					return data.name + "-" + data.abbr;
				},
				select : function(data) {
					
					$('#replaceOrganizationId').val(data.id);
					if($("#dataAdminCode:checked").val()=="C")
					{
						$('#existingAddressLine1').val("");
						$('#existingAddressLine1').trigger('change');
						
						singleAddressOneTimerCall();
					}
				}
			});
	
	$('#existingOrganization').gatesPopUpSearch({
		func : function() {
			customerOrganizationPopupSearch();
		}
	});
	$('#oneTimeCountry').gatesPopUpSearch({
		func : function() {
			oneTimeCountryPopupSearch();
		}
	});
	
	$('#existingOrganization').change(
			function() {
				if($('#existingOrganization').val()=='')
					$('#replaceOrganizationId').val('');
		});
	
	$('#existingAddressLine1').change(
			function() {
				if($('#existingAddressLine1').val()=='')
					$('#replaceAddressRoleId').val('');
		});
	
	var phoneCountryCode='oneTimeContactPhoneCountryCode';
	var cellCountryCode='oneTimeContactCellCountryCode';
	var faxCountryCode='oneTimeContactFaxCountryCode';
	
	autoTabOneTime('oneTimeContactPhoneCountryCode','oneTimeContactPhoneAreaCode', 1,'oneTimeContactPhoneCountryCode');
	autoTabOneTime('oneTimeContactPhoneAreaCode','oneTimeContactPhoneExchange', 3,'oneTimeContactPhoneCountryCode');	
	autoTabOneTime('oneTimeContactPhoneExchange','oneTimeContactPhoneStation', 3,'oneTimeContactPhoneCountryCode');
	autoTabOneTime('oneTimeContactPhoneStation','oneTimeContactPhoneExtension', 4,'oneTimeContactPhoneCountryCode');	
	autoTabOneTime('oneTimeContactPhoneExtension','oneTimeContactCellCountryCode', 4,'oneTimeContactPhoneCountryCode');
	 
	autoTabOneTime('oneTimeContactCellCountryCode','oneTimeContactCellAreaCode', 1,'oneTimeContactCellCountryCode');
	autoTabOneTime('oneTimeContactCellAreaCode','oneTimeContactCellExchange', 3,'oneTimeContactCellCountryCode');	
	autoTabOneTime('oneTimeContactCellExchange','oneTimeContactCellStation', 3,'oneTimeContactCellCountryCode');
	autoTabOneTime('oneTimeContactCellStation','oneTimeContactCellExtension', 4,'oneTimeContactCellCountryCode');	
	autoTabOneTime('oneTimeContactCellExtension','oneTimeContactFaxCountryCode', 4,'oneTimeContactCellCountryCode');
	 
	autoTabOneTime('oneTimeContactFaxCountryCode','oneTimeContactFaxAreaCode', 1,'oneTimeContactFaxCountryCode');
	autoTabOneTime('oneTimeContactFaxAreaCode','oneTimeContactFaxExchange', 3,'oneTimeContactFaxCountryCode');	
	autoTabOneTime('oneTimeContactFaxExchange','oneTimeContactFaxStation', 3,'oneTimeContactFaxCountryCode');
	autoTabOneTime('oneTimeContactFaxStation','oneTimeContactFaxExtension', 4,'oneTimeContactFaxCountryCode');	
	autoTabOneTime('oneTimeContactFaxExtension','oneTimeContactEmailAddress', 4,'oneTimeContactFaxCountryCode');
	
	
	
	var url = _context +'/organization/address/autoComplete' 
	$('#oneTimeProvince').gatesAutocomplete({
		source: url ,
		autoSelectFirst:true,
		extraParams:{
			country: function () { return $('#oneTimeCountry').val(); }
		},
		formatItem: function(item) {
			provinces=""+item.code+"-"+item.name;
			return provinces;
			
		},
		formatResult: function(item) {
			return item.name;
		},
		select: function(item) {
			$('#oneTimeProvince').val(item.name);
			$('#oneTimeState').val(item.code);
			$('#oneTimeCountry').val("CA");
			provinces=""+item.code+"-"+item.name;
		}	
	});		

	$('#oneTimeCountry').change(function(){
		if($('#countryName').val() == null || (new String($('#oneTimeCountry').val().toLowerCase())!="ca" && new String($('#oneTimeCountry').val().toLowerCase()).ignoreCase!="canada")){
			provinces = "";
		}
		if($('#countryName').val() != null){
			$('#countryName').val( $.trim($('#countryName').val().toUpperCase()));
		}
	});
	$('#oneTimeState').change(function(){
		if($('#countryName').val() != null && (new String($('#oneTimeCountry').val().toLowerCase())!="ca" && new String($('#oneTimeCountry').val().toLowerCase()).ignoreCase!="canada")){
			provinces = "";
		}
	});
	$('#oneTimeProvince').change(function(){
		if($('#countryName').val() != null && (new String($('#oneTimeCountry').val().toLowerCase())!="ca" && new String($('#oneTimeCountry').val().toLowerCase()).ignoreCase!="canada")){
			provinces = "";
		}
	});	
});

function isAmericanOneTime(id)
{
	var val = $('#'+id).val();
	//confirm("inside isAmericanO "+val);
	if(val=='' || val=='1' || val=='01' || val=='001')
		return true;
	else
		return false;
}

function deriveOrganizationName(){
	//alert("Inside shipmentOneTimeCustomer deriveOrganizationName, customerId:"+$('#customerId').val()+", isCustomerOverridden:"+isCustomerOverridden+", FirstName:"+$('#contactFirstName').val()+", lastName:"+$('#contactLastName').val());
	if(!isCustomerOverridden)
	{
		if($('#contactFirstName').val()!='' && $('#contactLastName').val()!='')
			$('#customerName').val($('#contactFirstName').val()+ " " + $('#contactLastName').val());
		else if($('#contactFirstName').val()!='')
			$('#customerName').val($('#contactFirstName').val());
		else if($('#contactLastName').val()!='')
			$('#customerName').val($('#contactLastName').val());
	}
	/*$('#customerName').val($('#contactFirstName').val()+ " " + $('#contactLastName').val());
	if($.trim($('#customerName').val())=='')
	{
		if($('#dataAdminCode:checked').val()=="A")
			$('#dataAdminCode:checked').attr("checked", false);
		$('#dataAdminCode').attr("disabled", true);
	}
	else
		$('#dataAdminCode').attr("disabled", false); */
}

function openOneTimeCustomer(callingParty) {
    
        var tradeCodeBooking = document.getElementById("tradeCode");
        var tradeCodeBilling = document.getElementById("tradeCodeDesc");
        var tradeCodeValue;
        if(tradeCodeBilling) {
            tradeCodeValue = tradeCodeBilling.textContent.slice(0, 1);
        } else if(tradeCodeBooking){
            var tradeCodeValue = tradeCodeBooking.value;
        }
        
        var customerGroup = document.getElementById('customerGroupId');
        var customerGroupText;
        if(customerGroup){
            customerGroupText = customerGroup.options[customerGroup.selectedIndex].textContent; 
            if("Select" == customerGroupText) {
                customerGroupText = null;
            }            
        } 
        
	clearOneTimeCustomerForm(); //addition start for defect DDO17061
	$("#shipmentonetimecustomer").clearForm();
	
	$("#oneTimeCustomerDialog").dialog("option", "title", 'One Timer Customer');
	$("#oneTimeCustomerDialog").dialog("option", "buttons",
			
		[
                {
			text : "Cancel",
			click : function() {
				if(isOneTimerChanged!="")
				{
					var r = confirm("All unsaved changes will be discarded.Continue?");
					if(r){
						makeScreenFiledsReadOnly(false); /*Code Addition for defect -DD016962 */
						$("#oneTimeCustomerDialog").dialog("close");
					}else
						return;
				}
				else{
					makeScreenFiledsReadOnly(false); /*Code Addition for defect -DD016962 */
					$("#oneTimeCustomerDialog").dialog("close");
				}
			}
		},
		{
			text : "Save",
			click : function() {
				if(callingParty=='spotPull')
				{
					if ($("#shipmentonetimecustomer").validationEngine('validate') 
							& validateContactInfo()) {
						var queryString = $('#shipmentonetimecustomer')
								.formSerialize();
						$.ajax({
							url : _context +"/shipment/onetimecust/processOneTimeCustomerForSpotPull",
							type : "POST",
							data : queryString,
							success : function(
									responseText) {
								if(responseText.success)
									oneTimeSuccessFunc(responseText, callingParty);
								else
									showResponseMessagesSpot('oneTimeCustMsgDiv', responseText);
							}
						});
					} else
						return false;
				}
				else
				{
					//D018663: Contact not mandatory for billing
					if ($("#shipmentonetimecustomer").validationEngine('validate')) {
						if($('#oneTimeCity').val()=='')
						{
							$('#oneTimeCity').validationEngine('showPrompt', '* This field is required', 'error', 'topRight', true);
							return false;
						} else {
							var queryString = $('#shipmentonetimecustomer').formSerialize();
							$.ajax({
								url : _context +"/shipment/onetimecust/processOneTimeCustomer",
								type : "POST",
								data : queryString,
								success : function(
										responseText) {
									if(responseText.success)
										oneTimeSuccessFunc(responseText, callingParty);
									else
										showResponseMessages('oneTimeCustMsgDiv', responseText);
									//added against 21739
									oneTimeCustomerAdded=true;
								}
							});
						}
					} else
						return false;
				}
				$('input[name = "organizationName"]').attr('title',$('#customerName').val());
				$('input[name = "address"]').attr('title',$('input[name = "addressLine1"]').val()+','+
						$('input[name = "addressLine2"]').val()+','+
						$('input[name = "addressLine3"]').val());
			}
		},
		{
			text : "Clear",
			click : function() {
				if(isOneTimerChanged=="")
				{
					var isChanged = false;
					var elements = $('#shipmentonetimecustomer :input');
					for(var i=0;i<elements.length;i++)
					{
						if(elements[i].type=='text' && elements[i].value!='')
						{
							isChanged = true;
							break;
						}
					}
					if(isChanged)
						isOneTimerChanged = "Y";
				}
				clearOneTimeCustomerForm();
			}
		}, {
			text : "Send To Data Admin",
			click : function() {
				var queryString = $('#shipmentonetimecustomer').formSerialize();
                                
				if (validateDataAdmin() && $("#shipmentonetimecustomer").validationEngine('validate') && validateContactInfo(callingParty)) 
				{
					$.ajax({
						url : _context +"/shipment/onetimecust/sendToDataAdmin",
						type : "POST",
						data : queryString,
						success : function(responseText) {
							showResponseMessages('oneTimeCustMsgDiv', responseText);
						}
					});
				}
				else 
					return false;
			}
		} ]);
            
        $('#oneTimerTradeCodes').val(tradeCodeValue);
        $('#customerGroup').val(customerGroupText);
        if(callingParty != 'shipper' && callingParty != 'consignee') {
            $('#oneTimerTradeCodesDiv').attr("hidden", true);
        }
            
	isCustomerOverridden = false;
	var addressRoleId = '';
	if(callingParty=='shipper' && 
			$('input[name="shipper\\.isOneTimeCustomer"]').val()=='true')
		addressRoleId = $('input[name="shipper\\.addressRoleId"]').val();
	else if(callingParty=='consignee' && 
			$('input[name="consignee\\.isOneTimeCustomer"]').val()=='true')
		addressRoleId = $('input[name="consignee\\.addressRoleId"]').val();
	else if(callingParty=='party' && 
			$('input[name="isOneTimeCustomer"]').val()=='true')
		addressRoleId = $('input[name="addressRoleId"]').val();
	if(addressRoleId!='')
	{
		makeScreenFiledsReadOnly(true); /*Code Addition for defect -DD016962 */
		$.ajax({
			url : _context +"/shipment/onetimecust/getOneTimer",
			data : {addressRoleId:addressRoleId},
			success : function(responseText) {
				$("#shipmentonetimecustomer").loadJSON(responseText);
				$("#custContactId").val(responseText.contactId);
				$('#bkngNo').val($('#shipmentNumber').val());
				$('#otcSequenceNumber').val($('#shipmentSequenceNumber').val());
				$('#otcCorrectionNumber').val($('#shipmentCorrectionNumber').val());
				if($('#bkngNo').val()!='')
					$('input[name="dataAdminCode"]').attr("disabled", false);
				var prefMethod = 0;
				for(var i=1;i<=4;i++)
				{
					if($('#'+callingParty+'Comm'+i.toString()).attr("checked"))
					{
						prefMethod = i;
						break;
					}
				}
				if(prefMethod!=0)
				{
					$('#otCommunicationMethodCode:checked').attr("checked", false);
					$('.otCommunicationMethodCode')[prefMethod-1].checked = true;
				}else{
					//addition start for defect DDO17159
					$('#otCommunicationMethodCode:checked').attr("checked", true);
					$('#otCommunicationMethodCode:checked').val("P");
					//addition end for defect DDO17159
				}
				$("#oneTimeCustomerDialog").dialog('open');
			}
		});
	}
	else
		makeScreenFiledsReadOnly(false)	; /*Code Addition for defect -DD016962 */
		$('#bkngNo').val($('#shipmentNumber').val()); 							// For Defect
		$('#otcSequenceNumber').val($('#shipmentSequenceNumber').val()); 		// For Defect
		$('#otcCorrectionNumber').val($('#shipmentCorrectionNumber').val()); 	// For Defect
		$('#otcCaller').val(callingParty); // D018663
		$("#oneTimeCustomerDialog").dialog('open');
		
		if(callingParty=='shipper'|| callingParty=='consignee'){
			$('#otcPreferredMethodSpan').css('visibility','visible');
		}else{
			$('#otcPreferredMethodSpan').css('visibility','hidden');
		}
	
}

function oneTimeSuccessFunc(responseText, callingParty)
{
	if (callingParty == 'shipper') {
		$('select[name="shipper\\.contactId"]').children().remove();
		$('select[name="shipper\\.contactId"]').append("<option value='' label='Select'></option>");
		$.each(responseText.data.contactList,
		function(key, value) {
			$('select[name="shipper\\.contactId"]').append($("<option/>",
			{
				value : key,
				text : value
			}));
		});
		$("#shipper").loadJSON(responseText.data);
		setShipperCommMethodValue(responseText.data);
		enableDisableContactId('shipper',false);
		changeShipperConsigneeColor("shipper", "Y");
		$('form[id="parties"] input[name="shipper\\.address"]').attr("disabled",true);
		$('form[id="parties"] input[name="shipper\\.city"]').attr("disabled",true);
		$('form[id="parties"] input[name="shipper\\.state"]').attr("disabled",true);
		$('form[id="parties"] input[name="shipper\\.zip"]').attr("disabled",true);
		$('form[id="parties"] input[name="organizationName"]').attr("disabled",true);
		
		$('#shipperName').val(responseText.data.organizationName);
		shipperAddress = responseText.data.address;
		setAccordianTabDetails("shipperNameDiv", "Shipper - "+$('input[name="shipper\\.organizationName"]').val());
		if($('#tradeCode :selected').val()=='')
		{
			$('#tradeCode').val('F');
			$('#tradeCode').trigger('change');
			$('#tradeCode').trigger('blur');
		}
		if($('input[name="consignee\\.organizationName"]').val()=='')
			$('#copyShipper').attr("disabled", false);
		
		
		if($('#prepaidCollectCode').val()=='P'||$('#prepaidCollectCode').val()=='B'){
			addShipperAsDebtor();
		}
		
		//shipperOrgPredictive();
		//shipperAddressPredictive();
	} else if (callingParty == 'consignee') {
		$('select[name="consignee\\.contactId"]').children().remove();
		$('select[name="consignee\\.contactId"]').append("<option value='' label='Select'></option>");
		$.each(responseText.data.contactList,
		function(key, value) {
			$('select[name="consignee\\.contactId"]').append($("<option/>",
			{
				value : key,
				text : value
			}));
		});
		$("#consignee").loadJSON(responseText.data);
		setConsigneeCommMethodValue(responseText.data);
		enableDisableContactId('consignee',false);
		changeShipperConsigneeColor("consignee", "Y");
		$('form[id="parties"] input[name="consignee\\.address"]').attr("disabled",true);
		$('form[id="parties"] input[name="consignee\\.city"]').attr("disabled",true);
		$('form[id="parties"] input[name="consignee\\.state"]').attr("disabled",true);
		$('form[id="parties"] input[name="consignee\\.zip"]').attr("disabled",true);
		$('form[id="parties"] input[name="organizationName"]').attr("disabled",true);
		
		$('#consigneeName').val(responseText.data.organizationName);
		consigneeAddress = responseText.data.address;
		if($('#tradeCode :selected').val()=='')
		{
			$('#tradeCode').val('F');
			$('#tradeCode').trigger('change');
			$('#tradeCode').trigger('blur');
		}
		setAccordianTabDetails("consigneeNameDiv", "Consignee - "+$('input[name="consignee\\.organizationName"]').val());
		if($('input[name="shipper\\.organizationName"]').val()=='')
			$('#copyConsignee').attr("disabled", false);
		
		if($('#prepaidCollectCode').val()=='C'||$('#prepaidCollectCode').val()=='B'){
			addConsigneeAsDebtor();
		}
		//consigneeOrgPredictive();
		//consigneeAddPredictive();
	} else if (callingParty == 'party') {
		$('select[name="contactId"]').children().remove();
		$('select[name="contactId"]').append("<option value='' label='Select'></option>");
		/*$('select[name="contactId"]').append(
		"<option value=''></option>");*/
		$.each(responseText.data.contactList,
		function(key, value) {
			$('select[name="contactId"]').append($("<option/>",
			{
				value : key,
				text : value
			}));
		});
		$("#parties").loadJSON(responseText.data);
		//$('form[id="parties"] input[name = "contactEmailAddress"]').val(responseText.data.contactEmailAddress);
		setPartyCommMethodValue(responseText.data);
		$('form[id="parties"] input[name="address"]').attr("disabled",true);
		$('form[id="parties"] input[name="city"]').attr("disabled",true);
		$('form[id="parties"] input[name="state"]').attr("disabled",true);
		$('form[id="parties"] input[name="zip"]').attr("disabled",true);
		$('form[id="parties"] input[name="organizationName"]').attr("disabled",true);
		$('#partiesRepeatContact').attr("disabled",true);
		$('input[name="contact"]').val("");
		isPartyChanged = "Y";
		//partiesAddPredictive();
	}else if (callingParty == 'spotPull') {
		$("#dispatchLocationGridForm").loadJSON(responseText.data);
	}
	$("#oneTimeCustomerDialog").dialog("close");
}

function removeOneTimeCustomerPopUps() {
	$("#shipmentonetimecustomer").validationEngine('hideAll');
}

//Added by for repeatContact popup.

function repeatContactPopUps() {
		
	var repeatEmail =  $("#repeatContactEmailAddress").val();	
	var repeatPhone =  $("#repeatContactPhone").val();
	var repeatCell =  $("#repeatContactCell").val();
	var repeatFax =  $("#repeatContactFax").val();	
	
	var filter = /^([\w-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;	
	
	var phoneFilter = /^[0-9-+]+$/;
			
	if ( repeatPhone.length > 0 && !phoneFilter.test(repeatPhone)) {		
		$(".error-phonemessages").text("* Numbers only").css("color", "red").fadeIn();	        
	 }
	else{
		$(".error-phonemessages").empty().fadeOut();
	}
	
	if ( repeatCell.length > 0 && !phoneFilter.test(repeatCell)) {		
		$(".error-cellmessages").text("* Numbers only").css("color", "red").fadeIn();	        
	 }
	else{
		$(".error-cellmessages").empty().fadeOut();
	}
	
	if ( repeatFax.length > 0 && !phoneFilter.test(repeatFax)) {		
		$(".error-faxmessages").text("* Numbers only").css("color", "red").fadeIn();	        
	 }
	else{
		$(".error-faxmessages").empty().fadeOut();
	}
	
	
	if ( repeatEmail.length > 0 && !filter.test(repeatEmail)) {		
		$(".error-messages").text("* Invalid email address").css("color", "red").fadeIn();	        
	 }
	else{
		$(".error-messages").empty().fadeOut();
	}
}

function validateContactInfo()
{
	var isValid = true;
	$('#contactFirstName').val($.trim($('#contactFirstName').val()));
	//alert($("#otCommunicationMethodCode:checked").val());
	if($('#oneTimeCity').val()=='')
	{
		$('#oneTimeCity').validationEngine('showPrompt', '* This field is required', 'error', 'topRight', true);
		isValid = false;
	}
	if($('#contactFirstName').val()=='')
	{
		// D026028,Commented contact firstname in OneTimeCustomer shipper and consignee. 
		// Defect 25151
	/*	if($("#tradeCode").val()=="F"){
			isValid = true;
		}else{
		$('#contactFirstName').validationEngine('showPrompt', '* This field is required', 'error', 'topRight', true);
		isValid = false;
	}*/
	}
	var caller= $('#otcCaller').val();
	if(caller=='shipper' || caller=='consignee' || $("#otcPreferredMethodSpan").css('visibility')=='visible'){ //D018663
		
	/* if($("#otCommunicationMethodCode:checked").val()==undefined || $("#otCommunicationMethodCode:checked").val()=="")
	{
		isValid = false;
		$("#otCommunicationMethodCode").validationEngine('showPrompt', 'Please select a preferred method.', 'error', true);
	}*/
	 if(!validatePhoneNo('customerPhone') || !validatePhoneNo('customerCell') || !validatePhoneNo('customerFax')){
		isValid = false;
	 }
	
	if($("#otCommunicationMethodCode:checked").val()=="P" && $("#oneTimeContactPhoneAreaCode").val()=="")
	{
		// Defect 25150
		if($("#tradeCode").val()=="F"){
			isValid = true;
		}else{
		isValid = false;
		$($('.otCommunicationMethodCode')[0]).validationEngine('showPrompt', 'Preferred communication (Phone) cannot be empty', 'error', true);
		$('#oneTimeContactPhoneAreaCode').validationEngine('showPrompt', 'Phone is required', 'error', 'topLeft', true);
	}
	}
	if($("#otCommunicationMethodCode:checked").val()=="C" && $("#oneTimeContactCellAreaCode").val()=="")
	{if($("#tradeCode").val()=="F"){
		isValid = true;
	}else{
		isValid = false;
		$("#oneTimeContactCellAreaCode").validationEngine('showPrompt', 'Preferred communication (Cell) cannot be empty', 'error', true);
	}
	}
	if($("#otCommunicationMethodCode:checked").val()=="F" && $("#oneTimeContactFaxAreaCode").val()=="")
	{if($("#tradeCode").val()=="F"){
		isValid = true;
	}else{
		isValid = false;
		$("#oneTimeContactFaxAreaCode").validationEngine('showPrompt', 'Preferred communication (Fax) cannot be empty', 'error', true);
	}
	}
	 if($("#otCommunicationMethodCode:checked").val()=="E" && $("#oneTimeContactEmailAddress").val()=="")
	{if($("#tradeCode").val()=="F"){
		isValid = true;
	}else{
		isValid = false;
		$("#oneTimeContactEmailAddress").validationEngine('showPrompt', 'Preferred communication (Email) cannot be empty', 'error', 'topRight', true);
	}
	}
	 }
	return isValid;
}

function validateCustomerZip(){
	var zipCode = $.trim($("#oneTimeZip").val());
	var countryName = $.trim($("#oneTimeCountry").val());
	var split = zipCode.split("-");
	if(new String(countryName.toLowerCase())=="us" || new String(countryName.toLowerCase()).ignoreCase=="united states")
	{
		if(zipCode.length != 5 && zipCode.length != 10)
		{
			return "The ZIP CODE entered is invalid (NNNNN or NNNNN-NNNN)";
		}
		else if(zipCode.length == 5 && zipCode=="00000")
		{
			return "The ZIP CODE entered is invalid (NNNNN or NNNNN-NNNN)";
		}
		else if(split.length==2 && split[1]=="0000")
		{
			return "The ZIP CODE entered is invalid (NNNNN or NNNNN-NNNN)";
		}
		var zipRegEx = new RegExp(/^(([0-9]+)([\-]([0-9]+))?)$/);
        if (!zipRegEx.test($('#oneTimeZip').val())) {
            return "The ZIP CODE entered is not numeric (NNNNN or NNNNN-NNNN)";
        }
	}
	else
	{
		if(zipCode.length == 10)
		{
			return "10th position of postal code must be blank for non US countries";
		}
	}
}
	
function usZipDisplay()
{
	var countryName = $('#oneTimeCountry').val();
	if(new String(countryName.toLowerCase())=="us" || new String(countryName.toLowerCase()).ignoreCase=="united states")
	{
		var zipCode = $.trim($("#oneTimeZip").val());
		var split = zipCode.split("-");
		
		if(split.length==1 && zipCode.length>5)
		{
			var  val = zipCode.replace(/(.{5})/g,"$1-");
			$('#oneTimeZip').val(val);
    	}
		if($('#oneTimeZip').val().length>10)
		{
			$('#oneTimeZip').val($('#oneTimeZip').val().substr(0,10));
		}
		else if($('#oneTimeZip').val().length==6)
		{
			$('#oneTimeZip').val($('#oneTimeZip').val().substr(0,5));
		}
	}
}

function validateCountryGroup() {
	  var stateCode = $.trim($("#oneTimeState").val());
	  var zipCode = $.trim($("#oneTimeZip").val());
	  var provinceName = $.trim($("#oneTimeProvince").val());
	  var countryName = $.trim($("#oneTimeCountry").val());
	  $("#oneTimeCountry").val($.trim($("#oneTimeCountry").val()));
	  
	  if(new String(countryName.toLowerCase())=="us" || new String(countryName.toLowerCase()).ignoreCase=="united states")
	  {
		  if(stateCode.length == 0 || zipCode.length == 0)
		  {
			  return "State and Zip are required if Country is US";
		  }
		  else if(provinceName.length != 0)
		  {
			  return "Province not required if Country is US";
		  }
	  }
	  else if(new String(countryName.toLowerCase())=="ca" || new String(countryName.toLowerCase()).ignoreCase=="canada")
	  {
		  if(stateCode.length == 0)
		  {
			  return "State required if country is CA";
		  }
		  if(provinces == "" && (stateCode == "" || provinceName == "")){
			  return "Please select province from predictive list if country is CA";
		  }
		  /*if(provinceName.length == 0)
		  {
			  return "Province required if Country is not US";
		  }
		  else if(stateCode.length != 0)
		  {
			  return "State not required if Country is not US";
		  }*/
	  }
}

//This function is already present in clause.js
/*function imposeMaxLength(Object, MaxLen) {
	return (Object.value.length <= MaxLen-1);
}*/

function openSearchOneTimerWindow()
{
	var url = '../cas/onetimeCustomerForBillSearch.do?source=Billing';

	window.open(url, "", "top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0");		// one  Argument Removed
}

function oneTimeCustUpdate(id)
{
	var data = id.split("|");
	clearOneTimeCustomerForm();
	//$('#bkngNo').val(data[7]); //commented 18663
	$('#customerId').val(data[19]);
	$('#custContactId').val(data[20]);
	$('#addressId').val(data[21]);
	$('#custAddressRoleId').val(data[22]);
	$('#contactFirstName').val(data[10]);
	$('#contactLastName').val(data[11]);
	$('#customerName').val(data[0]);
	$('#customerAbbr').val(data[1]);
	$('#customerNameQualifier').val(data[12]);
	$('#addressLine1').val(data[2]);
	$('#suite').val(data[13]);
	
	if(data[8]!=null && data[8]!='null'){
		$('#addressLine2').val(data[8]);
	}
	
	$('#addressLine3').val(data[9]);
	$('#oneTimeCity').val(data[3]);
	$('#oneTimeState').val(data[4]);
	$('#oneTimeZip').val(data[5]);
	$('#oneTimeProvince').val(data[14]);
	$('#oneTimeCountry').val(data[15]);
	$('#oneTimeContactEmailAddress').val(data[18]);
	$('#oneTimeContactEmailAddress').attr('title',$('#oneTimeContactEmailAddress').val());
	$('input[name="dataAdminCode"]').attr("disabled", false);
	
	if(data[16]!='null' && data[16]!='')
	{
		var tel = data[16].split("-");
		for(var i=0;i<tel.length;i++)
		{
			if(i==0)
				$('#oneTimeContactPhoneCountryCode').val(tel[0]);
			else if(i==1)
				$('#oneTimeContactPhoneAreaCode').val(tel[1]);
			else if(i==2)
				$('#oneTimeContactPhoneExchange').val(tel[2]);
			else if(i==3)
				$('#oneTimeContactPhoneStation').val(tel[3]);
			else if(i==4)
				$('#oneTimeContactPhoneExtension').val(tel[4]);
		}
	}
	
	if(data[17]!='null' && data[17]!='')
	{
		var tel = data[17].split("-");
		for(var i=0;i<tel.length;i++)
		{
			if(i==0)
				$('#oneTimeContactCellCountryCode').val(tel[0]);
			else if(i==1)
				$('#oneTimeContactCellAreaCode').val(tel[1]);
			else if(i==2)
				$('#oneTimeContactCellExchange').val(tel[2]);
			else if(i==3)
				$('#oneTimeContactCellStation').val(tel[3]);
			else if(i==4)
				$('#oneTimeContactCellExtension').val(tel[4]);
		}
	}
	
	if(data[23]!='null' && data[23]!='')
	{
		var tel = data[23].split("-");
		for(var i=0;i<tel.length;i++)
		{
			if(i==0)
				$('#oneTimeContactFaxCountryCode').val(tel[0]);
			else if(i==1)
				$('#oneTimeContactFaxAreaCode').val(tel[1]);
			else if(i==2)
				$('#oneTimeContactFaxExchange').val(tel[2]);
			else if(i==3)
				$('#oneTimeContactFaxStation').val(tel[3]);
			else if(i==4)
				$('#oneTimeContactFaxExtension').val(tel[4]);
		}
	}
	isOneTimerChanged = "Y";
	isCustomerOverridden = false;
}

function customerAddressPopupSearch()
{
	removeOneTimeCustomerPopUps();
	orgCaller = 'dataAdmin';
	var actionUrl = _context + '/cas/addRoleBKLookup.do?filterValue1='
			+ $('#replaceOrganizationId').val();
	var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, 'AddressSearch', windowStyle);
}

function clearOneTimeCustomerForm()
{
	//$("#shipmentonetimecustomer").clearForm();  // commented for 18663
	clearContactInfo(); // added for 18663
	clearHiddenFields();
	$('#existingOrganization').attr("disabled", true);
	$("#oneTimeCustomerDialog input[type=text]").val("");
	//$('input[name="dataAdminCode"]').attr("disabled", true);
	$('#existingAddressLine1').attr("disabled", true);
	//$('#otCommunicationMethodCode').attr("checked", true);
	//$('#otCommunicationMethodCode').val("P"); //addition start for defect DDO17159
	$('#oneTimeCustMsgDiv').html('');
	$('#oneTimeCity').val(''); //addition start for defect DDO17061
	$('#oneTimeState').val(''); //addition start for defect DDO17061
	$('#oneTimeZip').val(''); //addition start for defect DDO17061
	isCustomerOverridden = false;
}

function clearHiddenFields()
{
	makeScreenFiledsReadOnly(false); //addition start for defect DDO16968
	$('#customerId').val('');
	$('#custContactId').val('');
	$('#custAddressRoleId').val('');
	$('#addressId').val('');
	$('#customerAbbr').val('');
	$('#replaceAddressRoleId').val("");
        $('#customerGroup').val("");

	//$('#bkngNo').val("");
}

function validateDataAdmin()
{
	var isValid = true;
	
        if($("#dataAdminCode:checked").val()==undefined)
	{
		isValid = false;
		$("#dataAdminCode").validationEngine('showPrompt', 'Please select a Data Admin Mode.', 'error', true);
	}
	else if($("#dataAdminCode:checked").val()=="A")
	{
                if($('#customerName').val()=='')
		{
			isValid = false;
			$("#customerName").validationEngine('showPrompt', '* This field is required', 'error', 'topRight', true);
		}
		else
		{
			var regexp = '^[0-9a-zA-Z\ \'\&\(\)\.\/#-]+$';
			var re = new RegExp(regexp);
			if(!re.test($("#customerName").val()))
			{
				isValid = false;
				$("#customerName").validationEngine('showPrompt', '* No special characters allowed', 'error', 'topRight', true);
			}
		}
	}
	else if($("#dataAdminCode:checked").val()=="B")
	{
		if($("#replaceOrganizationId").val()=="")
		{
			isValid = false;
			$("#existingOrganization").validationEngine('showPrompt', 'Please select an existing Organization', 'error', true);
		}
		else if(!$("#dataAdminNewAddress").validationEngine('validate'))
			isValid = false;
	}
	else if($("#dataAdminCode:checked").val()=="C")
	{
		if($("#replaceOrganizationId").val()=="")
		{
			isValid = false;
			$("#existingOrganization").validationEngine('showPrompt', 'Please select an existing Organization', 'error', true);
		}
		if($("#replaceAddressRoleId").val()=="")
		{
			isValid = false;
			$("#existingAddressLine1").validationEngine('showPrompt', 'Please select an existing Address', 'error', true);
		}
		else if(!$("#dataAdminNewAddress").validationEngine('validate'))
			isValid = false;
	}
        
        if($('#oneTimerTradeCodes') == null || $('#oneTimerTradeCodes').val() == "")
        {       
                isValid = false;
                $("#oneTimerTradeCodes").validationEngine('showPrompt', 'Please provide Trade Codes', 'error', true);
        }           
	
	return isValid;
}

function enableAddressSearch(radioObj)
{
	removeOneTimeCustomerPopUps();
	if($(radioObj).val()=="A")
	{
		$('#existingOrganization').val("");
		$('#existingOrganization').attr("disabled", true);
		$('#existingAddressLine1').val("");
		$('#existingAddressLine1').attr("disabled", true);
		/*if($('#customerName').val()=='')
		{
			alert("Please select a new or existing one time organization first");
			$(radioObj).attr("checked", false);
		}*/
	}
	else if($(radioObj).val()=="B")
	{
		$('#existingOrganization').attr("disabled", false);
		$('#existingAddressLine1').val("");
		$('#existingAddressLine1').attr("disabled", true);
		/*if($('#customerId').val()=='')
		{
			alert("Please select existing one time organization first");
			$(radioObj).attr("checked", false);
		}*/
	}
	else if($(radioObj).val()=="C")
	{
		/*if($('#customerId').val()=='')
		{
			alert("Please select existing one time organization first");
			$(radioObj).attr("checked", false);
		}
		else
		{*/
			$('#existingOrganization').attr("disabled", false);
			$('#existingAddressLine1').attr("disabled", false);
		/*}*/
	}
}

function changeShipperConsigneeColor(field, marker)
{
	var fieldArr = ['organizationName'/*, 'address', 'city', 'state', 'zip', 'contactId', 'contact',
	                'contactPhoneCountryCode', 'contactPhoneAreaCode', 'contactPhoneExchange', 'contactPhoneStation',
	                'contactCellCountryCode', 'contactCellAreaCode', 'contactCellExchange', 'contactCellStation',
	                'contactFaxCountryCode', 'contactFaxAreaCode', 'contactFaxExchange', 'contactFaxStation',
	                'contactEmailAddress'*/];
	
	for(var i=0;i<fieldArr.length;i++)
	{
		if(marker=='Y')
			$('input[name="'+field+'\\.'+fieldArr[i]+'"]').css('backgroundColor', "#ffffcc");
		else
			$('input[name="'+field+'\\.'+fieldArr[i]+'"]').css('backgroundColor', "#cfe2f3");
	}
}

function processShipperConsigneeColor(field)
{
	if($('input[name="'+field+'\\.isOneTimeCustomer"]').val()=="true"
		|| $('input[name="'+field+'\\.isOneTimeCustomer"]').val()==true)
	{
		changeShipperConsigneeColor(field, "Y");
		$('input[name="'+field+'\\.address"]').attr("disabled",true);
		$('input[name="'+field+'\\.city"]').attr("disabled",true);
		$('input[name="'+field+'\\.state"]').attr("disabled",true);
		$('input[name="'+field+'\\.zip"]').attr("disabled",true);
		checkOneTimerCustomer(field);
	}
	else
	{
		//added for security
		changeShipperConsigneeColor(field, "N");
		var isModifiable=false;
		if(field=='shipper' || field=='consignee'){
			isModifiable=isShipperConsigneeModifiable;
		}else if(field=='parties'){
			isModifiable=isPartiesModifiable;
		}
		//added for security end
		$('input[name="'+field+'\\.address"]').attr("disabled",isModifiable?false:true);
		$('input[name="'+field+'\\.city"]').attr("disabled",isModifiable?false:true);
		$('input[name="'+field+'\\.state"]').attr("disabled",isModifiable?false:true);
		$('input[name="'+field+'\\.zip"]').attr("disabled",isModifiable?false:true);
		checkOneTimerCustomer(field);
	}
}

function trimValue(field, rules, i, options)
{
	if(field.val()!='')
	{
		field.val($.trim(field.val()));
		var value  = field.val();
		if(value=='')
			return "* This field is required";
	}
}

function populateOneTimeContactPhoneCountryCode(){
	var queryString = $('#shipmentonetimecustomer')
	.formSerialize();
		$.ajax({
			url : _context +"/shipment/onetimecust/phoneCountryCode",
			type : "POST",
			data : queryString,
			success : function(	responseText) {
				if(responseText.data !=null){
					if($('#oneTimeContactPhoneCountryCode').val()==''){
						$('#oneTimeContactPhoneCountryCode').val(responseText.data);
					}
				}
			}
		});	
	}

/*Code Addition Start for defect -DD016962 */
function makeScreenFiledsReadOnly(trueFalse){
/*	$('#customerNameQualifier').attr('readonly',trueFalse);
	$('#customerName').attr('readonly',trueFalse);
	$('#addressLine1').attr('readonly',trueFalse);
	$('#addressLine2').attr('readonly',trueFalse);
	$('#addressLine3').attr('readonly',trueFalse);
	$('#oneTimeCity').attr('readonly',trueFalse);
	$('#oneTimeState').attr('readonly',trueFalse);
	$('#oneTimeZip').attr('readonly',trueFalse);
	$('#oneTimeProvince').attr('readonly',trueFalse);
	$('#oneTimeCountry').attr('readonly',trueFalse);*/
}
/*Code Addition end for defect -DD016962 */
//Code Addition Start for defect -D018433

function trimOnetimeContactOnChange(){
	$("#oneTimeContactEmailAddress").change(function() {
		$("#oneTimeContactEmailAddress").val($.trim($("#oneTimeContactEmailAddress").val()));
	});
	$("#oneTimeContactEmailAddress").change(function() {
		$("#oneTimeContactEmailAddress").val($.trim($("#oneTimeContactEmailAddress").val()));
	});
	$("#oneTimeContactFaxCountryCode").change(function() {
		$("#oneTimeContactFaxCountryCode").val($.trim($("#oneTimeContactFaxCountryCode").val()));
	});
	$("#oneTimeContactFaxAreaCode").change(function() {
		$("#oneTimeContactFaxAreaCode").val($.trim($("#oneTimeContactFaxAreaCode").val()));
	});
	$("#oneTimeContactFaxExchange").change(function() {
		$("#oneTimeContactFaxExchange").val($.trim($("#oneTimeContactFaxExchange").val()));
	});
	$("#oneTimeContactFaxStation").change(function() {		
		$("#oneTimeContactFaxStation").val($.trim($("#oneTimeContactFaxStation").val()));
	});
	$("#oneTimeContactFaxExtension").change(function() {
		$("#oneTimeContactFaxExtension").val($.trim($("#oneTimeContactFaxExtension").val()));
	});
	$("#oneTimeContactCellCountryCode").change(function() {
		$("#oneTimeContactCellCountryCode").val($.trim($("#oneTimeContactCellCountryCode").val()));
	});
	$("#oneTimeContactCellAreaCode").change(function() {
		$("#oneTimeContactCellAreaCode").val($.trim($("#oneTimeContactCellAreaCode").val()));
	});
	$("#oneTimeContactCellExchange").change(function() {
		$("#oneTimeContactCellExchange").val($.trim($("#oneTimeContactCellExchange").val()));
	});
	$("#oneTimeContactCellStation").change(function() {
		$("#oneTimeContactCellStation").val($.trim($("#oneTimeContactCellStation").val()));
	});
	$("#oneTimeContactCellExtension").change(function() {
		$("#oneTimeContactCellExtension").val($.trim($("#oneTimeContactCellExtension").val()));
	});
	$("#oneTimeContactPhoneAreaCode").change(function() {
		$("#oneTimeContactPhoneAreaCode").val($.trim($("#oneTimeContactPhoneAreaCode").val()));
	});
	$("#oneTimeContactPhoneExchange").change(function() {
		$("#oneTimeContactPhoneExchange").val($.trim($("#oneTimeContactPhoneExchange").val()));
	});
	$("#oneTimeContactPhoneStation").change(function() {
		$("#oneTimeContactPhoneStation").val($.trim($("#oneTimeContactPhoneStation").val()));
	});
	$("#oneTimeContactPhoneCountryCode").change(function() {
		$("#oneTimeContactPhoneCountryCode").val($.trim($("#oneTimeContactPhoneCountryCode").val()));
	});
	$("#oneTimeContactPhoneExtension").change(function() {
		$("#oneTimeContactPhoneExtension").val($.trim($("#oneTimeContactPhoneExtension").val()));
	});
}

function clearContactInfo(){
	$('#custContactId').val('');
		
	$('#oneTimeContactPhoneCountryCode').val('');
	$('#oneTimeContactPhoneAreaCode').val('');
	$('#oneTimeContactPhoneExchange').val('');
	$('#oneTimeContactPhoneStation').val('');
	$('#oneTimeContactPhoneExtension').val('');
	
	$('#oneTimeContactCellCountryCode').val('');
	$('#oneTimeContactCellAreaCode').val('');
	$('#oneTimeContactCellExchange').val('');
	$('#oneTimeContactCellStation').val('');
	$('#oneTimeContactCellExtension').val('');
	
	$('#oneTimeContactFaxCountryCode').val('');
	$('#oneTimeContactFaxAreaCode').val('');
	$('#oneTimeContactFaxExchange').val('');
	$('#oneTimeContactFaxStation').val('');
	$('#oneTimeContactFaxExtension').val('');
	
	$('#oneTimeContactEmailAddress').val('');
	
	$('input[name="communicationMethodCode"]').attr("checked", false);
	$('#otCommunicationMethodCode').attr("checked", false);
	
	
}
function isTextSelected(input) {
	if(input.value.length==0) {
		return false;
	}
    if (typeof input.selectionStart == "number") {
        return input.selectionStart == 0 && input.selectionEnd == input.value.length;
    } else if (typeof document.selection != "undefined") {
        input.focus();
    }
}

function singleAddressOneTimerCall(){
	$.ajax({
		type : "POST",
		url : _context +"/cas/autocomplete.do?method=searchSingleAddressforBK&searchType=234&parentSearch="+encodeURIComponent($('#replaceOrganizationId').val()),
		
		success : function(responseText) {
			if(responseText.length == 1){
				var nameQualifier = responseText[0].nameQual;
				var city = responseText[0].city;
				var state = responseText[0].state;
				var finalAddress = formatAddRoleDscrForSC(nameQualifier, responseText[0].stAdd, city, state);
				$('#existingAddressLine1').val(finalAddress);
				$('#replaceAddressRoleId').val(responseText[0].addRole);
				
			} else {
				customerAddressPopupSearch();
			}
		}
	});
}

function oneTimeCountryPopupSearch() {
	removeOneTimeCustomerPopUps();	
	var oneTimeCountry = $('#oneTimeCountry').val();	
	var	actionUrl = _context + '/cas/countryNameLookup.do?filterValue1='+oneTimeCountry+'|';
	var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, 'CustomerSearch', windowStyle);
}

function customerOrganizationPopupSearch() {
	removeOneTimeCustomerPopUps();
	orgCaller = 'dataAdmin';
	var orgName = $('#existingOrganization').val();
	var actionUrl = "";
	if(orgName.indexOf("-") > 0){
		splitOrgName = orgName.split("-");
		actionUrl = _context + '/cas/orgSearchLookup.do?filterValue1='+encodeURIComponent(splitOrgName[0])+'||BK|||'+encodeURIComponent(splitOrgName[1]);
	}else{
		actionUrl = _context + '/cas/orgSearchLookup.do?filterValue1='+ encodeURIComponent(orgName) + '||BK';
	}
	var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, 'CustomerSearch', windowStyle);
}

function countryCodeUpdate(id){
	var values = id.split("|");
	$('#oneTimeCountry').val(values[0]);
}
/*
 * code commented as it is not mentioned in
 * ui spec and approved wireframe's 
 * but code is working just need a unit testing
 * 29/08/2013
 * --puneet hasija
 */
/*function oneTimeOkFunc(callingParty)
{
	if(callingParty=='spotPull')
	{
		$.ajax({
			url : _context +"/shipment/onetimecust/getOneTimerForSpotPull",
			data:{addressRoleId:$('#custAddressRoleId').val()},
			success : function(responseText) {
				if(responseText.success)
				{
					$("#dispatchLocationGridForm").loadJSON(responseText.data);
					$("#oneTimeCustomerDialog").dialog("close");
				}
				else
					showResponseMessagesSpot('oneTimeCustMsgDiv', responseText);
			}
		});
	}
	else
	{
		$.ajax({
			url : _context +"/shipment/onetimecust/getOneTimerForBilling",
			data:{addressRoleId:$('#custAddressRoleId').val()},
			success : function(responseText) {
				if(responseText.success)
				{
					//responseText.data.communicationMethodCode = savedCommMethodValue;
					responseText.data.communicationMethodCode = $("#otCommunicationMethodCode:checked").val();
					if (callingParty == 'shipper') {
						emptyCityStateZip("shipper");
						emptyContactDetails("shipper");
						$('select[name="shipper\\.contactId"]').children().remove();
						$('select[name="shipper\\.contactId"]').append("<option value=''>Select</option>");
						$.each(responseText.data.contactList,
						function(key, value) {
							$('select[name="shipper\\.contactId"]').append($("<option/>",
							{
								value : key,
								text : value
							}));
						});
						if($('input[name="shipper\\.addressRoleId"]').val() != $('#custAddressRoleId').val())
						{
							$("#shipper").loadJSON(responseText.data);
							handlePrepaidCollectIndicator('S');
						}
						else
							$("#shipper").loadJSON(responseText.data);
						setShipperCommMethodValue(responseText.data);
						//enableDisableContactId('shipper',false);
						changeShipperConsigneeColor("shipper", "Y");
						$('input[name="shipper\\.address"]').attr("readonly",true);
						$('#shipperName').val(responseText.data.organizationName);
						shipperAddress = responseText.data.address;
						
						$('#refNumOverRideForShipper').val("N");
						setAccordianTabDetails("shipperNameDiv", "Shipper - "+responseText.data.organizationName);
						checkCopyButtons();
						//addShipperAsDebtor();
						isBookingChanged = "Y";
					} else if (callingParty == 'consignee') {
						emptyCityStateZip("consignee");
						emptyContactDetails("consignee");
						
						$('select[name="consignee\\.contactId"]').children().remove();
						$('select[name="consignee\\.contactId"]').append("<option value=''>Select</option>");
						$.each(responseText.data.contactList,
						function(key, value) {
							$('select[name="consignee\\.contactId"]').append($("<option/>",
							{
								value : key,
								text : value
							}));
						});
						if($('input[name="consignee\\.addressRoleId"]').val() != $('#custAddressRoleId').val())
						{
							$("#consignee").loadJSON(responseText.data);
							handlePrepaidCollectIndicator('C');
						}
						else
							$("#consignee").loadJSON(responseText.data);
						setConsigneeCommMethodValue(responseText.data);
						changeShipperConsigneeColor("consignee", "Y");
						$('input[name="consignee\\.address"]').attr("readonly",true);
						$('#consigneeName').val(responseText.data.organizationName);
						consigneeAddress = responseText.data.address;
						
						$('#refNumOverRideForConsignee').val("N");
						$('#isChangeAcceptedAfterUnitsReceived').val("N");
						checkCopyButtons();
						setAccordianTabDetails("consigneeNameDiv", "Consignee - "+responseText.data.organizationName);
						//addConsigneeAsDebtor();
						loadHazGrid();
						isBookingChanged = "Y";
					} else if (callingParty == 'party') {
						$('input[name="organizationName"]').trigger('change');
						$('select[name="contactId"]').children().remove();
						$('select[name="contactId"]').append("<option value=''>Select</option>");
						$.each(responseText.data.contactList,
						function(key, value) {
							$('select[name="contactId"]').append($("<option/>",
							{
								value : key,
								text : value
							}));
						});
						$("#parties").loadJSON(responseText.data);
						setPartyCommMethodValue(responseText.data);
						isPartyChanged = "Y";
					}
					$("#oneTimeCustomerDialog").dialog("close");
				}
				else
					showResponseMessages('oneTimeCustMsgDiv', responseText);
			}
		});
	}
}*/

function autoTabOneTime(CurrentElementID, NextElementID, FieldLength,CountryCodeID) {
    //Get a reference to the two elements in the tab sequence.
    var CurrentElement = $('#' + CurrentElementID);
    var NextElement = $('#' + NextElementID);
   
    
    CurrentElement.keydown(function(e) {
        //Retrieve which key was pressed.
    	var thisElement=this;
    	setTimeout(function(){
        var KeyID = (window.event) ? event.keyCode : e.keyCode;
 
        //If the user has filled the textbox to the given length and the user just pressed 
        // a number or letter, then move the cursor to the next element in the tab sequence. 
        var phoneCountryCode="oneTimeContactPhoneCountryCode";
        var cellCountryCode="oneTimeContactCellCountryCode";
        var faxCountryCode="oneTimeContactFaxCountryCode";
        
        if ((CurrentElementID == phoneCountryCode) || (CurrentElementID == cellCountryCode)	|| (CurrentElementID == faxCountryCode)) 
        {
        	if ((CurrentElement.val()=='1' || 
        	        CurrentElement.val()=='01' ||  CurrentElement.val()=='001' || 
        	        CurrentElement.val().length == 3)
				&& ((KeyID >= 48 && KeyID <= 90) || (KeyID >= 96 && KeyID <= 105)) && !isTextSelected(thisElement))
        		{
        			NextElement.select();
        		}
        	
        
		}
        else {
			if (((CurrentElement.val().length == FieldLength && isAmericanOneTime(CountryCodeID)) || 
					(CurrentElement.val().length == 4))
							&& ((KeyID >= 48 && KeyID <= 90) || (KeyID >= 96 && KeyID <= 105)) && !isTextSelected(thisElement))
				{	
				//confirm("testing isAm"+isAmericanOneTime(CountryCodeID)+" value "+$('#oneTimeContactPhoneCountryCode').val()+" ends //")
						NextElement.select();
				}
					
			 }
        
      /*
		 * if (CurrentElement.val().length >= FieldLength && ((KeyID >= 48 &&
		 * KeyID <= 90) || (KeyID >= 96 && KeyID <= 105))) NextElement.focus();
		 */
    	},5);
    });
}
//Code Addition end for defect -D018433;var repeatCaller ="";
var repeatOrgName = "";
var repeatAddress = "";

$(function() {

	clearRepeatContactForm();
	
	repeatContactOrgPredictive();
	repeatContactAddressPredictive();

	$('#repeatContactOrgName').gatesPopUpSearch({
		func : function() {
			orgPopupSearch();
		}
	});

	$('#repeatContactOrgAddress').gatesPopUpSearch({
		func : function() {
			orgAddressPopupSearch();
		}
	});

	$('#repeatContactOrgName').change(function(){
		if($('#repeatContactOrgId').val()== null || $('#repeatContactOrgId').val()==""){
			$('#repeatContactOrgName').val(""); 
			$('#repeatContactAddressRoleId').val('');
			$('#repeatContactOrgAddress').val('');
			repeatContactAddressPredictive();
		}
		else if($('#repeatContactOrgName').val()!=repeatOrgName)
		{
			$('#repeatContactOrgName').val('');
			$('#repeatContactOrgId').val("");
			$('#repeatContactAddressRoleId').val('');
			$('#repeatContactOrgAddress').val('');
			repeatContactAddressPredictive();
		}
	});
	
	$('#repeatContactOrgAddress').change(function(){
		if($('#repeatContactAddressRoleId').val()== null 
				|| $('#repeatContactAddressRoleId').val()=="")
			$('#repeatContactOrgAddress').val(""); 
		else if($('#repeatContactOrgAddress').val()!=repeatAddress)
		{
			$('#repeatContactOrgAddress').val('');
			$('#repeatContactAddressRoleId').val('');
		}
	});

	$("#repeatContactOverlay").dialog({ 
		title: 'Repeat Contact', 
		autoOpen: false , 
		width: 470, 
		height: 550, 
		modal: true,
		open : function()
		{
			$('#repeatContactOverlay').validationEngine('attach');
			$('#repeatContactOrgYes').val("Y");
			$('#repeatContactYes').val("Y");
			$('#repeatContactOrgYes').focus();
			//new lines added to disable org on first opening the page -- start
			$('#repeatContactOrgName').attr('disabled', true);
			$('#repeatContactOrgAddress').attr('disabled', true);
			$('#popupSearchrepeatContactOrgName').hide();
			$('#popupSearchrepeatContactOrgAddress').hide();
			//new lines added to disable org on first opening the page --  end
		},
		close : function()
		{
			$('#repeatContactOverlay').validationEngine('hideAll');
			$('#repeatContactOverlay').validationEngine('detach');
			clearRepeatContactForm();
			if(repeatCaller=='shipper')
				$('#shipperRepeatContact').attr("checked", false);
			else if(repeatCaller=='consignee')
				$('#consigneeRepeatContact').attr("checked", false);
			else if(repeatCaller=='parties')
				$('#partiesRepeatContact').attr("checked", false);
		},
		buttons: {
		"Cancel": function(){
			$(this).dialog('close');
		},
        "Send to Data Admin": function() {
        	if($("#statusCode").text()=='ISSUED' || $("#statusCode").text()=='CORRECTED'){
        		$(this).dialog('close');
        		return;
        	}
			if($('#repeatContactOrgNo').attr('checked') && ($('#repeatContactOrgName').val()=='')){
				$('#repeatContactOrgName').validationEngine('showPrompt', 'Oranization name cannot be empty', 'error', 'topRight', true);
			}else if($('#repeatContactOrgNo').attr('checked') && $('#repeatContactOrgAddress').val()==''){
				$('#repeatContactOrgAddress').validationEngine('showPrompt', 'Oranization Address cannot be empty', 'error', 'topRight', true);}
			else if($('#repeatContactOrgNo').attr('checked') && $('#repeatContactAddressRoleId').val()==$('#repeatContactOriginalAroleId').val()){
				$('#repeatContactOrgAddress').validationEngine('showPrompt', 'Please select a different address role than original', 'error', 'topRight', true);
			}else if($('#repeatContactYes').attr('checked') && $('#repeatContactId').val()==''){
				$('#repeatContactId').validationEngine('showPrompt', 'Please select contact to replace', 'error', 'topRight', true);}
			else  if($('#repeatContactYes').attr('checked') && $('#repeatContactId option:selected').text()==$('#repeatContactNameLabel').html()){
				$('#repeatContactId').validationEngine('showPrompt', 'Please select different contact to replace existing contact', 'error', 'topRight', true); 
			}else{
				
				var queryString = $('#shipmentrepeatcontact').formSerialize()+"&contact="+$('#repeatContactId option:selected').text();
				
				
				$.ajax({
					url : _context +"/shipment/repeatContact/sendMail",
					data: queryString ,
					success : function(responseText) {
						if(responseText.success)
						{
							if(repeatCaller == 'parties')
								alert(responseText.messages.success[0]);
							else
								showResponseMessages("msgDiv", responseText);
							
							$("#repeatContactOverlay").dialog("close");
						}
						else
							//showResponseMessages("repeatCustMsgDiv", responseText);
							alert(responseText.messages.error[0]);
					}
				});
			}
		}
	}});
	
	//toggle radio
	$('#repeatContactOrgYes').click(function(){
		$('#repeatContactOrgNo').attr('checked', false);
		$('#repeatContactOrgName').val('');
		$('#repeatContactOrgAddress').val('');
		$('#repeatContactAddressRoleId').val('');
		$('#popupSearchrepeatContactOrgName').hide();
		$('#popupSearchrepeatContactOrgAddress').hide();
		$('#repeatContactOrgName').attr('disabled', true);
		$('#repeatContactOrgAddress').attr('disabled', true);
		$('#repeatContactOrgYes').val("Y");
	});

	//toggle radio
	$('#repeatContactOrgNo').click(function(){
		$('#repeatContactOrgYes').attr('checked', false);
		$('#popupSearchrepeatContactOrgName').show();
		$('#popupSearchrepeatContactOrgAddress').show();
		$('#repeatContactOrgName').attr('disabled', false);
		$('#repeatContactOrgAddress').attr('disabled', false);
		$('#repeatContactOrgNo').val("N");
	});

	//toggle radio
	$('#repeatContactYes').click(function(){
		$('#repeatContactNo').attr('checked', false);
		$("#repeatContactId").attr("disabled", false);
		$('#repeatContactYes').val("Y");
	});

	//toggle radio
	$('#repeatContactNo').click(function(){
		$('#repeatContactYes').attr('checked', false);
		$("#repeatContactId").attr("disabled", true);
		$('#repeatContactNo').val("N");
	});

});

function repeatContactOrgPredictive()
{
	/*var urlRepeatOrg = _context
	+ '/cas/autocomplete.do?method=searchOrg&searchType=229&parentSearch=BK';
	*/
	$('#repeatContactOrgName').gatesAutocomplete({
		//source : urlRepeatOrg,
		source:_context+'/cas/autocomplete.do',
	 	extraParams: {
		 		 method: 'searchOrg',
		 		 searchType: '229',
		 		 parentSearch:  function() { return 'BK|'+$('#repeatTrade').val(); }
	 	},
		formatItem : function(data) {
			return data.name + "-" + data.abbr;
		},
		formatResult : function(data) {
			return data.name + "-" + data.abbr;
		},
		select : function(data) {
			$('#repeatContactOrgName').val(data.name + "-" + data.abbr);
			$('#repeatContactOrgId').val(data.id);
			$("#repeatContactOrgAddress").val("");
			repeatOrgName = data.name + "-" + data.abbr;
			//repeatContactAddressPredictive();
			orgAddressPopupSearch();
		}
	});
}

function repeatContactAddressPredictive()
{
	 var filterVal2ForCAS = $('#repeatCallerPartyType').val(); 
	/*var filterVal2ForCAS = ""; 
	if(repeatCaller=='shipper')
		filterVal2ForCAS="02";
	else if(repeatCaller=='consignee')
		filterVal2ForCAS="03";*/

	
	var urlRepeatAdd = _context
	+ '/cas/autocomplete.do?method=searchAddRoleBK&searchType=234&parentSearch='
	+ $('#repeatContactOrgId').val() + '|'+filterVal2ForCAS;

	$('#repeatContactOrgAddress').gatesAutocomplete({
		//source : urlRepeatAdd,
		source:_context+'/cas/autocomplete.do',
	 	extraParams: {
		 		 method: 'searchAddRoleBK',
		 		 searchType: '234',
		 		 parentSearch:  function() {
		 			 filterVal2ForCAS = $('#repeatCallerPartyType').val(); 
		 			 return $('#repeatContactOrgId').val()+ '|'+filterVal2ForCAS/*+'|'+$('#repeatTrade').val()*/; }
	 	},
		formatItem : function(data) {
			var nameQualifier = data.nameQual;
			var city = data.city;
			var state = data.state;
			var finalAddress = formatAddRoleDscrForSC(nameQualifier, data.stAdd, city, state);
			return finalAddress;
		},
		formatResult : function(data) {
			var nameQualifier = data.nameQual;
			var city = data.city;
			var state = data.state;
			var finalAddress = formatAddRoleDscrForSC(nameQualifier, data.stAdd, city, state);
			return finalAddress;
		},
		select : function(data) {
			$("#repeatContactAddressRoleId").val(data.addRole);
			var nameQualifier = data.nameQual;
			var city = data.city;
			var state = data.state;
			var finalAddress = formatAddRoleDscrForSC(nameQualifier, data.stAdd, city, state);
			repeatAddress = finalAddress;
		}
	});
}

function orgPopupSearch() {
	orgCaller = 'repeat';
	
	var orgName = $('#repeatContactOrgName').val();
	var splitOrgName = "";
	var actionUrl = "";
	
	if (orgName.indexOf("-") > 0){
		splitOrgName = orgName.split("-")[1];
		actionUrl = _context + '/cas/orgSearchLookup.do?filterValue1=|BK|'  +$('#repeatTrade').val()+'|||'+ splitOrgName;
	}
	else {
		splitOrgName = orgName;
		actionUrl = _context + '/cas/orgSearchLookup.do?filterValue1=' + splitOrgName +'|BK|'  +$('#repeatTrade').val();
	}
	
	var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, 'CustomerSearch', windowStyle);
}

function orgAddressPopupSearch() {
	orgCaller = 'repeat';
	
	if ($.trim($('#repeatContactOrgId').val())=='') { 
		alert("Please select organization first");
	}else {
		var filterVal2ForCAS = $('#repeatCallerPartyType').val(); 
		/*
		alert("repeatCaller="+repeatCaller);
		if(repeatCaller=='shipper')
			filterVal2ForCAS="02";
		else if(repeatCaller=='consignee')
			filterVal2ForCAS="03";
		else{
			filterVal2ForCAS=repeatCaller;
		}*/

		var actionUrl = _context + '/cas/addRoleBKLookup.do?filterValue1='
				+ encodeURIComponent($('#repeatContactOrgId').val()) + '&filterValue2='+filterVal2ForCAS/*+'&filterValue3='+$('#repeatTrade').val()*/;
		
		var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
		window.open(actionUrl, 'AddressSearch', windowStyle);
	}
}

function clearRepeatContactForm()
{
	//$("#shipmentrepeatcontact").clearForm();
	
	$("#repeatContactNameLabel").html('');
	
	$('#repeatContactOrgId').val('');
	$('#repeatContactAddressRoleId').val('');
	// code added start for defect --D018583
	$('#originalOrgName').val('');
	$('#originalOrgAddress').val('');
	$('#repeatContactShipmentNo').val('');
	$('#repeatContactOriginalAroleId').val('');
	$('#repeatContactShipmentSeqNo').val('');
	$('#repeatContactShipmentCorrNo').val('');
	$('#repeatCaller').val('');
	$('#repeatCallerPartyType').val('');
	$('#repeatTrade').val('');
	$('#repeatContactOrgName').val('');
	$('#repeatContactOrgAddress').val('');
	$('#repeatContactAddIns').val('');
	// code added end for defect --D018583
	
	repeatOrgName = "";
	repeatAddress = "";
	
	$('#repeatContactOrgYes').attr('checked',true);
	$('#repeatContactOrgNo').attr('checked',false);

	$('#repeatContactOrgName').attr('disabled', true);
	$('#repeatContactOrgAddress').attr('disabled', true);
	$('#popupSearchrepeatContactOrgName').hide();
	$('#popupSearchrepeatContactOrgAddress').hide();
	$('#repeatContactOrgYes').val("Y");
	$('#repeatContactYes').attr('checked',true);
	$('#repeatContactNo').attr('checked',false);
	$('#repeatContactYes').val("Y");
};$(document)
		.ready(
				function() {
					
					$('#marksAndNumbers')
							.change(
									function() {
										if ( $.trim($('#marksAndNumbers').val()) == ''
												|| $('#marksAndNumbers').val() == null) {
											$('#marksHeaderCheckBox').attr(
													'checked', false);
										} else {
											$('#marksHeaderCheckBox').attr(
													'checked', true);
											$('#marksAndNumbers').val($('#marksAndNumbers').val().toUpperCase());//change made
										}
									});
					
					createShipmentReferenceNumberGrid();
							
					/*Shipment Security*/
					_enforceSecuritySectionWithoutAccordion( "mainReferenceNumberDiv",isReferenceNumberMarksDisplayOnly,isReferenceNumberMarksModifiable);
					_enforceSecuritySectionWithoutAccordion( "mainMarkNumberDiv",isMarksDisplayOnly,isMarksModifiable);
					if(isReferenceNumberMarksDisplayOnly || isReferenceNumberMarksModifiable){
						$('#referenceHeaderDiv').css('visibility','visible');
						$('#referenceHeaderCheckBox').attr('hidden', false);
					}else{
						$('#referenceHeaderDiv').css('visibility','hidden');
						$('#referenceHeaderCheckBox').attr('hidden', true);
					}
					if(isMarksDisplayOnly || isMarksModifiable){
						$('#marksHeaderDiv').css('visibility','visible');
						$('#marksHeaderCheckBox').attr("hidden",false);
					}else{
						$('#marksHeaderDiv').css('visibility','hidden');
						$('#marksHeaderCheckBox').attr("hidden",true);
					}
					
					$('#marksAndNumbers').blur(function(event){
						wrapTextArea('marksAndNumbers', 20);
						return true;
					});
					
				});

var referenceGridLoadComplete = function() {
	 
	$('#referenceNumberNotation').parent().html("<textarea multiple=\"multiple\" id=\"referenceNumberNotation\" name=\"referenceNumberNotation\" cols=\"20\" rows=\"2\" role=\"textbox\" multiline=\"true\" class=\"FormElement\" style=\"resize: none; width: 190px;\"></textarea>");	
	$('#referenceNumberNotation').val('');
	//Added below for Defect D028800
	if(!isReferenceNumberMarksAdd)
	{
	    $('#tr_seqNo').remove();
	}
	//D026682, Fix for Reference Number Grid Duplication
if(( $('#statusCode').text()=='ISSUED') || ($('#statusCode').text()=='CORRECTED')){
	$('#tr_seqNo').remove();
		}
	var referenceNumberCount = $("#referenceNumberGrid").getGridParam(
			"reccount");
	if (referenceNumberCount > 0) {
		$('#referenceHeaderCheckBox').attr('checked', true);
	} else {
		$('#referenceHeaderCheckBox').attr('checked', false);
	}
	$('#typeCode').val('S');
	var hideCustomRow = hideCustomizeField==true?true:false;
	if(hideCustomRow == true)
	{
		$('#typeCode').attr("disabled", true);
		$('#referenceNumberNotation').attr("disabled", true);
		$('#sData','#gbox_referenceNumberGrid').attr("disabled", true);
	}
	else
	{
		$('#typeCode').attr("disabled", false);
		$('#referenceNumberNotation').attr("disabled", false);
		$('#sData','#gbox_referenceNumberGrid').attr("disabled", false);
	}

	resetRefAddRow();
	hideGridsEditDelete();
	
	//added against 21739
 	/*if(counterRefNumberGridReloaded==0){
 	numberOfInitialRowsRefNumberGrid=jQuery("#referenceNumberGrid").jqGrid('getGridParam', 'records');
 	counterRefNumberGridReloaded++;
 	}
 	if(numberOfInitialRowsRefNumberGrid != jQuery("#referenceNumberGrid").jqGrid('getGridParam', 'records')){
 		changeInRefNumberMarks=true;
 	}*/
 	if(shipmentNotFound==true)
 	{
 		$('#marksAndNumbers').attr("disabled",true);
 		$("#referenceNumberGrid").jqGrid("clearGridData", true);
 	}
 	//$('#referenceNumberNotation').parent().html("<textarea multiple=\"multiple\" id=\"referenceNumberNotation\" name=\"referenceNumberNotation\" cols=\"20\" rows=\"2\" role=\"textbox\" multiline=\"true\" class=\"FormElement\" style=\"resize: none; width: 178px;\"></textarea>");	
 	
};

function resetRefAddRow(){
	//$("#gbox_referenceNumberGrid #referenceNumberNotation").val('');
	//$('#gbox_referenceNumberGrid #typeCode').selected().val('');
	//$("#gbox_referenceNumberGrid #referenceNumberNotation").attr("readonly", true);
	//$("#gbox_referenceNumberGrid #sData").css('background-color','#D8D8D8');
	$("#gbox_referenceNumberGrid #referenceNumberNotation").css('resize','none');
	$("#gbox_referenceNumberGrid #referenceNumberNotation").css('width','190px');
	$("#gbox_referenceNumberGrid #referenceNumberNotation").attr('rows','2');
}

function imposeMaxLength(Object, MaxLen) {
	return (Object.value.length <= MaxLen - 1);
}

function setRefAndMarks() {
	var referenceNumberCount = $("#referenceNumberGrid").getGridParam(
			"reccount");
	if (referenceNumberCount > 0) {
		$('#referenceHeaderCheckBox').attr('checked', true);
	} else {
		$('#referenceHeaderCheckBox').attr('checked', false);
	}
	if ($('#marksAndNumbers').val() == ''
			|| $('#marksAndNumbers').val() == null) {
		$('#marksHeaderCheckBox').attr('checked', false);
	} else {
		$('#marksHeaderCheckBox').attr('checked', true);
	}
}

function openRefNumberAndMarkDivBlock(){
	document.getElementById('maintainShipmentRefNumberMarks').style.display = 'block';
	window.scrollTo(0, 100);
}

function isReferenceNumberForShipperExist() {
	var refNumberExist = false;
	var rows = $("#referenceNumberGrid").getRowData();
	for ( var i = 0; i < rows.length; i++) {
		var row = rows[i];
		var typeCode = row.typeCode;
		if (typeCode == 'S' || typeCode == 'B') {
			refNumberExist = true;
		}
	}
	return refNumberExist;
}
function validateRefNumberRequiredShipper(){
	
	var refNumberExist = false;
	$.ajax({
		async: false,
		type : "GET",
		url: _context +"/shipment/referenceNumber/validateRefNumberRequiredShipper",
		success: function(responseText)
		{
			if(responseText.data==true)
				refNumberExist = true;
			else refNumberExist = false;
		}

	});
	return refNumberExist;
}

function validateRefNumberRequiredConsignee(){
	
	var refNumberExist = false;
	$.ajax({
		async: false,
		type : "GET",
		url: _context +"/shipment/referenceNumber/validateRefNumberRequiredConsignee",
		success: function(responseText)
		{
			if(responseText.data==true)
				refNumberExist = true;
			else refNumberExist = false;
		}

	});
	return refNumberExist;
}


function isReferenceNumberForConsigneeExist() {
	var refNumberExist = false;
	var rows = $("#referenceNumberGrid").getRowData();
	for ( var i = 0; i < rows.length; i++) {
		var row = rows[i];
		var typeCode = row.typeCode;
		if (typeCode == 'C' || typeCode == 'B') {
			refNumberExist = true;
		}
	}
	return refNumberExist;
}

function createReferenceNumberGrid(){


	
}

function hideGridsEditDelete(){
	if(( $('#statusCode').text()=='ISSUED') || ($('#statusCode').text()=='CORRECTED')){
		$("div.ui-pg-div.ui-inline-del","#gbox_referenceNumberGrid").css("visibility", 'hidden');
		$("div.ui-pg-div.ui-inline-edit","#gbox_referenceNumberGrid").css("visibility", 'hidden');
		$('#sData','#gbox_referenceNumberGrid').hide();
		$('#gview_referenceNumberGrid input').css("visibility", 'hidden');
		$('#gview_referenceNumberGrid select').css("visibility", 'hidden');
		$('#gview_commodityGrid input').css("visibility", 'hidden');

	}else{
		if(isReferenceNumberMarksDelete){
			$("div.ui-pg-div.ui-inline-del","#gbox_referenceNumberGrid").css("visibility", 'visible');
		}else{
			$("div.ui-pg-div.ui-inline-del","#gbox_referenceNumberGrid").css("visibility", 'hidden');
		}
		if(isReferenceNumberMarksUpdate){
			$("div.ui-pg-div.ui-inline-edit","#gbox_referenceNumberGrid").css("visibility", 'visible');
		}else{
			$("div.ui-pg-div.ui-inline-edit","#gbox_referenceNumberGrid").css("visibility", 'hidden');
		}
		if(isReferenceNumberMarksAdd){
			$('#sData','#gbox_referenceNumberGrid').show();
			$('#gview_referenceNumberGrid input').css("visibility", 'visible');
			$('#gview_referenceNumberGrid select').css("visibility", 'visible');
			$('#gview_commodityGrid input').css("visibility", 'visible');
		}else{
			$('#sData','#gbox_referenceNumberGrid').hide();
			$('#gview_referenceNumberGrid input').css("visibility", 'hidden');
			$('#gview_referenceNumberGrid select').css("visibility", 'hidden');
			$('#gview_commodityGrid input').css("visibility", 'hidden');
		}
	}
}


//code added against defect 021876

function wrapTextArea(textAreaId, maxLength)
{
	 var valToPrint = '';
	 var valArr = $('#'+textAreaId).val().split("\n");
	 var remainder = '';
	 for(var i = 0; i < valArr.length; i++) 
	 {
		 var lineLength = '';
		 if(remainder != '')
		 {
			valToPrint = valToPrint + "\n" + remainder;
			remainder = '';
		 }
		 if(valArr[i].length > maxLength)
		 {
			 var firstTime = true;
			 if(i != 0)
				 valToPrint = valToPrint + "\n";
			 var lineArr = valArr[i].split(" ");
			 for(var k=0;k<lineArr.length;k++)
			 {
				var word = remainder;
				if(lineLength != '' && word !='')
					word = lineLength + ' ' + word;
				else
					word = lineLength + word;
				
				if(word.length > maxLength)
				{
					if(firstTime)
						valToPrint = valToPrint + remainder;
					else
						valToPrint = valToPrint + "\n" + remainder;
					firstTime = false;
					remainder = '';
					lineLength = remainder;
					
					word = lineArr[k];
					if(lineLength != '' && word !='')
						word = lineLength + " " + word;
					else
						word = lineLength + word;
					
					if(word.length > maxLength)
					{
						if(lineArr[k].length > maxLength)
						{
							 var count = Math.floor(lineArr[k].length/maxLength);
							 for(var j=1; j<=count; j++)
							 {
								 if(firstTime)
									 valToPrint = valToPrint + lineArr[k].substr(0,maxLength);
								 else
									 valToPrint = valToPrint + "\n" + lineArr[k].substr(0,maxLength);
								 firstTime = false;
								 lineLength = lineArr[k].substr(0,maxLength);
								 lineArr[k] = lineArr[k].substr(maxLength);
							 }
							 remainder = lineArr[k];
						}
						else
						{
							if(firstTime)
								valToPrint = valToPrint + lineArr[k];
							else
								valToPrint = valToPrint + "\n" + lineArr[k];
							firstTime = false;
							lineLength = lineArr[k];
						}
					}
					else
					{
						if(lineLength!='' || k!=0)
						{
							valToPrint = valToPrint + " " + lineArr[k];
							lineLength = lineLength + " " + lineArr[k];
							firstTime = false;
						}
						else if(lineArr[k] != 0)
						{
							valToPrint = valToPrint + lineArr[k];
							lineLength = lineLength + lineArr[k];
							firstTime = false;
						}
					}
				}
				else
				{
					if(lineLength!='' && remainder !='')
					{
						valToPrint = valToPrint + " " + remainder;
						lineLength = lineLength + " " + remainder;
						firstTime = false;
					}
					else if(remainder !='')
					{
						valToPrint = valToPrint + remainder;
						lineLength = lineLength + remainder;
						firstTime = false;
					}
					
					word = lineArr[k];
					if(lineLength != '' && word!='')
						word = lineLength + " " + word;
					else
						word = lineLength + word;
					
					if(word.length > maxLength)
					{
						if(lineArr[k].length > maxLength)
						{
							 var count = Math.floor(lineArr[k].length/maxLength);
							 for(var j=1; j<=count; j++)
							 {
								 if(firstTime)
									 valToPrint = valToPrint + lineArr[k].substr(0,maxLength);
								 else
									 valToPrint = valToPrint + "\n" + lineArr[k].substr(0,maxLength);
								 firstTime = false;
								 lineLength = lineArr[k].substr(0,maxLength);
								 lineArr[k] = lineArr[k].substr(maxLength);
							 }
							 remainder = lineArr[k];
						}
						else
						{
							if(firstTime)
								valToPrint = valToPrint + lineArr[k];
							else
								valToPrint = valToPrint + "\n" + lineArr[k];
							firstTime = false;
							lineLength = lineArr[k];
						}
					}
					else
					{
						if(lineLength!='' || k!=0)
						{
							valToPrint = valToPrint + " " + lineArr[k];
							lineLength = lineLength + " " + lineArr[k];
							firstTime = false;
						}
						else if(lineArr[k] != '')
						{
							valToPrint = valToPrint + lineArr[k];
							lineLength = lineLength + lineArr[k];
							firstTime = false;
						}
					}
				}
			}
		 }
		 else
		 {
			if(i==0)
				valToPrint = valArr[i];
			else
				valToPrint = valToPrint + "\n" + valArr[i];
			lineLength = valArr[i];
		 }
	 }
	 if(remainder != '')
	 {
		 if(valToPrint !='')
			 valToPrint = valToPrint + "\n" + remainder;
		 else
			 valToPrint = valToPrint + remainder; 
	 }
		 
	 $('#'+textAreaId).val(valToPrint);
};$(function() {

	//tabSequence('#parties'); // D020420
	var partyOrg = "";
	var partyAddr = "";
	
	$('input[name="address"]').focus(function()
	{
		if($('#partyTypeCode :selected').val()=='')
		{
			$('input[name="address"]').blur();
			alert("Please select Party type first");
		}
	});

	partiesOrgPredictive();
	partiesAddPredictive();
	
	// Parties Pop-Up Search
	$('input[name="organizationName"]').gatesPopUpSearch({
		func : function() {
			partiesPopupSearch(); 
		}
	});

	// parties address Pop-Up Search
	$('input[name="address"]').gatesPopUpSearch({
		func : function() {
			if($('#partyTypeCode :selected').val()=='')
				alert("Please select a party type first");
			else{
				if($('input[name="isOneTimeCustomer"]').val()==false || $('input[name="isOneTimeCustomer"]').val()=='false'){ // for defect D019012 
					partiesAddressPopupSearch();
				}
			}
		}
	});
	
	$('input[name="contactEmailAddress"]').blur(function()
	{
		$('input[name="contactEmailAddress"]').attr('title',$('input[name="contactEmailAddress"]').val());
	});
	
	$('input[name="organizationName"]').change(function() {
		isPartyChanged ="Y";
		if($('input[name="organizationName"]').val()!=partyOrg)
		{
			$('input[name="organizationName"]').val('');
			$('input[name="organizationCode"]').val('');
			$('input[name="organizationId"]').val('');
			$('input[name="isOneTimeCustomer"]').val("false");
			//partiesAddPredictive();
		}
		if($('#partyTypeCode :selected').val()=='22'){
			$('#isChangeAcceptedAfterUnitsReceived').val("N");
		}
		$('input[name="address"]').val("");
		$('input[name="address"]').trigger('change');
	});

	$('input[name="address"]').change(function() {
		
		if($('input[name="address"]').val()!=partyAddr)
		{
			$('input[name="address"]').val('');
			$('input[name="addressRoleId"]').val('');
		}
		isPartyChanged ="Y";
		$('input[name="careOf"]').val('');
		$('input[name="city"]').val('');
		$('input[name="state"]').val('');
		$('input[name="zip"]').val('');
		$('input[name="countryName"]').val('');
		$('input[name="provinceName"]').val('');
		$('select[name="contactId"]').val('');
		$('select[name="contactId"]').children().remove();
		$('select[name="contactId"]').append("<option value=''>Select</option>");
		$('select[name="contactId"]').attr('selected',0);
		$('select[name="contactId"]').trigger('change');
		
	});

	$('select[name="contactId"]').change(function() {
		isPartyChanged = "Y";
		var isOneTimerCustomer=$('input[name="isOneTimeCustomer"]').val();
		clearContactInfo(true);
		if ($.trim($('select[name="contactId"]').val()) != '' && $('select[name="contactId"]').val() !=null) { // for defect 18303
			$.ajax({
				type : "POST",
				url : _context +"/shipment/arole/contact",
				data : {
					contactId : $('select[name="contactId"]').val()
				},
				success : function(responseText) {
					
					$("#parties").loadJSON(responseText.data);
					$('input[name="isOneTimeCustomer"]').val(isOneTimerCustomer);
					checkForOneTimerCustomer(); //against defect 21191
					setPartyCommMethodValue(responseText.data);
					setphoneCountryCodeParties(); // to populate phone country code
					$('input[name="contactEmailAddress"]').attr('title',$('input[name="contactEmailAddress"]').val());
				}
			});
		}
		else
		{
			clearContactInfo(true);
			checkForOneTimerCustomer(); 
		}
		/*// For Defect start
		if (($('select[name="contactId"]').val() != null) && ($('select[name="contactId"]').val() !='')) {
			enableDisableContactIdParties(false);
		}else{
			enableDisableContactIdParties(true);
		}
		// For Defect End*/
	});

	$('#partiesRepeatContact').click(function(){
		if (($("#statusCode").text()=='ISSUED')|| ($("#statusCode").text()=='CORRECTED'))  {
			$("#repeatContactOverlay").gatesDisable();
		}else{
			$("#repeatContactOverlay").gatesEnable();
		}
		var contact= $('input[name="contact"]').val();
		if(($('select[name="contactId"]').selected().val()!='') || ((contact!=null) && ($.trim(contact).length !=0)) )
		{
			
			repeatCaller ="parties";
			
			$('#originalOrgName').val($('input[name="organizationName"]').val());
			$('#originalOrgAddress').val($('input[name="address"]').val()/*+" - "+ $('input[name="city"]').val() +" , "+ $('input[name="state"]').val()*/);
			$('#repeatContactShipmentNo').val($('#shipmentNumber').val());
			$('#repeatContactShipmentSeqNo').val($('#shipmentSequenceNumber').val());
			$('#repeatContactShipmentCorrNo').val($('#shipmentCorrectionNumber').val());
			$("#repeatContactOriginalAroleId").val($('input[name="addressRoleId"]').val());
			//$("#repeatContactNameLabel").html($('select[name="contactId"] option:selected').text());
			$("#repeatContactNameLabel").html($('input[name="contact"]').val());
			$("#repeatContactId").html($('select[name="contactId"]').html());
			$("#repeatContactId").selected().val($('select[name="contactId"]').selected().val());
			$('#repeatTrade').val($('#tradeCode').val());
			$('#repeatCaller').val(repeatCaller);
			$('#repeatCallerPartyType').val(getAddressRoleTypeFromParty());
			
			$("#repeatContactOverlay").dialog('open');
		}
		else
			alert("Please select a contact/contact name");
	});
	
	trimPartyContactOnChange(); //D018433
	
	/* $('form[id=parties] #contactPhoneCountryCode').keypress(function(){
		 var len=$('form[id=parties] #contactPhoneCountryCode').val().length;
		 if(len==1)
			 {
			 $('form[id=parties] #contactPhoneAreaCode').focus();
			 }
	 });
	 $('form[id=parties] #contactPhoneAreaCode').keypress(function(){
		 var len=$('form[id=parties] #contactPhoneAreaCode').val().length;
		 if(len==2)
			 {
			 $('form[id=parties] #contactPhoneExchange').focus();
			 }
	 }); 
	 $('form[id=parties] #contactPhoneExchange').keypress(function(){
		 var len=$('form[id=parties] #contactPhoneExchange').val().length;
		 if(len==2)
			 {
			 $('form[id=parties] #contactPhoneStation').focus();
			 }
	 });
	 $('form[id=parties] #contactPhoneStation').keypress(function(){
		 var len=$('form[id=parties] #contactPhoneStation').val().length;
		 if(len==3)
			 {
			 $('form[id=parties] #contactPhoneExtension').focus();
			 }
	 });
	 
	
	 
	*/
	/*
	  var phoneCountryCode="contactPhoneCountryCode";
      var cellCountryCode="contactCellCountryCode";
      var faxCountryCode="contactFaxCountryCode";*/
	
    autoTabOverlay('contactPhoneCountryCode','contactPhoneAreaCode', 1,'contactPhoneCountryCode');
    autoTabOverlay('contactPhoneAreaCode','contactPhoneExchange', 3,'contactPhoneCountryCode');	
    autoTabOverlay('contactPhoneExchange','contactPhoneStation', 3,'contactPhoneCountryCode');
	autoTabOverlay('contactPhoneStation','contactPhoneExtension', 4,'contactPhoneCountryCode');	
	
	 
	autoTabOverlay('contactCellCountryCode','contactCellAreaCode', 1,'contactCellCountryCode');
	autoTabOverlay('contactCellAreaCode','contactCellExchange', 3,'contactCellCountryCode');	
	autoTabOverlay('contactCellExchange','contactCellStation', 3,'contactCellCountryCode');
	autoTabOverlay('contactCellStation','contactCellExtension', 4,'contactCellCountryCode');	
	
	 
	autoTabOverlay('contactFaxCountryCode','contactFaxAreaCode', 1,'contactFaxCountryCode');
	autoTabOverlay('contactFaxAreaCode','contactFaxExchange', 3,'contactFaxCountryCode');	
	autoTabOverlay('contactFaxExchange','contactFaxStation', 3,'contactFaxCountryCode');
	autoTabOverlay('contactFaxStation','contactFaxExtension', 4,'contactFaxCountryCode');	

	
	
});

function isTextSelected(input) {
	if(input.value.length==0) {
		return false;
	}
    if (typeof input.selectionStart == "number") {
        return input.selectionStart == 0 && input.selectionEnd == input.value.length;
    } else if (typeof document.selection != "undefined") {
        input.focus();
    }
}

function autoTabOverlay(CurrentElementID, NextElementID, FieldLength,CountryCodeID) {
    //Get a reference to the two elements in the tab sequence.
    var CurrentElement = $('form[id=parties] #' + CurrentElementID);
    var NextElement = $('form[id=parties] #' + NextElementID);
   
    
    CurrentElement.keydown(function(e) {
    	var thisElement=this;
    	setTimeout(function(){
        //Retrieve which key was pressed.
        var KeyID = (window.event) ? event.keyCode : e.keyCode;
 
        //If the user has filled the textbox to the given length and the user just pressed 
        // a number or letter, then move the cursor to the next element in the tab sequence. 
        var phoneCountryCode="contactPhoneCountryCode";
        var cellCountryCode="contactCellCountryCode";
        var faxCountryCode="contactFaxCountryCode";
        
        if ((CurrentElementID == phoneCountryCode) || (CurrentElementID == cellCountryCode)	|| (CurrentElementID == faxCountryCode)) 
        {
        	if ((CurrentElement.val()=='1' || 
        	        CurrentElement.val()=='01' ||  CurrentElement.val()=='001' || 
        	        CurrentElement.val().length == 3)
				&& ((KeyID >= 48 && KeyID <= 90) || (KeyID >= 96 && KeyID <= 105)) && !isTextSelected(thisElement))
        		{
        			NextElement.select();
        		}
        	
        
		}
        else {
			if (((CurrentElement.val().length == FieldLength && isAmerican(CountryCodeID)) || 
					(CurrentElement.val().length == 4))
							&& ((KeyID >= 48 && KeyID <= 90) || (KeyID >= 96 && KeyID <= 105)) && !isTextSelected(thisElement))
				{	
						NextElement.select();
				}
					
			 }
        
      /*
		 * if (CurrentElement.val().length >= FieldLength && ((KeyID >= 48 &&
		 * KeyID <= 90) || (KeyID >= 96 && KeyID <= 105))) NextElement.focus();
		 */
    	},5);
    });
}

function isAmerican(id)
{
	var val = $('form[id=parties]  #'+id).val();
	if(val=='' || val=='1' || val=='01' || val=='001')
		return true;
	else
		return false;
}

function checkForOneTimerCustomer()
{
	if($('input[name="isOneTimeCustomer"]').val()=="false" || $('input[name="isOneTimeCustomer"]').val()==false)
	{
		if($('#contactId').val()!="")
 		{
 			$('#partiesRepeatContact').attr("disabled",true);	
 		}
		else
 		{
 			$('#partiesRepeatContact').attr("disabled",false);
 		}
	}
	$('input[name="contact"]').val("");
}
function contactNameChanged()
{
	clearContactInfo(false);
	$('#contactId').val('select'); 
	if($('input[name="isOneTimeCustomer"]').val()=="false")
	$('#partiesRepeatContact').attr("disabled",false); //21191	
}
function partiesOrgPredictive()
{
	//var urlPartyOrg = _context + '/cas/autocomplete.do?method=searchOrg&searchType=229&parentSearch=BK|'+$('#tradeCode').val();
	$('input[name="organizationName"]').gatesAutocomplete(
	{
		//source : urlPartyOrg,
		source:_context+'/cas/autocomplete.do',
	 	extraParams: {
		 		 method: 'searchOrg',
		 		 searchType: '229',
		 		 parentSearch:  function() {
		 			//Code change Start -- DO17562
		 			 if(getAddressRoleTypeFromParty()=='12')
		 				 return "BL|"+$('#tradeCode').val();
		 			 else
		 				 return "BK|"+$('#tradeCode').val();
		 			 //Code change end -- DO17562
	 			 }
	 	},
		formatItem : function(data) {
			$('input[name="organizationId"]').val("");
			return data.name + "-" + data.abbr;
		},
		formatResult : function(data) {
			return data.name + "-" + data.abbr;
		}, 
		select : function(data) {
			$('input[name="organizationName"]').val(
					data.name + "-" + data.abbr);
			$('input[name="organizationName"]').attr('title',$('input[name="organizationName"]').val());
			partyOrg = data.name + "-" + data.abbr;
			$('input[name="organizationId"]').val(data.id);
			$('input[name="organizationCode"]').val(data.abbr);
			$('input[name="isOneTimeCustomer"]').val(false);
			$('input[name="address"]').trigger('change');
			//partiesAddPredictive();
			singleAddressSelect();
			//partiesAddressPopupSearch();
		}
	});
}

function singleAddressSelect(){
	if($('select[name="partyTypeCode"]').selected().val()=='')
	{	
		var addressRoleCode=null;
	}
	else
		{
		addressRoleCode=$('select[name="partyTypeCode"]').selected().val();
		}
	$.ajax({
		type : "POST",
	
		url : _context +"/cas/autocomplete.do?method=searchSingleAddressforBK&searchType=234&parentSearch="+ $('input[name="organizationId"]').val() +'|'+addressRoleCode+'|'+$('#tradeCode').val(),						
		
		success : function(responseText) {
			
			if(responseText.length == 1){
				if(responseText[0].coOrgName!=null&&responseText[0].coOrgName!='null')
				$('input[name="careOf"]').val(responseText[0].coOrgName);
				else
					$('input[name="careOf"]').val('');	
				$('input[name="city"]').val(responseText[0].city);
				$('input[name="state"]').val(responseText[0].state);
				$('input[name="zip"]').val(responseText[0].zip);
				if(responseText[0].cntry!=null&&responseText[0].cntry!='null')
					$('input[name="countryName"]').val(responseText[0].cntry);
				else
					$('input[name="countryName"]').val("US");	
				if(responseText[0].provnc!=null&&responseText[0].provnc!='null')
					$('input[name="provinceName"]').val(responseText[0].provnc);
				else
					$('input[name="provinceName"]').val("");
				var finalAddress = formatAddRoleDscrForSC(responseText[0].nameQual, responseText[0].stAdd,responseText[0].city,responseText[0].state);//nameQualifier, addressLine1, city, state)
				$('input[name="address"]').val(finalAddress);
				
				partyAddr = finalAddress;
				$('input[name="addressRoleId"]').val(responseText[0].addRole);

				clearContactInfo(true);

				// Get contact list for address. [commented for merge.]
				$.ajax({
					async:false,
					type : "POST",
					url : _context +"/shipment/arole/getContactList",
					data : {
						addressRoleId : $('input[name="addressRoleId"]').val()
					},
					success : function(responseText) {
						$('select[name="contactId"]').children().remove();
						$('select[name="contactId"]').append("<option value=''>Select</option>");
						$.each(responseText.data.contactList, function(key, value) {
							$('select[name="contactId"]').append($("<option/>", {
								value : key,
								text : value
							}));
						});
						$('select[name="contactId"]').attr('selected', 0);
						$('select[name="contactId"]').trigger('change'); //D017159	
					}
				});
			} else {
			
				partiesAddressPopupSearch();
			}
			
		}
	});
}

function partiesAddPredictive()
{
	/*var urlPartyAdd = _context
	+ '/cas/autocomplete.do?method=searchAddRoleBK&searchType=234&parentSearch='
	+ $('input[name="organizationId"]').val()
	+ '|'+getAddressRoleTypeFromParty()+'|'+$('#tradeCode').val();*/

	$('input[name="address"]').gatesAutocomplete({
		//source : urlPartyAdd,
		source:_context+'/cas/autocomplete.do',
		name: "Customer Address",
	 	extraParams: {
		 		 method: 'searchAddRoleBK',
		 		 searchType: '234',
		 		 parentSearch:  function() { return $('input[name="organizationId"]').val() + '|'+getAddressRoleTypeFromParty()+'|'+$('#tradeCode').val(); }
	 	},
		formatItem : function(data) {
			/*var partyTypeCode = $('#partyTypeCode :selected').val();
			var addressRoleType = data.addType;
			
			if((partyTypeCode=='20' || partyTypeCode=='21' || partyTypeCode=='31') && addressRoleType!='ALL' && addressRoleType!='FREIGHT PAYABLE')
			{
				return "";
			}
			else if((partyTypeCode=='22' || partyTypeCode=='29') && addressRoleType!='ALL' && addressRoleType!='SHP TO' && addressRoleType!='NOTIFY')
			{
				return "";
			}
			else if(partyTypeCode=='30' && addressRoleType!='ALL' && addressRoleType!='SHPFRM' && addressRoleType!='FWDAGT')
			{
				return "";
			}
			else{*/
				var nameQualifier = data.nameQual;
				var city = data.city;
				var state = data.state;
				var finalAddress = formatAddRoleDscrForSC(nameQualifier, data.stAdd, city, state);
				return finalAddress;
			/*}*/
		},
		formatResult : function(data) {
			var nameQualifier = data.nameQual;
			var city = data.city;
			var state = data.state;
			var finalAddress = formatAddRoleDscrForSC(nameQualifier, data.stAdd, city, state);
			return finalAddress;
		},
		select : function(data) {
			addressAutoCompleteFunction(data);
		}
	});
}

function partiesPopupSearch() {
	orgCaller = 'parties';
	var partiesName = $('input[name="organizationName"]').val();
	var splitpartiesName = "";
	var actionUrl = "";
	if (partiesName.indexOf("-") > 0) {
		splitpartiesName = partiesName.split("-");
		actionUrl = _context + '/cas/orgSearchLookup.do?filterValue1=|'+ $('#tradeCode').val() + '|BK|||'+splitpartiesName[1];
	} else {
		splitpartiesName = partiesName;
		actionUrl = _context + '/cas/orgSearchLookup.do?filterValue1='
				+ partiesName + '|'+$('#tradeCode').val() + '|BK';
	}
	var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, 'CustomerSearch', windowStyle);
}

function partiesAddressPopupSearch() {
	orgCaller = 'parties';
	
	if ($.trim($('input[name="organizationId"]').val())=='') { 
		alert("Please select organization first");
	}/*else if($('#tradeCode :selected').val()==''){
		alert("Please select Trade");
	}*/else {
		var actionUrl = _context + '/cas/addRoleBKLookup.do?filterValue1='
				+ $('input[name="organizationId"]').val() + '&filterValue2='+getAddressRoleTypeFromParty()+'&filterValue3='+$('#tradeCode').val();
		var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
		window.open(actionUrl, 'AddressSearch', windowStyle);
	}
}


function clearCityStateZip() {
	$('input[name="careOf"]').val('');
	$('input[name="city"]').val('');
	$('input[name="state"]').val('');
	$('input[name="zip"]').val('');
	$('input[name="countryName"]').val('');
	$('input[name="provinceName"]').val('');
}

function getAddressRoleTypeFromParty()
{
	var selectedParty = $('select[name="partyTypeCode"]').selected().val();
	var addressRoleTypeCode = "";
	
	if(selectedParty=='20' || selectedParty=='21' || selectedParty=='31')
		addressRoleTypeCode = "04";
	else if(selectedParty=='30')
		addressRoleTypeCode = "13";
	else if(selectedParty=='22' || selectedParty=='29')
		addressRoleTypeCode = "12";
	else if(selectedParty=='42' )
		addressRoleTypeCode = "02";
	else if(selectedParty=='43' )
		addressRoleTypeCode = "03";
	
	return addressRoleTypeCode;
}

function partiesAddressUpdate(data)
{
	var values = data.split("|");
	
	isPartyChanged = "Y";
	if(values[3]!=null&&values[3]!='null')
	$('input[name="careOf"]').val(values[3]);
	else
		$('input[name="careOf"]').val('');
	$('input[name="city"]').val(values[2]);
	$('input[name="state"]').val(values[6]);
	$('input[name="zip"]').val(values[8]);
	$('input[name="countryName"]').val(values[11]);
	if(values[10]!=null && values[10]!='null')
		$('input[name="provinceName"]').val(values[10]);
	else
		$('input[name="provinceName"]').val('');
	
	var finalAddress = formatAddRoleDscrForSC(values[4],values[7],values[2],values[6]);//nameQualifier, addressLine1, city, state)
	$('input[name="address"]').val(finalAddress);
	$('input[name="address"]').attr('title',$('input[name="address"]').val()+','+values[15]+','+values[16]);
	partyAddr = finalAddress;
	$('input[name="addressRoleId"]').val(values[9]);

	clearContactInfo(true);

	// Get contact list for address. [commented for merge.]
	$.ajax({
		async:false,
		type : "POST",
		url : _context +"/shipment/arole/getContactList",
		data : {
			addressRoleId : $('input[name="addressRoleId"]').val()
		},
		success : function(responseText) {
			$('select[name="contactId"]').children().remove();
			$('select[name="contactId"]').append("<option value=''>Select</option>");
			$.each(responseText.data.contactList, function(key, value) {
				$('select[name="contactId"]').append($("<option/>", {
					value : key,
					text : value
				}));
			});
			$('select[name="contactId"]').attr('selected', 0);
			$('select[name="contactId"]').trigger('change'); //D017159	
		}
	});
}

function addressAutoCompleteFunction(data)
{
	var nameQualifier = data.nameQual;
	var city = data.city;
	var state = data.state;
	var finalAddress = formatAddRoleDscrForSC(nameQualifier, data.stAdd, city, state);
	$('input[name="address"]')
			.val(finalAddress);
	partyAddr = finalAddress;
	$('input[name="addressRoleId"]')
			.val(data.addRole);
	if(data.coOrgName!=null&&data.coOrgName!='null')
		$('input[name="careOf"]').val(data.coOrgName);
	else
		$('input[name="careOf"]').val('');
	$('input[name="city"]')
			.val(data.city);
	$('input[name="state"]')
			.val(data.state);
	$('input[name="zip"]').val(
			data.zip);
	if(data.cntry!=null&&data.cntry!='null')
		$('input[name="countryName"]').val(data.cntry);
	else
		$('input[name="countryName"]').val("US");
		if(data.provnc!=null&&data.provnc!='null')
		$('input[name="provinceName"]').val(data.provnc);
	else
		$('input[name="provinceName"]').val('');
	$('input[name="isOneTimeCustomer"]').val(false);
	isPartyChanged = "";

	$.ajax({
			type : "POST",
			url : _context +"/shipment/arole/getContactList",
			data : {
				addressRoleId : $('input[name="addressRoleId"]').val()
			},
			success : function(responseText) {
				
				$('select[name="contactId"]').children().remove();
				/* D017159 $('select[name="contactId"]').append("<option value=''></option>");*/
				$.each(responseText.data.contactList,
					function(key, value) {
						$('select[name="contactId"]').append($("<option/>",
						{
							value : key,
							text : value
						}));
				});
				clearContactInfo(true);
				$('select[name="contactId"]:first-child').attr("selected", "selected");
				$('select[name="contactId"]').trigger('change');
			}
	});

}

function clearContactInfo(contactClear){
	
	if(contactClear)
	$('input[name="contact"]').val("");

	$('input[name="contactFaxCountryCode"]').val("");
	$('input[name="contactFaxAreaCode"]').val("");
	$('input[name="contactFaxExchange"]').val("");
	$('input[name="contactFaxStation"]').val("");
	$('input[name="contactFaxExtension"]').val(""); // For Defect DD017016

	$('input[name="contactCellCountryCode"]').val("");
	$('input[name="contactCellAreaCode"]').val("");
	$('input[name="contactCellExchange"]').val("");
	$('input[name="contactCellStation"]').val("");
	$('input[name="contactCellExtension"]').val(""); // For Defect DD017016

	$('input[name="contactPhoneAreaCode"]').val("");
	$('input[name="contactPhoneExchange"]').val("");
	$('input[name="contactPhoneStation"]').val("");
	$('input[name="contactPhoneCountryCode"]').val("");
	$('input[name="contactPhoneExtension"]').val(""); // For Defect DD017016

	$('input[name="contactEmailAddress"]').val("");
//	$('input[name="communicationMethodCode"]').val("P");
	$('input[name="communicationMethodCode"]').val("");
	
	$('#partyComm1').attr("checked", false);
	$('#partyComm2').attr("checked", false);
	$('#partyComm3').attr("checked", false);
	$('#partyComm4').attr("checked", false);
	
	//setDefaultPrefMethod("party");
}

/*function enableDisableContactIdParties(set){
	if($("#statusCode").val()!='CANC')
		$('select[name="contactId"]').attr("disabled",set);
}*/

function setphoneCountryCodeParties(){
	$.ajax({
		async: false,
		type : "POST",
		url : _context +"/shipment/phoneCountryCode",
		data : {
			addressRoleId : $('input[name="addressRoleId"]').val()
		},
		success : function(responseText) {
			if($('input[name="contactPhoneCountryCode"]').val()==''){
				$('input[name="contactPhoneCountryCode"]').val(responseText.data);
			}
			//D022908: 	Maintain Bill - add party
			if($('input[name="contactFaxCountryCode"]').val()==''){
				$('input[name="contactFaxCountryCode"]').val(responseText.data);
			}
		}
	});
}
//Code Addition start for defect -D018433

function trimPartyContactOnChange(){
	$('input[name="contact"]').change(function() {
		$('input[name="contact"]').val($.trim($('input[name="contact"]').val()));
		contactNameChanged();
	});
	$('input[name="contactEmailAddress"]').change(function() {
		$('input[name="contactEmailAddress"]').val($.trim($('input[name="contactEmailAddress"]').val()));
	});
	$('input[name="contactFaxCountryCode"]').change(function() {
		$('input[name="contactFaxCountryCode"]').val($.trim($('input[name="contactFaxCountryCode"]').val()));
	});
	$('input[name="contactFaxAreaCode"]').change(function() {
		$('input[name="contactFaxAreaCode"]').val($.trim($('input[name="contactFaxAreaCode"]').val()));
	});
	$('input[name="contactFaxExchange"]').change(function() {
		$('input[name="contactFaxExchange"]').val($.trim($('input[name="contactFaxExchange"]').val()));
	});
	$('input[name="contactFaxStation"]').change(function() {		
		$('input[name="contactFaxStation"]').val($.trim($('input[name="contactFaxStation"]').val()));
	});
	$('input[name="contactFaxExtension"]').change(function() {
		$('input[name="contactFaxExtension"]').val($.trim($('input[name="contactFaxExtension"]').val()));
	});
	$('input[name="contactCellCountryCode"]').change(function() {
		$('input[name="contactCellCountryCode"]').val($.trim($('input[name="contactCellCountryCode"]').val()));
	});
	$('input[name="contactCellAreaCode"]').change(function() {
		$('input[name="contactCellAreaCode"]').val($.trim($('input[name="contactCellAreaCode"]').val()));
	});
	$('input[name="contactCellExchange"]').change(function() {
		$('input[name="contactCellExchange"]').val($.trim($('input[name="contactCellExchange"]').val()));
	});
	$('input[name="contactCellStation"]').change(function() {
		$('input[name="contactCellStation"]').val($.trim($('input[name="contactCellStation"]').val()));
	});
	$('input[name="contactCellExtension"]').change(function() {
		$('input[name="contactCellExtension"]').val($.trim($('input[name="contactCellExtension"]').val()));
	});
	$('input[name="contactPhoneAreaCode"]').change(function() {
		$('input[name="contactPhoneAreaCode"]').val($.trim($('input[name="contactPhoneAreaCode"]').val()));
	});
	$('input[name="contactPhoneExchange"]').change(function() {
		$('input[name="contactPhoneExchange"]').val($.trim($('input[name="contactPhoneExchange"]').val()));
	});
	$('input[name="contactPhoneStation"]').change(function() {
		$('input[name="contactPhoneStation"]').val($.trim($('input[name="contactPhoneStation"]').val()));
	});
	$('input[name="contactPhoneCountryCode"]').change(function() {
		$('input[name="contactPhoneCountryCode"]').val($.trim($('input[name="contactPhoneCountryCode"]').val()));
	});
	$('input[name="contactPhoneExtension"]').change(function() {
		$('input[name="contactPhoneExtension"]').val($.trim($('input[name="contactPhoneExtension"]').val()));
	});
}
//Code Addition end for defect -D018433;var consigneeAddress = "";

$(function() {

	$('#shipmentForm').validationEngine('attach');
	//commented for defect #D021764
	/*$('#consigneeComm1').attr('checked',true);
	$('#consigneeComm1').val('P');*/

	//enableDisableContactId('consignee',true);

	$('input[name="consignee\\.city"]').attr("readonly", true);
	$('input[name="consignee\\.state"]').attr("readonly", true);
	$('input[name="consignee\\.zip"]').attr("readonly", true);
	$("#copyConsignee").attr("disabled", true);
	
	consigneeOrgPredictive();
	consigneeAddPredictive();

	// consignee Pop-Up Search
	$('input[name="consignee\\.organizationName"]').gatesPopUpSearch({
		func : function() {
			consigneePopupSearch();
			/*if($('input[name="consignee\\.isOneTimeCustomer"]').val()==false || $('input[name="consignee\\.isOneTimeCustomer"]').val()=='false'){ // for defect D019012 
			consigneeAddressPopupSearch();
			}*/
		}
	});

	// consignee address Pop-Up Search
	$('input[name="consignee\\.address"]').gatesPopUpSearch({
		func : function() {
			if($('input[name="consignee\\.isOneTimeCustomer"]').val()==false || $('input[name="consignee\\.isOneTimeCustomer"]').val()=='false'){ // for defect D019012 
				consigneeAddressPopupSearch();
				}
		}
	});

	// Clear consignee details on change of consignee
	$('input[name="consignee\\.organizationName"]').change(
			function() {
				if ($('input[name="consignee\\.organizationName"]').val()=='' 
					|| $('input[name="consignee\\.organizationName"]').val() != $('#consigneeName').val()) {
					
					setConsigneeDivName("");
					if($('input[name="shipper\\.organizationName"]').val()!=''){
						$("#copyShipper").attr("disabled", false);
					}
					emptyCityStateZip("consignee");
					emptyContactDetails("consignee");
					$("#copyConsignee").attr("disabled", true);
					$('input[name="consignee\\.organizationId"]').val("");
					$('input[name="consignee\\.organizationCode"]').val('');
					$('input[name="consignee\\.organizationName"]').val('');
					//$('input[name="consignee\\.addressRoleId"]').val("");
					$('input[name="consignee\\.isOneTimeCustomer"]').val("false");
					//removeConsigneeAsDebtor();
					//resetTrade();
					enableDisableContactId('consignee', true);
					//consigneeAddPredictive();
				}
				
				$('input[name="consignee\\.address"]').val("");
				processShipperConsigneeColor("consignee");
				$('input[name="consignee\\.address"]').trigger('change');
	});

	$('input[name="consignee\\.address"]').change(function() {
		if(consigneeAddress!=$('input[name="consignee\\.address"]').val())
		{
			$('input[name="consignee\\.address"]').val('');
			consigneeAddress = '';
			emptyCityStateZip("consignee");
			emptyContactDetails("consignee");
			$("#copyConsignee").attr("disabled", true);
			processShipperConsigneeColor("consignee");
			$('input[name="consignee\\.addressRoleId"]').val("");
			removeConsigneeAsDebtor();
		}
		
		if($('input[name="shipper\\.organizationName"]').val()!='' 
			&& $('input[name="consignee\\.organizationName"]').val()==''){
			$("#copyShipper").attr("disabled", false);
		}
	});

	// get contact details for selected contact id[commented for merge.]
	$('select[name="consignee\\.contactId"]').change(function() {
	/*	if($('select[name="consignee\\.contactId"]').val()!=null && 
				$('select[name="consignee\\.contactId"]').val()!=''){*/
			requestForContactDetails("consignee", "N");
			$('#isChangeAcceptedAfterUnitsReceived').val("N");
		/*}*/
	});

	/**
	 * Copy Consignee to Shipper 
	 * */
	$('#copyConsignee').click(function() {
		if ($('input[name="consignee\\.organizationName"]').val() != '' && $('input[name="shipper\\.organizationName"]').val() == '') {
			$('input[name="shipper\\.organizationName"]').val($('input[name="consignee\\.organizationName"]').val());
			$('#shipperName').val($('input[name="consignee\\.organizationName"]').val());
			$('input[name="shipper\\.address"]').val($('input[name="consignee\\.address"]').val());
			shipperAddress = $('input[name="consignee\\.address"]').val();
			$('input[name="shipper\\.careOf"]').val($('input[name="consignee\\.careOf"]').val());
			$('input[name="shipper\\.city"]').val($('input[name="consignee\\.city"]').val());
			$('input[name="shipper\\.state"]').val($('input[name="consignee\\.state"]').val());
			$('input[name="shipper\\.zip"]').val($('input[name="consignee\\.zip"]').val());

			$('select[name="shipper\\.contactId"]').html($('select[name="consignee\\.contactId"]').html());

			$('select[name="shipper\\.contactId"]').selected().val($('select[name="consignee\\.contactId"]').selected().val());

			$('input[name="shipper\\.contact"]').val($('input[name="consignee\\.contact"]').val());
			$('input[name="shipper\\.contactPhoneCountryCode"]').val($('input[name="consignee\\.contactPhoneCountryCode"]').val());
			$('input[name="shipper\\.contactPhoneAreaCode"]').val($('input[name="consignee\\.contactPhoneAreaCode"]').val());
			$('input[name="shipper\\.contactPhoneExchange"]').val($('input[name="consignee\\.contactPhoneExchange"]').val());
			$('input[name="shipper\\.contactPhoneStation"]').val($('input[name="consignee\\.contactPhoneStation"]').val());

			$('input[name="shipper\\.contactCellCountryCode"]').val($('input[name="consignee\\.contactCellCountryCode"]').val());
			$('input[name="shipper\\.contactCellAreaCode"]').val($('input[name="consignee\\.contactCellAreaCode"]').val());
			$('input[name="shipper\\.contactCellExchange"]').val($('input[name="consignee\\.contactCellExchange"]').val());
			$('input[name="shipper\\.contactCellStation"]').val($('input[name="consignee\\.contactCellStation"]').val());

			$('input[name="shipper\\.contactFaxCountryCode"]').val($('input[name="consignee\\.contactFaxCountryCode"]').val());
			$('input[name="shipper\\.contactFaxAreaCode"]').val($('input[name="consignee\\.contactFaxAreaCode"]').val());
			$('input[name="shipper\\.contactFaxExchange"]').val($('input[name="consignee\\.contactFaxExchange"]').val());
			$('input[name="shipper\\.contactFaxStation"]').val($('input[name="consignee\\.contactFaxStation"]').val());

			$('input[name="shipper\\.contactEmailAddress"]').val($('input[name="consignee\\.contactEmailAddress"]').val());
			$("#copyConsignee").attr("disabled", true);
			
			//copy the internal ID's
			$('input[name="shipper\\.addressRoleId"]').val($('input[name="consignee\\.addressRoleId"]').val());
			$('input[name="shipper\\.organizationId"]').val($('input[name="consignee\\.organizationId"]').val());
			$('input[name="shipper\\.isOneTimeCustomer"]').val($('input[name="consignee\\.isOneTimeCustomer"]').val());
			$('input[name="shipper\\.organizationCode').val($('input[name="consignee\\.organizationCode').val());
			
			processShipperConsigneeColor("shipper");

			var preMethod = getPrefCommMethod('consignee');
			if(preMethod=='P'){
				$('#shipperComm1').attr('checked',true);
				$('#shipperComm1').val(preMethod);
			}else if(preMethod=='C'){
				$('#shipperComm2').attr('checked',true);
				$('#shipperComm2').val(preMethod);
			}else if(preMethod=='F'){
				$('#shipperComm3').attr('checked',true);
				$('#shipperComm3').val(preMethod);
			}else if(preMethod=='E'){
				$('#shipperComm4').attr('checked',true);
				$('#shipperComm4').val(preMethod);
			}
			enableDisableContactId('shipper',false);
			
			setShipperDivName(" " + $('input[name="consignee\\.organizationName"]').val());
			$('#refNumOverRideForShipper').val("N");
			
			if($('#prepaidCollectCode').val()=='P'||$('#prepaidCollectCode').val()=='B'){
				addShipperAsDebtor();
			}
			//shipperOrgPredictive();
			//shipperAddressPredictive();
		}
	});

	$('#consigneeRepeatContact').click(function(){
		if($("#statusCode").text()=='ISSUED' || $("#statusCode").text()=='CORRECTED'){
			$("#repeatContactOverlay").gatesDisable();
		}else{
			$("#repeatContactOverlay").gatesEnable();
		}
		var contact= $('input[name="consignee\\.contact"]').val();
		if(($('select[name="consignee\\.contactId"]').selected().val()!='') || ((contact!=null) && ($.trim(contact).length !=0)) )
		{
			repeatCaller ="consignee";
			
			$('#originalOrgName').val($('input[name="consignee\\.organizationName"]').val());
			$('#originalOrgAddress').val($('input[name="consignee\\.address"]').val() /* Defect 17655  +" - "+ $('input[name="consignee\\.city"]').val() +" , "+ $('input[name="consignee\\.state"]').val()*/);
			$('#repeatContactShipmentNo').val($('#shipmentNumber').val());
			$('#repeatContactShipmentSeqNo').val($('#shipmentSequenceNumber').val());
			$('#repeatContactShipmentCorrNo').val($('#shipmentCorrectionNumber').val());			
			$("#repeatContactOriginalAroleId").val($('input[name="consignee\\.addressRoleId"]').val());
			//$("#repeatContactNameLabel").html($("select[name='consignee\\.contactId'] option:selected").text());
			$("#repeatContactNameLabel").html($('input[name="consignee\\.contact"]').val());
			$("#repeatContactName").val($('input[name="consignee\\.contact"]').val());
			$("#repeatContactId").html($('select[name="consignee\\.contactId"]').html());
			$("#repeatContactId").selected().val($('select[name="consignee\\.contactId"]').selected().val());
			$('#repeatTrade').val($('#tradeCode').val());
			$('#repeatCaller').val(repeatCaller);
			$('#repeatCallerPartyType').val("03");	
			
			$('#repeatCustomerGroupId').val($('#customerGroupId').val());
			$('#repeatPortOfLoad').val($('#originPortCityCode').val());
			$('#repeatPortOfDischarge').val($('#destinationPortCityCode').val());
		
			var p1 =  $('input[name="consignee\\.contactPhoneCountryCode"]').val();
			var p2 =  $('input[name="consignee\\.contactPhoneAreaCode"]').val();
			var p3 =  $('input[name="consignee\\.contactPhoneExchange"]').val();
			var p4 =  $('input[name="consignee\\.contactPhoneStation"]').val();
			var p5 =  $('input[name="consignee\\.contactPhoneExtension"]').val();
					
			var Phonearray = [p1,p2,p3,p4,p5];			
			var Phone = Phonearray.join("-");
			
			
			var c1 =  $('input[name="consignee\\.contactCellCountryCode"]').val();
			var c2 =  $('input[name="consignee\\.contactCellAreaCode"]').val();
			var c3 =  $('input[name="consignee\\.contactCellExchange"]').val();
			var c4 =  $('input[name="consignee\\.contactCellStation"]').val();
			var c5 =  $('input[name="consignee\\.contactCellExtension"]').val();					
			
			var cellarray = [c1,c2,c3,c4,c5];
			var cell = cellarray.join("-");
			
			var f1 =  $('input[name="consignee\\.contactFaxCountryCode"]').val();
			var f2 =  $('input[name="consignee\\.contactFaxAreaCode"]').val();
			var f3 =  $('input[name="consignee\\.contactFaxExchange"]').val();
			var f4 =  $('input[name="consignee\\.contactFaxStation"]').val();
			var f5 =  $('input[name="consignee\\.contactFaxExtension"]').val();
			
			var faxarray = [f1,f2,f3,f4,f5];			
			var fax = faxarray.join("-");
			
			$("#repeatContactPhone").val(Phone);			
			$("#repeatContactCell").val(cell);
			$("#repeatContactFax").val(fax);			
			$("#repeatContactEmailAddress").val($('input[name="consignee\\.contactEmailAddress"]').val());			
			
			$("#repeatContactOverlay").dialog('open');
		}
		else
			alert("Please select a contact/contact Name first");
	});

	
	
	/*$('input[name="consignee\\.organizationName"]').click(function(){
		shipperPredictiveSearch();
		consigneePredictiveSearch();
	});*/
	
	$("#consignee input").change(function() {
		if ($(this).is("#contactId") || $(this).is("#contactPhoneAreaCode") || 
				$(this).is("#contactPhoneExchange") || $(this).is("#contactPhoneStation")){
			$('#isChangeAcceptedAfterUnitsReceived').val("N");
		}
	});
	trimContactOnChange('consignee'); //D018433
	if(isShipperConsigneeModifiable==false){
		$("#consigneeRepeatContact").attr("disabled",true);
		$("#shipperRepeatContact").attr("disabled",true);
		$("#consigneeOneTimeCustDiv").attr("disabled",true);
		$("#shipperOneTimeCustDiv").attr("disabled",true);
	}
	
	
	
    autoTabConsignee('contactPhoneCountryCode','contactPhoneAreaCode', 1,'contactPhoneCountryCode');
    autoTabConsignee('contactPhoneAreaCode','contactPhoneExchange', 3,'contactPhoneCountryCode');
    autoTabConsignee('contactPhoneExchange','contactPhoneStation', 3,'contactPhoneCountryCode');
    autoTabConsignee('contactPhoneStation','contactPhoneExtension', 4,'contactPhoneCountryCode');
	
	
    autoTabConsignee('contactCellCountryCode','contactCellAreaCode', 1,'contactCellCountryCode');
    autoTabConsignee('contactCellAreaCode','contactCellExchange', 3,'contactCellCountryCode');
    autoTabConsignee('contactCellExchange','contactCellStation', 3,'contactCellCountryCode');
    autoTabConsignee('contactCellStation','contactCellExtension', 4,'contactCellCountryCode');
	
    autoTabConsignee('contactFaxCountryCode','contactFaxAreaCode', 1,'contactFaxCountryCode');
    autoTabConsignee('contactFaxAreaCode','contactFaxExchange', 3,'contactFaxCountryCode');
    autoTabConsignee('contactFaxExchange','contactFaxStation', 3,'contactFaxCountryCode');
    autoTabConsignee('contactFaxStation','contactFaxExtension', 4,'contactFaxCountryCode');
    
    

});

function consigneeOrgPredictive()
{
	//var urlConsigneeOrg = _context + '/cas/autocomplete.do?method=searchOrg&searchType=229&parentSearch=BK|'+$('#tradeCode').val();
	$('input[name="consignee\\.organizationName"]').gatesAutocomplete({
		//source : urlConsigneeOrg,
		source:_context+'/cas/autocomplete.do',
	 	extraParams: {
		 		 method: 'searchOrg',
		 		 searchType: '229',
		 		 parentSearch:  function() { return "BK|"+$('#tradeCode').val(); }
	 	},
		formatItem : function(data) {
			$('input[name="consignee\\.organizationId"]').val("");
			return data.name + "-" + data.abbr;
		},
		formatResult : function(data) {
			return data.name + "-" + data.abbr;
		},
		select : function(data) {
			$('input[name="consignee\\.organizationName"]').val(
					data.name + "-" + data.abbr);
			$('#consigneeName').val(data.name);
			$('input[name="consignee\\.organizationId"]').val(data.id);
			$('input[name="consignee\\.isOneTimeCustomer"]').val(false);
			processShipperConsigneeColor("consignee");
			$('input[name="consignee\\.organizationCode"]').val(data.abbr);
			consigneeId = data.id;
			//populateTrade(data.trade);
			$('select[name="consignee\\.contactId"]').children().remove();
			$('select[name="consignee\\.contactId"]').append("<option value='' label='Select'></option>");
			$("#consigneeAddressRoleName").val("");
		
			if($('#shipperName').val()!=''){
				$("#copyShipper").attr("disabled", true);
			}
		
			$('input[name="consignee\\.address"]').val("");
			emptyCityStateZip("consignee");
			emptyContactDetails("consignee");
			//consigneeAddPredictive();
			
			singleConsAddressSelect();
			
			
			setSaveBillBeforeBillButton();
		}
	});
}

function singleConsAddressSelect(){
	// 032362: 	MAINTAIN BILING - CONSIGNEE PARTY - Allows adding AROL that is not All/Shipto type
	// type and trade were missing
	$.ajax({
		type : "POST",
		url : _context +"/cas/autocomplete.do?method=searchSingleAddressforBK&searchType=234&parentSearch="+$('input[name="consignee\\.organizationId"]').val()+'|03|'+$('#tradeCode').val(),						
		      
		success : function(responseText) {
		
			if(responseText.length == 1){
				handlePrepaidCollectIndicator('C');
				emptyContactDetails("consignee");
				emptyCityStateZip("consignee");
				
				var nameQualifier = responseText[0].nameQual;
				var city = responseText[0].city;
				var state = responseText[0].state;
				var finalAddress = formatAddRoleDscrForSC(nameQualifier, responseText[0].stAdd, city, state);
				consigneeAddress = finalAddress;
				emptyCityStateZip("consignee");
				$('input[name="consignee\\.addressRoleId"]').val(responseText[0].addRole);
				if(responseText[0].coOrgName!=null && responseText[0].coOrgName!='null'){
					$('input[name="consignee\\.careOf"]').val(responseText[0].coOrgName);
				}else{
				$('input[name="consignee\\.careOf"]').val("");
				}
				$('input[name="consignee\\.city"]').val(responseText[0].city);
				$('input[name="consignee\\.state"]').val(responseText[0].state);
				$('input[name="consignee\\.zip"]').val(responseText[0].zip);
				$('input[name="consignee\\.address"]').val(consigneeAddress);
				$("#shipperAddressRoleName").val($('input[name="consignee\\.address"]').val());
				$('#refNumOverRideForConsignee').val("N");
				//$('#isChangeAcceptedAfterUnitsReceived').val("N");
				
				if(responseText[0].cntry!=null && responseText[0].cntry!='null'){
					$('input[name="consignee\\.countryName"]').val(responseText[0].cntry);
				}else{
				$('input[name="consignee\\.countryName"]').val("");
				}
				if(responseText[0].provnc!=null && responseText[0].provnc!='null'){
					$('input[name="consignee\\.provinceName"]').val(responseText[0].provnc);
				}else{
				$('input[name="consignee\\.provinceName"]').val("");
				}
				
				processShipperConsigneeColor("consignee");
				checkAccordionHeaderForConsignee();
			
				requestForContactList("consignee");
				
				if($('#prepaidCollectCode').val()=='C'||$('#prepaidCollectCode').val()=='B'){
					addConsigneeAsDebtor();
				}
				removeShipmentErrorPointers();
				
				setSaveBillBeforeBillButton();
				
			} else {
			
				consigneeAddressPopupSearch();
		}
			
		}
	});
}

function consigneeAddPredictive()
{
	//var urlConsigneeAdd = _context + '/cas/autocomplete.do?method=searchAddRoleBK&searchType=234&parentSearch='+ $('input[name="consignee\\.organizationId"]').val() + '|03|'+$('#tradeCode').val();
	
	$('input[name="consignee\\.address"]').gatesAutocomplete(
	{
		//source : urlConsigneeAdd,
		source:_context+'/cas/autocomplete.do',
		name: "Customer Address",
	 	extraParams: {
		 		 method: 'searchAddRoleBK',
		 		 searchType: '234',
		 		 parentSearch:  function() { return $('input[name="consignee\\.organizationId"]').val() + '|03|'+$('#tradeCode').val(); }
	 	},
		formatItem : function(data) {
			var nameQualifier = data.nameQual;
			var city = data.city;
			var state = data.state;
			var finalAddress = formatAddRoleDscrForSC(nameQualifier, data.stAdd, city, state);
			return finalAddress;
		},
		formatResult : function(data) {
			var nameQualifier = data.nameQual;
			var city = data.city;
			var state = data.state;
			var finalAddress = formatAddRoleDscrForSC(nameQualifier, data.stAdd, city, state);
			return finalAddress;
		},
		select : function(data) {
			
			handlePrepaidCollectIndicator('C');
			emptyContactDetails("consignee");
			emptyCityStateZip("consignee");
			
			var nameQualifier = data.nameQual;
			var city = data.city;
			var state = data.state;
			var finalAddress = formatAddRoleDscrForSC(nameQualifier, data.stAdd, city, state);
			consigneeAddress = finalAddress;
			emptyCityStateZip("consignee");
			$('input[name="consignee\\.addressRoleId"]').val(data.addRole);
			if(data.coOrgName!=null && data.coOrgName!='null'){
				$('input[name="consignee\\.careOf"]').val(data.coOrgName);
			}else{
			$('input[name="consignee\\.careOf"]').val("");
			}
			
			if(data.cntry!=null && data.cntry!='null'){
				$('input[name="consignee\\.countryName"]').val(data.cntry);
			}else{
			$('input[name="consignee\\.countryName"]').val("");
			}
			if(data.provnc!=null && data.provnc!='null'){
				$('input[name="consignee\\.provinceName"]').val(data.provnc);
			}else{
			$('input[name="consignee\\.provinceName"]').val("");
			}
			$('input[name="consignee\\.city"]').val(data.city);
			$('input[name="consignee\\.state"]').val(data.state);
			$('input[name="consignee\\.zip"]').val(data.zip);
			
			$('#refNumOverRideForConsignee').val("N");
			//$('#isChangeAcceptedAfterUnitsReceived').val("N");
			
			
			processShipperConsigneeColor("consignee");
			checkAccordionHeaderForConsignee();
		
			requestForContactList("consignee");
			
			if($('#prepaidCollectCode').val()=='C'||$('#prepaidCollectCode').val()=='B'){
				addConsigneeAsDebtor();
			}
			removeShipmentErrorPointers();
			
			setSaveBillBeforeBillButton();
		}
	});
}

function checkForConsigneeTemplate(){
	if($("#shipmentStatusCode").val()=='INCP' || $("#shipmentStatusCode").val()==''){
		if($('input[name="consignee\\.address"]').val()!='' && $('input[name="consignee\\.addressRoleId"]').val()!=''){
			if($('#shipmentTemplateOwnerPartyType').val()=='03' || ($('#shipmentTemplateId').val()=='' || $('#shipmentTemplateId').val()==null)){
				var data = prepareInputForCASTemplateScreen();
				$.ajax({
					type : "POST",
					//url : _context+'/cas/autocomplete.do?method=getTemplateCount&searchType=257&parentSearch='+$('input[name="consignee\\.addressRoleId"]').val()+'|03|'+filterParamsForCASForTemplateValidation(),
					url : _context+'/cas/autocomplete.do?method=getTemplateCount&searchType=257&parentSearch='+$('input[name="consignee\\.addressRoleId"]').val()+'|03|',
					success : function(responseText) {
						var templateCount = responseText[0].totrec;
						//$("#shipmentTemplateOwner").val("N");//get it from CAS
						//means template owner is not shipper
						//if($("#shipmentTemplateOwner").val()!='Y' && $("#shipmentTemplateOwner").val()!=''){
							if(templateCount==1){
								templateUpdate(responseText[0].id,'consignee');
							}else if(templateCount>1){
								templatePopupSearch();
								requestForContactList("consignee");
							}else{
								requestForContactList("consignee");
								//addConsigneeAsDebtor();
							}
						/*}else{
							requestForContactList("consignee");
							//addConsigneeAsDebtor();
						}*/
					}
				});
			}
			else
				requestForContactList("consignee");
		}
	}
	else
		requestForContactList("consignee");
}

function clearCityStateZip() {
	$('input[name="consignee\\.city"]').val('');
	$('input[name="consignee\\.state"]').val('');
	$('input[name="consignee\\.zip"]').val('');
}

/**
 * This method calls consignee lookup and passes it necessary arguments.
 * */
function consigneePopupSearch() {
	orgCaller = 'consignee';
	var consigneeName = $('input[name="consignee\\.organizationName"]').val();
	var splitconsigneeName = "";
	var actionUrl = "";
	if(consigneeName.indexOf("-") > 0){
		splitconsigneeName = consigneeName.split("-");
		actionUrl = _context + '/cas/orgSearchLookup.do?filterValue1=|' + $('#tradeCode').val() + '|BK|||'+encodeURIComponent(splitconsigneeName[1]);
	}else{
		actionUrl = _context + '/cas/orgSearchLookup.do?filterValue1='
		+ consigneeName + '|' + $('#tradeCode').val() + '|BK'/*+'|'+$('#customerGroupId').val()*/;
	}
	var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, 'CustomerSearch', windowStyle);
}

/**
 * consignee address pop-up search
 * */
function consigneeAddressPopupSearch() {
	orgCaller = 'consignee';
	
	if ($.trim($('input[name="consignee\\.organizationId"]').val())=='') { 
		alert("Please select organization first");
	}/*else if($('#tradeCode :selected').val()==''){
		alert("Please select Trade");
	}*/else {
		var actionUrl = _context + '/cas/addRoleBKLookup.do?filterValue1='
				+ encodeURIComponent($('input[name="consignee\\.organizationId"]').val()) + '&filterValue2=03'+'&filterValue3='+$('#tradeCode').val();
		var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
		window.open(actionUrl, 'AddressSearch', windowStyle);
	}
}

/**
 * consignee address method called by CAS, after look-up.
 * */
//function addroleUpdate(data) {}


function loadAdditionalConsigneeDetails(responseText){
	$("#consigneeId").val(responseText.data.consignee.organizationId);
	$('#consignee\\.addressRoleId').val(responseText.data.consignee.addressRoleId);
	
	if(null!=responseText.data.consignee.addressRoleId){
		enableDisableContactId('consignee',false);
	}

	setConsigneeCommMethodValue(responseText.data.consignee);
	//first clear the drop down
	$('select[name="consignee\\.contactId"]').children().remove();
	$('select[name="consignee\\.contactId"]').append("<option value='' label='Select'></option>");
	$.each(responseText.data.consignee.contactList, function(key, value) {
		$('select[name="consignee\\.contactId"]').append($("<option/>", {
					value : key,
					text : value
		}));
	});
	
	$('select[name="consignee\\.contactId"]').val(responseText.data.consignee.contactId);
	
	//$('select[name="consignee\\.contactId"]').attr('selectedIndex', 0);
	if(responseText.data.consignee.isCustomerOneTimeCust==true){
		formatColorForOneTime('consignee');
	}
}

function emptyCityStateZip(source){
	$('input[name="'+ source +'\\.careOf"]').val("");
	$('input[name="'+ source +'\\.city"]').val("");
	$('input[name="'+ source +'\\.state"]').val("");
	$('input[name="'+ source +'\\.zip"]').val("");
}

function emptyContactDetails(source){
	$('select[name="'+ source +'\\.contactId"]').children().remove();
	emptyContactDetailsOnContactChange(source);
	enableDisableContactId(source, true);
	//$('input[name="'+ source +'\\.communicationMethodCode"]').val("");
	setDefaultPrefMethod(source);
}

function emptyContactDetailsOnContactChange(source){
	$('input[name="'+ source +'\\.contact"]').val("");
	$('input[name="'+ source +'\\.contactFaxCountryCode"]').val("");
	$('input[name="'+ source +'\\.contactFaxAreaCode"]').val("");
	$('input[name="'+ source +'\\.contactFaxExchange"]').val("");
	$('input[name="'+ source +'\\.contactFaxStation"]').val("");

	$('input[name="'+ source +'\\.contactCellCountryCode"]').val("");
	$('input[name="'+ source +'\\.contactCellAreaCode"]').val("");
	$('input[name="'+ source +'\\.contactCellExchange"]').val("");
	$('input[name="'+ source +'\\.contactCellStation"]').val("");

	$('input[name="'+ source +'\\.contactPhoneAreaCode"]').val("");
	$('input[name="'+ source +'\\.contactPhoneExchange"]').val("");
	$('input[name="'+ source +'\\.contactPhoneStation"]').val("");
	$('input[name="'+ source +'\\.contactPhoneCountryCode"]').val("");

	$('input[name="'+ source +'\\.contactEmailAddress"]').val("");
	//$('input[name="'+ source +'\\.communicationMethodCode"]').val("");
	setDefaultPrefMethod(source);
}
function addConsigneeAsDebtor(){
	
	var queryString = $('#shipmentForm').formSerialize();
	$.ajax({
		url : _context +"/shipment/party/setDefaults",
		type : "POST",
		data : queryString+"&type=consignee&oper=add",
		success : function(responseText) {
			showResponseMessages('msgDiv', responseText);
			/*
			if($('input[name="shipper\\.addressRoleId"]').val()!='' && $('input[name="consignee\\.addressRoleId"]').val()!='')
				$('#prepaidCollectCode').val('B');//both
			else if($('input[name="shipper\\.addressRoleId"]').val()=='' && $('input[name="consignee\\.addressRoleId"]').val()!='')
				$('#prepaidCollectCode').val('C');//consignee
			
			debtorCode = $('#prepaidCollectCode :selected').val();
			setPartiesHeader();*/
			$("#gridIdForParties").trigger("reloadGrid");
		}
	});
}

function removeConsigneeAsDebtor(){
	
	var queryString = $('#shipmentForm').formSerialize();
	/*$.ajax({
		url : _context +"/shipment/party/setDefaults",
		type : "POST",
		data : queryString+"&type=consignee&oper=remove",
		success : function(responseText) {
			showResponseMessages('msgDiv', responseText);
			if($('input[name="shipper\\.addressRoleId"]').val()!='')
				$('#prepaidCollectCode').val('P');
			else
				$('#prepaidCollectCode').val('');
				
			debtorCode = $('#prepaidCollectCode :selected').val();
			setPartiesHeader();
			$("#gridIdForParties").trigger("reloadGrid");
		}
	});*/
	$("#gridIdForParties").trigger("reloadGrid");
}

function setConsigneeDivName(name){
	setAccordianTabDetails("consigneeNameDiv", " - " + name);
}


function setConsigneeCommMethodValue(consignee) {
	if (consignee.communicationMethodCode == 'P') {
		$('#consigneeComm1').attr('checked', true);
		$('#consigneeComm1').val("P");
	} else if (consignee.communicationMethodCode == 'C') {
		$('#consigneeComm2').attr('checked', true);
		$('#consigneeComm2').val("C");
	} else if (consignee.communicationMethodCode == 'F') {
		$('#consigneeComm3').attr('checked', true);
		$('#consigneeComm3').val("F");
	} else if (consignee.communicationMethodCode == 'E') {
		$('#consigneeComm4').attr('checked', true);
		$('#consigneeComm4').val("E");
	}
}

function showWarningIfAroleChangeAndRefNumberRequiredConsignee() {
	var isRefNumberRequired= $('input[name="consignee\\.isReferenceNumberRequired"]').val();
	if (isRefNumberRequired == 'Y') {
		var refExist = validateRefNumberRequiredConsignee();
		if (refExist == false) {
			$.unblockUI();
			alert("Consignee requires reference number");
		}	
	}
}

function setIsRefNumberRequiredConsignee(){
	$.ajax({
		async: false,
		type : "GET",
		url : _context +"/shipment/referenceNumberRequiredOnAddressRoleChange",
		data : {
			addressRoleId : $('input[name="consignee\\.addressRoleId"]').val(),
			shipperConsignee:'C',
			trade: $('#tradeCode').val()
		},
		success : function(responseText) {
			$('input[name="consignee\\.isReferenceNumberRequired"]').val(responseText.data);
		},
		error : function(responseText){
			$('input[name="consignee\\.isReferenceNumberRequired"]').val('N');
		}
	});
}


function enableDisableContactId(source,set){	
	if(($("#statusCode").text()!='ISSUED') && ($("#statusCode").text()!='CORRECTED'))
		if(isShipperConsigneeModifiable){
			$('select[name="'+source+'\\.contactId"]').attr("disabled",false);
		}
	else{
		$('select[name="'+source+'\\.contactId"]').attr("disabled",true);
	}
}

function setDefaultPrefMethod(source){
	$('#'+source+'Comm1').attr('checked',true);
	$('#'+source+'Comm1').val('P');
	$('#'+source+'Comm1').trigger('click');
}

function checkAccordionHeaderForConsignee()
{
	if($('input[name="consignee\\.addressRoleId"]').val()!='')
		setAccordianTabDetails("consigneeNameDiv", " - "+$('input[name="consignee\\.organizationName"]').val());
	else
		setAccordianTabDetails("consigneeNameDiv", "");
};var shipperAddress = "";
var templateCaller ="";

$(function() {
	
	$('#shipmentForm').validationEngine('attach');
	$("#copyShipper").attr("disabled", true);
	//enableDisableContactId('shipper',true);
	//setDefaultPrefMethod('shipper');
	
	shipperOrgPredictive();
	shipperAddressPredictive();
	
	// Shipper Pop-Up Search
	$('input[name="shipper\\.organizationName"]').gatesPopUpSearch({
		func : function() {
			shipperPopupSearch();
			/*if($('input[name="shipper\\.isOneTimeCustomer"]').val()==false || $('input[name="shipper\\.isOneTimeCustomer"]').val()=='false'){
				shipperAddressPopupSearch();
			}*/
		}
	});

	// Shipper address Pop-Up Search
	$('input[name="shipper\\.address"]').gatesPopUpSearch({
		func : function() {
			if($('input[name="shipper\\.isOneTimeCustomer"]').val()==false || $('input[name="shipper\\.isOneTimeCustomer"]').val()=='false'){
				shipperAddressPopupSearch();
			}
		}
	});
	
	
	// Clear shipper details on change of Shipper
	$('input[name="shipper\\.organizationName"]').change(function() {
		if ($('input[name="shipper\\.organizationName"]').val()=='' 
			|| $('input[name="shipper\\.organizationName"]').val() != $('#shipperName').val()) {
			
			//removeShipperAsDebtor();
			setShipperDivName("");
			
			$("#copyShipper").attr("disabled", true);
			if($('input[name="consignee\\.organizationName"]').val()!=''){
				$("#copyConsignee").attr("disabled", false);
			}
			emptyCityStateZip("shipper");
			emptyContactDetails("shipper");
			$('input[name="shipper\\.organizationId"]').val("");
			$('input[name="shipper\\.organizationName"]').val("");
			$('input[name="shipper\\.organizationCode"]').val("");
			$('input[name="shipper\\.isOneTimeCustomer"]').val("false");
			//$('input[name="shipper\\.addressRoleId"]').val("");
			//resetTrade();
			//shipperAddressPredictive();
		}
		
		$('input[name="shipper\\.address"]').val("");
		processShipperConsigneeColor("shipper");
		$('input[name="shipper\\.address"]').trigger('change');
		checkOneTimerCustomer("shipper");
	});
	
	$('input[name="consignee\\.organizationName"]').change(function() {
		checkOneTimerCustomer("consignee");
	});
	$('input[name="shipper\\.address"]').change(function() {
		if(shipperAddress!=$('input[name="shipper\\.address"]').val())
		{
			$('input[name="shipper\\.address"]').val('');
			shipperAddress = '';
			$('input[name="shipper\\.addressRoleId"]').val("");
			$('#refNumOverRideForShipper').val("");
		}
		
		emptyCityStateZip("shipper");
		emptyContactDetails("shipper");
		//handlePrepaidCollectIndicator('S');
		removeShipperAsDebtor();
		checkAccordionHeaderForShipper();
		//checkCopyButtons();
	});

	// get contact details for selected contact id
	$('select[name="shipper\\.contactId"]').change(function() {
		/*if($('select[name="shipper\\.contactId"]').val()!=null 
			&& $('select[name="shipper\\.contactId"]').val()!=''){*/
			requestForContactDetails("shipper", "N");
			//check for one timer customer
			checkOneTimerCustomer("shipper");
		/*}*/
	});
	
	
	$('select[name="consignee\\.contactId"]').change(function() {
		//check for one timer customer
		checkOneTimerCustomer("consignee");
	});

	//Copy Shipper to Consignee
	$('#copyShipper').click(function() {
		if ($('input[name="shipper\\.organizationName"]').val() != '' && $('input[name="consignee\\.organizationName"]').val() == '') {
			$('input[name="consignee\\.organizationName"]').val($('input[name="shipper\\.organizationName"]').val());
			$('#consigneeName').val($('input[name="shipper\\.organizationName"]').val());
			$('input[name="consignee\\.address"]').val($('input[name="shipper\\.address"]').val());
			consigneeAddress = $('input[name="shipper\\.address"]').val();
			$('input[name="consignee\\.careOf"]').val($('input[name="shipper\\.careOf"]').val());
			$('input[name="consignee\\.city"]').val($('input[name="shipper\\.city"]').val());
			$('input[name="consignee\\.state"]').val($('input[name="shipper\\.state"]').val());
			$('input[name="consignee\\.zip"]').val($('input[name="shipper\\.zip"]').val());
			$('input[name="consignee\\.countryName"]').val($('input[name="shipper\\.countryName"]').val());
			$('input[name="consignee\\.provinceName"]').val($('input[name="shipper\\.provinceName"]').val());
			$('select[name="consignee\\.contactId"]').html($('select[name="shipper\\.contactId"]').html());
			
			$('select[name="consignee\\.contactId"]').selected().val($('select[name="shipper\\.contactId"]').selected().val());//html($('select[name="shipper\\.contactId"]').html());
			
			$('input[name="consignee\\.contact"]').val($('input[name="shipper\\.contact"]').val());

			$('input[name="consignee\\.contactPhoneCountryCode"]').val($('input[name="shipper\\.contactPhoneCountryCode"]').val());
			$('input[name="consignee\\.contactPhoneAreaCode"]').val($('input[name="shipper\\.contactPhoneAreaCode"]').val());
			$('input[name="consignee\\.contactPhoneExchange"]').val($('input[name="shipper\\.contactPhoneExchange"]').val());
			$('input[name="consignee\\.contactPhoneStation"]').val($('input[name="shipper\\.contactPhoneStation"]').val());

			$('input[name="consignee\\.contactCellCountryCode"]').val($('input[name="shipper\\.contactCellCountryCode"]').val());
			$('input[name="consignee\\.contactCellAreaCode"]').val($('input[name="shipper\\.contactCellAreaCode"]').val());
			$('input[name="consignee\\.contactCellExchange"]').val($('input[name="shipper\\.contactCellExchange"]').val());
			$('input[name="consignee\\.contactCellStation"]').val($('input[name="shipper\\.contactCellStation"]').val());

			$('input[name="consignee\\.contactFaxCountryCode"]').val($('input[name="shipper\\.contactFaxCountryCode"]').val());
			$('input[name="consignee\\.contactFaxAreaCode"]').val($('input[name="shipper\\.contactFaxAreaCode"]').val());
			$('input[name="consignee\\.contactFaxExchange"]').val($('input[name="shipper\\.contactFaxExchange"]').val());
			$('input[name="consignee\\.contactFaxStation"]').val($('input[name="shipper\\.contactFaxStation"]').val());

			$('input[name="consignee\\.contactEmailAddress"]').val($('input[name="shipper\\.contactEmailAddress"]').val());
			$('input[name="consignee\\.contactEmailAddress"]').attr('title',$('input[name="consignee\\.contactEmailAddress"]').val());
			$("#copyShipper").attr("disabled", true);
			//copy the internal ID's
			$('input[name="consignee\\.addressRoleId"]').val($('input[name="shipper\\.addressRoleId"]').val());
			$('input[name="consignee\\.organizationId"]').val($('input[name="shipper\\.organizationId"]').val());
			$('input[name="consignee\\.isOneTimeCustomer"]').val($('input[name="shipper\\.isOneTimeCustomer"]').val());
			$('input[name="consignee\\.organizationCode').val($('input[name="shipper\\.organizationCode').val());
			
			processShipperConsigneeColor("consignee");
			
			var preMethod = getPrefCommMethod('shipper');
			if(preMethod=='P'){
				$('#consigneeComm1').attr('checked',true);
				$('#consigneeComm1').val(preMethod);
			}else if(preMethod=='C'){
				$('#consigneeComm2').attr('checked',true);
				$('#consigneeComm2').val(preMethod);
			}else if(preMethod=='F'){
				$('#consigneeComm3').attr('checked',true);
				$('#consigneeComm3').val(preMethod);
			}else if(preMethod=='E'){
				$('#consigneeComm4').attr('checked',true);
				$('#consigneeComm4').val(preMethod);
			}
			
			enableDisableContactId('consignee',false);
			setConsigneeDivName(" " + $('input[name="shipper\\.organizationName"]').val());
			$('#refNumOverRideForconsignee').val("N");
			
			if($('#prepaidCollectCode').val()=='C'||$('#prepaidCollectCode').val()=='B'){
				addConsigneeAsDebtor();
			}
			//consigneeOrgPredictive();
			//consigneeAddPredictive();
		
		}
	});

	$('#shipperRepeatContact').click(function(){	
		if($("#statusCode").text()=='ISSUED' || $("#statusCode").text()=='CORRECTED' || isShipperConsigneeModifiable==false){
			$("#repeatContactOverlay").gatesDisable();
		}else{
			$("#repeatContactOverlay").gatesEnable();
		}
		var contact= $('input[name="shipper\\.contact"]').val();
		if(($('select[name="shipper\\.contactId"]').selected().val()!='') || ((contact!=null) && ($.trim(contact).length !=0)) )
		{
			repeatCaller ="shipper";
			
			$('#originalOrgName').val($('input[name="shipper\\.organizationName"]').val());
			$('#originalOrgAddress').val($('input[name="shipper\\.address"]').val()/* Defect 17655 +" - "+ $('input[name="shipper\\.city"]').val() +" , "+ $('input[name="shipper\\.state"]').val()*/);
			$('#repeatContactShipmentNo').val($('#shipmentNumber').val());
			$('#repeatContactShipmentSeqNo').val($('#shipmentSequenceNumber').val());
			$('#repeatContactShipmentCorrNo').val($('#shipmentCorrectionNumber').val());
			
			
			
			$('#repeatContactShipmentNo').val($('#shipmentNumber').val());
			$("#repeatContactOriginalAroleId").val($('input[name="shipper\\.addressRoleId"]').val());
			//$("#repeatContactNameLabel").html($("select[name='shipper\\.contactId'] option:selected").text());
			$("#repeatContactNameLabel").html($('input[name="shipper\\.contact"]').val());
			$("#repeatContactName").val($('input[name="shipper\\.contact"]').val());

			var p1 =  $('input[name="shipper\\.contactPhoneCountryCode"]').val();
			var p2 =  $('input[name="shipper\\.contactPhoneAreaCode"]').val();
			var p3 =  $('input[name="shipper\\.contactPhoneExchange"]').val();
			var p4 =  $('input[name="shipper\\.contactPhoneStation"]').val();
			var p5 =  $('input[name="shipper\\.contactPhoneExtension"]').val();
			var Phonearray = [p1,p2,p3,p4,p5];
			
			var Phone = Phonearray.join("-");
			
			var c1 =  $('input[name="shipper\\.contactCellCountryCode"]').val();
			var c2 =  $('input[name="shipper\\.contactCellAreaCode"]').val();
			var c3 =  $('input[name="shipper\\.contactCellExchange"]').val();
			var c4 =  $('input[name="shipper\\.contactCellStation"]').val();
			var c5 =  $('input[name="shipper\\.contactCellExtension"]').val();
			
			var cellarray = [c1,c2,c3,c4,c5];
			
			var cell = cellarray.join("-");
			
			
			var f1 =  $('input[name="shipper\\.contactFaxCountryCode"]').val();
			var f2 =  $('input[name="shipper\\.contactFaxAreaCode"]').val();
			var f3 =  $('input[name="shipper\\.contactFaxExchange"]').val();
			var f4 =  $('input[name="shipper\\.contactFaxStation"]').val();
			var f5 =  $('input[name="shipper\\.contactFaxExtension"]').val();
			
			var faxarray = [f1,f2,f3,f4,f5];
			
			var fax = faxarray.join("-");
			
			$("#repeatContactPhone").val(Phone);			
			$("#repeatContactCell").val(cell);
			$("#repeatContactFax").val(fax);			
			$("#repeatContactEmailAddress").val($('input[name="shipper\\.contactEmailAddress"]').val());
			$("#repeatContactId").html($('select[name="shipper\\.contactId"]').html());
			$("#repeatContactId").selected().val($('select[name="shipper\\.contactId"]').selected().val());
			$('#repeatTrade').val($('#tradeCode').val());
			$('#repeatCaller').val(repeatCaller);
			$('#repeatCallerPartyType').val("02");
						
			$('#repeatCustomerGroupId').val($('#customerGroupId').val());
			$('#repeatPortOfLoad').val($('#originPortCityCode').val());
			$('#repeatPortOfDischarge').val($('#destinationPortCityCode').val());
			
			$("#repeatContactOverlay").dialog('open');
		}
		else
			alert("Please select a contact/contact Name first");
	});
	
	/*$('#shiConTestDiv').click(function(){
		shipperPredictiveSearch();
		consigneePredictiveSearch();
	});*/
	
	/*$('input[name="shipper\\.organizationName"]').click(function(){
		shipperPredictiveSearch();
		consigneePredictiveSearch();
	});*/
	trimContactOnChange('shipper'); //D018433

	
		
    autoTabShipper('contactPhoneCountryCode','contactPhoneAreaCode', 1,'contactPhoneCountryCode');
    autoTabShipper('contactPhoneAreaCode','contactPhoneExchange', 3,'contactPhoneCountryCode');
    autoTabShipper('contactPhoneExchange','contactPhoneStation', 3,'contactPhoneCountryCode');
    autoTabShipper('contactPhoneStation','contactPhoneExtension', 4,'contactPhoneCountryCode');
	
	
    autoTabShipper('contactCellCountryCode','contactCellAreaCode', 1,'contactCellCountryCode');
    autoTabShipper('contactCellAreaCode','contactCellExchange', 3,'contactCellCountryCode');
    autoTabShipper('contactCellExchange','contactCellStation', 3,'contactCellCountryCode');
    autoTabShipper('contactCellStation','contactCellExtension', 4,'contactCellCountryCode');
	
    autoTabShipper('contactFaxCountryCode','contactFaxAreaCode', 1,'contactFaxCountryCode');
    autoTabShipper('contactFaxAreaCode','contactFaxExchange', 3,'contactFaxCountryCode');
	autoTabShipper('contactFaxExchange','contactFaxStation', 3,'contactFaxCountryCode');
	autoTabShipper('contactFaxStation','contactFaxExtension', 4,'contactFaxCountryCode');

	checkOneTimerCustomer("shipper");
	checkOneTimerCustomer("consignee");
	


});

function shipperOrgPredictive()
{
	/*var urlShipperOrg = _context
			+ '/cas/autocomplete.do?method=searchOrg&searchType=229&parentSearch=BK|'+$('#tradeCode').val();*/
	
	$('input[name="shipper\\.organizationName"]').gatesAutocomplete(
		{
			source:_context+'/cas/autocomplete.do',
		 	extraParams: {
 		 		 method: 'searchOrg',
 		 		 searchType: '229',
 		 		parentSearch:  function() { return "BK|"+$('#tradeCode').val(); }
		 	},
			//source : urlShipperOrg,
			formatItem : function(data) {
				$('input[name="shipper\\.organizationId"]').val("");
				return data.name + "-" + data.abbr;
			},
			formatResult : function(data) {
				return data.name + "-" + data.abbr;
			},
			autoSelectWhenSingle:true,
			autoSelectFirst:true,
			select : function(data) {
				$('input[name="shipper\\.organizationName"]').val(data.name + "-" + data.abbr);
				$('#shipperName').val($('input[name="shipper\\.organizationName"]').val());
				$('input[name="shipper\\.organizationCode"]').val(data.abbr);
				$('input[name="shipper\\.organizationId"]').val(data.id);

				shipperId = data.id;
				$('select[name="shipper\\.contactId"]').children().remove();
				$('select[name="shipper\\.contactId"]').append("<option value='' label='Select'></option>");
				$("#shipperAddressRoleName").val("");

				$('input[name="shipper\\.address"]').val("");
				$('input[name="shipper\\.isOneTimeCustomer"]').val("false");
				processShipperConsigneeColor("shipper");
				emptyCityStateZip("shipper");
				emptyContactDetails("shipper");

				if($('#consigneeName').val()!=''){
					$("#copyConsignee").attr("disabled", true);
				}
				$('input[name="shipper\\.organizationName"]').attr('title',$('input[name="shipper\\.organizationName"]').val());
				//populateTrade(data.trade);
				//shipperAddressPredictive();
				
				singleShipperAddressSelect();
				
				//setSaveBillBeforeBillButton();
			}
		});
}

function singleShipperAddressSelect(){
	
	$.ajax({
		type : "POST",
		url : _context +"/cas/autocomplete.do?method=searchSingleAddressforBK&searchType=234&parentSearch="+$('input[name="shipper\\.organizationId"]').val()+'|02|'+$('#tradeCode').val(),						
		      
		success : function(responseText) {
		
			if(responseText.length == 1){
			
				
				var nameQualifier = responseText[0].nameQual;
				var city = responseText[0].city;
				var state = responseText[0].state;
				
				var finalAddress = formatAddRoleDscrForSC(nameQualifier, responseText[0].stAdd, city, state);
				shipperAddress = finalAddress;
				$('input[name="shipper\\.addressRoleId"]').val(responseText[0].addRole);
				
				if(responseText[0].coOrgName!=null && responseText[0].coOrgName!='null')
					$('input[name="shipper\\.careOf"]').val(responseText[0].coOrgName);
				else
					$('input[name="shipper\\.careOf"]').val('');
				
				if(responseText[0].cntry!=null && responseText[0].cntry!='null')
					$('input[name="shipper\\.countryName"]').val(responseText[0].cntry);
				else
					$('input[name="shipper\\.countryName"]').val("US");
				if(responseText[0].provnc!=null && responseText[0].provnc!='null')
					$('input[name="shipper\\.provinceName"]').val(responseText[0].provnc);
				else
					$('input[name="shipper\\.provinceName"]').val("");
				$('input[name="shipper\\.city"]').val(responseText[0].city);
				$('input[name="shipper\\.state"]').val(responseText[0].state);
				$('input[name="shipper\\.zip"]').val(responseText[0].zip);
				$('input[name="shipper\\.address"]').val(shipperAddress);
				$("#shipperAddressRoleName").val($('input[name="shipper\\.address"]').val());
				$('#refNumOverRideForShipper').val("N");
				
				processShipperConsigneeColor("shipper");
				checkAccordionHeaderForShipper();
				//checkCopyButtons();

					requestForContactList("shipper");
				
				if($('#prepaidCollectCode').val()=='P'||$('#prepaidCollectCode').val()=='B'){
					addShipperAsDebtor();
				}
				setAccordianTabDetails("shipperNameDiv", " - "+$('input[name="shipper\\.organizationName"]').val());
				removeShipmentErrorPointers();
				
				setSaveBillBeforeBillButton();
				
				/*var nameQualifier = responseText[0].nameQual;
				var city = responseText[0].city;
				var state = responseText[0].state;
				var finalAddress = formatAddRoleDscrForSC(nameQualifier, responseText[0].stAdd, city, state);
				$('input[name="shipper\\.address"]').val( finalAddress);
				
				shipperAddressPopulate(responseText[0]);*/
			} else {
			
				shipperAddressPopupSearch();
		}
			
		}
	});
}

function shipperAddressPredictive()
{
	//address role predictive search.
	/*var urlShipperAdd = _context
	+ '/cas/autocomplete.do?method=searchAddRoleBK&searchType=234&parentSearch='
	+ $('input[name="shipper\\.organizationId"]').val() + '|02|'+$('#tradeCode').val();*/
	
	$('input[name="shipper\\.address"]').gatesAutocomplete({
			//source : urlShipperAdd,
			source:_context+'/cas/autocomplete.do',
			name: "Customer Address",
		 	extraParams: {
 		 		 method: 'searchAddRoleBK',
 		 		 searchType: '234',
 		 		 parentSearch:  function() { return $('input[name="shipper\\.organizationId"]').val() + '|02|'+$('#tradeCode').val(); }
		 	},
			formatItem : function(data) {
				$('input[name="shipper\\.addressRoleId"]').val("");
				var nameQualifier = data.nameQual;
				var city = data.city;
				var state = data.state;
				var finalAddress = formatAddRoleDscrForSC(nameQualifier, data.stAdd, city, state);
				return finalAddress;
			},
			formatResult : function(data) {
				var nameQualifier = data.nameQual;
				var city = data.city;
				var state = data.state;
				var finalAddress = formatAddRoleDscrForSC(nameQualifier, data.stAdd, city, state);
				return finalAddress;
			},
			select : function(data) {
				
				emptyCityStateZip("shipper");
				emptyContactDetails("shipper");
				
				var nameQualifier = data.nameQual;
				var city = data.city;
				var state = data.state;
				
				var finalAddress = formatAddRoleDscrForSC(nameQualifier, data.stAdd, city, state);
				shipperAddress = finalAddress;
				$('input[name="shipper\\.addressRoleId"]').val(data.addRole);
				
				if(data.coOrgName!=null && data.coOrgName!='null')
					$('input[name="shipper\\.careOf"]').val(data.coOrgName);
				else
					$('input[name="shipper\\.careOf"]').val('');
			
				if(data.cntry!=null && data.cntry!='null')
					$('input[name="shipper\\.countryName"]').val(data.cntry);
				else
					$('input[name="shipper\\.countryName"]').val("US");
				if(data.provnc!=null && data.provnc!='null')
					$('input[name="shipper\\.provinceName"]').val(data.provnc);
				else
					$('input[name="shipper\\.provinceName"]').val("");
				$('input[name="shipper\\.city"]').val(data.city);
				$('input[name="shipper\\.state"]').val(data.state);
				$('input[name="shipper\\.zip"]').val(data.zip);
				$("#shipperAddressRoleName").val($('input[name="shipper\\.address"]').val());
				$('#refNumOverRideForShipper').val("N");
				
				processShipperConsigneeColor("shipper");
				checkAccordionHeaderForShipper();
				handlePrepaidCollectIndicator('S');
				//checkCopyButtons();

					requestForContactList("shipper");
				
				if($('#prepaidCollectCode').val()=='P'||$('#prepaidCollectCode').val()=='B'){
					addShipperAsDebtor();
				}
				setAccordianTabDetails("shipperNameDiv", " - "+$('input[name="shipper\\.organizationName"]').val());
				removeShipmentErrorPointers();
				
				setSaveBillBeforeBillButton();
			}
		});	
}

function shipperPopupSearch() {
	orgCaller = 'shipper';
	var shipperName = $('input[name="shipper\\.organizationName"]').val();
	var splitShipperName = "";
	var actionUrl = "";
	if(shipperName.indexOf("-") > 0){
		splitShipperName = shipperName.split("-");
		actionUrl = _context + '/cas/orgSearchLookup.do?filterValue1=|'+ $('#tradeCode').val() + '|BK|||'+encodeURIComponent(splitShipperName[1]) ;
	}else{
		splitShipperName = shipperName;
		actionUrl = _context + '/cas/orgSearchLookup.do?filterValue1='
		+ shipperName + '|'+ $('#tradeCode').val() + '|BK';
	}
	var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, 'CustomerSearch', windowStyle);
}

function shipperAddressPopupSearch() {
	orgCaller = 'shipper';
	
	if ($.trim($('input[name="shipper\\.organizationId"]').val())=='') { 
		alert("Please select organization first");
	}/*else if($('#tradeCode :selected').val()==''){
		alert("Please select Trade");
	}*/else {
		var actionUrl = _context + '/cas/addRoleBKLookup.do?filterValue1='
				+ encodeURIComponent($('input[name="shipper\\.organizationId"]').val()) + '&filterValue2=02'+'&filterValue3='+$('#tradeCode').val();
		var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
		window.open(actionUrl, 'AddressSearch', windowStyle);
	}
}

function cleanShipperConsignee(){
	$("#shipperNameDiv").html("");
	$("#consigneeNameDiv").html("");
	$("#copyShipper").attr("disabled", true);
	enableScreenForDealer();
	$('#msgDiv').html("");
	emptyContactDetails("shipper");
	emptyContactDetails("consignee");
	enableDisableContactId('shipper',true);
	enableDisableContactId('consignee',true);
	$('input[name="shipper\\.organizationName"]').css('color', 'black');
	$('input[name="consignee\\.organizationName"]').css('color', 'black');
	resetDefault();
}

function goToMaintainTemplatePage(templateNumber){
	var url = _context +"/shipment/template/loadTemplateForm?templateNumber=" + templateNumber;
	window.open(url);
}

function setDefaultPrefMethod(source){
		/*$('#'+source+'Comm1').attr('checked',true);
		$('#'+source+'Comm1').val('P');
		$('#'+source+'Comm1').trigger('click');*/
		//$('#shipperComm1').trigger('click');
		$('#'+ source +'Comm1').attr('checked',false);
		$('#'+ source +'Comm2').attr('checked',false);
		$('#'+ source +'Comm3').attr('checked',false);
		$('#'+ source +'Comm4').attr('checked',false);
		//$('#'+ source +'Comm1').trigger('change');
	}

/*function populateTrade(trades){
	if($('#tradeCode').val()==''){
		var splitTrades = trades.split(",");
		$('#tradeCode').selected().val(splitTrades[0]);
		$('#tradeCode').trigger('change');
		$('#tradeCode').trigger('blur');
	}
}*/

/*function resetTrade(){
	if($('input[name="shipper\\.organizationId"]').val()=='' && $('input[name="consignee\\.organizationId"]').val()==''){
		if($('#shipmentNumber').val()==''){
			$('#tradeCode').val('');
			$('#tradeCode').trigger('change');
			$('#tradeCode').trigger('blur');	
		}
	}
}*/

function filterParamsForCASForTemplateValidation(){
	var data="";
	data = $('#blOriginCityCode').val()+"|"+	$('#blDestinationCityCode').val()+"|"+$('#originPortCityCode').val()+"|"+$('#destinationPortCityCode').val()+"|"+$('#loadServiceCode').val()+"|"+$('#dischargeServiceCode').val();
	return data;
}

//check if template available for shipper
function checkForShipperTemplate(){
	if($("#shipmentStatusCode").val()=='INCP' || $("#shipmentStatusCode").val()==''){
		if($('input[name="shipper\\.address"]').val()!='' && $('input[name="shipper\\.addressRoleId"]').val()!=''){
			templateCaller ="shipper";
			//var data = prepareInputForCASTemplateScreen();
			//call to cas to get template count
			$.ajax({
				type : "POST",
				//url : _context+'/cas/autocomplete.do?method=getTemplateCount&searchType=257&parentSearch='+$('input[name="shipper\\.addressRoleId"]').val()+'|02|'+filterParamsForCASForTemplateValidation(),
				url : _context+'/cas/autocomplete.do?method=getTemplateCount&searchType=257&parentSearch='+$('input[name="shipper\\.addressRoleId"]').val()+'|02|',
				success : function(responseText) {
					var templateCount = responseText[0].totrec;
					if(templateCount==1){
						templateUpdate(responseText[0].id,'shipper');
					}else if(templateCount>1){
						templatePopupSearch();
						requestForContactList("shipper");
					}else{
						requestForContactList("shipper");
					}
				}
			});
		}
	}
	else
		requestForContactList("shipper");
}

//TRADE|CUSTOMERGROUP|TARIFF|ITEM|DESCRIPTION|DEALERCODE|SHIPPERNAME|SHIPPERADDRESS|SHIPPERAROLEID|CONSIGNEENAME|CONSIGNEEADDRESS|CONSIGNEEAROLEID|
//LS|DS|PLR|POL|POD|PLD|EQUIPMENT
function prepareInputForCASTemplateScreen(){
	var data="";
	data = $('#tradeCode').val() + '-' + $('#tradeCode option:selected').text() +'|';
	data = data + $('#customerGroupId').val() + '-' + $('#customerGroupId option:selected').text() +'|';

	data = data + $('#tariffNumber').val()+'|';
	data = data + $('#tariffItemNumber').val()+'|';

	data = data + $('#tariffCommodityDescription').val()+'|';
	data = data + $('#dealerAuctionLocationCode').val()+'|';

	data = data + $('input[name="shipper\\.organizationName"]').val()+'|';
	data = data + $('input[name="shipper\\.address"]').val()+'|';
	data = data + $('input[name="shipper\\.addressRoleId"]').val()+'|';
	data = data + $('input[name="shipper\\.organizationId"]').val() +'|';

	data = data + $('input[name="consignee\\.organizationName"]').val()+'|';
	data = data + $('input[name="consignee\\.address"]').val()+'|';
	data = data + $('input[name="consignee\\.addressRoleId"]').val()+'|';
	data = data + $('input[name="consignee\\.organizationId"]').val() +'|';

	data = data + $('#loadServiceCode').val() +'|';
	data = data + $('#dischargeServiceCode').val() +'|';

	data = data + $('#blOriginCityCodeDescription').val()+'|';
	data = data + $('#originPortCityCodeDescription').val()+'|';

	data = data + $('#destinationPortCityCodeDescription').val()+'|';
	data = data + $('#blDestinationCityCodeDescription').val()+'|';
	data = data + $('#contactId').val()+'|';
	
	

	return data;
}

function pullCASTemplateScreenInfoToMB(data){
}

function clearCityStateZip() {
	$('input[name="shipper\\.city"]').val('');
	$('input[name="shipper\\.state"]').val('');
	$('input[name="shipper\\.zip"]').val('');
	$("#copyShipper").attr("disabled", true);
}

function orgSearchUpdate(id) {
	//console.log('orgSearchUpdate '+id+" orgCaller="+orgCaller);
	if (orgCaller == 'shipper') {
		var values = id.split("|");
		$('input[name="shipper\\.organizationName"]').val(values[0] +"-"+ values[1]);
		$('input[name="shipper\\.organizationName"]').attr('title',$('input[name="shipper\\.organizationName"]').val());
		$('input[name="shipper\\.organizationCode"]').val(values[1]);
		$('input[name="shipper\\.organizationId"]').val(values[2]);
		$('input[name="shipper\\.isOneTimeCustomer"]').val("false");
		processShipperConsigneeColor("shipper");
		$('#shipperName').val(values[0]);
		//populateTrade(values[3]);
		$('input[name="shipper\\.address"]').val("");
		emptyCityStateZip("shipper");
		emptyContactDetails("shipper");
		if($('#consigneeName').val()!=''){
			$("#copyConsignee").attr("disabled", true);
		}
		//shipperAddressPredictive();
	}else if (orgCaller == 'consignee') {
			var values = id.split("|");
			$('input[name="consignee\\.organizationName"]').val(values[0] +"-"+ values[1]);
			$('input[name="consignee\\.organizationName"]').attr('title',$('input[name="consignee\\.organizationName"]').val());
			$('input[name="consignee\\.organizationCode"]').val(values[1]);
			$('input[name="consignee\\.organizationId"]').val(values[2]);
			$('#consigneeName').val(values[0]);
			$('input[name="consignee\\.isOneTimeCustomer"]').val("false");
			processShipperConsigneeColor("consignee");
			$('input[name="consignee\\.address"]').val("");
			//populateTrade(values[3]);
			emptyCityStateZip("consignee");
			emptyContactDetails("consignee");
			if($('#shipperName').val()!=''){
				$("#copyShipper").attr("disabled", true);
			}
			//consigneeAddPredictive();
		}else if (orgCaller == 'parties') {
			
			var values = id.split("|");
			$('input[name="organizationName"]').val(values[0] +"-"+ values[1]);//updated for defect D020421
			partyOrg = values[1] +"-"+ values[0];
			$('input[name="organizationName"]').attr('title',$('input[name="organizationName"]').val());
			$('input[name="organizationCode"]').val(values[1]);
			$('input[name="organizationId"]').val(values[2]);
			$('input[name="isOneTimeCustomer"]').val("false");
			$('input[name="addressRoleId"]').val("");
			$('input[name="address"]').trigger('change');
			
			isPartyChanged = "Y";
			//partiesAddPredictive();
		}else if (orgCaller == 'repeat') {
			var values = id.split("|");

			$('#repeatContactOrgName').val(values[0] +"-"+ values[1]);
			repeatOrgName = values[1] +"-"+ values[0];
			$('#repeatContactOrgName').attr('title',$('#repeatContactOrgName').val());
			$('#repeatContactOrgId').val(values[2]);
			$("#repeatContactOrgAddress").val("");
			//repeatContactAddressPredictive();
			orgAddressPopupSearch();
		} // D023315, made the org search work, may still have other issues.
		else if (orgCaller == 'dataAdmin') {
			var values = id.split("|");

			$('#existingOrganization').val(values[0] +"-"+ values[1]);
			$('#replaceOrganizationId').val(values[2]);
			if($("#dataAdminCode:checked").val()=="C")
			{
				$('#existingAddressLine1').val("");
				$('#existingAddressLine1').trigger('change');
				singleAddressOneTimerCall();
			}
		}
}

function setShipperDivName(name){
	setAccordianTabDetails("shipperNameDiv", " - "+name);
}

function addroleUpdate(data) {
	if (orgCaller == 'shipper') {
		var values = data.split("|");
		if(values[0]=='ALL'&& $('input[name="consignee\\.organizationName"]').val()=='')
			$("#copyShipper").attr("disabled", false);
		else
			$("#copyShipper").attr("disabled", true);
		
		if(values[3]!=null && values[3]!='null')
			$('input[name="shipper\\.careOf"]').val(values[3]);
		else
			$('input[name="shipper\\.careOf"]').val('');
		
		$('input[name="shipper\\.city"]').val(values[2]);
		$('input[name="shipper\\.state"]').val(values[6]);
		$('input[name="shipper\\.zip"]').val(values[8]);
		$('input[name="shipper\\.countryName"]').val(values[11]);
		$('input[name="shipper\\.provinceName"]').val(values[10]);
		var finalAddress = formatAddRoleDscrForSC(values[4],values[7],values[2],values[6]);//nameQualifier, addressLine1, city, state)
		$('input[name="shipper\\.address"]').val(finalAddress);
		$('input[name="shipper\\.address"]').attr('title',$('input[name="shipper\\.address"]').val()+','+values[15]+','+values[16]);
		shipperAddress = finalAddress;
		$('input[name="shipper\\.addressRoleId"]').val(values[9]);
		emptyContactDetails("shipper");
		if($('#shipmentTypeCode').val()=='B'){
			checkForShipperTemplate();
		}else{
			requestForContactList("shipper");
		}
		setShipperDivName(" - "+$('input[name="shipper\\.organizationName"]').val());
		if($('#prepaidCollectCode').val()=='P'||$('#prepaidCollectCode').val()=='B'){
			addShipperAsDebtor();
		}
	}else if (orgCaller == 'consignee') {
		var values = data.split("|");
		if(values[0]=='ALL'&& $('input[name="shipper\\.organizationName"]').val()==''){
			$("#copyConsignee").attr("disabled", false);
		}
		else
			$("#copyConsignee").attr("disabled", true);
		
		if(values[3]!=null && values[3]!='null')
			$('input[name="consignee\\.careOf"]').val(values[3]);
		else
			$('input[name="consignee\\.careOf"]').val('');

		$('input[name="consignee\\.city"]').val(values[2]);
		$('input[name="consignee\\.state"]').val(values[6]);
		$('input[name="consignee\\.zip"]').val(values[8]);
		$('input[name="consignee\\.countryName"]').val(values[11]);
		$('input[name="consignee\\.provinceName"]').val(values[10]);
		var finalAddress = formatAddRoleDscrForSC(values[4],values[7],values[2],values[6]);//nameQualifier, addressLine1, city, state)
		$('input[name="consignee\\.address"]').val(finalAddress);
		$('input[name="consignee\\.address"]').attr('title',$('input[name="consignee\\.address"]').val()+','+values[15]+','+values[16]);
		consigneeAddress = finalAddress;
		$('input[name="consignee\\.addressRoleId"]').val(values[9]);
		emptyContactDetails("consignee");
		if($('#shipmentTypeCode').val()=='B'){
			checkForConsigneeTemplate();
		}else{
			requestForContactList("consignee");
		}
		setConsigneeDivName(" - "+$('input[name="consignee\\.organizationName"]').val());
		if($('#prepaidCollectCode').val()=='C'||$('#prepaidCollectCode').val()=='B'){
			addConsigneeAsDebtor();
		}
	}else if (orgCaller == 'parties') {
		/*var partyTypeCode = $('#partyTypeCode :selected').val();
		var addressRoleType = data.split("|")[0];
		if((partyTypeCode=='20' || partyTypeCode=='21' || partyTypeCode=='31') && addressRoleType!='ALL' && addressRoleType!='FREIGHT PAYABLE')
		{
			alert("Address Role selected must be of type ALL or FREIGHT PAYABLE");
		}
		else if((partyTypeCode=='22' || partyTypeCode=='29') && addressRoleType!='ALL' && addressRoleType!='SHP TO' && addressRoleType!='NOTIFY')
		{
			alert("Address Role selected must be of type ALL or SHP TO or NOTIFY");
		}
		else if(partyTypeCode=='30' && addressRoleType!='ALL' && addressRoleType!='SHPFRM' && addressRoleType!='FWDAGT')
		{
			alert("Address Role selected must be of type ALL or SHPFRM or FWDAGT");
		}
		else*/
			partiesAddressUpdate(data);
	}else if (orgCaller == 'repeat') {
		var values = data.split("|");
		var finalAddress = formatAddRoleDscrForSC(values[4],values[7],values[2],values[6]);
		$("#repeatContactOrgAddress").val(finalAddress);
		$("#repeatContactOrgAddress").attr('title',$("#repeatContactOrgAddress").val()+','+values[15]+','+values[16]);
		$("#repeatContactAddressRoleId").val(values[9]);
		repeatAddress = finalAddress;
	}
	else if(orgCaller == 'dataAdmin')
	{
		var values = data.split("|");
		var finalAddress = formatAddRoleDscrForSC(values[4],values[7],values[2],values[6]);
		$("#existingAddressLine1").val(finalAddress);
		$("#existingAddressLine1").attr('title',$("#existingAddressLine1").val()+','+values[15]+','+values[16]);
		$("#replaceAddressRoleId").val(values[9]);
	} else if(orgCaller == 'commodityBillTo'){
		
		
		
	}
	
}

function templatePopupSearch() {
	var actionUrl = _context +'/cas/templateSearch.do?templateValue1='+prepareInputForCASTemplateScreen();
	var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, 'TemplateSearch', windowStyle);
}

function templateUpdate(id,methodCaller){
	var templateNumber;
	if(id.indexOf("|") != -1){
		var splitTemplateData = id.split("|");
		templateNumber = splitTemplateData[0];
	}else{
		templateNumber = id;
	}
	var shipmentId = $('#shipmentId').val();
	var shipmentNumber = $('#shipmentNumber').val();
	$('#msgDiv').html("<div class=\"message_info\">Loading "+ templateNumber +" template...</div>");
	$('#msgDiv').show();
	if(templateNumber != undefined){
		$.ajax({
			type : "POST",
			url : _context +"/shipment/applyTemplate",
			data : {
				templateNumber : templateNumber,
				shipmentId : shipmentId,
				shipmentNumber : shipmentNumber
			},
			success : function(responseText) {
				if (responseText.messages.error.length == 0) {
					clearAndResetShipmentScreen();
					var tempEntityVersion = $("#entityVersion").val();
					var tempCommentId = $("#commentId").val();
					showJSON(responseText);
					$("#entityVersion").val(tempEntityVersion);
					$("#commentId").val(tempCommentId);
					if(methodCaller=="" || methodCaller=='shipper'){
						$('input[name="shipper\\.addressRoleId"]').val(responseText.data.shipper.addressRoleId);
						shipperAddress = responseText.data.consignee.address;
					}else{
						$('input[name="consignee\\.addressRoleId"]').val(responseText.data.consignee.addressRoleId);
						consigneeAddress = responseText.data.consignee.address;
					}
					removeAssignedQuoteOnTemplatePull();
					reloadShipmentGrids();
					//Moved to show Json method
					//requestForContactDetails("shipper", "N");
					//requestForContactDetails("consignee", "N");
					//checkCopyButtons();->already called in showJSON
					templateOwner="shipper";
					expandAll();
					//checkQuotesForPulledTemplate(id);
					setDefaultForShipmentStatus();
					var aHtml = "<div id=\"shipmentTemplateNumber\" class=\"span-2 last\"><a href=" + _context + "/shipment/template/showTemplateForm?templateNumber="+templateNumber+">" + templateNumber + "</a></div>";
					$('#shipmentTemplateNumber').html(aHtml);
					//Defect - D015881
					$('#dealerCode').val(responseText.data.shipmentTemplate.dealerCode);
					if($('#dealerCode').val()!=''){
						disableScreenForDealer();
					}else{
						enableScreenForDealer();
					}
					if($.trim($('#shipmentNumber').val()) == '') {
						$('#billOfLadingLink').html("Bill Of Lading");
						
					}
				}else{
					$("#quoteExistsDiv").hide();
					clearAndResetShipmentScreen();
					$('#customizeNameAddress').removeAttr("disabled");
					reloadShipmentGrids();
					setDefaultForShipmentStatus();
					setDefaultForAssignLink();
					clearHeaderData();
					$('#commentsDiv').hide();
					$("#shipmentDelete").attr("disabled", true);
					resetDivNames();
					$("#lastUpdateDateTimeUser").html("");
					var aHtml = "<div id=\"shipmentTemplateNumber\" class=\"span-2 last\"></div>";
					$('#shipmentTemplateNumber').html(aHtml);
				}
				//Messages
				showResponseMessages("msgDiv",responseText);
				$('#msgDiv').show();
				
				processShipperConsigneeColor("shipper");
				processShipperConsigneeColor("consignee");
			}
		});
	}
}

function disableScreenForDealer(){
/*	$('#originPortCityCodeDescription').attr('disabled',true);
	$('#destinationPortCityCodeDescription').attr('disabled',true);
	$("#consignee").gatesDisable();*/
}

function enableScreenForDealer(){
	/*$('#originPortCityCodeDescription').attr('disabled',false);
	$('#destinationPortCityCodeDescription').attr('disabled',false);
	$("#consignee").gatesEnable();
	if($('input[name="shipper\\.addressRoleId"]').val()!=''){
		$("#copyConsignee").attr("disabled", true);
	}
	$("#consigneeOneTimeCustDiv").html("<a href=\"javascript:openOneTimeCustomer('consignee');\"><img height=\"16\" border=\"0\" align=\"absmiddle\" width=\"15\" height=\"15\" alt=\"search\" src=\""+_context+"/resources/images/u388_r.png\"></img>Add One Time Customer</a>"); // for defect D018789
*/}

function quoteFilterParams(){
	/*var queryString="";
	queryString = "&trade="+$('#tradeCode').val()+"&placeOfReceipt="+$('#blOriginCityCode').val() +"&placeOfDelivery="+$('#blDestinationCityCode').val()+"&pol="+$('#originPortCityCode').val()+"&pod="+$('#destinationPortCityCode').val();
	queryString = queryString + "&loadService="+$('#loadServiceCode').val()+"&dischargeService="+$('#dischargeServiceCode').val()+"&tariffNumber="+$('#tariffNumber').val();
	return queryString;*/
}

function checkQuotesForPulledTemplate(casResponse){
	/*//get owner from CAS
	var splitCASStr = casResponse.split("|");
	var templateOwner = splitCASStr[3];//casResponse[0].templateOwner;;
	//declare variable for holding AROLE id 
	var aroleIdForQuotes = "";
	var quoteShowHtml="";
	if(templateOwner=='Y' || templateOwner==''){//template owner shipper, get quote count for consignee
		//$("#shipmentTemplateOwner").val('02');
		aroleIdForQuotes = $('input[name="consignee\\.addressRoleId"]').val();
		$("#showQuoteForAroleOnTemplatePull").val($('input[name="consignee\\.addressRoleId"]').val());
		quoteShowHtml="Consignee Quote Exists(Show)";
	}else if(templateOwner=='N'){//template owner consignee, get quote count for shipper
		//$("#shipmentTemplateOwner").val('03');
		aroleIdForQuotes = $('input[name="shipper\\.addressRoleId"]').val();
		$("#showQuoteForAroleOnTemplatePull").val($('input[name="shipper\\.addressRoleId"]').val());
		quoteShowHtml="Shipper Quote Exists(Show)";
	}
	if(aroleIdForQuotes!=''){
		var quoteCount = 0;//get quote count from CS response [responseText[0]]
		//call to shipment controller to get quote count
		$.ajax({
			type : "POST",
			url : _context +"/shipment/getQuoteCount?"+quoteFilterParams(),
			data : {
				aroleId : aroleIdForQuotes
			},
			success : function(responseText) {
				quoteCount = responseText.data;
				if(quoteCount==0){
					$("#quoteExistsDiv").hide();
				}else if(quoteCount>0){
					$("#quoteExistsDiv").html(quoteShowHtml);
					$("#quoteExistsDiv").show();
				}
			}
		});
	}*/
}

function clearAndResetShipmentScreen(){
	$('#msgDiv').html("");
	//$('#shipmentForm').clearForm();
	$('input[name="shipper\\.addressRoleId"]').val("");
	$('input[name="consignee\\.addressRoleId"]').val("");
	emptyContactDetails("shipper");
	emptyContactDetails("consignee");
	resetDefault();
	$("#bookedDateTimeUser").html("");
	$("#lastUpdateDateTimeUser").html("");
	$('#ediServiceTypeHeader').hide();
	$('#ediServiceType').html("");
	
}
function removeAssignedQuoteOnTemplatePull(){
	/*$('#quoteId').val("");
	$('#quoteNumber').val("");
	$('#quoteVersion').val("");
	$('#quoteNumberLabel').text("");
	$('#quoteAmount').val("");
	$('#quoteAmountDiv').text("");
	if($("#shipmentNumber").val() == '' || $("#shipmentNumber").val() == null){
		$('#assignLink').html("Assign Quote");
	}else{
		$('#assignLink').html("<a href=\"javascript:quotePopupSearch('assign');\">Assign Quote</a>");
	}*/
}

function loadAdditionalShipperDetails(responseText){
	$("#shipperId").val(responseText.data.shipper.organizationId);
	$('#shipper\\.addressRoleId').val(responseText.data.shipper.addressRoleId);
	if(null!=responseText.data.shipper.addressRoleId){
		enableDisableContactId('shipper',false);
		//enableDisableAddress('shipper');
	}
	setShipperCommMethodValue(responseText.data.shipper);
	//first clear the drop down
	$('select[name="shipper\\.contactId"]').children().remove();
	$('select[name="shipper\\.contactId"]').append("<option value='' label='Select'></option>");
	$.each(responseText.data.shipper.contactList, function(key, value) {
		$('select[name="shipper\\.contactId"]').append($("<option/>", {
					value : key,
					text : value
		}));
	});
	$('select[name="shipper\\.contactId"]').val(responseText.data.shipper.contactId);
	$('input[name="shipper\\.organizationName"]').attr('title',responseText.data.shipper.organizationName);
	
	/*if(responseText.data.shipper.isCustomerOneTimeCust==true){
		formatColorForOneTime('shipper');
	}*/
}

function formatAddRoleDscrForSC(nameQualifier, addressLine1, city, state) {
	var nameQualifierTemp = "";
	var addressLine1Temp = "";
	var cityTemp = "";
	var stateTemp = "";
	
	// we are getting null as String('null') from AddressRoleLookup , so we are also checking && nameQualifier != 'null'  for defect --16831 
	if (nameQualifier != "" && nameQualifier != 'null') { 
		nameQualifierTemp = nameQualifier;
	}
	if (addressLine1 != "" ) {
		if (nameQualifierTemp != "") {
			addressLine1Temp = " - " + addressLine1;
		} else {
			addressLine1Temp =  addressLine1;
		}
	}
	if (city != "" && city != 'null') {
		cityTemp = " - " + city;
	}
	if (state != "" && state != 'null') {
		stateTemp = ", " + state;
	} 
	 return nameQualifierTemp + addressLine1Temp + cityTemp + stateTemp;
}

/*function formatColorForOneTime(source){
	//$('input[name="'+source+'\\.organizationName"]').css('background-color', 'yellow');
	$('input[name="'+source+'\\.address"]').attr("disabled",true);
}*/

function addShipperAsDebtor(){
	
	var queryString = $('#shipmentForm').formSerialize();
	$.ajax({
		url : _context +"/shipment/party/setDefaults",
		type : "POST",
		data : queryString+"&type=shipper&oper=add",
		success : function(responseText) {
			showResponseMessages('msgDiv', responseText);
			/*if($('input[name="shipper\\.addressRoleId"]').val()!='' && $('input[name="consignee\\.addressRoleId"]').val()!='')
				$('#prepaidCollectCode').val('B');//both
			else if($('input[name="shipper\\.addressRoleId"]').val()!='' && $('input[name="consignee\\.addressRoleId"]').val()=='')
				$('#prepaidCollectCode').val('P');//shipper
			
			debtorCode = $('#prepaidCollectCode :selected').val();
			setPartiesHeader();*/
			$("#gridIdForParties").trigger("reloadGrid");
		}
	});
}

function removeShipperAsDebtor(){
	var queryString = $('#shipmentForm').formSerialize();
	/*$.ajax({
		url : _context +"/shipment/party/setDefaults",
		type : "POST",
		data : queryString+"&type=shipper&oper=remove",
		success : function(responseText) {
			showResponseMessages('msgDiv', responseText);
			if($('input[name="consignee\\.addressRoleId"]').val()!='')
				$('#prepaidCollectCode').val('C');//collect
			else
				$('#prepaidCollectCode').val('');//none
			
			debtorCode = $('#prepaidCollectCode :selected').val();
			setPartiesHeader();
			$("#gridIdForParties").trigger("reloadGrid");
		}
	});*/
	$("#gridIdForParties").trigger("reloadGrid");
}



function requestForContactList(source){
	enableDisableContactId(source,false);
	if(null!=$('input[name="'+source+'\\.addressRoleId"]').val() && $('input[name="'+source+'\\.addressRoleId"]').val()!=''){
		$.ajax({
			type : "POST",
			url : _context +"/shipment/arole/getContactList",
			data : {
				addressRoleId : $('input[name="'+source+'\\.addressRoleId"]').val()
			},
			success : function(responseText) {
				$('select[name="'+source+'\\.contactId"]').children().remove();
				$('select[name="'+source+'\\.contactId"]').append("<option value='' label='Select'></option>");
				$.each(responseText.data.contactList, function(key,
						value) {
					$('select[name="'+source+'\\.contactId"]')
							.append($("<option/>", {
								value : key,
								text : value
							}));
				});
				//$('select[name="'+source+'\\.contactId"]').attr('selectedIndex', 0);
				requestForContactDetails(source);
				setIsRefNumberRequiredShipper();
				setIsRefNumberRequiredConsignee();
			}
		});
	}
}

function requestForContactDetails(source, change){
	emptyContactDetailsOnContactChange(source);
	enableDisableContactId(source,false);
	if($('select[name="'+source+'\\.contactId"]').val()!='')
	{
		$.ajax({
			type : "POST",
			url : _context +"/shipment/arole/contact",
			data : {
				contactId : $('select[name="'+source+'\\.contactId"]').val()
			},
			success : function(responseText) {
				var oneTimeCustomer = $('input[name="'+source+'\\.isOneTimeCustomer"]').val();
				//$('select[name="'+source+'\\.contact"]').val($('select[name="'+source+'\\.contactId"]').selected().val());
				$("#"+source+"").loadJSON(responseText.data);
				setCommMethodValue(responseText.data, source);
				setphoneCountryCode(source); // for populationg phone country code.
				$('input[name="shipper\\.contactEmailAddress"]').attr('title',$('input[name="shipper\\.contactEmailAddress"]').val());
				$('input[name="consignee\\.contactEmailAddress"]').attr('title',$('input[name="consignee\\.contactEmailAddress"]').val());				
				$('input[name="'+source+'\\.isOneTimeCustomer"]').val(oneTimeCustomer);
				$('input[name="'+source+'\\.contact"]').val('');
				if(change!="N")
				{
					/*if(source=='shipper')
						addShipperAsDebtor();
					else if(source=='consignee')
						addConsigneeAsDebtor();*/
				}
			}
		});
		
	}
	else if($('select[name="'+source+'\\.contactId"]').attr("disabled")== true
			|| $('select[name="'+source+'\\.contactId"]').attr("disabled")== 'true')
	{
		if(change!="N")
		{
			/*if(source=='shipper')
				addShipperAsDebtor();
			else if(source=='consignee')
				addConsigneeAsDebtor();*/
		}
	}
	$('input[name="contact"]').validationEngine('hidePrompt');
	
	
}

function emptyCityStateZip(source){
	$('input[name="'+ source +'\\.careOf"]').val("");
	$('input[name="'+ source +'\\.city"]').val("");
	$('input[name="'+ source +'\\.state"]').val("");
	$('input[name="'+ source +'\\.zip"]').val("");
	$('input[name="'+ source +'\\.countryName"]').val("");
	$('input[name="'+ source +'\\.provinceName"]').val("");
}

function emptyContactDetails(source){
	$('select[name="'+ source +'\\.contactId"]').children().remove();
	$('select[name="'+ source +'\\.contactId"]').append("<option value='' label='Select'></option>");
	emptyContactDetailsOnContactChange(source);
	enableDisableContactId(source, true);
	//$('input[name="'+ source +'\\.communicationMethodCode"]').val("");
	setDefaultPrefMethod(source);
}

function emptyContactDetailsOnContactChange(source){
	$('input[name="'+ source +'\\.contact"]').val("");
	$('input[name="'+ source +'\\.contactFaxCountryCode"]').val("");
	$('input[name="'+ source +'\\.contactFaxAreaCode"]').val("");
	$('input[name="'+ source +'\\.contactFaxExchange"]').val("");
	$('input[name="'+ source +'\\.contactFaxStation"]').val("");
	$('input[name="'+ source +'\\.contactFaxExtension"]').val("");

	$('input[name="'+ source +'\\.contactCellCountryCode"]').val("");
	$('input[name="'+ source +'\\.contactCellAreaCode"]').val("");
	$('input[name="'+ source +'\\.contactCellExchange"]').val("");
	$('input[name="'+ source +'\\.contactCellStation"]').val("");
	$('input[name="'+ source +'\\.contactCellExtension"]').val("");

	$('input[name="'+ source +'\\.contactPhoneAreaCode"]').val("");
	$('input[name="'+ source +'\\.contactPhoneExchange"]').val("");
	$('input[name="'+ source +'\\.contactPhoneStation"]').val("");
	$('input[name="'+ source +'\\.contactPhoneCountryCode"]').val("");
	$('input[name="'+ source +'\\.contactPhoneExtension"]').val("");

	$('input[name="'+ source +'\\.contactEmailAddress"]').val("");
	//$('input[name="'+ source +'\\.communicationMethodCode"]').val("");
	setDefaultPrefMethod(source);
}

function getPrefCommMethod(fieldOwner){
	var prefCommMethod = '';
	if($('#'+fieldOwner+'Comm1').attr('checked')){
		prefCommMethod = $('#'+fieldOwner+'Comm1').val();
	}else if($('#'+fieldOwner+'Comm2').attr('checked')){
		prefCommMethod = $('#'+fieldOwner+'Comm2').val();
	}else if($('#'+fieldOwner+'Comm3').attr('checked')){
		prefCommMethod = $('#'+fieldOwner+'Comm3').val();
	}else if($('#'+fieldOwner+'Comm4').attr('checked')){
		prefCommMethod = $('#'+fieldOwner+'Comm4').val();
		$('input[name="'+fieldOwner+'\\.contactEmailAddress"]').addClass("validate[custom[email]] text-input");
	}else{
		prefCommMethod = '';
	}
	return prefCommMethod;
}

function openDivBlock(){
	document.getElementById('maintainShipmentShipperConsignee').style.display = 'block';
	window.scrollTo(0, 180);
}

function validateContactForShipperConsignee(source){
	var isValid = true;
	// Defect 25151
	if($("#tradeCode").val()=="F")
		return isValid;
	
	if($('input[name="'+source+'\\.addressRoleId"]').val()!=''){
		// D026028, Commented for making contact non-mandatory for shipper and consignee.
		/*if(($('input[name="'+source+'\\.contact"]').val()=='' || $('input[name="'+source+'\\.contact"]').val()==null)){
			if(source=='shipper' && $('#shipperContactId').val()=='')
			{
				openDivBlock();
				isValid = false;
				$('input[name="'+source+'\\.contact"]').validationEngine('showPrompt', 'Please provide contact name.', 'error', 'topRight', true);
				return isValid;
			}
			else if(source=='consignee'&& $('#consigneeContactId').val()=='' )
			{
				openDivBlock();
				isValid = false;
				$('input[name="'+source+'\\.contact"]').validationEngine('showPrompt', 'Please provide contact name.', 'error', 'topRight', true);
				return isValid;
			}
	
		}*/
		var prefMethod = getPrefCommMethod(source);
		
		/*
		 * code commented as per defect 21928
		 * In which second point of customer states that nothing is necessary when user 
		 * provides customer name on its own.
		 * puneet hasija
		 */
		/*if(!isContactSelectedFromDropDown(source) && $('input[name="'+source+'\\.contact"]').val()!='' && prefMethod==''){
			openDivBlock();
			$('#'+source+'Comm1').validationEngine('showPrompt', 'Please select preferred method.', 'error', 'topRight', true);
			isValid = false;
			if(!isValid)
				return isValid;
		}*/
		
		/*phone is neither default */
		/*isValid = validateContactLine('P',source,'Phone');
		if(!isValid)
			return isValid;*/
		
		if(prefMethod=='P'){
			isValid = validateContactLine(prefMethod,source,'Phone');
			if(!isValid)
				return isValid;
		}else if(prefMethod=='C'){
			isValid = validateContactLine(prefMethod,source,'Cell');
			if(!isValid)
				return isValid;
		}else if(prefMethod=='F'){
			isValid = validateContactLine(prefMethod,source,'Fax');
			if(!isValid)
				return isValid;
		}else if(prefMethod=='E' && $('input[name="'+source+'\\.contactEmailAddress"]').val()==''){
			openDivBlock();
			//$('#'+source+'Comm4').validationEngine('showPrompt', 'Preferred communication (Email) cannot be empty', 'error', 'topRight', true);
			$('input[name="'+source+'\\.contactEmailAddress"]').validationEngine('showPrompt', 'Preferred communication (Email) cannot be empty', 'error', 'topRight', true);
			isValid = false;
			if(!isValid)
				return isValid;
		}
		if(isValid){
			isValid = validateUnPref(source);
		}
	}else{
		$('#'+source+'OrganizationName').validationEngine('showPrompt', 'Customer is required', 'error', 'topRight', true);
		openDivBlock();
		isValid=false;
	}
	return isValid;
}

function validateOrganisationAndAddressForShipperConsignee(source){
	var isValid = true;
	if($('input[name="'+source+'\\.organizationName"]').val()=='' || $('input[name="'+source+'\\.organizationName"]').val()==null){
		$('input[name="'+source+'\\.organizationName"]').validationEngine('showPrompt', 'Customer is required', 'error', 'topRight', true);
		openDivBlock();
		isValid=false;
	}
	if($('input[name="'+source+'\\.address"]').val()=='' || $('input[name="'+source+'\\.address"]').val()==null){
		$('input[name="'+source+'\\.address"]').validationEngine('showPrompt', 'Address is required', 'error', 'topRight', true);
		openDivBlock();
		isValid=false;
	}
	return isValid;
}

function isContactSelectedFromDropDown(source){
	if($('select[name="'+source+'\\.contactId"] option').length==0 || $('select[name="'+source+'\\.contactId"] :selected').val()=='' || $('select[name="'+source+'\\.contactId"] :selected').val()=='Select'){
		return false;
	}
	return true;
}

function validateContactLine(prefMethod,source,contactField){
	var isValid = true;
	var areaCode = '', exchange='',station='',countryCode='';
	var isFieldPrefMethod=false;
	if(prefMethod=='P' && contactField=='Phone'){
		isFieldPrefMethod = true;
		areaCode = $('input[name="'+source+'\\.contactPhoneAreaCode"]').val();
		exchange = $('input[name="'+source+'\\.contactPhoneExchange"]').val();
		station = $('input[name="'+source+'\\.contactPhoneStation"]').val();
		countryCode = $('input[name="'+source+'\\.contactPhoneCountryCode"]').val();
		if(countryCode=="")
		{
			var defaultCountryCode=getDefaultValueforCountrycode(source);
			$('input[name="'+source+'\\.contactPhoneCountryCode"]').val(defaultCountryCode);
			countryCode=$('input[name="'+source+'\\.contactPhoneCountryCode"]').val();
		}
		isValid = validateFieldData(isFieldPrefMethod, areaCode, exchange, station, countryCode, source, contactField);
	}else if(prefMethod=='C' && contactField=='Cell'){
		isFieldPrefMethod = true;
		areaCode = $('input[name="'+source+'\\.contactCellAreaCode"]').val();
		exchange = $('input[name="'+source+'\\.contactCellExchange"]').val();
		station = $('input[name="'+source+'\\.contactCellStation"]').val();
		countryCode = $('input[name="'+source+'\\.contactCellCountryCode"]').val();
		if(countryCode=="")
		{
			var defaultCountryCode=getDefaultValueforCountrycode(source);
			$('input[name="'+source+'\\.contactCellCountryCode"]').val(defaultCountryCode);
			countryCode=$('input[name="'+source+'\\.contactCellCountryCode"]').val();
		}
		isValid = validateFieldData(isFieldPrefMethod, areaCode, exchange, station, countryCode, source, contactField);
	}else if(prefMethod=='F' && contactField=='Fax'){
		isFieldPrefMethod = true;
		areaCode = $('input[name="'+source+'\\.contactFaxAreaCode"]').val();
		exchange = $('input[name="'+source+'\\.contactFaxExchange"]').val();
		station = $('input[name="'+source+'\\.contactFaxStation"]').val();
		countryCode = $('input[name="'+source+'\\.contactFaxCountryCode"]').val();
		if(countryCode=="")
		{
			var defaultCountryCode=getDefaultValueforCountrycode(source);
			$('input[name="'+source+'\\.contactFaxCountryCode"]').val(defaultCountryCode);
			countryCode=$('input[name="'+source+'\\.contactFaxCountryCode"]').val();
		}
		isValid= validateFieldData(isFieldPrefMethod, areaCode, exchange, station, countryCode, source, contactField);
	}
	return isValid;
}

function getDefaultValueforCountrycode(source)
{
	var defaultCountryCode="";
	$.ajax({
		async: false,
		type : "POST",
		url : _context +"/shipment/phoneCountryCode",
		data : {
			addressRoleId : $('input[name="'+source+'\\.addressRoleId"]').val()
		},
		success : function(responseText) {
			defaultCountryCode=responseText.data;
		}
	});
	return defaultCountryCode;
}

function validateFieldData(isFieldPrefMethod,areaCode,exchange,station,countryCode,source,contactField){
	var isValid = true;
	

		// Defect 24095
	    // Changed code to skip validation for trade code F
	
	if($("#tradeCode").val()=="F"){
		return isValid;
	}


	if(countryCode=='' || (countryCode =='1' | countryCode=='01' || countryCode=='us' || countryCode=='united states')){
		//for Defect -- D016968 -- start
			isValid= validateCountryCodeData(source,contactField,countryCode );
		//for Defect -- D016968 -- end
		if(areaCode == '' && isFieldPrefMethod){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'AreaCode"]').validationEngine('showPrompt', '*This field is required.', 'error', 'topRight', true);
			isValid = false;
		} 
		else if(areaCode.length!=3){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'AreaCode"]').validationEngine('showPrompt', 'Area Code is always a 3 digit number.', 'error', 'topRight', true);
			isValid = false;
		}
		
		if(exchange == '' && isFieldPrefMethod){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'Exchange"]').validationEngine('showPrompt', '*This field is required.', 'error', 'topRight', true);
			isValid = false;
		} 
		else if(exchange.length!=3){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'Exchange"]').validationEngine('showPrompt', 'Exchange Code is always a 3 digit number.', 'error', 'topRight', true);
			isValid = false;
		}
		
		if(station == '' && isFieldPrefMethod){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'Station"]').validationEngine('showPrompt', '*This field is required.', 'error', 'topRight', true);
			isValid = false;
		}
		else if(station.length!=4){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'Station"]').validationEngine('showPrompt', 'Station Code is always a 4 digit number.', 'error', 'topRight', true);
			isValid = false;
		}
	}else{
		//for Defect -- D016968 -- start
			isValid= validateCountryCodeData(source,contactField,countryCode );
		//for Defect -- D016968 -- end
		if(areaCode == '' && isFieldPrefMethod){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'AreaCode"]').validationEngine('showPrompt', '*This field is required.', 'error', 'topRight', true);
			isValid = false;
		}else if(areaCode.length < 2 || areaCode.length > 4){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'AreaCode"]').validationEngine('showPrompt', 'Area Code is a 2 to 4 digit number.', 'error', 'topRight', true);
			isValid = false;
		}
		if(exchange == '' && isFieldPrefMethod){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'Exchange"]').validationEngine('showPrompt', '*This field is required.', 'error', 'topRight', true);
			isValid = false;
		}else if(exchange.length < 3 || exchange.length > 4){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'Exchange"]').validationEngine('showPrompt', 'Exchange Code is a 3 or 4 digit number', 'error', 'topRight', true);
			isValid = false;
		}
		if(station == '' && isFieldPrefMethod){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'Station"]').validationEngine('showPrompt', '*This field is required.', 'error', 'topRight', true);
			isValid = false;
		}
		else if(station.length!=4){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'Station"]').validationEngine('showPrompt', 'Station Code is always a 4 digit number.', 'error', 'topRight', true);
			isValid = false;
		}
	}
	return isValid;
}

function isUnPrefDetailsEmpty(source,field){
	var isEmpty = true;
	var areaCode = $('input[name="'+source+'\\.contact'+field+'AreaCode"]').val();
	var exchange = $('input[name="'+source+'\\.contact'+field+'Exchange"]').val();
	var station = $('input[name="'+source+'\\.contact'+field+'Station"]').val();
	var countryCode = $('input[name="'+source+'\\.contact'+field+'CountryCode"]').val();
	
	//setting default value for country code -- puneet hasija
	if(countryCode==""&&(station!=""||exchange!=""||areaCode!=""))
	{
		var defaultCountryCode=getDefaultValueforCountrycode(source);
		$('input[name="'+source+'\\.contact'+field+'CountryCode"]').val(defaultCountryCode);
		countryCode=defaultCountryCode;
	}
	// Changes Done for Defect -- D016968 -- start
	if(field!="Phone"){
	if(areaCode!='' || exchange!='' || station!='' || countryCode!=''){
		isEmpty = false;
		return isEmpty;
	}
	}else{
		if(areaCode!='' || exchange!='' || station!=''){
			isEmpty = false;
			return isEmpty;
		}
	}
	// Changes Done for Defect -- D016968 -- End
	return isEmpty;
}

function validateUnPref(source){
	var isValid = true;
	var pref = getPrefCommMethod(source);
	if(pref=='P'){
		var isEmpty = isUnPrefDetailsEmpty(source, 'Cell');
		if(!isEmpty){
			isValid = validateFieldDataUnPref(source, 'Cell');
			if(!isValid)
				return isValid;
		}
		var isEmpty = isUnPrefDetailsEmpty(source, 'Fax');
		if(!isEmpty){
			isValid = validateFieldDataUnPref(source, 'Fax');
			if(!isValid)
				return isValid;
		}
	}else if(pref=='C'){
		var isEmpty = isUnPrefDetailsEmpty(source, 'Phone');
		if(!isEmpty){
			isValid = validateFieldDataUnPref(source, 'Phone');
			if(!isValid)
				return isValid;
		}
		var isEmpty = isUnPrefDetailsEmpty(source, 'Fax');
		if(!isEmpty){
			isValid = validateFieldDataUnPref(source, 'Fax');
			if(!isValid)
				return isValid;
		}
	}else if(pref=='F'){
		var isEmpty = isUnPrefDetailsEmpty(source, 'Phone');
		if(!isEmpty){
			isValid = validateFieldDataUnPref(source, 'Phone');
			if(!isValid)
				return isValid;
		}
		var isEmpty = isUnPrefDetailsEmpty(source, 'Cell');
		if(!isEmpty){
			isValid = validateFieldDataUnPref(source, 'Cell');
			if(!isValid)
				return isValid;
		}
	}else if(pref=='E'){
		var isEmpty = isUnPrefDetailsEmpty(source, 'Phone');
		if(!isEmpty){
			isValid = validateFieldDataUnPref(source, 'Phone');
			if(!isValid)
				return isValid;
		}
		var isEmpty = isUnPrefDetailsEmpty(source, 'Cell');
		if(!isEmpty){
			isValid = validateFieldDataUnPref(source, 'Cell');
			if(!isValid)
				return isValid;
		}
		var isEmpty = isUnPrefDetailsEmpty(source, 'Fax');
		if(!isEmpty){
			isValid = validateFieldDataUnPref(source, 'Fax');
			if(!isValid)
				return isValid;
		}
	}
	return isValid;
}

function validateFieldDataUnPref(source,contactField){
	var isValid = true;
	var areaCode = $('input[name="'+source+'\\.contact'+contactField+'AreaCode"]').val();
	var exchange = $('input[name="'+source+'\\.contact'+contactField+'Exchange"]').val();
	var station = $('input[name="'+source+'\\.contact'+contactField+'Station"]').val();
	var countryCode = $('input[name="'+source+'\\.contact'+contactField+'CountryCode"]').val();
	
	if(countryCode=='' || (countryCode =='1' | countryCode=='01' || countryCode=='us' || countryCode=='united states')){
		//for Defect -- D016968 -- start
			isValid= validateCountryCodeData(source,contactField,countryCode );
		//for Defect -- D016968 -- end
		if(areaCode.length!=3){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'AreaCode"]').validationEngine('showPrompt', 'Area Code is always a 3 digit number.', 'error', 'topRight', true);
			isValid = false;
		}
		if(exchange.length!=3){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'Exchange"]').validationEngine('showPrompt', 'Exchange Code is always a 3 digit number.', 'error', 'topRight', true);
			isValid = false;
		}
		if(station.length!=4){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'Station"]').validationEngine('showPrompt', 'Station Code is always a 4 digit number.', 'error', 'topRight', true);
			isValid = false;
		}
	}else{
		//for Defect -- D016968 -- start
			isValid = validateCountryCodeData(source,contactField,countryCode );
		//for Defect -- D016968 -- end
		if(areaCode.length < 2 || areaCode.length > 4){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'AreaCode"]').validationEngine('showPrompt', 'Area Code is a 2 to 4 digit number.', 'error', 'topRight', true);
			isValid = false;
		}
		if(exchange.length < 3 || exchange.length > 4){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'Exchange"]').validationEngine('showPrompt', 'Exchange Code is a 3 or 4 digit number', 'error', 'topRight', true);
			isValid = false;
		}
		if(station.length!=4){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'Station"]').validationEngine('showPrompt', 'Station Code is always a 4 digit number.', 'error', 'topRight', true);
			isValid = false;
		}
	}
	return isValid;
}

function updateShipperConsigneeNames(responseText){
	if(null==responseText.data.shipper.organizationName)
		responseText.data.shipper.organizationName="";
	if(null==responseText.data.consignee.organizationName)
		responseText.data.consignee.organizationName="";
	$("#shipperConsigneeNameDiv").html("<div style=\"float:left;\" id=\"shipperDiv\"><b>Shipper "+ responseText.data.shipper.organizationName +" </div><div id=\"consigneeDiv\" >&nbsp;&nbsp;&nbsp;&nbsp;Consignee "+ responseText.data.consignee.organizationName +"</div></b>");
}

function clearShipperConsignee() {
	$('input[name="shipper\\.addressRoleId"]').val("");
	$('input[name="consignee\\.addressRoleId"]').val("");
	emptyContactDetails("shipper");
	emptyContactDetails("consignee");
}

function setShipperCommMethodValue(shipper) {
	if (shipper.communicationMethodCode == 'P') {
		$('#shipperComm1').attr('checked', true);
		$('#shipperComm1').val("P");
	} else if (shipper.communicationMethodCode == 'C') {
		$('#shipperComm2').attr('checked', true);
		$('#shipperComm2').val("C");
	} else if (shipper.communicationMethodCode == 'F') {
		$('#shipperComm3').attr('checked', true);
		$('#shipperComm3').val("F");
	} else if (shipper.communicationMethodCode == 'E') {
		$('#shipperComm4').attr('checked', true);
		$('#shipperComm4').val("E");
	}
}

function setCommMethodValue(source, caller) {
	if (source.communicationMethodCode == 'P') {
		$('#'+caller+'Comm1').attr('checked', true);
		$('#'+caller+'Comm1').val("P");
	} else if (source.communicationMethodCode == 'C') {
		$('#'+caller+'Comm2').attr('checked', true);
		$('#'+caller+'Comm2').val("C");
	} else if (source.communicationMethodCode == 'F') {
		$('#'+caller+'Comm3').attr('checked', true);
		$('#'+caller+'Comm3').val("F");
	} else if (source.communicationMethodCode == 'E') {
		$('#'+caller+'Comm4').attr('checked', true);
		$('#'+caller+'Comm4').val("E");
	}
}

function showWarningIfAroleChangeAndRefNumberRequiredShipper(){
	var isRefNumberRequired = $('input[name="shipper\\.isReferenceNumberRequired"]').val();
	if (isRefNumberRequired=='Y') {
		var refExist =validateRefNumberRequiredShipper();
		if (refExist==false) {
			$.unblockUI();
			alert("Shipper requires reference number.");
		}
	}
}

function setIsRefNumberRequiredShipper(){
	$.ajax({
		async: false,
		type : "GET",
		url : _context +"/shipment/referenceNumberRequiredOnAddressRoleChange",
		data : {
			addressRoleId : $('input[name="shipper\\.addressRoleId"]').val(),
			shipperConsignee:'S',
			trade: $('#tradeCode').val()
		},
		success : function(responseText) {
			$('input[name="shipper\\.isReferenceNumberRequired"]').val(responseText.data);
		},
		error : function(responseText){
			$('input[name="shipper\\.isReferenceNumberRequired"]').val('N');
		}
	});
}
	// for Defect -- D016968 -- Start
	function validateCountryCodeData(source,contactField,countryCode){
		var isValid=true;
		if(countryCode.length==0){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'CountryCode"]').validationEngine('showPrompt', 'Country Code is Required.', 'error', 'topRight', true);
			isValid = false;
		}
		if(countryCode.length>3){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'CountryCode"]').validationEngine('showPrompt', 'Country Code should be 3 digit max', 'error', 'topRight', true);
			isValid = false;
		}
		if( parseInt(countryCode)==0){
			openDivBlock();
			$('input[name="'+source+'\\.contact'+contactField+'CountryCode"]').validationEngine('showPrompt', 'Country Code should not be 0', 'error', 'topRight', true);
			isValid = false;
		}
		return  isValid;
	}
	// for Defect -- D016968 -- End

	function setphoneCountryCode(source){
		$.ajax({
			async: false,
			type : "POST",
			url : _context +"/shipment/phoneCountryCode",
			data : {
				addressRoleId : $('input[name="'+source+'\\.addressRoleId"]').val()
			},
			success : function(responseText) {
				if($('input[name="'+source+'\\.contactPhoneCountryCode"]').val()==''){
					$('input[name="'+source+'\\.contactPhoneCountryCode"]').val(responseText.data);
				}
			}
		});
	}
	
	//Code Addition start for defect -D018433

	function trimContactOnChange(source){
		$('input[name="'+ source +'\\.contact"]').change(function() {
			$('input[name="'+ source +'\\.contact"]').val($.trim($('input[name="'+ source +'\\.contact"]').val()));
			checkOneTimerCustomer(source);
		});
		$('input[name="'+ source +'\\.contactEmailAddress"]').change(function() {
			$('input[name="'+ source +'\\.contactEmailAddress"]').val($.trim($('input[name="'+ source +'\\.contactEmailAddress"]').val()));
			$('input[name="'+ source +'\\.contactEmailAddress"]').attr('title',$('input[name="'+ source +'\\.contactEmailAddress"]').val());
		});
		$('input[name="'+ source +'\\.contactFaxCountryCode"]').change(function() {
			$('input[name="'+ source +'\\.contactFaxCountryCode"]').val($.trim($('input[name="'+ source +'\\.contactFaxCountryCode"]').val()));
		});
		$('input[name="'+ source +'\\.contactFaxAreaCode"]').change(function() {
			$('input[name="'+ source +'\\.contactFaxAreaCode"]').val($.trim($('input[name="'+ source +'\\.contactFaxAreaCode"]').val()));
		});
		$('input[name="'+ source +'\\.contactFaxExchange"]').change(function() {
			$('input[name="'+ source +'\\.contactFaxExchange"]').val($.trim($('input[name="'+ source +'\\.contactFaxExchange"]').val()));
		});
		$('input[name="'+ source +'\\.contactFaxStation"]').change(function() {		
			$('input[name="'+ source +'\\.contactFaxStation"]').val($.trim($('input[name="'+ source +'\\.contactFaxStation"]').val()));
		});
		$('input[name="'+ source +'\\.contactFaxExtension"]').change(function() {
			$('input[name="'+ source +'\\.contactFaxExtension"]').val($.trim($('input[name="'+ source +'\\.contactFaxExtension"]').val()));
		});
		$('input[name="'+ source +'\\.contactCellCountryCode"]').change(function() {
			$('input[name="'+ source +'\\.contactCellCountryCode"]').val($.trim($('input[name="'+ source +'\\.contactCellCountryCode"]').val()));
		});
		$('input[name="'+ source +'\\.contactCellAreaCode"]').change(function() {
			$('input[name="'+ source +'\\.contactCellAreaCode"]').val($.trim($('input[name="'+ source +'\\.contactCellAreaCode"]').val()));
		});
		$('input[name="'+ source +'\\.contactCellExchange"]').change(function() {
			$('input[name="'+ source +'\\.contactCellExchange"]').val($.trim($('input[name="'+ source +'\\.contactCellExchange"]').val()));
		});
		$('input[name="'+ source +'\\.contactCellStation"]').change(function() {
			$('input[name="'+ source +'\\.contactCellStation"]').val($.trim($('input[name="'+ source +'\\.contactCellStation"]').val()));
		});
		$('input[name="'+ source +'\\.contactCellExtension"]').change(function() {
			$('input[name="'+ source +'\\.contactCellExtension"]').val($.trim($('input[name="'+ source +'\\.contactCellExtension"]').val()));
		});
		$('input[name="'+ source +'\\.contactPhoneAreaCode"]').change(function() {
			$('input[name="'+ source +'\\.contactPhoneAreaCode"]').val($.trim($('input[name="'+ source +'\\.contactPhoneAreaCode"]').val()));
		});
		$('input[name="'+ source +'\\.contactPhoneExchange"]').change(function() {
			$('input[name="'+ source +'\\.contactPhoneExchange"]').val($.trim($('input[name="'+ source +'\\.contactPhoneExchange"]').val()));
		});
		$('input[name="'+ source +'\\.contactPhoneStation"]').change(function() {
			$('input[name="'+ source +'\\.contactPhoneStation"]').val($.trim($('input[name="'+ source +'\\.contactPhoneStation"]').val()));
		});
		$('input[name="'+ source +'\\.contactPhoneCountryCode"]').change(function() {
			$('input[name="'+ source +'\\.contactPhoneCountryCode"]').val($.trim($('input[name="'+ source +'\\.contactPhoneCountryCode"]').val()));
		});
		$('input[name="'+ source +'\\.contactPhoneExtension"]').change(function() {
			$('input[name="'+ source +'\\.contactPhoneExtension"]').val($.trim($('input[name="'+ source +'\\.contactPhoneExtension"]').val()));
		});
		
	}
	//Code Addition end for defect -D018433
	//code addition start for defect --D018373
	function hidePromptForUiFields(source){
		if((source=='shipper')|| (source=='consignee')){
		$('input[name="'+ source +'\\.contact"]').validationEngine('hidePrompt');
/*		$('input[name="'+ source +'\\.contactEmailAddress"]').validationEngine('hidePrompt');
		$('input[name="'+ source +'\\.contactFaxCountryCode"]').validationEngine('hidePrompt');
		$('input[name="'+ source +'\\.contactFaxAreaCode"]').validationEngine('hidePrompt');
		$('input[name="'+ source +'\\.contactFaxExchange"]').validationEngine('hidePrompt');
		$('input[name="'+ source +'\\.contactFaxStation"]').validationEngine('hidePrompt');
		$('input[name="'+ source +'\\.contactFaxExtension"]').validationEngine('hidePrompt');
		$('input[name="'+ source +'\\.contactCellCountryCode"]').validationEngine('hidePrompt');
		$('input[name="'+ source +'\\.contactCellAreaCode"]').validationEngine('hidePrompt');
		$('input[name="'+ source +'\\.contactCellExchange"]').validationEngine('hidePrompt');
		$('input[name="'+ source +'\\.contactCellStation"]').validationEngine('hidePrompt');
		$('input[name="'+ source +'\\.contactCellExtension"]').validationEngine('hidePrompt');
		$('input[name="'+ source +'\\.contactPhoneAreaCode"]').validationEngine('hidePrompt');
		$('input[name="'+ source +'\\.contactPhoneExchange"]').validationEngine('hidePrompt');
		$('input[name="'+ source +'\\.contactPhoneStation"]').validationEngine('hidePrompt');
		$('input[name="'+ source +'\\.contactPhoneCountryCode"]').validationEngine('hidePrompt');
		$('input[name="'+ source +'\\.contactPhoneExtension"]').validationEngine('hidePrompt');*/
		}
		else if(source=='parties'){
		$('input[name="contact"]').validationEngine('hidePrompt');
		/*$('input[name="contactEmailAddress"]').validationEngine('hidePrompt');
		$('input[name="contactFaxCountryCode"]').validationEngine('hidePrompt');
		$('input[name="contactFaxAreaCode"]').validationEngine('hidePrompt');
		$('input[name="contactFaxExchange"]').validationEngine('hidePrompt');
		$('input[name="contactFaxStation"]').validationEngine('hidePrompt');
		$('input[name="contactFaxExtension"]').validationEngine('hidePrompt');
		$('input[name="contactCellCountryCode"]').validationEngine('hidePrompt');
		$('input[name="contactCellAreaCode"]').validationEngine('hidePrompt');
		$('input[name="contactCellExchange"]').validationEngine('hidePrompt');
		$('input[name="contactCellStation"]').validationEngine('hidePrompt');
		$('input[name="contactCellExtension"]').validationEngine('hidePrompt');
		$('input[name="contactPhoneAreaCode"]').validationEngine('hidePrompt');
		$('input[name="contactPhoneExchange"]').validationEngine('hidePrompt');
		$('input[name="contactPhoneStation"]').validationEngine('hidePrompt');
		$('input[name="contactPhoneCountryCode"]').validationEngine('hidePrompt');
		$('input[name="contactPhoneExtension"]').validationEngine('hidePrompt');*/
		}
	}
	//code addition end for defect --D018373
	function handlePrepaidCollectIndicator(caller){
/*	switch(caller){
		case 'S':
			if($('#prepaidCollectCode').val()=='P'){
				$('#prepaidCollectCode').val('');
				$('#prepaidCollectCode').trigger('change');
			}
			else if($('#prepaidCollectCode').val()=='B'){
				$('#prepaidCollectCode').val('C');
				$('#prepaidCollectCode').trigger('change');
			}
			break;
		case 'C':
			if($('#prepaidCollectCode').val()=='C'){
				$('#prepaidCollectCode').val('');
				$('#prepaidCollectCode').trigger('change');
			}
			else if($('#prepaidCollectCode').val()=='B'){
				$('#prepaidCollectCode').val('P');
				$('#prepaidCollectCode').trigger('change');
			}
			break;
		default:
			break;
	}*/
	}
	
	function checkAccordionHeaderForShipper()
	{
		if($('input[name="shipper\\.addressRoleId"]').val()!='')
			setAccordianTabDetails("shipperNameDiv", " - "+$('input[name="shipper\\.organizationName"]').val());
		else
			setAccordianTabDetails("shipperNameDiv", "");
	}
	function removeShipmentErrorPointers(){
		$("#shipmentForm").validationEngine('hideAll');
	}
	
	function checkOneTimerCustomer(field)
	{
		var isOneTimerCustomer=false;
		if($('input[name="'+field+'\\.isOneTimeCustomer"]').val()=="true"|| $('input[name="'+field+'\\.isOneTimeCustomer"]').val()==true)
		{
			isOneTimerCustomer=true;
		}
		else
		{
			isOneTimerCustomer=false;
		}
		if(!isOneTimerCustomer)
		{
			if(field=="consignee")
			{
				//regular customer and non cp contact = enable
				if($('#consigneeContactId').val()==''||$('#consigneeContactId').val()==undefined)
				{
					$('input[name="'+field+'\\.repeatContact"]').attr("disabled",false);
				}
				else
				{
					$('input[name="'+field+'\\.repeatContact"]').attr("disabled",true);
				}
			}
			else
			{
				//regular customer and non cp contact = enable
				if($('#shipperContactId').val()==''||$('#shipperContactId').val()==undefined)
				{
					$('input[name="'+field+'\\.repeatContact"]').attr("disabled",false);
				}
				else
				{
					$('input[name="'+field+'\\.repeatContact"]').attr("disabled",true);
				}
			}
		}
		//one timer customer no need to check always disable
		else
		{
			$('input[name="'+field+'\\.repeatContact"]').attr("disabled",true);
		}
		
	};var lastLoadService = "";
var lastDischargeService = "";
var lastOriginPortCode = "";
var lastOriginPortDescription = "";
var lastOriginPortCodeDescription = "";
var lastDestinationPortCode = "";
var lastDestinationPortDescription = "";
var lastDestinationPortCodeDescription = "";

var lastBlOriginCode = "";
var lastBlOriginDescription = "";
var lastBlOriginCodeDescription = "";

var lastBlDestinationCode = "";
var lastBlDestinationDescription = "";
var lastBlDestinationCodeDescription = "";
var isBillingVoyageVVD="";//for accordian of vvd

$(function() {

	if("true" == $("#isInBond").val() ) {
		$("#inbondNumber").attr('disabled', false);
	} else {
		$("#inbondNumber").attr('disabled', true);
	}
	
	$('#requiredDeliveryDate').attr('disabled', true);
	// $('#milRequiredDeliveryDate').attr('disabled', true);
	
	$("#convCgoApptCutoffDate").datepicker({
		dateFormat : 'mm-dd-yy'
	});

	$("#convCgoEstArrivalDate").datepicker({
		dateFormat : 'mm-dd-yy'
	});

	$("#intermodalDepartureDate").datepicker({
		dateFormat : 'mm-dd-yy'
	});
	
	$("#requiredDeliveryDate").datepicker({dateFormat: 'mm-dd-yy'});
	
	$('#requiredDeliveryDate').change(function(){
		// $('#milRequiredDeliveryDate').val($(this).val());
	});
	
	$('#isInBond').change(function(){
		if("true" == $("#isInBond").val() ) {
			$("#inbondNumber").attr('disabled', false);
		} else {
			$("#inbondNumber").val('');
			$("#inbondNumber").attr('disabled', true);
			
		}
	});
	

	// AutoComplete and lookup for BL Origin
	$('#blOriginCityCodeDescription')
	.gatesAutocomplete(
			{
				source : _context
						+ '/tm/Autocomplete/autoCompCityPredictive',
						formatItem : function(item) {
							if(item.stateCode != " " && item.stateCode != undefined){
								return item.cityCode+"-"+item.cityName+","+item.stateCode;	
							}
							else{
								return item.cityCode+"-"+item.cityName;
							}
								// return
								// item.cityCode+"-"+item.cityName+","+item.stateCode;
						},
						formatResult: function(item) {
							if(item.stateCode != " " && item.stateCode != undefined){
								return item.cityCode+"-"+item.cityName+","+item.stateCode;	
							}
							else{
								return item.cityCode+"-"+item.cityName;
							}
								// return
								// item.cityCode+"-"+item.cityName+","+item.stateCode;
						},
				select : function(item) {
					$('#blOriginCityCode').val(item.cityCode);
					var desc="";
					if(item.stateCode!=""  && item.stateCode!= undefined )
					{
						desc=item.cityName+","+item.stateCode;
					}
					else
					{
						desc=item.cityName;
					}
					$('#blOriginCityDescription').val(desc);
					setPlaceOfReceiptDefaultValue();
					$("#isOverrideBlOrigin").attr("checked", false);
					$('#overrideBlOrigin').css('color','black');
					// $('#originPortCityCodeDescription').val(item.cityCode+"-"+item.cityName);
					originPortCityChangeFunction(item.cityCode);
					setSaveBillBeforeBillButton();
				},
				autoSelectFirst:true,
				autoSelectCriteria:function(item){
					if(item.cityCode.toUpperCase()==$('#blOriginCityCodeDescription').val().toUpperCase())
						{
						return true;
						}
					else
						{
						return false;
						}
				}
			});

$('#blOriginCityCodeDescription').gatesPopUpSearch({
func : function() {
	placePopupSearch($('#blOriginCityCode').val(), 2);
	
}
});


$('#blOriginCityCodeDescription').blur(function() { 
	var tempDesc = $('#blOriginCityCodeDescription').val();
/*	if(tempDesc!="" && tempDesc.indexOf(",")>0){
		var tempArr = tempDesc.split(",");	
		tempDesc = tempArr[0];
	} */
	if($('#blOriginCityCode').val() == "") {
				$('#blOriginCityCodeDescription').val('');
				$('#blOriginCityDescription').val(''); resetOriginalOrgValues(); } else
				if($('#blOriginCityCodeDescription').val() == '') {
				$('#blOriginCityCode').val('');
				$('#blOriginCityDescription').val(''); resetOriginalOrgValues(); } else
				if($('#blOriginCityCode').val()+"-"+$('#blOriginCityDescription').val()!=tempDesc) {
				$('#blOriginCityCode').val('');
				$('#blOriginCityDescription').val('');
				$('#blOriginCityCodeDescription').val(''); resetOriginalOrgValues(); }
});
/////////////////Temp////////////////

	// Autocompleter and lookup for Origin Port
	$('#originPortCityCodeDescription')
			.gatesAutocomplete(
					{
						source : _context
								+ '/tm/Autocomplete/autoCompCityWithParameter?param=withPort',
								formatItem : function(item) {
									if(item.stateCode != " " && item.stateCode != undefined){
										return item.cityCode+"-"+item.cityName+","+item.stateCode;	
									}
									else{
										return item.cityCode+"-"+item.cityName;
									}
										// return
										// item.cityCode+"-"+item.cityName+","+item.stateCode;
								},
								formatResult: function(item) {
									if(item.stateCode != " " && item.stateCode != undefined){
										return item.cityCode+"-"+item.cityName+","+item.stateCode;	
									}
									else{
										return item.cityCode+"-"+item.cityName;
									}
										// return
										// item.cityCode+"-"+item.cityName+","+item.stateCode;
								},
						select : function(item) {
							var desc="";
							$('#originPortCityCode').val(item.cityCode);
							if(item.stateCode != " " && item.stateCode != undefined)
							{
								desc =  item.cityName+","+item.stateCode;	
							}
							else
							{
								desc = item.cityName;
							}
							$('#originPortCityDescription').val(desc);
							// $('#originPortCityCodeDescription').val(item.cityCode+"-"+item.cityName);
							setOriginPortDefaultValue();
							$('#isOverrideOriginPort').attr("checked", false);
							$('#overrideOriginPort').css('color','black');
							originPortCityChangeFunction(item.cityCode);
							setSaveBillBeforeBillButton();
						},
						autoSelectFirst:true,
						autoSelectCriteria:function(item){
							if(item.cityCode.toUpperCase()==$('#originPortCityCodeDescription').val().toUpperCase())
								{
								return true;
								}
							else
								{
								return false;
								}
						}
					});

	$('#originPortCityCodeDescription').gatesPopUpSearch({
		func : function() {
			/*
			 * if($('#tradeCode').val()=='') alert("Please enter a valid
			 * trade"); else
			 */
				portPopupSearch($('#originPortCityCodeDescription').val(), 3);
		}
	});

	
	 $('#originPortCityCodeDescription').blur(function() { 
		 var tempDesc = $('#originPortCityCodeDescription').val();
		 //Commented below lines as part of Defect D025769
			/*if(tempDesc!="" && tempDesc.indexOf(",")>0){
				var tempArr = tempDesc.split(",");	
				tempDesc = tempArr[0];
			} */
		 if($('#originPortCityCode').val() == "") {
			  $('#originPortCityCodeDescription').val('');
			 $('#originPortCityDescription').val(''); resetOriginalOrgValues(); } else
			 if($('#originPortCityCodeDescription').val() == '') {
			  $('#originPortCityCode').val('');
			  $('#originPortCityDescription').val(''); resetOriginalOrgValues(); } else
			  if($('#originPortCityCode').val()+"-"+$('#originPortCityDescription').val()!=tempDesc) {
			  $('#originPortCityCode').val('');
			  $('#originPortCityDescription').val('');
			  $('#originPortCityCodeDescription').val(''); resetOriginalOrgValues(); }
	 });
	 
	
	
	

	// Autocompleter and lookup for Destination Port
	$('#destinationPortCityCodeDescription')
			.gatesAutocomplete(
					{
						source : _context
								+ '/tm/Autocomplete/autoCompCityWithParameter?param=withPort',
								formatItem : function(item) {
									if(item.stateCode != " " && item.stateCode != undefined){
										return item.cityCode+"-"+item.cityName+","+item.stateCode;	
									}
									else{
										return item.cityCode+"-"+item.cityName;
									}
										// return
										// item.cityCode+"-"+item.cityName+","+item.stateCode;
								},
								formatResult: function(item) {
									if(item.stateCode != " " && item.stateCode != undefined){
										return item.cityCode+"-"+item.cityName+","+item.stateCode;	
									}
									else{
										return item.cityCode+"-"+item.cityName;
									}
										// return
										// item.cityCode+"-"+item.cityName+","+item.stateCode;
								},
						select : function(item) {
							var desc="";
							$('#destinationPortCityCode').val(item.cityCode);
							if(item.stateCode!="" && item.stateCode!=undefined)
							{
								desc=item.cityName+","+item.stateCode;
							}
							else
							{
							    desc=item.cityName;
							}
							$('#destinationPortCityDescription').val(desc);
						//	$('#destinationPortCityCodeDescription').val(item.cityCode+"-"+item.cityName);
							//D026523
							if(!$('#isOverrideDestinationPort').attr("checked"))
							{
							setDestinationPortDefaultValue();
							$('#isOverrideDestinationPort').attr("checked", false);
							$('#overrideDestinationPort').css('color','black');
							}
							destinationPortCityChangeFunction(item.cityCode);
							
							setSaveBillBeforeBillButton();
						},
						autoSelectFirst:true,
						autoSelectCriteria:function(item){
							if(item.cityCode.toUpperCase()==$('#destinationPortCityCodeDescription').val().toUpperCase())
								{
								return true;
								}
							else
								{
								return false;
								}
						}
							
						
					});

	$('#destinationPortCityCodeDescription').gatesPopUpSearch({
		func : function() {
			if($('#tradeCode').val()=='')
				alert("Please enter a valid trade");
			else
				portPopupSearch($('#destinationPortCityCodeDescription').val(), 4);
		}
	});

	$('#destinationPortCityCodeDescription').blur(function() {
		var tempDesc = $('#destinationPortCityCodeDescription').val();
		//Commented below lines of code as part of defect D025769
		/*if(tempDesc!="" && tempDesc.indexOf(",")>0){
			var tempArr = tempDesc.split(",");	
			tempDesc = tempArr[0];
		} */
		if ($('#destinationPortCityCode').val() == "")
		{
			$('#destinationPortCityCodeDescription').val('');
			$('#destinationPortCityDescription').val('');
			resetOriginalDestValues();
		}
		else if($('#destinationPortCityCodeDescription').val() == '')
		{
			$('#destinationPortCityCode').val('');
			$('#destinationPortCityDescription').val('');
			resetOriginalDestValues();
		}
		else if($('#destinationPortCityCode').val()+"-"+$('#destinationPortCityDescription').val()!=tempDesc)
		{
			$('#destinationPortCityCode').val('');
			$('#destinationPortCityDescription').val('');
			$('#destinationPortCityCodeDescription').val('');
			resetOriginalDestValues();
		}
	});

	// Autocompleter and lookup for BL Destination
	$('#blDestinationCityCodeDescription').gatesAutocomplete({
		source : _context + '/tm/Autocomplete/autoCompCityPredictive',
		mustMatch:true,
		formatItem : function(item) {
			if(item.stateCode != " " && item.stateCode != undefined){
				return item.cityCode+"-"+item.cityName+","+item.stateCode;	
			}
			else{
				return item.cityCode+"-"+item.cityName;
			}
				// return item.cityCode+"-"+item.cityName+","+item.stateCode;
		},
		formatResult: function(item) {
			if(item.stateCode != " " && item.stateCode != undefined){
				return item.cityCode+"-"+item.cityName+","+item.stateCode;	
			}
			else{
				return item.cityCode+"-"+item.cityName;
			}
				// return item.cityCode+"-"+item.cityName+","+item.stateCode;
		},
		select : function(item) {
			var desc="";
			$('#blDestinationCityCode').val(item.cityCode);
			if(item.stateCode!="" && item.stateCode!=undefined)
			{
				desc=item.cityName+","+item.stateCode;
			}
			else
			{
				desc=item.cityName;
			}
			$('#blDestinationCityDescription').val(desc);
		//	$('#blDestinationCityCodeDescription').val(item.cityCode+"-"+item.cityName);
			destinationPortCityChangeFunction(item.cityCode);
			setPlaceOfDeliveryDefaultValue();
			$('#isOverrideBlDestination').attr("checked", false);
			$('#overrideBlDestination').css('color','black');
			validateCity('blDestinationCity');
			setSaveBillBeforeBillButton();
		},
		autoSelectFirst:true,
		autoSelectCriteria:function(item){
			if(item.cityCode.toUpperCase()==$('#blDestinationCityCodeDescription').val().toUpperCase())
				{
				return true;
				}
			else
				{
				return false;
				}
		},
		onBlur:function(){
			var tempDesc = $('#blDestinationCityCodeDescription').val();
			/*if(tempDesc!="" && tempDesc.indexOf(",")>0){
				var tempArr = tempDesc.split(",");	
				tempDesc = tempArr[0];
			}  */
			
			if ($('#blDestinationCityCode').val() == "")
			{
				$('#blDestinationCityCodeDescription').val('');
			}
			else if($('#blDestinationCityCodeDescription').val() == '')
			{
				$('#blDestinationCityCode').val('');
				$('#blDestinationCityDescription').val('');
			}
			else if($('#blDestinationCityCode').val()+"-"+$('#blDestinationCityDescription').val()!=tempDesc)
			{
				$('#blDestinationCityCode').val('');
				$('#blDestinationCityDescription').val('');
				$('#blDestinationCityCodeDescription').val('');
			}
		}
	});

	$('#blDestinationCityCodeDescription').gatesPopUpSearch({
		func : function() {
				placePopupSearch($('#blDestinationCityCodeDescription').val(), 5);
		}
	});

	/*$('#blDestinationCityCodeDescription').blur(function() {
		
		var tempDesc = $('#blDestinationCityCodeDescription').val();
		if(tempDesc!="" && tempDesc.indexOf(",")>0){
			var tempArr = tempDesc.split(",");	
			tempDesc = tempArr[0];
		}
		
		if ($('#blDestinationCityCode').val() == "")
		{
			$('#blDestinationCityCodeDescription').val('');
		}
		else if($('#blDestinationCityCodeDescription').val() == '')
		{
			$('#blDestinationCityCode').val('');
			$('#blDestinationCityDescription').val('');
		}
		else if($('#blDestinationCityCode').val()+"-"+$('#blDestinationCityDescription').val()!=tempDesc)
		{
			$('#blDestinationCityCode').val('');
			$('#blDestinationCityDescription').val('');
			$('#blDestinationCityCodeDescription').val('');
		}
//		checkPlaceOfDeliveryDefaultValue();
//		setRoutingHeader();
	});*/
	
	// Autocompleter and lookup for Cargo Pickup
	$('#freightOriginCityCodeDescription').gatesAutocomplete({
		source : _context + '/tm/Autocomplete/autoCompCityPredictive',
		formatItem : function(item) {
			if(item.stateCode != " " && item.stateCode != undefined){
				return item.cityCode+"-"+item.cityName+","+item.stateCode;	
			}
			else{
				return item.cityCode+"-"+item.cityName;
			}
				// return item.cityCode+"-"+item.cityName+","+item.stateCode;
		},
		formatResult: function(item) {
			if(item.stateCode != " " && item.stateCode != undefined){
				return item.cityCode+"-"+item.cityName+","+item.stateCode;	
			}
			else{
				return item.cityCode+"-"+item.cityName;
			}
				// return item.cityCode+"-"+item.cityName+","+item.stateCode;
		},
		select : function(item) {
			$('#freightOriginCityCode').val(item.cityCode);
			$('#freightOriginCityDescription').val(item.cityName);
			checkPlaceOfReceiptDefaultValue();
			checkOriginPtDefaultValue();
			setSaveBillBeforeBillButton();
		}
	});

	$('#freightOriginCityCodeDescription').gatesPopUpSearch({
		func : function() {
				placePopupSearch($('#freightOriginCityCodeDescription').val(), 6);
		}
	});

	$('#freightOriginCityCodeDescription').change(function() {
		if ($('#freightOriginCityCode').val() == "")
		{
			$('#freightOriginCityCodeDescription').val('');
			checkPlaceOfReceiptDefaultValue();
			checkOriginPtDefaultValue();
		}
		else if($('#freightOriginCityCodeDescription').val() == '')
		{
			$('#freightOriginCityCode').val('');
			$('#freightOriginCityDescription').val('');
			checkPlaceOfReceiptDefaultValue();
			checkOriginPtDefaultValue();
		}
		else if($('#freightOriginCityCode').val()+"-"+$('#freightOriginCityDescription').val()!=$('#freightOriginCityCodeDescription').val())
		{
			$('#freightOriginCityCode').val('');
			$('#freightOriginCityDescription').val('');
			$('#freightOriginCityCodeDescription').val('');
			checkPlaceOfReceiptDefaultValue();
			checkOriginPtDefaultValue();
		}
	});
	
	// Autocompleter and lookup for Cargo Destination
	$('#freightDestinationCityCodeDescription').gatesAutocomplete({
		source : _context + '/tm/Autocomplete/autoCompCityPredictive',
		formatItem : function(item) {
			if(item.stateCode != " " && item.stateCode != undefined){
				return item.cityCode+"-"+item.cityName+","+item.stateCode;	
			}
			else{
				return item.cityCode+"-"+item.cityName;
			}
				// return item.cityCode+"-"+item.cityName+","+item.stateCode;
		},
		formatResult: function(item) {
			if(item.stateCode != " " && item.stateCode != undefined){
				return item.cityCode+"-"+item.cityName+","+item.stateCode;	
			}
			else{
				return item.cityCode+"-"+item.cityName;
			}
				// return item.cityCode+"-"+item.cityName+","+item.stateCode;
		},
		select : function(item) {
			$('#freightDestinationCityCode').val(item.cityCode);
			$('#freightDestinationCityDescription').val(item.cityName);
		}
	});

	$('#freightDestinationCityCodeDescription').gatesPopUpSearch({
		func : function() {
				placePopupSearch($('#freightDestinationCityCodeDescription').val(), 7);
		}
	});

	$('#freightDestinationCityCodeDescription').change(function() {
		if ($('#freightDestinationCityCode').val() == "")
			$('#freightDestinationCityCodeDescription').val('');
		else if($('#freightDestinationCityCodeDescription').val() == '')
		{
			$('#freightDestinationCityCode').val('');
			$('#freightDestinationCityDescription').val('');
		}
		else if($('#freightDestinationCityCode').val()+"-"+$('#freightDestinationCityDescription').val()!=$('#freightDestinationCityCodeDescription').val())
		{
			$('#freightDestinationCityCode').val('');
			$('#freightDestinationCityDescription').val('');
			$('#freightDestinationCityCodeDescription').val('');
		}
	});
	
	$('#loadServiceCode').change(function() {
		var loadServiceCode = $('#loadServiceCode :selected').val();
		var dischargeServiceCode = $('#dischargeServiceCode :selected').val();
		var marker = "load";
		$('#dischargeServiceCode').attr("disabled", true);
		clearAllMessage();
		if($('#shipmentId').val()!='' && loadServiceCode!='' && dischargeServiceCode!='')
		{
			$.ajax({
				url: _context +"/shipment/routing/beforeServiceUpdate",
				data:{loadService:loadServiceCode, dischargeService:dischargeServiceCode, marker:marker},
				success: function(responseTextFirst){
					if(responseTextFirst.success)
					{
						beforeLoadServiceUpdate(loadServiceCode, dischargeServiceCode,responseTextFirst);
						showResponseMessages('msgDiv', responseTextFirst);
					}
					else
					{
						showResponseMessages('msgDiv', responseTextFirst);
						$('#loadServiceCode').val(lastLoadService);
						$('#dischargeServiceCode').attr("disabled", false);
					}
				}
			});
		}
		else
			beforeLoadServiceUpdate(loadServiceCode, dischargeServiceCode,null);
	});
	
	$('#dischargeServiceCode').change(function() {
		var loadServiceCode = $('#loadServiceCode :selected').val();
		var dischargeServiceCode = $('#dischargeServiceCode :selected').val();
		var marker = "discharge";
		$('#loadServiceCode').attr("disabled", true);
		clearAllMessage();
		if($('#shipmentId').val()!='' && dischargeServiceCode!='' && loadServiceCode!='')
		{
			$.ajax({
				url: _context +"/shipment/routing/beforeServiceUpdate",
				data:{loadService:loadServiceCode, dischargeService:dischargeServiceCode, marker:marker},
				success: function(responseTextFirst){
					if(responseTextFirst.success)
					{
						showResponseMessages('msgDiv', responseTextFirst);
						beforeDischargeSeviceUpdate(loadServiceCode, dischargeServiceCode,responseTextFirst);
					}
					else
					{
						showResponseMessages('msgDiv', responseTextFirst);
						$('#dischargeServiceCode').val(lastDischargeService);
						$('#loadServiceCode').attr("disabled", false);
					}
				}
			});
		}
		else
			beforeDischargeSeviceUpdate(loadServiceCode, dischargeServiceCode,null);
	});

	/*
	 * $('#isInBond').change(function() { if($('#loadServiceCode').val()!='' &&
	 * $('#dischargeServiceCode').val()!=''){ $.ajax({ url: _context
	 * +"/shipment/routing/isInbondAllowed?inBond="+$("#isInBond
	 * option:selected").text()+"&loadServiceCode="+$('#loadServiceCode').val()+"&dischargeServiceCode="+$('#dischargeServiceCode').val(),
	 * success: function(responseText){ //if(responseText.success==false)
	 * showResponseMessages('msgDiv', responseText); } }); }
	 * 
	 * if($('#isInBond :selected').val()==true || $('#isInBond
	 * :selected').val()=='true') { $('#inbondNumber').attr("disabled", false);
	 * //add bond clause code $.ajax({ url: _context
	 * +"/booking/clause/addBondClause", success: function(responseText){
	 * $("#gridIdForClauses").setGridParam({rowNum : 3, datatype :
	 * "json"}).trigger("reloadGrid"); } }); } else {
	 * $('#inbondNumber').val(""); $('#inbondNumber').attr("disabled", true);
	 * //remove bond clause code $.ajax({ url: _context
	 * +"/booking/clause/removeBondClause", success: function(responseText){
	 * $("#gridIdForClauses").setGridParam({rowNum : 3, datatype :
	 * "json"}).trigger("reloadGrid"); } }); } });
	 */
	
	/*
	 * $('#inbondNumber').change(function() { if($('#inbondNumber').val()!='') {
	 * if(!validateForPositiveIntegers($('#inbondNumber').val())) {
	 * $('#inbondNumber').val(''); alert("Please enter only positive integers
	 * for Inbond Number"); } } });
	 */
	
	/*
	 * $('#isOverland').change(function() { $.ajax({ url: _context
	 * +"/shipment/routing/getOverland?overland="+$("#isOverland
	 * option:selected").text()+"&loadServiceCode="+$('#loadServiceCode').val()+"&dischargeServiceCode="+$('#dischargeServiceCode').val(),
	 * success: function(responseText){ //if(responseText.success==false)
	 * showResponseMessages('msgDiv', responseText); } }); });
	 */

	$('#overridePickupCarrierCode').change(function(){
		//D027141
		if($('#overridePickupCarrierCode').val()!='' && $('#blOriginCityCode').val()=='' && $('#loadServiceCode :selected').val()!='DCY' && $('#pickupZone').val()=='')
		{
		$('#overridePickupCarrierCode').val('');
		alert("Override not allowed for pickup");
		}
		
		else if($('#overridePickupCarrierCode').val()!='')
		{
			var carr = 'pickUp';
			$.ajax({
				url: _context +"/shipment/routing/validateCarrier",
				data :{
					carrierCode :$('#overridePickupCarrierCode').val(),
					carrier : carr
				},
				success: function(responseText){
					if(responseText.success==false)
					{
						$('#overridePickupCarrierCode').val('');
						// showResponseMessages('msgDiv', responseText);
					}
					showResponseMessages('msgDiv', responseText);
				}
			});
		}
	});

	$('#overrideDeliveryCarrierCode').change(function(){
		if($('#overrideDeliveryCarrierCode').val()!='')
		{
			var carr = 'delivery';
			$.ajax({
				url: _context +"/shipment/routing/validateCarrier",
				data :{
					carrierCode :$('#overrideDeliveryCarrierCode').val(),
					carrier : carr
				},
				success: function(responseText){
					if(responseText.success==false)
					{
						$('#overrideDeliveryCarrierCode').val('');
						// showResponseMessages('msgDiv', responseText);
					}
					showResponseMessages('msgDiv', responseText);
				}
			});
		}
	});
	//D024236: 	Maintain Bill: TSRC
	$('#actualPickupCarrierCode').gatesPopUpSearch({
		func : function() {
			var tariff = $("#tariffNumber").val();
			var item = $("#itemNumber").val();
			var type = '';
			var size = '';
			var height = '';
			var city = $("#blOriginCityCodeDescription").val();
			var port = $("#originPortCityCodeDescription").val();
			var rateDate = $("#rateDate").val();
			var frtRcvdDate = $("#freightReceivedDate").val();
			
			carrierPopupSearch(rateDate, frtRcvdDate, $('#overridePickupCarrierCode').val(), 
					tariff, item, type,  size, height, city, "O", port);
		}
	});
	
	$('#actualDeliveryCarrierCode').gatesPopUpSearch({
		func : function() {
			var tariff = $("#tariffNumber").val();
			var item = $("#itemNumber").val();
			var type = '';
			var size = '';
			var height = '';
			var city = $("#blDestinationCityCodeDescription").val();
			var port = $("#destinationPortCityCodeDescription").val();
			var rateDate = $("#rateDate").val();
			var frtRcvdDate = $("#freightReceivedDate").val();
			
			carrierPopupSearch(rateDate, frtRcvdDate, $('#overrideDeliveryCarrierCode').val(), 
					tariff, item, type,  size, height, city, "D", port);
		}
	});

});

/** ******** Supporting functions ********* */
function beforeLoadServiceUpdate(loadServiceCode, dischargeServiceCode,response)
{// alert("In side beforeLoadServiceUpdate");
	if(($("#commodityGrid").getGridParam("reccount")!='undefined' && $("#commodityGrid").getGridParam("reccount")>0)
			|| ($("#povGrid").getGridParam("reccount")!='undefined' && $("#povGrid").getGridParam("reccount")>0))
	{// alert("In side commodityGrid");
		if(loadServiceCode!='' && dischargeServiceCode!='' && null!=response)
		{

			var oldLDSGroup = $('#loadDschServiceGroupCode').val();
			var newLDSGroup = response.data.loadDschServiceGroupCode;
			if($.trim(oldLDSGroup)!=$.trim(newLDSGroup))
			{
				
					//removeCommodities();
					if( $.trim(newLDSGroup)!="CON" || $.trim(newLDSGroup)!="LCL"){	
						var r = confirm("load discharge group type is being changed.  Units/containers will be unlinked from the bill.");
						if(r){
						removeShipmentFreight();
						setLoadDischargeGroupCode(loadServiceCode, dischargeServiceCode, response);
						loadServiceUpdateFunction(loadServiceCode, dischargeServiceCode);
						$('#shipmentSaveBtn').trigger("click");
						}else{
							$('#dischargeServiceCode').attr("disabled", false);
							$('#loadServiceCode').val(lastLoadService);
						}
					}else{
						var r = confirm("Load discharge group type is being changed");
						if(r){
						removeShipmentReceivedFreight();
						setLoadDischargeGroupCode(loadServiceCode, dischargeServiceCode, response);
						loadServiceUpdateFunction(loadServiceCode, dischargeServiceCode);
						$('#shipmentSaveBtn').trigger("click");
						}else{
							$('#dischargeServiceCode').attr("disabled", false);
							$('#loadServiceCode').val(lastLoadService);
						}
					}			
			}
			else{
				setLoadDischargeGroupCode(loadServiceCode, dischargeServiceCode, response);
				loadServiceUpdateFunction(loadServiceCode, dischargeServiceCode);
				//Commented for D024063
				/* $('#tariffNumber').val("");
				   $('#tariffCheck').val(""); */
			}
				
		
		}else if(loadServiceCode!='' && dischargeServiceCode!='')
		{
			$.ajax({
				url: _context +"/shipment/routing/getLoadDschPair?loadServiceCode="+loadServiceCode+"&dischargeServiceCode="+dischargeServiceCode,
				success: function(responseText){
					var oldLDSGroup = $('#loadDschServiceGroupCode').val();
					var newLDSGroup = responseText.data.loadDschServiceGroupCode;
					if($.trim(oldLDSGroup)!=$.trim(newLDSGroup))
					{
						
							//removeCommodities();
							if($.trim(newLDSGroup) != "CON" || $.trim(newLDSGroup) != "LCL"){
								var r = confirm("load discharge group type is being changed.  Units/containers will be unlinked from the bill.");
								if(r)
								{
								removeShipmentFreight();
								setLoadDischargeGroupCode(loadServiceCode, dischargeServiceCode, response);
								loadServiceUpdateFunction(loadServiceCode, dischargeServiceCode);
								$('#shipmentSaveBtn').trigger("click");
								}
								else
								{
									$('#dischargeServiceCode').attr("disabled", false);
									$('#loadServiceCode').val(lastLoadService);
								}
							}else{
								var r = confirm("Load discharge group type is being changed");
								if(r)
								{							
								removeShipmentReceivedFreight();
								setLoadDischargeGroupCode(loadServiceCode, dischargeServiceCode, response);
								loadServiceUpdateFunction(loadServiceCode, dischargeServiceCode);
								$('#shipmentSaveBtn').trigger("click");
								}
								else
								{
									$('#dischargeServiceCode').attr("disabled", false);
									$('#loadServiceCode').val(lastLoadService);
								}
							}							
					}
					else{
						setLoadDischargeGroupCode(loadServiceCode, dischargeServiceCode, responseText);
						loadServiceUpdateFunction(loadServiceCode, dischargeServiceCode);
						//Commented for D024063
						/* $('#tariffNumber').val("");
						   $('#tariffCheck').val(""); */
					}
						
				}
			});
		}
		else
		{
			/*
			 * var r = confirm("Load discharge group code is being changed.
			 * Delete commodities?"); if(r) { removeCommodities();
			 */
			setLoadDischargeGroupCode(loadServiceCode, dischargeServiceCode, null);
				loadServiceUpdateFunction(loadServiceCode, dischargeServiceCode);
				
			/*
			 * } else { $('#dischargeServiceCode').attr("disabled", false);
			 * $('#loadServiceCode').val(lastLoadService); }
			 */
		}
	}
	else{
	//D024735, Fix for place of receipt not available although the error mssg says it needs it.
		setLoadDischargeGroupCode(loadServiceCode, dischargeServiceCode, response);
		loadServiceUpdateFunction(loadServiceCode, dischargeServiceCode);
		//Commented for D024063
		/* $('#tariffNumber').val("");
		   $('#tariffCheck').val(""); */
	}
		
}

function beforeDischargeSeviceUpdate(loadServiceCode, dischargeServiceCode,response)
{
	if(($("#commodityGrid").getGridParam("reccount")!='undefined' && $("#commodityGrid").getGridParam("reccount")>0)
			|| ($("#povGrid").getGridParam("reccount")!='undefined' && $("#povGrid").getGridParam("reccount")>0))
	{
		if(loadServiceCode!='' && dischargeServiceCode!='' && null!=response)
		{

			if($.trim($('#loadDschServiceGroupCode').val())!=$.trim(response.data.loadDschServiceGroupCode))
			{
				
					//removeCommodities();
					if($.trim(newLDSGroup) != "CON" || $.trim(newLDSGroup) != "LCL"){
						var r = confirm("load discharge group type is being changed.  Units/containers will be unlinked from the bill.");
						if(r)
						{
						removeShipmentFreight();
						setLoadDischargeGroupCode(loadServiceCode, dischargeServiceCode, response);
						dischargeSeviceUpdateFunction(loadServiceCode, dischargeServiceCode);
						$('#shipmentSaveBtn').trigger("click");
						}
						else
						{
							$('#loadServiceCode').attr("disabled", false);
							$('#dischargeServiceCode').val(lastDischargeService);
						}
					}else{
						var r = confirm("Load discharge group type is being changed.");
						if(r)
						{
						removeShipmentReceivedFreight();
						setLoadDischargeGroupCode(loadServiceCode, dischargeServiceCode, response);
						dischargeSeviceUpdateFunction(loadServiceCode, dischargeServiceCode);
						$('#shipmentSaveBtn').trigger("click");
						}
						else
						{
							$('#loadServiceCode').attr("disabled", false);
							$('#dischargeServiceCode').val(lastDischargeService);
						}
					}				
			}
			else{
				setLoadDischargeGroupCode(loadServiceCode, dischargeServiceCode, response);
				dischargeSeviceUpdateFunction(loadServiceCode, dischargeServiceCode);
				//Commented for D024063
				/* $('#tariffNumber').val("");
				   $('#tariffCheck').val(""); */
			}
				
		}else if(loadServiceCode!='' && dischargeServiceCode!='')
		{
			$.ajax({
				url: _context +"/shipment/routing/getLoadDschPair?loadServiceCode="+loadServiceCode+"&dischargeServiceCode="+dischargeServiceCode,
				success: function(responseText){
					if($.trim($('#loadDschServiceGroupCode').val())!=$.trim(responseText.data.loadDschServiceGroupCode))
					{
						
							//removeCommodities();
							if($.trim(newLDSGroup) != "CON" || $.trim(newLDSGroup) != "LCL"){
								var r = confirm("load discharge group type is being changed.  Units/containers will be unlinked from the bill.");
								if(r)
								{
									removeShipmentFreight();
									setLoadDischargeGroupCode(loadServiceCode, dischargeServiceCode, response);
									dischargeSeviceUpdateFunction(loadServiceCode, dischargeServiceCode);
									$('#shipmentSaveBtn').trigger("click");
								}
								else
								{
									$('#loadServiceCode').attr("disabled", false);
									$('#dischargeServiceCode').val(lastDischargeService);
								}
							}else{
								var r = confirm("Load discharge group type is being changed");
								if(r)
								{
									removeShipmentReceivedFreight();
									setLoadDischargeGroupCode(loadServiceCode, dischargeServiceCode, response);
									dischargeSeviceUpdateFunction(loadServiceCode, dischargeServiceCode);
									$('#shipmentSaveBtn').trigger("click");
								}
								else
								{
									$('#loadServiceCode').attr("disabled", false);
									$('#dischargeServiceCode').val(lastDischargeService);
								}
							}							
					}
					else{
						setLoadDischargeGroupCode(loadServiceCode, dischargeServiceCode, responseText);
						dischargeSeviceUpdateFunction(loadServiceCode, dischargeServiceCode);
						//Commented for D024063
						/* $('#tariffNumber').val("");
						   $('#tariffCheck').val("");  */
					}
						
				}
			});
		}
		else
		{
			/*
			 * var r = confirm("Load discharge group code is being changed.
			 * Delete commodities?"); if(r) { removeCommodities();
			 */
			//Defect-24735 Modified to enable place of receipt field.
			setLoadDischargeGroupCode(loadServiceCode, dischargeServiceCode, response);
				dischargeSeviceUpdateFunction(loadServiceCode, dischargeServiceCode);
			/*
			 * } else { $('#loadServiceCode').attr("disabled", false);
			 * $('#dischargeServiceCode').val(lastDischargeService); }
			 */
		}
	}
	else{
		setLoadDischargeGroupCode(loadServiceCode, dischargeServiceCode, response);//Defect-24735 Modified to enable place of receipt field.
		dischargeSeviceUpdateFunction(loadServiceCode, dischargeServiceCode);
		// Commented for D024063
		/* $('#tariffNumber').val("");
		   $('#tariffCheck').val("");  */
	}
		
}

function loadServiceUpdateFunction(loadServiceCode, dischargeServiceCode)
{
	lastLoadService = loadServiceCode;
	
	if(loadServiceCode!=null && loadServiceCode!='')
	{
		$.ajax({
			url: _context +"/shipment/routing/getDischargeServicesWithDesc?loadService="+loadServiceCode,
			success: function(responseText){
					$('#dischargeServiceCode').attr("disabled", false);
					setLoadDischargeValuesWithDesc(responseText.data, '#dischargeServiceCode', dischargeServiceCode);
					// setLoadDischargeGroupCode(loadServiceCode,
					// dischargeServiceCode);
					setRoutingHeader();
					
					var queryString = $('#shipmentForm').formSerialize();
					$.ajax({
						url: _context +"/shipment/routing/validateUpdateService",
						type: "POST",
						data: queryString,
						success: function(responseTextNew){
							/*
							 * if(responseTextNew.success==false) {
							 */
								showResponseMessages('msgDiv', responseTextNew);
							/* } */
						}
					});
					
					//D026685
					if(loadServiceCode=='P')
					{
					$('#pickupZipCode').val($('input[name="shipper\\.zip"]').val());
					validateZip('pickup');
					}
				}
			});
		}
		else
		{
			$.ajax({
				url: _context +"/shipment/routing/getAllDischargeServicesWithDesc",
				success: function(responseText){
					$('#dischargeServiceCode').attr("disabled", false);
					setLoadDischargeValuesWithDesc(responseText.data, '#dischargeServiceCode', dischargeServiceCode);
					// setLoadDischargeGroupCode(loadServiceCode,
					// dischargeServiceCode);
					setRoutingHeader();
				}
			});
		}
	}

function dischargeSeviceUpdateFunction(loadServiceCode, dischargeServiceCode)
{
	lastDischargeService = dischargeServiceCode;
	
	if(dischargeServiceCode!=null && dischargeServiceCode!=''){
		$.ajax({
			url: _context +"/shipment/routing/getLoadServicesWithDesc?dischargeService="+dischargeServiceCode,
			success: function(responseText){
				$('#loadServiceCode').attr("disabled", false);
				//setLoadDischargeValuesWithDesc(responseText.data, '#loadServiceCode', loadServiceCode);
				// setLoadDischargeGroupCode(loadServiceCode,
				// dischargeServiceCode);
				setRoutingHeader();
				
				var queryString = $('#shipmentForm').formSerialize();
				$.ajax({
					url: _context +"/shipment/routing/validateUpdateService",
					type: "POST",
					data: queryString,
					success: function(responseTextNew){
						/*
						 * if(responseTextNew.success==false) {
						 */
							showResponseMessages('msgDiv', responseTextNew);
						/* } */
					}
				});
				//D026291
				if(dischargeServiceCode=='P')
				{
				//$('#deliveryZipCode').val($('input[name="consignee\\.zip"]').val());
				$('#deliveryZipCode').val($('input[name="consignee\\.zip"]').val().substring(0,5));
				validateZip('delivery');
				}
			
			}
		});
	}
	else
	{
		$.ajax({
			url: _context +"/shipment/routing/getAllLoadServicesWithDesc",
			success: function(responseText){
				$('#loadServiceCode').attr("disabled", false);
				setLoadDischargeValuesWithDesc(responseText.data, '#loadServiceCode', loadServiceCode);
				// setLoadDischargeGroupCode(loadServiceCode,
				// dischargeServiceCode);
				setRoutingHeader();
			}
		});
	}
}

function clearItemCustomerCommodityLSDSChange(){
	// D029821, clear customer Commodity
	//window.itemList = null;
	$.ajax({
		async:false,
		 type:"GET",
		 url:_context+"/shipmentCommodity/clearCommodity",
		success: function(responseText){
		}
	
		});
}

function portPopupSearch(place, id) {
	if(!($("#statusCode").text()=='ISSUED' || $("#statusCode").text()=='CORRECTED' || isRoutingModifiable==false)){
	var values = place.split("-");
	var param = values[0];
	_callingFunc = id;
	var actionUrl = _context + "/city/manualLookup/showFormForQT?term=" + param
			+ "|" + "Y";
	var windowStyle = 'top=50,left=100,height=500,width=600,scrollbars=0,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, 'CitySearch', windowStyle);
	}
}

function placePopupSearch(place, id) {
	if(!($("#statusCode").text()=='ISSUED' || $("#statusCode").text()=='CORRECTED' || isRoutingModifiable==false)){
	var values = place.split("-");
	var param = values[0];
	_callingFunc = id;
	var actionUrl = _context + "/city/manualLookup/showFormForQT?term=" + param;
	var windowStyle = 'top=50,left=100,height=500,width=600,scrollbars=0,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, 'CitySearch', windowStyle);
	}
}

function carrierPopupSearch(rateDate, recievedDate, value, tariff, item, type,  size, height, city, source, port){
	var param =  rateDate + '|' + recievedDate + '|' + value + '|' + tariff + '|' + item + '|' + type 
				+ '|'+ size + '|' + height + '|' + city + '|' + source + '|' + port;
	var actionUrl = _context + "/cas/carrierCodeSearch.do?params=" + param + "&frtRcvdDt=" + recievedDate;
	var windowStyle = 'top=0,left=0,height=600,width=1100,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, 'CarrierCodeSearch', windowStyle);
}

function cityUpdate(id) {
	var values = id.split(",");
	var cityCode = values[0];
	var cityName = values[1];
	var stateName = values[2];
	var value = '';
	if(stateName!=''){
		value=cityCode + "-" + cityName+","+stateName;	
	}else{
		value=cityCode + "-" + cityName;
	}
	if (_callingFunc == '2') {
		$('#blOriginCityCodeDescription').val(value);
		$('#blOriginCityDescription').val(cityName);
		$('#blOriginCityCode').val(cityCode);
		$('#blOriginCityDescription').val(item.cityName);
		setPlaceOfReceiptDefaultValue();
		$("#isOverrideBlOrigin").attr("checked", false);
		$('#overrideBlOrigin').css('color','black');
		validateCity('blOriginCity');
	}
	if (_callingFunc == '3') {
		$('#originPortCityCodeDescription').val(value);
		$('#originPortCityDescription').val(cityName);
		$('#originPortCityCode').val(cityCode);
		setOriginPortDefaultValue();
		$('#isOverrideOriginPort').attr("checked", false);
		$('#overrideOriginPort').css('color','black');
		originPortCityChangeFunction(cityCode);
	}
	if (_callingFunc == '4') {
		$('#destinationPortCityCodeDescription').val(value);
		$('#destinationPortCityDescription').val(cityName);
		$('#destinationPortCityCode').val(cityCode);
		destinationPortCityChangeFunction(cityCode);
		setDestinationPortDefaultValue();
		$('#isOverrideDestinationPort').attr("checked", false);
		$('#overrideDestinationPort').css('color','black');
	}
	if (_callingFunc == '5') {
		$('#blDestinationCityCodeDescription').val(value);
		$('#blDestinationCityDescription').val(cityName);
		$('#blDestinationCityCode').val(cityCode);
		setPlaceOfDeliveryDefaultValue();
		$('#isOverrideBlDestination').attr("checked", false);
		$('#overrideBlDestination').css('color','black');
		validateCity('blDestinationCity');
	}
	if (_callingFunc == '6') {
		$('#freightOriginCityCodeDescription').val(value);
		$('#freightOriginCityDescription').val(cityName);
		$('#freightOriginCityCode').val(cityCode);
		checkPlaceOfReceiptDefaultValue();
		checkOriginPtDefaultValue();
	}
	if (_callingFunc == '7') {
		$('#freightDestinationCityCodeDescription').val(value);
		$('#freightDestinationCityDescription').val(cityName);
		$('#freightDestinationCityCode').val(cityCode);
	}
	if (_callingFunc == '8') {
		$('#cargoPickupCityCodeDesc').val(value);
		$('#cargoPickupCityCode').val(cityCode);
	}
	if (_callingFunc == '9') {
		$('#cargoDeliveryCityCodeDesc').val(value);
		$('#cargoDeliveryCityCode').val(cityCode);
	}
}

/*
 * function setLoadDischargeGroupCode(loadServiceCode, dischargeServiceCode) {
 * if(loadServiceCode!=null && loadServiceCode!='' && dischargeServiceCode!=null &&
 * dischargeServiceCode!='') { $.ajax({ url: _context
 * +"/shipment/routing/getLoadDschPair?loadServiceCode="+loadServiceCode+"&dischargeServiceCode="+dischargeServiceCode,
 * success: function(responseText){
 * $('#loadDschServiceGroupCode').val(responseText.data.loadDschServiceGroupCode);
 * //Block commented by Mangesh
 * $('#isAllowBookingUnit').val(responseText.data.isAllowBookingUnit);
 * if($('#loadDschServiceGroupCode').val()=='CON') {
 * $('#convCgoApptCutoffDate').attr('disabled', false);
 * $('#convCgoApptCutoffTime').attr('disabled', false);
 * $('#convCgoEstArrivalDate').attr('disabled', false);
 * $('#convCgoEstArrivalTime').attr('disabled', false);
 * $('#requiredDeliveryDate').attr('disabled', false);
 * $('#milRequiredDeliveryDate').attr('disabled', false);
 * $('#requiredDeliveryDate').val('01-01-0001');
 * $('#milRequiredDeliveryDate').val('01-01-0001'); } else {
 * $('#convCgoApptCutoffDate').val(''); $('#convCgoApptCutoffTime').val('');
 * $('#convCgoEstArrivalDate').val(''); $('#convCgoEstArrivalTime').val('');
 * $('#requiredDeliveryDate').val(''); $('#milRequiredDeliveryDate').val('');
 * 
 * $('#convCgoApptCutoffDate').attr('disabled', true);
 * $('#convCgoApptCutoffTime').attr('disabled', true);
 * $('#convCgoEstArrivalDate').attr('disabled', true);
 * $('#convCgoEstArrivalTime').attr('disabled', true);
 * $('#requiredDeliveryDate').attr('disabled', true);
 * $('#milRequiredDeliveryDate').attr('disabled', true); } //Setting request
 * params for hold predictive search //holdPredictive();//Commented by Mangesh //
 * Setting IBS Code as mandatory incase of MBU
 * //$('#militaryIbsStatusCode').trigger("change"); } }); } else {
 * //$('#loadDschServiceGroupCode').val('');
 * 
 * //Setting request params for hold predictive search
 * //holdPredictive();//Commented by Mangesh // Setting IBS Code as mandatory
 * incase of MBU //$('#militaryIbsStatusCode').trigger("change"); } }
 */
function setLoadDischargeGroupCode(loadServiceCode, dischargeServiceCode, responseText)
{
	if(responseText!=null && responseText!=undefined && loadServiceCode!=null && 
			loadServiceCode!='' && dischargeServiceCode!=null && dischargeServiceCode!='')
	{
		$('#loadDschServiceGroupCode').val($.trim(responseText.data.loadDschServiceGroupCode));
		enableDisableActualTrucker();
		$('#isAllowBookingUnit').val(responseText.data.isAllowBookingUnit);
		$('#isRequireReceivedUnit').val(responseText.data.isRequireReceivedUnit);
		
		
		if(isRoutingModifiable && responseText.data.isRequireBlOrigin!='N')
			$('#blOriginCityCodeDescription').attr('disabled', false);
		else if(responseText.data.isRequireBlOrigin=='N'){
			$('#blOriginCityCode').val("");
			$('#blOriginCityDescription').val("");
			$('#blOriginCityCodeDescription').val("");
			$('#blOriginCityCodeDescription').attr('disabled', true);
		}
			
		
		if(isRoutingModifiable && responseText.data.isRequireBlDestination!='N')
			$('#blDestinationCityCodeDescription').attr('disabled', false);
		else if(responseText.data.isRequireBlDestination=='N'){
			$('#blDestinationCityCode').val("");
			$('#blDestinationCityDescription').val("");
			$('#blDestinationCityCodeDescription').val("");
			$('#blDestinationCityCodeDescription').attr('disabled', true);
		}
			
		
		if(isRoutingModifiable && responseText.data.isRequirePickupZipCode!='N')
			$('#pickupZipCode').attr('disabled', false);
		else if(responseText.data.isRequirePickupZipCode=='N'){
			$('#pickupZipCode').val("");
			$('#pickupZone').val("");
			$('#pickupZipCode').attr('disabled', true);
		}
			
		
		if(isRoutingModifiable && responseText.data.isRequireDeliveryZipCode!='N')
			$('#deliveryZipCode').attr('disabled', false);
		else if(responseText.data.isRequireDeliveryZipCode=='N'){
			$('#deliveryZipCode').val("");
			$('#deliveryZone').val("");
			$('#deliveryZipCode').attr('disabled', true);
		}
			
		
		
	}
	else
	{
		/*
		 * $('#loadDschServiceGroupCode').val('');
		 * $('#isAllowBookingUnit').val('');
		 * 
		 * if(isRoutingModifiable) {
		 * $('#blOriginCityCodeDescription').attr('disabled', false);
		 * $('#blDestinationCityCodeDescription').attr('disabled', false);
		 * $('#pickupZipCode').attr('disabled', false);
		 * $('#deliveryZipCode').attr('disabled', false); }
		 */
		
		// Disable freight
		// Freight
		/*
		 * disableAccordian(4); removeCurrentCommodity();
		 */
	}

	checkPlaceOfReceiptDefaultValue(); // adjust override
	checkPlaceOfDeliveryDefaultValue();

}
function checkPickupCarrier()
{
	if($('#overridePickupCarrierCode').val()=='' && $('#loadServiceCode :selected').val()!='DCY' 
		&& $('#blOriginCityCode').val()=='' && $('#pickupZipCode').val()=='')
		$('#overridePickupCarrierCode').attr('disabled', true);
	else if(isRoutingModifiable && ($('#loadServiceCode :selected').val()=='DCY' 
		|| $('#blOriginCityCode').val()!='' || $('#pickupZipCode').val()!=''))
		$('#overridePickupCarrierCode').attr('disabled', false);
}

function checkDeliveryCarrier()
{
	if($('#overrideDeliveryCarrierCode').val()=='' && $('#dischargeServiceCode :selected').val()!='DCY' 
		&& $('#blDestinationCityCode').val()=='' && $('#deliveryZipCode').val()=='')
	$('#overrideDeliveryCarrierCode').attr('disabled', true);
	else if(isRoutingModifiable && ($('#dischargeServiceCode :selected').val()=='DCY' 
		|| $('#blDestinationCityCode').val()!='' || $('#deliveryZipCode').val()!=''))
		$('#overrideDeliveryCarrierCode').attr('disabled', false);
}
function removeCommodities()
{// alert("URL: "+_context+"/shipment/deleteFreight?id=-1");
	 var queryString = $('#shipmentForm').formSerialize();
	$.ajax({
		 type:"POST",
		 url:_context+"/shipmentCommodity/deleteShipmentCommoditySection",
		 data :queryString,
		success: function(responseText){
			reloadShipmentCommodityData(responseText);
			enableCommoditySectionButtons("All");
			checkClearButton = true;
			$('#statusCode').text(responseText.data.header.statusCode);
			$("#povGrid").trigger('reloadGrid');
			$("#commodityGrid").trigger('reloadGrid');
			$("#convGrid").trigger('reloadGrid');
			// Defect 24735
			// Added code to remove "Shipment cannot be verified" error.
			$("#specialServiceGrid").trigger('reloadGrid');
		}	        
	 });
}
function removeShipmentFreight(){
	var rowIDs = jQuery("#commodityGrid").getDataIDs();
		if(rowIDs == undefined || rowIDs == 'undefined' || rowIDs.length < 1){
		rowIDs = jQuery("#convGrid").getDataIDs();
	}
	
	if(rowIDs != undefined || rowIDs != 'undefined' || rowIDs.length > 0){
		
		for (var i=0;i<rowIDs.length;i=i+1){ 
			$.ajax({
		url : _context +"/shipmentCommodity/actionDelete",
		type : "GET",
		data : {			
			shipmentFreightId: i+1
		},
		success : function(responseText) {
			if(responseText.success==true){
				$("#tariffNumber").val("");
				clearItemCustomerCommodityLSDSChange();
					$('#itemNumber').val("");
					$('#mixCommItem').val("");
					$('#note').val("");
			}
		}
		});
		}
	}
}
function removeShipmentReceivedFreight(){
	var rowIDs = jQuery("#commodityGrid").getDataIDs();
		if(rowIDs == undefined || rowIDs == 'undefined' || rowIDs.length < 1){
		rowIDs = jQuery("#convGrid").getDataIDs();
	}
	
	if(rowIDs != undefined || rowIDs != 'undefined' || rowIDs.length > 0){
		
		 
			$.ajax({
		url : _context +"/shipmentCommodity/removeRecievedFreight",
		type : "GET",
		data : {			
			shipmentFreightId: 1
		},
		success : function(responseText) {
			if(responseText.success==true){
				$("#tariffNumber").val("");
				clearItemCustomerCommodityLSDSChange();
				 $('#commodityDesc').val("");
				 $('#commodityCode').val("");
					$('#itemNumber').val("");
					$('#mixCommItem').val("");
					$('#note').val("");
				$("#containerCommodityDesc").val("");
				//$("#piece").val("");
			}
		}
		});
		
	}
}
function validateCity(selector){
	setRoutingHeader();
	if(selector=='blOriginCity')
	{
		lastBlOriginCode = $('#blOriginCityCode').val();
		lastBlOriginDescription = $('#blOriginCityDescription').val();
		lastBlOriginCodeDescription = $('#blOriginCityCodeDescription').val();
		
		checkPickupCarrier();
		checkPlaceOfReceiptDefaultValue();
		checkOriginPtDefaultValue();
	}
	else if(selector=='originPortCity')
	{
		lastOriginPortCode = $('#originPortCityCode').val();
		lastOriginPortDescription = $('#originPortCityDescription').val();
		lastOriginPortCodeDescription = $('#originPortCityCodeDescription').val();
		
		if($.trim($('#pickupZipCode').val())!='')
			deriveZone('pickup');
		// fetchTradeValue();
		checkOriginPortDefaultValue();
		setDomesticForeignIndicator();
	}
	else if(selector=='destinationPortCity')
	{
		lastDestinationPortCode = $('#destinationPortCityCode').val();
		lastDestinationPortDescription = $('#destinationPortCityDescription').val();
		lastDestinationPortCodeDescription = $('#destinationPortCityCodeDescription').val();
		
		if($.trim($('#deliveryZipCode').val())!='')
			deriveZone('delivery');
		// fetchTradeValue();
		checkDestinationPortDefaultValue();
		checkPlaceOfDeliveryDefaultValue();
	}
	else if(selector=='blDestinationCity')
	{
		lastBlDestinationCode = $('#blDestinationCityCode').val();
		lastBlDestinationDescription = $('#blDestinationCityDescription').val();
		lastBlDestinationCodeDescription = $('#blDestinationCityCodeDescription').val();
		
		checkDeliveryCarrier();
		checkPlaceOfDeliveryDefaultValue();
	}
	
	var queryString = $('#shipmentForm').formSerialize();
	$.ajax({
		url: _context +"/shipment/routing/validateCity?city="+selector,
		type : "POST",
		data : queryString,
		success: function(responseText){
			// D027074
			var trade = responseText.data.trade;
			if(trade && $("#tradeCode").val()!= trade) 
			{
				
				$("#tradeCode").val(trade);
				$("#tradeCodeDesc").html(trade+" - "+responseText.data.tradeDesc);
			}
			
			//changes for D024986
			$("#vvdRoutingGrid").trigger("reloadGrid");
				showResponseMessages('msgDiv', responseText);
				
				if(responseText.success && selector == 'destinationPortCity'){
					//deriveValidateVVD();
				}
					
			}
	});

}
function deriveValidateVVD()
{
	var queryString = $('#shipmentForm').formSerialize();
	$.ajax({
		url: _context +"/shipment/routing/deriveValidateVVD",
		type : "POST",
		data : queryString,
		success: function(responseText){
			$("#vvdRoutingGrid").trigger("reloadGrid");
			showResponseMessages('msgDiv', responseText);
		}
	});
}
function deriveZone(selector)
{
	var portCode = "";
	var zipcode = "";
	var rateDate = isValidDate($('#rateDate').val());
	
	if(selector=='pickup')
	{
		portCode = $('#originPortCityCode').val();
		zipcode = $('#pickupZipCode').val();
	}
	else if(selector=='delivery')
	{
		portCode = $('#destinationPortCityCode').val();
		zipcode = $('#deliveryZipCode').val();
	}
	$.ajax({
		url: _context +"/shipment/routing/deriveZone",
		data : {portCode:portCode, zipcode:zipcode, rateDate: rateDate, selector:selector},
		success: function(responseText){
			if(selector=='pickup')
			{
				$('#pickupZone').val(responseText.data);
				$('#pickupZoneDisplay').html(responseText.data);
			}
			else if(selector=='delivery')
			{
				$('#deliveryZone').val(responseText.data);
				$('#deliveryZoneDisplay').html(responseText.data);
			}
		}
	});
}
/*
 * function validateCity(selector) { var queryString =
 * $('#shipmentForm').formSerialize(); $.ajax({ url: _context
 * +"/shipment/routing/validateCity?city="+selector, type : "POST", data :
 * queryString, success: function(responseText){ showResponseMessages('msgDiv',
 * responseText); setRoutingHeader();
 * 
 * if(selector=='blOriginCity') { lastBlOriginCode =
 * $('#blOriginCityCode').val(); lastBlOriginDescription =
 * $('#blOriginCityDescription').val(); lastBlOriginCodeDescription =
 * $('#blOriginCityCodeDescription').val();
 * 
 * checkPickupCarrier(); checkPlaceOfReceiptDefaultValue();
 * checkOriginPtDefaultValue(); } else if(selector=='originPortCity') {
 * lastOriginPortCode = $('#originPortCityCode').val();
 * lastOriginPortDescription = $('#originPortCityDescription').val();
 * lastOriginPortCodeDescription = $('#originPortCityCodeDescription').val();
 * 
 * checkOriginPortDefaultValue(); setDomesticForeignIndicator(); } else
 * if(selector=='destinationPortCity') { lastDestinationPortCode =
 * $('#destinationPortCityCode').val(); lastDestinationPortDescription =
 * $('#destinationPortCityDescription').val();
 * lastDestinationPortCodeDescription =
 * $('#destinationPortCityCodeDescription').val();
 * 
 * checkDestinationPortDefaultValue(); checkPlaceOfDeliveryDefaultValue(); }
 * else if(selector=='blDestinationCity') checkPlaceOfDeliveryDefaultValue(); }
 * }); }
 */

function validateZip(selector)
{
	if($.trim($('#'+selector+"ZipCode").val())!='')
	{
		var portCode = "";
		var zipcode = "";
		var rateDate = isValidDate($('#rateDate').val());
		
		if(selector=='pickup')
		{
			portCode = $('#originPortCityCode').val();
			zipcode = $('#pickupZipCode').val();
			checkPickupCarrier();
		}
		else if(selector=='delivery')
		{
			portCode = $('#destinationPortCityCode').val();
			zipcode = $('#deliveryZipCode').val();
			checkDeliveryCarrier();
		}
		$.ajax({
			url: _context +"/shipment/routing/deriveZone",
			data : {portCode:portCode, zipcode:zipcode, rateDate: rateDate, selector:selector},
			success: function(responseText){
				showResponseMessages('msgDiv', responseText);
				if(selector=='pickup')
				{
					$('#pickupZone').val(responseText.data);
					$('#pickupZoneDisplay').html(responseText.data);
				}
				else if(selector=='delivery')
				{
					$('#deliveryZone').val(responseText.data);
					$('#deliveryZoneDisplay').html(responseText.data);
				}
				if(responseText.success)
				{
					var queryString = $('#shipmentForm').formSerialize();
					$.ajax({
						url: _context +"/shipment/routing/validateZip?zip="+selector,
						type : "POST",
						data : queryString,
						success: function(responseTextNew){
							showResponseMessages('msgDiv', responseTextNew);
						}
					});
				}
			}
		});
	}
	else
	{
		if(selector=='pickup')
		{
			$('#pickupZone').val('');
			$('#pickupZoneDisplay').html('');
			checkPickupCarrier();
		}
		else if(selector=='delivery')
		{
			$('#deliveryZone').val('');
			$('#deliveryZoneDisplay').html('');
			checkDeliveryCarrier();
		}
	}
}

function setLoadDischargeValuesWithDesc(listData, selector, value)
{
	value = $.trim(value);
	$(selector).children().remove();
	$(selector).append(
			"<option value='' title=''></option>");
	var flag = false;
	$.each(listData, function(intIndex, objValue) {
		if($.trim(objValue.code)==value)
			flag = true;
		$(selector).append($("<option/>", {
			value : $.trim(objValue.code),
			text : $.trim(objValue.code),
			title : $.trim(objValue.code)+"-"+$.trim(objValue.description)
		}));
	});
	if(flag == true)
		$(selector).val(value);
	
	if($(selector+' option:selected').attr("title")!=undefined)
		$(selector).attr("title", $(selector+' option:selected').attr("title"));
	else
		$(selector).attr("title", '');
}

function setLoadDischargeValues(listData, selector, value)
{
	$(selector).children().remove();
	$(selector).append(
			"<option value=''></option>");
	var flag = false;
	$.each(listData, function(intIndex, objValue) {
		if(objValue==value)
			flag = true;
		$(selector).append($("<option/>", {
			value : objValue,
			text : objValue
		}));
	});
	if(flag == true)
		$(selector).val(value);
}

function checkLoadDischargeService(selector)
{
	if(selector=='#originPortCityCodeDescription' && $('#tradeCode').val()=="")
	{
		$(selector).blur();
		alert("Please enter a valid trade");
	}
	else if(selector=='#destinationPortCityCodeDescription' && $('#tradeCode').val()=="")
	{
		$(selector).blur();
		alert("Please enter a valid trade");
	}
	else if(selector=='#pickupZipCode' && $('#originPortCityDescription').val()=='')
	{
		$(selector).blur();
		alert("Please enter port of loading first");
	}
	else if(selector=='#deliveryZipCode' && $('#destinationPortCityDescription').val()=='')
	{
		$(selector).blur();
		alert("Please enter port of discharge first");
	}
}


/*
 * function validateOverride(selector) {alert($('#loadServiceCode
 * :selected').val()); alert($('#pickupZipCode').val());
 * if(selector=='overridePickupCarrierCode' && ($('#loadServiceCode
 * :selected').val()!='DCY' || $('#pickupZipCode').val()=='')) {
 * $("#"+selector).blur(); alert("Override not allowed for pickup"); } else
 * if(selector=='overrideDeliveryCarrierCode' && ($('#dischargeServiceCode
 * :selected').val()!='DCY' || $('#deliveryZipCode').val()=='')) {
 * $("#"+selector).blur(); alert("Override not allowed for delivery"); } }
 */

function validateOnFocus(selector)
{
	if((selector=='#originPortCityCodeDescription' || selector=='#destinationPortCityCodeDescription') && $('#tradeCode').val()=="")
	{
		$(selector).blur();
		alert("Please enter a valid trade");
	}
	else if(selector=='#pickupZipCode' && $('#originPortCityDescription').val()=='')
	{
		$(selector).blur();
		alert("Please enter port of loading first");
	}
	else if(selector=='#deliveryZipCode' && $('#destinationPortCityDescription').val()=='')
	{
		$(selector).blur();
		alert("Please enter port of discharge first");
	}
	else if(selector=='#overridePickupCarrierCode' && $(selector).val()=='' && $('#blOriginCityCode').val()=='' 
		&& $('#loadServiceCode :selected').val()!='DCY' && $('#pickupZone').val()=='')
	{
		$(selector).blur();
		alert("Override not allowed for pickup");
	}
	else if(selector=='#overrideDeliveryCarrierCode' && $(selector).val()=='' && $('#blDestinationCityCode').val()=='' 
		&& $('#dischargeServiceCode :selected').val()!='DCY' && $('#deliveryZone').val()=='')
	{
		$(selector).blur();
		alert("Override not allowed for delivery");
	}
	/*
	 * if(selector=='#destinationPortCityCodeDescription') { var r = confirm("Do
	 * you wish to override existing destination port?"); if(!r){
	 * $(selector).blur(); } }
	 */
	/*
	 * else if(selector=='blOrigin' || selector=='blDestination') {
	 * if($("#"+selector+"CityCode").val()!='' && $('#shipmentId').val()!='') {
	 * $("#"+selector+'CityCodeDescription').attr("readonly", true);
	 * //alert("done"); $.ajax({ url: _context
	 * +"/shipment/routing/validateSpotPull", data :
	 * {cityCode:$("#"+selector+"CityCode").val(),
	 * bookingId:$('#shipmentId').val(), marker:selector}, success:
	 * function(responseText){ showResponseMessages('msgDiv', responseText);
	 * if(responseText.success==false) {
	 * $("#"+selector+'CityCodeDescription').blur(); if(selector=='blOrigin')
	 * $("#"+selector+'CityCodeDescription').val(lastBlOriginCodeDescription);
	 * else if(selector=='blDestination')
	 * $("#"+selector+'CityCodeDescription').val(lastBlDestinationCodeDescription); }
	 * 
	 * $("#"+selector+'CityCodeDescription').attr("readonly", false); } }); } }
	 */
}

//D027141
/*function validateOnKeyDown(evt, selector)
{
	var keyCode = event.keyCode;
	
	if(keyCode==32 || (48<=keyCode && keyCode<=57)
			|| (65<=keyCode && keyCode<=90) || (96<=keyCode && keyCode<=107) 
			|| (109<=keyCode && keyCode<=111))
	{
		if(selector=='#overridePickupCarrierCode' && $(selector).val()=='' && $('#blOriginCityCode').val()=='' 
			&& $('#loadServiceCode :selected').val()!='DCY' && $('#pickupZone').val()=='')
		{
			$(selector).blur();
			alert("Override not allowed for pickup");
		}
	}
}*/
//D026558
function validateOnKeyDown(evt, selector)
{
var keyCode = event.keyCode;
	
	if(keyCode==32 || (48<=keyCode && keyCode<=57)
			|| (65<=keyCode && keyCode<=90) || (96<=keyCode && keyCode<=107) 
			|| (109<=keyCode && keyCode<=111))
	{
	if(selector=='#vessel')
	{
	$('#voyage').val('') ;
	$('#direction').val('');
	}
	}
}

function validateOnClick(selector){
	if(selector=='#destinationPortCityCodeDescription' && $('#destinationPortCityCodeDescription').val()!='')
	{
		var r = confirm("Do you wish to override existing destination port?");
		if(!r){
			$(selector).blur();
		}
	}
}
function originPortCityChangeFunction(loadPortCode)
{	
	if($('#shipmentId')!='')
	{
		var tradeCode = $('#tradeCode').val();
		var direction = $('#direction').val();
		$.ajax({
			url: _context +"/shipment/routing/validateUpdateOriginPort",
			data : {originPortCityCode:loadPortCode, tradeCode:tradeCode, direction:direction},
			success: function(responseText){
				showResponseMessages('msgDiv', responseText);
				if(responseText.success==false)
				{
					// showResponseMessages('msgDiv', responseText);
					$('#originPortCityCode').val(lastOriginPortCode);
					$('#originPortCityDescription').val(lastOriginPortDescription);
					$('#originPortCityCodeDescription').val(lastOriginPortCodeDescription);
				}
				else
					validateCity('originPortCity');
			}
		});
	}
	else
		validateCity('originPortCity');
}

function destinationPortCityChangeFunction(dischargePortCode)
{
	if($('#shipmentId').val()!='')
	{
		$.ajax({
			url: _context +"/shipment/routing/validateUpdateDestinationPort?dischargePortCode="+dischargePortCode,
			success: function(responseText){
				if(responseText.success)
					validateCity('destinationPortCity');
				else
				{
					var r = confirm("Received units exist for shipment. Override existing destination port?");
					if(r)
						validateCity('destinationPortCity');
					else
						setOrginalDestValues();
				}
			}
		});
	}
	else
		validateCity('destinationPortCity');
}


function setOrginalDestValues()
{
	$('#destinationPortCityCode').val(lastDestinationPortCode);
	$('#destinationPortCityDescription').val(lastDestinationPortDescription);
	$('#destinationPortCityCodeDescription').val(lastDestinationPortCodeDescription);
	$('#destinationPortCityCodeDescription').blur();
}

function resetOriginalOrgValues()
{
	lastOriginPortCode = "";
	lastOriginPortDescription = "";
	lastOriginPortCodeDescription = "";
	checkPlaceOfReceiptDefaultValue();
	checkOriginPortDefaultValue();
	setDomesticForeignIndicator();
	
	setRoutingHeader();
}

function resetOriginalDestValues()
{
	if($('#shipmentId').val()!='')
	{
		$.ajax({
			url: _context +"/shipment/routing/validateUpdateDestinationPort?dischargePortCode="+item.cityCode,
			success: function(responseText){
				if(responseText.success)
				{
					$('#msgDiv').html('');
					lastDestinationPortCode = "";
					lastDestinationPortDescription = "";
					lastDestinationPortCodeDescription = "";
				}
				else
				{
					$('#msgDiv').html('<div class="message_error">Destination Port cannot be updated as received units exist for shipment</div>');
					window.scrollTo(0, 0);
					setOrginalDestValues();
				}
				checkDestinationPortDefaultValue();
				checkPlaceOfDeliveryDefaultValue();
				
				setRoutingHeader();
			}
		});
	}
	else
	{
		lastDestinationPortCode = "";
		lastDestinationPortDescription = "";
		lastDestinationPortCodeDescription = "";
		
		checkDestinationPortDefaultValue();
		checkPlaceOfDeliveryDefaultValue();
		
		setRoutingHeader();
	}
}

function validateForPositiveIntegers(value) {
	var re = new RegExp("^[0-9]+$");
	if (value<=0) {
		return false;
	} else if (!re.test(value)) {
		return false;
	} else {
		return true;
	}
}

function setRoutingHeader()
{
	var displayText = "";
	
	var loadService = "";
	if($('#loadServiceCode :selected').val()!='')
		loadService = " - " + $('#loadServiceCode option:selected').text();
	var dischargeService = "";
	if($('#dischargeServiceCode :selected').val()!='')
		dischargeService = " - " + $('#dischargeServiceCode option:selected').text();
	
	var cities = "";
	if($('#blOriginCityCodeDescription').val()!='')
		cities = $('#blOriginCityCode').val();
	if($('#originPortCityCodeDescription').val()!='')
	{
		if(cities=='')
			cities = $('#originPortCityCode').val();
		else
			cities = cities + " - " + $('#originPortCityCode').val();
	}
	if($('#destinationPortCityCodeDescription').val()!='')
	{
		if(cities=='')
			cities = $('#destinationPortCityCode').val();
		else
			cities = cities + " - " + $('#destinationPortCityCode').val();
	}
	if($('#blDestinationCityCodeDescription').val()!='')
	{
		if(cities=='')
			cities = $('#blDestinationCityCode').val();
		else
			cities = cities + " - " + $('#blDestinationCityCode').val();
	}
	if(cities!='')
		cities = " | " + cities;
	
	var vvd = "";
	if($('#vessel').val()!=''){
			getIsBillingVoyage();
			if(isBillingVoyageVVD!="" && isBillingVoyageVVD!=null){
				vvd=" | "+isBillingVoyageVVD;
			}else{
				vvd = " | " + $('#vessel').val() + " " + $('#voyage').val() + " " + $('#direction').val();
			}
		
	}
	
	var sailDate = "";
	if($('#sailDate').val()!="")
		sailDate = " | " + $('#sailDate').val();
	
	var truckerInfo = "";//D028625
	if($('#overridePickupCarrierCode').val()!=""){
		truckerInfo = " | "+$('#overridePickupCarrierCode').val();
		if($('#overrideDeliveryCarrierCode').val()!="")
			truckerInfo = truckerInfo+" - "+$('#overrideDeliveryCarrierCode').val();
	}else{
		if($('#overrideDeliveryCarrierCode').val()!="")
			truckerInfo = " | - "+$('#overrideDeliveryCarrierCode').val();
	}
	
	displayText = loadService + dischargeService + cities + vvd+ sailDate+ truckerInfo;
	setAccordianTabDetails('routingHeader', displayText);	
}

function validateRoutingFieldsOnSave()
{
	var isValid = true;
	
	/*
	 * if($('#bookingStatusCode :selected').val()=='APPR') {
	 */
		if($('#loadServiceCode :selected').val()=='')
		{
			if(!$('#maintainShipmentRouting').is(':visible'))
				expandRoutingDiv();
			$('#loadServiceCode').validationEngine('showPrompt', 'Load Service is required', 'error', 'topRight', true);
			isValid = false;
		}
		
		if($('#dischargeServiceCode :selected').val()=='')
		{
			if(!$('#maintainShipmentRouting').is(':visible'))
				expandRoutingDiv();
			$('#dischargeServiceCode').validationEngine('showPrompt', 'Discharge service is required', 'error', 'topRight', true);
			isValid = false;
		}
		
		if($('#originPortCityCode').val()=='' || $('#originPortCityCodeDescription').val()=='')
		{
			if(!$('#maintainShipmentRouting').is(':visible'))
				expandRoutingDiv();
			$('#originPortCityCodeDescription').validationEngine('showPrompt', 'Origin Port is required', 'error', 'topRight', true);
			isValid = false;
		}
		
		if($('#destinationPortCityCode').val()=='' || $('#destinationPortCityCodeDescription').val()=='')
		{
			if(!$('#maintainShipmentRouting').is(':visible'))
				expandRoutingDiv();
			$('#destinationPortCityCodeDescription').validationEngine('showPrompt', 'Destination Port is required', 'error', 'topRight', true);
			isValid = false;
		}
		
		if($('#vessel').val()=='' && $('#voyage').val()=='' && $('#direction').val()=='')
		{
			if(!$('#maintainShipmentRouting').is(':visible'))
				expandRoutingDiv();
			$('#vvdLabel').validationEngine('showPrompt', 'VVD is required', 'error', 'topRight', true);
			isValid = false;
		}
	// }
	
	if(($('#vessel').val()=='' || $('#voyage').val()=='' || $('#direction').val()=='')
			&& ($('#vessel').val()!='' || $('#voyage').val()!='' || $('#direction').val()!=''))
	{
		if(!$('#maintainShipmentRouting').is(':visible'))
			expandRoutingDiv();
		$('#vvdLabel').validationEngine('showPrompt', 'VVD is invalid', 'error', 'topRight', true);
		isValid = false;
	}
	return isValid;
}

function expandRoutingDiv()
{
	collapseAll();
	window.scrollTo(0, 0);
	$('#maintainShipmentRouting').css('display', 'block');
	// $('#routingLink').trigger('click');
}

function setDomesticForeignIndicator()
{
	if($('#tradeCode').val()!='')
	{
		if($('#tradeCode').val()=='G' || $('#tradeCode').val()=='M')
		{
			domesticForeignIndicator =  "international";
			
			checkDestinationPortDefaultValue();
			checkPlaceOfDeliveryDefaultValue();
			checkOriginPtDefaultValue();
			checkIssuePtDefaultValue();
		}
		else if($('#tradeCode').val()=='F')
		{
			if($('#originPortCityCode').val()=='')
			{
				domesticForeignIndicator =  'none';
				
				checkDestinationPortDefaultValue();
				checkPlaceOfDeliveryDefaultValue();
				checkOriginPtDefaultValue();
				checkIssuePtDefaultValue();
			}
			else
			{
				$.ajax({
					url: "/gates/shipment/routing/validateChinaTrade?cityCode="+$('#originPortCityCode').val(),
					success: function(responseText){
						if(responseText.data=="Y")
							domesticForeignIndicator =  "china";
						else
							domesticForeignIndicator = "international";
						
						checkDestinationPortDefaultValue();
						checkPlaceOfDeliveryDefaultValue();
						checkOriginPtDefaultValue();
						checkIssuePtDefaultValue();
					}
				});
			}
		}
		else
		{
			domesticForeignIndicator = "domestic";
			
			checkDestinationPortDefaultValue();
			checkPlaceOfDeliveryDefaultValue();
			checkOriginPtDefaultValue();
			checkIssuePtDefaultValue();
		}
	}
	else
	{
		domesticForeignIndicator = 'none';
		
		checkDestinationPortDefaultValue();
		checkPlaceOfDeliveryDefaultValue();
		checkOriginPtDefaultValue();
		checkIssuePtDefaultValue();
	}
	
	// edi load/discharge service only for china
	if(domesticForeignIndicator == 'china' ){
		$('#ediServiceTypeHeader').show();
	} else {
		$('#ediServiceTypeHeader').hide();
	}
	
}
	function setRoutingDiv() {
		//var displayText = "Routing VVD";
		var displayText = "";
		var loadService = "";
		if ($('#loadServiceCode :selected').val() != '')
			loadService = " - " + $('#loadServiceCode option:selected').text();
		var dischargeService = "";
		if ($('#dischargeServiceCode :selected').val() != '')
			dischargeService = " - "
					+ $('#dischargeServiceCode option:selected').text();

		var cities = "";
		if ($('#blOriginCityCodeDescription').val() != '')
			cities = $('#blOriginCityCode').val();
		if ($('#originPortCityCodeDescription').val() != '') {
			if (cities == '')
				cities = $('#originPortCityCode').val();
			else
				cities = cities + " - " + $('#originPortCityCode').val();
		}
		if ($('#destinationPortCityCodeDescription').val() != '') {
			if (cities == '')
				cities = $('#destinationPortCityCode').val();
			else
				cities = cities + " - " + $('#destinationPortCityCode').val();
		}
		if ($('#blDestinationCityCodeDescription').val() != '') {
			if (cities == '')
				cities = $('#blDestinationCityCode').val();
			else
				cities = cities + " - " + $('#blDestinationCityCode').val();
		}
		if (cities != '')
			cities = " | " + cities;

		var vvd = "";
		if ($('#vessel').val() != '')
			vvd = " | " + $('#vessel').val() + " " + $('#voyage').val() + " "
					+ $('#direction').val();
		
		//added for Defect D017889
		var sailDate = "";
		if($('#sailDate').val()!="")
		sailDate = " | " + $('#sailDate').val();
		
		var truckerInfo = "";//D028625
		if($('#overridePickupCarrierCode').val()!=""){
			truckerInfo = " | "+$('#overridePickupCarrierCode').val();
			if($('#overrideDeliveryCarrierCode').val()!="")
				truckerInfo = truckerInfo+ " - "+$('#overrideDeliveryCarrierCode').val();
		}else{
			if($('#overrideDeliveryCarrierCode').val()!="")
				truckerInfo = " | - "+$('#overrideDeliveryCarrierCode').val();
		}
		
		
		displayText = loadService + dischargeService + cities + vvd+ sailDate+ truckerInfo;
		setAccordianTabDetails('routingHeader', displayText);
	}

	function getIsBillingVoyage(){
		shipmentId=$('#shipmentId').val();
				
		$.ajax({
			
			async: false,
			url: _context +"/shipment/routing/getIsBillingVoyage",
			type: "GET",
			data:{shipmentId:shipmentId},
			success: function(responseText){
				if(responseText.data!=null || responseText.data!="")
				{
					isBillingVoyageVVD=responseText.data;
				}
				else
				{
					isBillingVoyageVVD="";
				}
			}
		});
	}
	
function carrierCodeSearchUpdate(id){
	var values = id.split("|");
	if(values[1] == 'O' && $('#overridePickupCarrierCode').attr('disabled') != 'disabled'){
		$('#overridePickupCarrierCode').val(values[0]);
	} else if($('#overrideDeliveryCarrierCode').attr('disabled') != 'disabled') {
		$('#overrideDeliveryCarrierCode').val(values[0]);
	}
};var lastChangeSource = "";

$(function() {

	$('#selectButtonDiv').hide();
	$('#vvdChangeAuthPartyCode').attr('disabled', true);
	
	
	$('#vvdChangeAuthPartyCode').change(
	   function()
	   {
		   var vvd = $('#vessel').val()+$('#voyage').val()+$('#direction').val();
		   if(vvd=='' & $('#vvdChangeAuthPartyCode :selected').val()!='')
		   {
			   $('#vvdChangeAuthPartyCode').val('');
			   $('#msgDiv').html('<div class="message_error">Change Source not allowed</div>');
			   window.scrollTo(0, 0);
		   }
		   else
		   {
			   $.ajax({
					url : _context +"/shipment/routing/validateChangeSource",
					data : {changeSource:$('#vvdChangeAuthPartyCode :selected').val(), vvd:vvd},
					success : function(responseText) {
						showResponseMessages('msgDiv', responseText);
						if(!responseText.success)
					   {
						   $('#vvdChangeAuthPartyCode').val(lastChangeSource);
						  // showResponseMessages('msgDiv', responseText);
					   }
						else
							lastChangeSource = $('#vvdChangeAuthPartyCode :selected').val();
					}
			   });
		   }
	   });
	
	   
	 $('#vessel').keypress(function(){
		 setTimeout(function(){
			 var len=$('#vessel').val().length;
			 if(len>2)
				 {				 	 
					 $('#voyage').focus();	
					 $('#voyage').select();
				 }	 
		 },100);
		 			
	 });
	 $('#voyage').keypress(function(){
		 setTimeout(function(){
			 var len=$('#voyage').val().length;
			 if(len>2)
				 {
				 	$('#direction').focus();
				 	$('#direction').select();
				 }
		 },100);
	 });
	  $('#direction').keypress(function(){
		  setTimeout(function(){
			 var len=$('#direction').val().length;
			 if(len>0)
				 {
				 	$('#magVVD').focus();
				 }
		  },100);
	 }); 
	
});

function createVVDSearchGrid(filter)
{
	var colNames = [ 'Trip Seq No', 'Voyage', 'Sail Date', 'Arrival Date', 'Cutoff Date'];
	
	var colModel = [ {
		name : 'tripSeqNo',
		hidden : true
	}, {
		name : 'voyageString',
		width : 300,
		align : 'center',
		formatter : 'showlink',
		formatoptions : {
			baseLinkUrl : "javascript:",
			showAction : "selectTrip('",
			addParam : ", filter="+filter+"');"
		}
	}, {
		name : 'dateOfDeparture',
		align : 'center',
		width : 200
	}, {
		name : 'dateOfArrival',
		align : 'center',
		width : 200
	}, {
		name : 'cutOffdate',
		align : 'center',
		width : 200
	}];
	

	var jsonReader = {
		root : "rows",
		page : "page",
		total : "total",
		records : "records",
		cell : "cell",
		repeatitems : false,
		id : "tripSeqNo"
	};

	createGrid("vvdResultGrid", // grid id for vvd Results
	"vvdResultPager", // page id for party
	_context+'/shipment/routing/loadSearchResults', // geturl
	'', // addurl
	'', // edit url
	'', //delete url
	'',// delete selected URL
	colNames, colModel, "Search Results",// caption
	232,// height
	10,// row num
	[ 10, 20, 30 ],// row list
	false,// multiselect
	false,// multidelete
	false,// load once
	true, // read only grid
	jsonReader, // json reader
	true, // hide edit
	true, // hide delete
	false, // autowidth
	false, // rownumbers
	true, // hide custom add row
	false,// hide pager row
	null,// custom edit method
	null,// custom grid complete
	null,// custom load complete
	false,// default hidden
	true);// row Color Based On status

}

function selectTrip(params)
{
	blockUI();
	var seqNo = params.split(',')[0].split('=')[1];
	var filter = params.split(',')[1].split('=')[1];
	$.ajax({
		url : _context +"/shipment/routing/validateSailDate?tripSeqNo="+seqNo,
		success : function(responseText) {
			if(responseText.success)
			{
				if(filter=='routing'){
					showSelectedTripInRouting(seqNo);
				}
				else if(filter=='wiredown'){
					showSelectedVVDInWiredown(seqNo);
				}
				else if(filter=='freight'){
					showSelectedVVDInFreight(seqNo);
				} else {
					$.unblockUI();
				}
				saveBillBeforeBillButton  = true;
			}
			else
			{
				if(responseText.data=='Sail')
				{
					/*var r = confirm("Sail Date for this VVD has Already Passed. Select?");
					if(r)*/
					{
						if(filter=='routing'){
							showSelectedTripInRouting(seqNo);
						}
						else if(filter=='wiredown'){
							showSelectedVVDInWiredown(seqNo);
						}
						else if(filter=='freight'){
							showSelectedVVDInFreight(seqNo);
						} else {
							$.unblockUI();
						}
						saveBillBeforeBillButton  = true;
					} 
				}
				else
				{
					alert("An error has occurred while selecting vvd");
					$.unblockUI();
				}
			}
		}
	});
}

function showSelectedTripInRouting(seqNo){
	
	var queryString =$('#shipmentForm').formSerialize();
	
	$.ajax({
		url : _context +"/shipment/routing/selectTrip?tripSeqNo="+seqNo,
		type: "POST",
		data:queryString,
		success : function(responseText) {
			if(responseText.success)
			{
				$("#vvdRouting").loadJSON(responseText.data);
				$("#vvdRoutingGrid").setGridParam({rowNum : 3, datatype : "json"}).trigger("reloadGrid");
				$("#vvdSearchDialog").dialog('close');
				if(domesticForeignIndicator!='china')
				{
					$('#overrideInitialLtvDateDefaultvalue').val('');
					$('#overrideInitialLtvDate').val($('#overrideInitialLtvDateDefaultvalue').val());
					$('#overrideInitialLtvDate').css('color','black');
					$('#isOverrideInitialLtvDate').attr("checked", false);
				}

				else if(!$('#isOverrideInitialLtvDate').is(':checked'))
				{
					$('#overrideInitialLtvDateDefaultvalue').val(responseText.data.defaultSailDate);
					$('#overrideInitialLtvDate').val($('#overrideInitialLtvDateDefaultvalue').val());
					$('#overrideInitialLtvDate').css('color','black');
					$('#isOverrideInitialLtvDate').attr("checked", false);
				}
				checkVVDVesselDefaultValue();
				checkVVDVoyageDefaultValue();
				checkIssuePtDefaultValue();
				populateDomesticRoutingExportInstructions();
				setRoutingHeader();
				
			}
			else {
				alert("An error has occurred while selecting vvd");
			}
			$.unblockUI();
		}
	});
}

function showSelectedVVDInFreight(seqNo){
	$.ajax({
		url : _context +"/shipment/routing/selectTripBySeqNo",
		data : {tripSeqNo : seqNo},
		success : function(responseText) {
			if(responseText.success)
			{
				$("#bkdVessel").val(responseText.data.vessel);
				$("#bkdVoyage").val(responseText.data.voyage);
				$("#bkdDirection").val(responseText.data.direction);
				$("#bookedForVVDSeqNo").val(seqNo);
				$("#vvdSearchDialog").dialog('close');
			}
			else
			{
				$("#bookedForVVDSeqNo").val("");
				alert(responseText.messages.error[0]);
			}
			$.unblockUI();
		}
	});
}

function showSelectedVVDInWiredown(seqNo) {
	$.ajax({
		url : _context +"/wiredownMaintenance/selectTrip?tripSeqNo=" + seqNo,
		data : {changeSource : $("#vvdChangeAuthPartyCode :selected").val()},
		success : function(responseText) {
			if(responseText.success)
			{
				$("#vvdRouting").loadJSON(responseText.data.routing);
				$("#vvdRoutingGrid").setGridParam({rowNum : 3, datatype : "json"}).trigger("reloadGrid");
				
	              
				$("#vvdSearchDialog").dialog('close');
			}
			else
			{
				alert(responseText.messages.error[0]);
			}
			$.unblockUI();
		}
	});
}

function processChangeSource()
{
	if($('#bookingStatusCode').val()=='INCP')
		$('#vvdChangeAuthPartyCode').attr('disabled', false);
	else
		lastChangeSource = $('#vvdChangeAuthPartyCode :selected').val();
}

function validateVVD()
{
	 $("#vessel").val(($("#vessel").val()).toUpperCase()); 
	 $("#direction").val(($("#direction").val()).toUpperCase()); 
	
	if($('#vessel').val()=='' || $('#voyage').val()=='' || $('#direction').val()=='')
	{
		$.ajax({
			url: _context +"/shipment/routing/removeVVD",
			success: function(responseText){
				$("#originalVVD").loadJSON(responseText);
				//$("#vvdCutOff").loadJSON(responseText);
				$("#vvdRoutingGrid").trigger("reloadGrid");
				$('#vvdChangeAuthPartyCode').val('');
				lastChangeSource = "";
				checkVVDVesselDefaultValue();
				checkVVDVoyageDefaultValue();
				checkIssuePtDefaultValue();
				//populateDomesticRoutingExportInstructions();
				setRoutingHeader();
			}
		});
	}
	else if($('#originPortCityCode').val()=='' || $('#destinationPortCityCode').val()=='')
	{
		alert("Please select Port of Loading and Port of Discharge first");
		clearVVD();
	}
	else
	{ clearAllMessage();
	 blockUI();
		$.ajax({
			url: _context +"/shipment/routing/validateVVDandItinerary",
			async: false,
			data: {vessel: $('#vessel').val(), voyage: $('#voyage').val(), direction: $('#direction').val(),originPort: $('#originPortCityCode').val(),
				destinationPort: $('#destinationPortCityCode').val()},
			success: function(responseText){
				showResponseMessages('msgDiv', responseText);
				if(responseText.success)
					validateSailDate();
				else
				{
					clearVVD();
				}
				//unblockUI();
			}
		});
	$.unblockUI();
	}
}

function clearVVD()
{
	$.ajax({
		url: _context +"/shipment/routing/removeVVD",
		success: function(responseText){
			$("#vvdRouting").loadJSON(responseText);
			lastChangeSource = "";
			//$("#vvdCutOff").loadJSON(responseText);
			$("#vvdRoutingGrid").setGridParam({rowNum : 3, datatype : "json"}).trigger("reloadGrid");
			checkVVDVesselDefaultValue();
			checkVVDVoyageDefaultValue();
			checkIssuePtDefaultValue();
			//populateDomesticRoutingExportInstructions();
			setRoutingHeader();
		}
	});
}
function poulateVVDLegs()
{
	blockUI();
	$.ajax({
		url: _context +"/shipment/routing/getItinerary",
		//data: {vessel: $('#vessel').val(), voyage: $('#voyage').val(), direction: $('#direction').val(), originPort: $('#originPortCityCode').val(), destinationPort: $('#destinationPortCityCode').val()},
		success: function(responseText){
			showResponseMessages('msgDiv', responseText);
			$("#vvdRouting").loadJSON(responseText.data);
			//$("#vvdCutOff").loadJSON(responseText.data);
			$("#vvdRoutingGrid").trigger("reloadGrid");
			checkVVDVesselDefaultValue();
			checkVVDVoyageDefaultValue();
			checkIssuePtDefaultValue();
			populateDomesticRoutingExportInstructions();
			setRoutingHeader();
			/*if(responseText.success)
				$("#vvdChangeAuthPartyCode").val(lastChangeSource);
			else
				lastChangeSource = "";*/
			$.unblockUI();
		}
	});
}
function validateSailDate()
{
	$.ajax({
		url: _context +"/shipment/routing/validateSailDateForVVD",
		data: {vessel: $('#vessel').val(), voyage: $('#voyage').val(), direction: $('#direction').val(), originPort: $('#originPortCityCode').val(), destinationPort: $('#destinationPortCityCode').val()},
		success: function(responseText){
			if(responseText.success)
				poulateVVDLegs();
			else
			{
				/*var r = confirm("Sail Date for this VVD has Already Passed. Select?");
				if(r)*/
					poulateVVDLegs();
				/*else				
					clearVVD();*/
			}
		}
	});
};$(function() {
	   $('#availabilityDate').datepicker({ dateFormat: 'mm-dd-yy',minDate:-90, maxDate:"+270D" });
	   $('#deliveryDate').datepicker({ dateFormat: 'mm-dd-yy',minDate:-90, maxDate:"+270D" });
	   
	   $('#searchVVDButton').click(function()
	   {
		   if(validateSearchVVDFields())
		   {
			   var queryString = $('#vvdSearchForm').formSerialize();
			   $.ajax({
					url: _context +"/shipment/routing/searchTrip",
					data: queryString,
					type:'POST',
					success: function(responseText){
						if(responseText.success==true)
						{
							$("#vvdResultGrid").setGridParam({rowNum : 10, datatype : "json"}).trigger("reloadGrid");
							$("#vvdResultGridDiv").show();
							$("#vvdSearchDialog").dialog({height: 730});
						}
						else
							alert(responseText.messages.error[0]);
					}
				});
		   }
	});
	   
	 //Hiding vvd_search.jsp on initial display
		$("#vvdSearchDialog").hide();
       
  });

function createVVDSearchDialog(filter){
	//alert("createVVDSearchDialog: " + filter);
	$("#vvdSearchDialog").dialog({
		autoOpen : false,
		width : 990,
		modal : true,
		title: "Search VVD",
		open : function()
		{
			$("#vvdSearchDialog").dialog({height: 400});
			$("#vvdSearchForm").clearForm();
			$('#duration').val("30");
			$("#vvdResultGridDiv").hide();
			$('#vvdSearchForm').validationEngine('attach');
			createVVDSearchGrid(filter);
		},
		close : function() {
			$('#vvdResultGrid').jqGrid('GridUnload');
		},
		buttons:{
			Cancel:function()
			{
				$('#vvdSearchForm').validationEngine('detach');
				$("#vvdSearchDialog").dialog('close');
			},
			"Export To Excel":function()
			{
				var link = document.createElement("a");    
				link.id="vvdGridExport";
				$("#vvdSearchDialog").append(link);
				jQuery("#vvdGridExport").attr({
				    'download': "VVD_Search_Results",
				    'href': _context+ "/shipment/routing/vvdGridExport"
				}); 
				jQuery('#vvdGridExport')[0].click();    
				$("#vvdSearchDialog").remove(link);
			}
		}
	});
}

function validateSearchVVDFields()
{
	if($("#searchCriteria:checked").val()==undefined)
	{
		$("#searchCriteria").validationEngine('showPrompt', 'Please select a search criteria', 'error', true);
		return false;
	}
	else if($("#searchCriteria:checked").val()=='A' && ($('#availabilityDate').val()==null || $('#availabilityDate').val()==''))
	{
		$("#availabilityDate").validationEngine('showPrompt', 'Please enter arrival cutt off date', 'error', true);
		return false;
	}
	else if($("#searchCriteria:checked").val()=='D' && ($('#deliveryDate').val()==null || $('#deliveryDate').val()==''))
	{
		$("#deliveryDate").validationEngine('showPrompt', 'Please enter delivery cutt off date', 'error', true);
		return false;
	}
	else
		return true;
}

function openSearchVVD(filter)
{
	//alert("openSearchVVD: " + filter);
	if(!($("#statusCode").text()=='ISSUED' || $("#statusCode").text()=='CORRECTED' || isRoutingModifiable==false)){
	if($('#originPortCityCodeDescription').val()!='' && $('#destinationPortCityCodeDescription').val()!='')
	{
		$.ajax({
			url: _context +"/shipment/routing/showSearchForm",
			data:{pol:$('#originPortCityCode').val(), pod:$('#destinationPortCityCode').val()},
			success: function(responseText){
				createVVDSearchDialog(filter);
				$("#vvdSearchDialog").dialog('open');
				$("#vvdSearchForm").loadJSON(responseText);
			}
		});
	}
	else
		alert("VVD cannot be selected as Origin and Destination Port not present.");
	}
};$(function() {

	$('#overrideReset').click(
			function(){
				resetBookingOverrides();
			});
	
	$('.unchangeable').change(function()
	{
		if($(this).attr("checked"))
			$(this).attr("checked", false);
		else
			$(this).attr("checked", true);
	});
	
	
	/*Blur functions*/
	
	$('#overrideBlOrigin').change(
			function ()
			{
				if($('#overrideBlOrigin').val()!='')
					validateDefaults('blOrigin');
				else
				{
					setPlaceOfReceiptDefaultValue();
					$('#isOverrideBlOrigin').attr("checked", false);
					$('#overrideBlOrigin').css('color','black');
					checkOriginPtDefaultValue();
					setOverridesHeader();
				}
			});
	
	$('#overrideOriginPort').change(
			function ()
			{
				if($('#overrideOriginPort').val()!='')
					validateDefaults('originPort');
				else
				{
					setOriginPortDefaultValue();
					$('#isOverrideOriginPort').attr("checked", false);
					$('#overrideOriginPort').css('color','black');
					checkOriginPtDefaultValue();
					setOverridesHeader();
				}
			});
	
	$('#overrideDestinationPort').change(
			function ()
			{
				if($('#overrideDestinationPort').val()!='')
					validateDefaults('destinationPort');
				else
				{
					setDestinationPortDefaultValue();
					$('#isOverrideDestinationPort').attr("checked", false);
					$('#overrideDestinationPort').css('color','black');
					checkPlaceOfDeliveryDefaultValue();
					setOverridesHeader();
				}
			});
	
	$('#overrideBlDestination').change(
			function ()
			{
				if($('#overrideBlDestination').val()!='')
					validateDefaults('blDestination');
				else
				{
					setPlaceOfDeliveryDefaultValue();
					//D030250
					var isHawaiiTrade = '';
					if(domesticForeignIndicator == 'china' ){
						$.ajax({
							url: _context +"/shipment/routing/checkIfHawaiiTrade?cityCode="+$('#destinationPortCityCode').val(),
							async: false,
							success: function(responseText){
								isHawaiiTrade = responseText;
							}
						});
					}
					
					if(domesticForeignIndicator == 'china' && isHawaiiTrade == 'Y'){
						if(!$('#isOverrideDestinationPort').attr("checked")){
							$('#isOverrideBlDestination').attr("checked", false);
							$('#overrideBlDestination').css('color','black');
						}
					} else {
						$('#isOverrideBlDestination').attr("checked", false);
						$('#overrideBlDestination').css('color','black');
					}
					setOverridesHeader();
				}
				
			});
	
	$('#overrideCustomsVesselName').change(
			function ()
			{
				if($('#overrideCustomsVesselName').val()!='')
					validateDefaults('vessel');
				else
				{
					setVVDVesselDefaultValue();
					$('#isOverrideCustomsVesselName').attr("checked", false);
					$('#overrideCustomsVesselName').css('color','black');
					setOverridesHeader();
				}
				
			});
	
	$('#overrideVoyageDirectionSeq').change(
			function ()
			{
				if($('#overrideVoyageDirectionSeq').val()!='')
					validateDefaults('voyageDir');
				else
				{
					setVVDVoyageDefaultValue();
					$('#isOverrideVoyageDirectionSeq').attr("checked", false);
					$('#overrideVoyageDirectionSeq').css('color','black');
					setOverridesHeader();
				}
				
			});
	
	$('#countryOfOrigin').change(
			function ()
			{
				if($('#countryOfOrigin').val()!=''){
					var upperCountry=$('#countryOfOrigin').val();
					$('#countryOfOrigin').val(upperCountry.toUpperCase());
					validateDefaults('originCountry');
					}
				else
				{
					setOriginPtDefaultValue();
					$('#isOverrideCountryOfOrigin').attr("checked", false);
					$('#countryOfOrigin').css('color','black');
					setOverridesHeader();
				}
			});
	
	
	$('#overrideInitialVesselName').change(
			function ()
			{
				if($('#overrideInitialVesselName').val() !='')
				{
					$('#isOverrideInitialVesselName').attr("checked", true);
					$('#overrideInitialVesselName').css('color','green');
					setOverridesHeader();
					
				}
				else
				{
					$('#isOverrideInitialVesselName').attr("checked", false);
					$('#overrideInitialVesselName').css('color','black');
					setOverridesHeader();
				}
			});
	
	$('#overridePlaceOfIssue').change(
			function ()
			{
				if($('#overridePlaceOfIssue').val()!='')
					validateDefaults('issuePlace');
				else
				{
					setIssuePtDefaultValue();
					$('#isOverridePlaceOfIssue').attr("checked", false);
					$('#overridePlaceOfIssue').css('color','black');
					setOverridesHeader();
				}
				
			});
	
	$('#overrideInitialLtvDate').change(
			function ()
			{
				if($('#overrideInitialLtvDate').val() == $('#overrideInitialLtvDateDefaultvalue').val())
				{
					$('#isOverrideInitialLtvDate').attr("checked", false);
					//$('#overrideInitialLtvDate').val('01-01-0001');
					$('#overrideInitialLtvDate').css('color','black');
				}
				else if($('#overrideInitialLtvDate').val() =='01-01-0001'){
					$('#isOverrideInitialLtvDate').attr("checked", false);
					$('#overrideInitialLtvDate').css('color','black');
				}
				else{
					if($('#overrideInitialLtvDate').val() !='')
					$('#isOverrideInitialLtvDate').attr("checked", true);
					$('#overrideInitialLtvDate').css('color','green');
				}
					
				setOverridesHeader();
			});
	
	$('#overrideRouteInstruction').change(
			function ()
			{
				if($('#overrideRouteInstruction').val()!='')
					changeTextColour();
				else
					$('#overrideRouteInstruction').css('color','black');
				setOverridesHeader();
			});
	if(!$('#isOverrideInitialLtvDate').attr("checked")){
	if($('#overrideInitialLtvDateDefaultvalue').val()!=""){
	$('#overrideInitialLtvDate').val($('#overrideInitialLtvDateDefaultvalue').val());
	}
	}
	//$('#overrideInitialLtvDate').val('01-01-0001');
	$('#overridePlaceOfIssue').attr('disabled', true);
	 /*     setOriginPortDefaultValue();
	 $('#overrideOriginPort').trigger('blur');
	$('#overrideDestinationPort').trigger('blur');*/
	
});

function resetBookingOverrides()
{
	$('#isOverrideBlOrigin').attr("checked", false);
	$('#isOverrideOriginPort').attr("checked", false);
	$('#isOverrideDestinationPort').attr("checked", false);
	$('#isOverrideBlDestination').attr("checked", false);
	$('#isOverrideCustomsVesselName').attr("checked", false);
	$('#isOverrideVoyageDirectionSeq').attr("checked", false);
	$('#isOverrideCountryOfOrigin').attr("checked", false);
	$('#isOverridePlaceOfIssue').attr("checked", false);
	$('#isOverrideInitialVesselName').attr("checked", false);
	setPlaceOfReceiptDefaultValue();
	setOriginPortDefaultValue();
	setDestinationPortDefaultValue();
	setPlaceOfDeliveryDefaultValue();
	setVVDVesselDefaultValue();
	setVVDVoyageDefaultValue();
	setOriginPtDefaultValue();
	setIssuePtDefaultValue();
	$('#overrideInitialVesselName').val('');
	$('#overrideInitialLtvDate').val($('#overrideInitialLtvDateDefaultvalue').val());
	//$('#overrideInitialLtvDate').val('01-01-0001');
	populateDomesticRoutingExportInstructions();
	setOverridesHeader();
	changeTextColour();
	$('#isOverrideInitialLtvDate').attr("checked", false);
}

function setPlaceOfReceiptDefaultValue()
{
	var cityCode = "";
	if($('#freightOriginCityCode').val()!='' && $('#freightOriginCityCode').val()!= undefined)
		cityCode = $('#freightOriginCityCode').val();
	else if($('#blOriginCityCode').val()!='' && $('#blOriginCityCode').val()!=undefined)
		cityCode = $('#blOriginCityCode').val();
	//alert(cityCode);
	
	if(cityCode!='')
	{
		var shipment = $('#shipmentForm').formSerialize();
		
		$.ajax({
			async:false,
			type : "POST",
			data : shipment,
			url: _context +"/shipment/routing/getBlOriginDefaultValue",
			success: function(responseText){
				$('#overrideBlOrigin').val(responseText);
			}
		});
	}
	else
		$('#overrideBlOrigin').val('');
}

function setOriginPortDefaultValue()
{
	if($('#originPortCityCode').val()!='')
	{
		var shipment = $('#shipmentForm').formSerialize();
		$.ajax({
			async:false,
			type : "POST",
			data : shipment,
			url: _context +"/shipment/routing/getOriginDefaultValue",
			success: function(responseText){
				var overrideOriginPort = responseText; 
				$('#overrideOriginPort').val(overrideOriginPort);	
			}
		});
	}
	else
	{
		$('#overrideOriginPort').val('');
	}
}

function setDestinationPortDefaultValue()
{
	if($('#destinationPortCityCode').val()!='')
	{
		var shipment = $('#shipmentForm').formSerialize();
		$.ajax({
			async:false,
			type : "POST",
			url: _context +"/shipment/routing/getDestinationPortDefaultValue",
			data : shipment,
			success: function(responseText){
			var overrideDestPort = responseText; 
			//var splittedvalue = overrideOriginPort.split(",");
			$('#overrideDestinationPort').val(overrideDestPort);
		}
	});
	}
	else
	$('#overrideDestinationPort').val('');
}

function setPlaceOfDeliveryDefaultValue()
{
	var shipment = $('#shipmentForm').formSerialize();
	$.ajax({
		async:false,
		type : "POST",
		data : shipment,
		url: _context +"/shipment/routing/getBlDestinationDefaultValue",
		success: function(responseText){
			var overrideBlDestination = responseText; 
			$('#overrideBlDestination').val(overrideBlDestination);	
		}
	});
	
}

function setVVDVesselDefaultValue()
{
	//$('#overrideCustomsVesselName').val($('#vessel').val());
	var vesselcode = $('#vessel').val();
	if(vesselcode!='')
	{
		$.ajax({
			url: _context +"/shipment/routing/getVesselName?vesselcode="+vesselcode,
			success: function(responseText){
				$('#overrideCustomsVesselName').val(responseText.data);
			}
		});
	}
	else
		$('#OverrideCustomsVesselName').val('');
}

function setVVDVoyageDefaultValue()
{
	if($('#voyage').val()!='' && $('#direction').val())
		$('#overrideVoyageDirectionSeq').val($('#voyage').val()+" "+$('#direction').val());
	else
		$('#overrideVoyageDirectionSeq').val('');
}

function setOriginPtDefaultValue()
{
	if(domesticForeignIndicator=='international')
	{
		if($('#isOverrideBlOrigin').attr("checked"))
			$('#countryOfOrigin').val($('#overrideBlOrigin').val());
		else if($('#isOverrideOriginPort').attr("checked"))
			$('#countryOfOrigin').val($('#overrideOriginPort').val());
		else 
		{
			var cityCode = "";
			/*if($('#freightOriginCityCode').val()!='')
				cityCode = $('#freightOriginCityCode').val();
			else */if($('#blOriginCityCode').val()!='')
				cityCode = $('#blOriginCityCode').val();
			else if($('#originPortCityCode').val()!='')
				cityCode = $('#originPortCityCode').val();
			if(cityCode!='')
			{
				$.ajax({
					url: _context +"/shipment/routing/getCityDataWithStateCountry?cityCode="+cityCode+"&tradeCode="+domesticForeignIndicator,
					success: function(responseText){
						$('#countryOfOrigin').val(responseText);
					}
				});
			}
			else
			{
				if($('#isOverrideBlOrigin').attr("checked"))
					$('#countryOfOrigin').val($('#overrideBlOrigin').val());
				else if($('#isOverrideOriginPort').attr("checked"))
					$('#countryOfOrigin').val($('#overrideOriginPort').val());
				else $('#countryOfOrigin').val('');
			}
				
		}
	}
	else if(domesticForeignIndicator=='china')
	{
		if($('#isOverrideBlOrigin').attr("checked"))
			$('#countryOfOrigin').val($('#overrideBlOrigin').val());
		else if($('#isOverrideOriginPort').attr("checked"))
			$('#countryOfOrigin').val($('#overrideOriginPort').val());
		else 
		{
			var cityCode = "";
			//alert("$('#freightOriginCityCode').val()="+$('#freightOriginCityCode').val());
			if($('#freightOriginCityCode').val()!=undefined &&$('#freightOriginCityCode').val()!='')
				cityCode = $('#freightOriginCityCode').val();
			else if($('#blOriginCityCode').val()!='')
				cityCode = $('#blOriginCityCode').val();
			else if($('#originPortCityCode').val()!='')
				cityCode = $('#originPortCityCode').val();
			if(cityCode!='')
			{//alert("cityCode"+cityCode);
				$.ajax({
					url: _context +"/shipment/routing/getCityDataWithCountry?cityCode="+cityCode+"&tradeCode="+domesticForeignIndicator,
					success: function(responseText){
						$('#countryOfOrigin').val(responseText);
					}
				});
			}
			else
			{
				if($('#isOverrideBlOrigin').attr("checked"))
					$('#countryOfOrigin').val($('#overrideBlOrigin').val());
				else if($('#isOverrideOriginPort').attr("checked"))
					$('#countryOfOrigin').val($('#overrideOriginPort').val());
				else $('#countryOfOrigin').val('');
			}
		}
	}
	else
	{
		if($('#isOverrideBlOrigin').attr("checked"))
			$('#countryOfOrigin').val($('#overrideBlOrigin').val());
		else if($('#isOverrideOriginPort').attr("checked"))
			$('#countryOfOrigin').val($('#overrideOriginPort').val());
		else $('#countryOfOrigin').val('');
	}
}

function setIssuePtDefaultValue()
{
	if(domesticForeignIndicator=='china' && $('#direction').val()=='E')
	{
		if($('#originPortCityCode').val()!='')
			$('#overridePlaceOfIssue').val($('#originPortCityCode').val());
		else
			$('#overridePlaceOfIssue').val('');
	}
	else
	{
		$('#overridePlaceOfIssue').val('');
		$('#overridePlaceOfIssue').attr('disabled', true);
	}
}

function populateDomesticRoutingExportInstructions()
{
	var vvdGridSize=0;
	$.ajax({
		url: _context +"/shipment/routing/vvdGridSize",
		async: false,
		success: function(responseText){
			
			vvdGridSize = responseText;
			if(vvdGridSize>1)
			{
				$.ajax({
					url: _context +"/shipment/routing/getRoutingInstructions",
					success: function(responseText){
						$("#overrideRouteInstruction").val(responseText);
						$('#overrideRouteInstruction').css('color','black');
					}
				});
			}
			else
				$('#overrideRouteInstruction').val('');
		}
	});
	
}

function checkIfDefault()
{
	if($('#isOverrideBlOrigin').is(':checked') || 
	$('#isOverrideCountryOfOrigin').is(':checked') || 
	$('#isOverrideOriginPort').is(':checked') || 
	$('#isOverrideInitialVesselName').is(':checked') || 
	$('#isOverridePlaceOfIssue').is(':checked') || 
	$('#isOverrideBlDestination').is(':checked') || 
	$('#isOverrideCustomsVesselName').is(':checked') || 
	$('#isOverrideVoyageDirectionSeq').is(':checked') || 
	$('#isOverrideDestinationPort').is(':checked'))
		return false;
	else
		return true;
}

function validateDefaults(identifier)
{
	var queryString = $('#shipmentForm').formSerialize();
	$.ajax({
		type: 'POST',
		url: _context +"/shipment/routing/validateDefaults?identifier="+identifier,
		data: queryString,
		success: function(responseText){
			
			$("#maintainShipmentOverrides").loadJSON(responseText);
			if(!responseText.isOverrideBlOrigin)
				$("#isOverrideBlOrigin").attr("checked", false);
			if(!responseText.isOverrideOriginPort)
				$("#isOverrideOriginPort").attr("checked", false);
			if(!responseText.isOverrideDestinationPort)
				$("#isOverrideDestinationPort").attr("checked", false);
			if(!responseText.isOverrideBlDestination)
				$("#isOverrideBlDestination").attr("checked", false);
			if(!responseText.isOverrideInitialVesselName)
				$("#isOverrideInitialVesselName").attr("checked", false);
			if(!responseText.isOverrideCountryOfOrigin)
				$("#isOverrideCountryOfOrigin").attr("checked", false);
			if(!responseText.isOverridePlaceOfIssue)
				$("#isOverridePlaceOfIssue").attr("checked", false);
			if(!responseText.isOverrideCustomsVesselName)
				$("#isOverrideCustomsVesselName").attr("checked", false);
			if(!responseText.isOverrideVoyageDirectionSeq)
				$("#isOverrideVoyageDirectionSeq").attr("checked", false);
			if(!responseText.isOverrideInitialLtvDate)
				$('#isOverrideInitialLtvDate').attr("checked", false);
			
			
			changeTextColour();
			checkOriginPtDefaultValue();
			checkPlaceOfDeliveryDefaultValue();
			setOverridesHeader();
			
			
		}
	});
}

function checkPlaceOfReceiptDefaultValue()
{
	if(!$('#isOverrideBlOrigin').attr("checked"))
		setPlaceOfReceiptDefaultValue();
}
function checkOriginPortDefaultValue(){
	if(!$('#isOverrideOriginPort').attr("checked"))
		setOriginPortDefaultValue();
}
function checkDestinationPortDefaultValue(){
	if(!$('#isOverrideDestinationPort').attr("checked"))
		setDestinationPortDefaultValue();
}
function checkPlaceOfDeliveryDefaultValue(){
	if(!$('#isOverrideBlDestination').attr("checked"))
		setPlaceOfDeliveryDefaultValue();
}
function checkVVDVesselDefaultValue(){
	if(($('#shipmentId').val()=='' && !$('#isOverrideCustomsVesselName').attr("checked")) || ($('#shipmentId').val()!='' && checkIfDefault()))
		setVVDVesselDefaultValue();
}
function checkVVDVoyageDefaultValue(){
	if(($('#shipmentId').val()=='' && !$('#isOverrideVoyageDirectionSeq').attr("checked")) || ($('#shipmentId').val()!='' && checkIfDefault()))
	setVVDVoyageDefaultValue();
}
function checkOriginPtDefaultValue(){
	if(!$('#isOverrideCountryOfOrigin').attr("checked"))
		setOriginPtDefaultValue();
}
function checkIssuePtDefaultValue(){
	if(domesticForeignIndicator=='china' && $('#direction').val()=='E')
	{	if(isRoutingOverrideModifiable){
			
		if($('#statusCode').text()!="CORRECTED" && $('#statusCode').text()!="ISSUED")
		$('#overridePlaceOfIssue').attr("disabled",false);
		}
		if(!$('#isOverridePlaceOfIssue').attr("checked"))
			setIssuePtDefaultValue();
	}
	else
	{
		$('#overridePlaceOfIssue').val('');
		$('#isOverridePlaceOfIssue').attr("checked", false);
		$('#overridePlaceOfIssue').attr("disabled", true);
	}
}

function changeTextColour()
{
	if($('#isOverrideBlOrigin').attr("checked"))
		$('#overrideBlOrigin').css('color','green');
	else
		$('#overrideBlOrigin').css('color','black');
	
	if($('#isOverrideOriginPort').attr("checked"))
		$('#overrideOriginPort').css('color','green');
	else
		$('#overrideOriginPort').css('color','black');
	
	if($('#isOverrideDestinationPort').attr("checked"))
		$('#overrideDestinationPort').css('color','green');
	else
		$('#overrideDestinationPort').css('color','black');
	
	if($('#isOverrideBlDestination').attr("checked"))
		$('#overrideBlDestination').css('color','green');
	else
		$('#overrideBlDestination').css('color','black');
	
	if($('#isOverrideCustomsVesselName').attr("checked"))
		$('#overrideCustomsVesselName').css('color','green');
	else
		$('#overrideCustomsVesselName').css('color','black');
	
	if($('#isOverrideVoyageDirectionSeq').attr("checked"))
		$('#overrideVoyageDirectionSeq').css('color','green');
	else
		$('#overrideVoyageDirectionSeq').css('color','black');
	
	if($('#isOverrideCountryOfOrigin').attr("checked"))
		$('#countryOfOrigin').css('color','green');
	else
		$('#countryOfOrigin').css('color','black');
	
	if($('#isOverridePlaceOfIssue').attr("checked"))
		$('#overridePlaceOfIssue').css('color','green');
	else
		$('#overridePlaceOfIssue').css('color','black');
	
	if($('#overrideInitialVesselName').val() !='')
		$('#overrideInitialVesselName').css('color','green');
	else
		$('#overrideInitialVesselName').css('color','black');
	
	if($('#overrideInitialLtvDate').val()!="01-01-0001" &&
			$('#overrideInitialLtvDate').val()!=$('#overrideInitialLtvDateDefaultvalue').val()){
		$('#isOverrideInitialLtvDate').attr("checked", true);
		if($('#overrideInitialLtvDate').val()=="01-01-0001"){
			$('#overrideInitialLtvDate').val("");
			$('#isOverrideInitialLtvDate').attr("checked", false);
		}else if($('#overrideInitialLtvDate').val()!=$('#overrideInitialLtvDateDefaultvalue').val()){
			$('#isOverrideInitialLtvDate').attr("checked", true);
		}
		else{
			$('#isOverrideInitialLtvDate').attr("checked", false);
		}
			
		$('#overrideInitialLtvDate').css('color','green');
		
	}
	else{
		if($('#overrideInitialLtvDate').val()=="01-01-0001"){
			$('#overrideInitialLtvDate').val("");
		}
		$('#overrideInitialLtvDate').css('color','black');
		$('#isOverrideInitialLtvDate').attr("checked", false);
	}
		
	
	
	
	
	
	var vvdGridSize=0;
	$.ajax({
		url: _context +"/shipment/routing/vvdGridSize",
		async: false,
		success: function(responseText){
			
			vvdGridSize = responseText;
			if($('#overrideRouteInstruction').val()!="")
			{
				if(vvdGridSize>1)
				{
					$.ajax({
						url: _context +"/shipment/routing/getRoutingInstructions",
						success: function(responseText){
							if($("#overrideRouteInstruction").val()==responseText)
								$('#overrideRouteInstruction').css('color','black');
							else
								$('#overrideRouteInstruction').css('color','green');
						}
					});
				}
				else
					$('#overrideRouteInstruction').css('color','green');
			}
			else
				$('#overrideRouteInstruction').css('color','black');
		}
	});
	
	
}
function setOverridesHeader()
{
    setShipmentOverridesHeader();
	$('#overrideHeaderCheckBox').addClass('noTab');
	if(!checkIfDefault())
	{
		$('#overrideHeaderCheckBox').attr('checked', true);
	}
	else
	{
		if($('#overrideInitialLtvDate').val()!=$('#overrideInitialLtvDateDefaultvalue').val()){
			if($('#overrideInitialLtvDate').val() =="01-01-0001"){
				$('#isOverrideInitialLtvDate').attr('checked', false);
			}else{
				$('#isOverrideInitialLtvDate').attr('checked', true);
			}
			
			$('#overrideHeaderCheckBox').attr('checked', true);
		}
		else
		{
			if($('#overrideRouteInstruction').val()!="")
			{
				var vvdGridSize=0;
				$.ajax({
					url: _context +"/shipment/routing/vvdGridSize",
					async: false,
					success: function(responseText){
						
						vvdGridSize = responseText;
					}
				});
				if(vvdGridSize>1){
					$.ajax({
						url: _context +"/shipment/routing/getRoutingInstructions",
						success: function(responseText){
							if($("#overrideRouteInstruction").val()==responseText)
								$('#overrideHeaderCheckBox').attr('checked', false);
							else
								$('#overrideHeaderCheckBox').attr('checked', true);
						}
					});
				}
				else
					$('#overrideHeaderCheckBox').attr('checked', true);
			}
			else
				$('#overrideHeaderCheckBox').attr('checked', false);
		}
	}
}
function validateOverridesFieldsOnSave()
{
	var isValid = true;
	
	if($('#overrideInitialLtvDate').val()!=$('#overrideInitialLtvDateDefaultvalue').val() && !validateDate('overrideInitialLtvDate', false))
	{
		if(!$('#maintainShipmentOverrides').is(':visible'))
			expandOverridesDiv();
		validateDate('overrideInitialLtvDate', true);
		isValid = false;
	}
	
	return isValid;
}

function setShipmentOverridesHeader(){
	var header='';
	if($('#blOriginCityCodeDescription').val()!=null && $('#blOriginCityCodeDescription').val()!='' && $('#isOverrideBlOrigin').attr("checked"))
		{
		header=header+'| PLR- '+$('#overrideBlOrigin').val();
		}
	if($('#blDestinationCityCodeDescription').val()!=null && $('#blDestinationCityCodeDescription').val()!='' &&  $('#isOverrideBlDestination').attr("checked"))
		{
		header=header+' | PLD- '+$('#overrideBlDestination').val();
		}
	if(header==''){
		setAccordianTabDetails('shipmentOverridesHeader', '');
		}
	else{
		setAccordianTabDetails('shipmentOverridesHeader', ' - '+header);
		}
}

function expandOverridesDiv()
{
	collapseAll();
	$('.ui-accordion-header.ui-helper-reset.ui-state-default.ui-corner-all')[9].className
	= "ui-accordion-header ui-helper-reset ui-state-active ui-corner-top";
	$('.ui-accordion-header.ui-helper-reset.ui-state-active.ui-corner-top span').removeClass('ui-icon-triangle-1-e')
	 .addClass('ui-icon-triangle-1-s');
	$('#maintainBookingOverrides').css('display', 'block');
	//$('#conditionAccordians').accordion('activate', 9);
	window.scrollTo(0, 0);
}

function populateOverrideFields(){
	if($('#overrideBlOrigin').val()!='')
		validateDefaults('blOrigin');
	else
	{
		setPlaceOfReceiptDefaultValue();
		$('#isOverrideBlOrigin').attr("checked", false);
		$('#overrideBlOrigin').css('color','black');
		checkOriginPtDefaultValue();
		//setOverridesHeader();
	}

	if($('#overrideOriginPort').val()!='')
		validateDefaults('originPort');
	else
	{
		setOriginPortDefaultValue();
		$('#isOverrideOriginPort').attr("checked", false);
		$('#overrideOriginPort').css('color','black');
		checkOriginPtDefaultValue();
		//setOverridesHeader();
	}

	if($('#overrideDestinationPort').val()!='')
		validateDefaults('destinationPort');
	else
	{
		setDestinationPortDefaultValue();
		$('#isOverrideDestinationPort').attr("checked", false);
		$('#overrideDestinationPort').css('color','black');
		checkPlaceOfDeliveryDefaultValue();
		//setOverridesHeader();
	}

	if($('#overrideBlDestination').val()!='')
		validateDefaults('blDestination');
	else
	{
		setPlaceOfDeliveryDefaultValue();
		//$('#isOverrideBlDestination').attr("checked", false);
		$('#overrideBlDestination').css('color','black');
		//setOverridesHeader();
	}

	if($('#overrideCustomsVesselName').val()!='')
		validateDefaults('vessel');
	else
	{
		setVVDVesselDefaultValue();
		$('#isOverrideCustomsVesselName').attr("checked", false);
		$('#overrideCustomsVesselName').css('color','black');
		//setOverridesHeader();
	}

	if($('#overrideVoyageDirectionSeq').val()!='')
		validateDefaults('voyageDir');
	else
	{
		setVVDVoyageDefaultValue();
		$('#isOverrideVoyageDirectionSeq').attr("checked", false);
		$('#overrideVoyageDirectionSeq').css('color','black');
		//setOverridesHeader();
	}

	if($('#countryOfOrigin').val()!='')
		validateDefaults('originCountry');
	else
	{
		setOriginPtDefaultValue();
		$('#isOverrideCountryOfOrigin').attr("checked", false);
		$('#countryOfOrigin').css('color','black');
		//setOverridesHeader();
	}

	if($('#overrideInitialVesselName').val() !='')
	{
		$('#isOverrideInitialVesselName').attr("checked", true);
		$('#overrideInitialVesselName').css('color','green');
		//setOverridesHeader();
		
	}
	else
	{
		$('#isOverrideInitialVesselName').attr("checked", false);
		$('#overrideInitialVesselName').css('color','black');
		//setOverridesHeader();
	}

	if($('#overridePlaceOfIssue').val()!='')
		validateDefaults('issuePlace');
	else
	{
		setIssuePtDefaultValue();
		$('#isOverridePlaceOfIssue').attr("checked", false);
		$('#overridePlaceOfIssue').css('color','black');
		//setOverridesHeader();
	}
	if($('#overrideInitialLtvDate').val() ==$('#overrideInitialLtvDateDefaultvalue').val())
	{//$('#overrideInitialLtvDate').val('01-01-0001');
		$('#isOverrideInitialLtvDate').attr("checked", false);
		$('#overrideInitialLtvDate').css('color','black');
	}
	else if($('#overrideInitialLtvDate').val() =="01-01-0001"){
		$('#overrideInitialLtvDate').val("");
		$('#isOverrideInitialLtvDate').attr("checked", false);
		$('#overrideInitialLtvDate').css('color','black');
	}
	else{
		if($('#overrideInitialLtvDate').val()=="01-01-0001"){
			$('#overrideInitialLtvDate').val("");
			$('#isOverrideInitialLtvDate').attr("checked", false);
		}else{
			$('#isOverrideInitialLtvDate').attr("checked", true);
		}
			
		$('#overrideInitialLtvDate').css('color','green');
		}
	//setOverridesHeader();

	if($('#overrideRouteInstruction').val()!='')
		changeTextColour();
	else
		$('#overrideRouteInstruction').css('color','black');
	//setOverridesHeader();

}

/*function setOverridesHeader() {
	if (checkIfDefault())
		$('#overrideHeaderCheckBox').attr('checked', false);
	else
		$('#overrideHeaderCheckBox').attr('checked', true);
}*/

/*function checkIfDefault() {
	if ($('#isOverrideBlOrigin').attr("checked")
			|| $('#isOverrideCountryOfOrigin').attr("checked")
			|| $('#isOverrideOriginPort').attr("checked")
			|| $('#isOverrideInitialVesselName').attr("checked")
			|| $('#isOverridePlaceOfIssue').attr("checked")
			|| $('#isOverrideBlDestination').attr("checked")
			|| $('#isOverrideCustomsVesselName').attr("checked")
			|| $('#isOverrideVoyageDirectionSeq').attr("checked")
			|| $('#isOverrideDestinationPort').attr("checked"))
		return false;
	else
		return true;
}*/;//added against 21739
//var changeInSpecialServiceGrid=false;
$(document).ready(function () {
	$("#spSvcEntityName").val('shipment');
	
	
	//Updated for D025134: 	Maintain Bill: SPECIAL SERVICE: ADV saved without PAYEE
	 $( "#specialServiceDialog" ).dialog({ autoOpen: false , width: 950 ,height:600, modal: true
		    ,close : function() {
		    	tabSequence('#shipmentForm',true,false);
		    	$('#specialServiceMasterForm').validationEngine('hideAll');
			},
	 		open : function (){
	 			tabSequence('#specialServiceDialog',false,false);
	 		},
	 			 buttons: {
		    	Cancel: function(){
		        	 $('#specialServiceMasterForm').validationEngine('hideAll');
		            	$( this ).dialog( "close" ); 
		            	isSpecialServiceChanged=false;
		            	removeErrorPointersSPSV();
		          },
		          Ok: function(){
		        	  if(( $('#statusCode').text()=='ISSUED'||$('#statusCode').text()=='CORRECTED' || isSpecialServiceModifiable==false)){
		        		  $("#specialServiceDialog").dialog( "close" );
		        		  isSpecialServiceChanged=false;
			        		return;
		        	  }
		        	  
		        	  if(!isSpecialServiceChanged){
			        		if($("#isSpecialServiceAdd").val()=="true"){
			        			alert('Please add a Special Service before you Click Ok');
			        			isSpecialServiceChanged=false;
			        		}else{
			        			alert('Special Service cannot be updated since no fields have been changed');
			        			isSpecialServiceChanged=false;
			        		}
				        	return;
			        	}
		        	  
		        	  if(validateSpecialServiceFields()){
		        		$("#specialServiceMasterForm").validationEngine('detach');
	        			$("#specialServiceMasterForm").validationEngine('attach');
	        			if ($("#specialServiceMasterForm").validationEngine('validate')) {
	        				removeErrorPointersSPSV();
			        	var specialServiceData = $('#specialServiceMasterForm').formSerialize();
			        	var newDataUrl = _context +"/shipment/specialservice/add";//?entityName=shipment
			        	if($("#isSpecialServiceAdd").val()=="false"){
			        		newDataUrl = _context +"/shipment/specialservice/edit";//?entityName=shipment
			        	}
			        	$.ajax({
			        		type: "POST",
			        		url: newDataUrl,
			        		data: specialServiceData,
			        		success: function(responseText){
			        			if(responseText.success){
			        				$('#msgDivSplSrv').hide();
			        				$('#specialServiceMasterForm').validationEngine('hideAll');
			        				$("#specialServiceDialog").dialog( "close" );
			        				isSpecialServiceChanged=false;
			        				$("#specialServiceGrid").trigger('reloadGrid');
			        			}else{
			        				$('#msgDivSplSrv').hide();
			        				showResponseMessages('msgDivSplSrv', responseText);
									$('#msgDivSplSrv').show();
			        			}
			        		}
			        	});
	        		}
		          } else{
		        	  $("#specialServiceMasterForm").validationEngine('detach');
		        	  $("#specialServiceMasterForm").validationEngine('attach');
		        	  $("#specialServiceMasterForm").validationEngine('validate');
		          }
		        	  //added against 21739
		        	  //changeInSpecialServiceGrid=true;
	        }, 
      //Added More button and functionality for Defect D025391		          
            More:function(){
            	if(( $('#statusCode').text()=='ISSUED'||$('#statusCode').text()=='CORRECTED' || isSpecialServiceModifiable==false)){
	        		  $("#specialServiceDialog").dialog( "close" );
	        		  isSpecialServiceChanged=false;
		        		return;
	        	  }
	        	  
	        	  if(!isSpecialServiceChanged){
		        		if($("#isSpecialServiceAdd").val()=="true"){
		        			alert('Please add a Special Service before you Click Ok');
		        			isSpecialServiceChanged=false;
		        		}else{
		        			alert('Special Service cannot be updated since no fields have been changed');
		        			isSpecialServiceChanged=false;
		        		}
			        	return;
		        	}
	        	  
	        	  if(validateSpecialServiceFields()){
	        		$("#specialServiceMasterForm").validationEngine('detach');
      			$("#specialServiceMasterForm").validationEngine('attach');
      			if ($("#specialServiceMasterForm").validationEngine('validate')) {
      				removeErrorPointersSPSV();
		        	var specialServiceData = $('#specialServiceMasterForm').formSerialize();
		        	var newDataUrl = _context +"/shipment/specialservice/add";//?entityName=shipment
		        	if($("#isSpecialServiceAdd").val()=="false"){
		        		newDataUrl = _context +"/shipment/specialservice/edit";//?entityName=shipment
		        	}
		        	$.ajax({
		        		type: "POST",
		        		url: newDataUrl,
		        		data: specialServiceData,
		        		success: function(responseText){
		        			if(responseText.success){
		        				$('#msgDivSplSrv').hide();
		        				$('#specialServiceMasterForm').validationEngine('hideAll');
		        				$("#specialServiceDialog").dialog( "close" );
		        				isSpecialServiceChanged=false;
		        				$("#specialServiceGrid").trigger('reloadGrid');
		        				$('#equipmentVinsight1').show();
		       				    $('#equipmentVinsight2').show();
		       				    $('#equipmentVinsight3').show();
		       				    $('#equipmentVinsight4').show();
		       				    $('#equipmentVinsight5').show();
		       				    $('#msgDivSplSrv').hide();
		       				    if(shipmentNotFound!=true)
		       				     openSpecialServices();
		       				 
		        			}else{
		        				$('#msgDivSplSrv').hide();
		        				showResponseMessages('msgDivSplSrv', responseText);
								$('#msgDivSplSrv').show();
		        			}
		        		}
		        	});
      		}
	          } else{
	        	  $("#specialServiceMasterForm").validationEngine('detach');
	        	  $("#specialServiceMasterForm").validationEngine('attach');
	        	  $("#specialServiceMasterForm").validationEngine('validate');
	          }
            	
            }          
	}});
	 
	 function removeErrorPointersSPSV()
	 {
	 	$("#specialServiceMasterForm").validationEngine('hideAll');
	 }	 
	 
	 $("#specialSerivceAdd").click(function(){
		 if(!(($('#statusCode').text()=='ISSUED') ||($('#statusCode').text()=='CORRECTED')||  isSpecialServiceAdd==false)){
			 if($('#shipmentNumberHidden').val()==''){
				 $('#equipmentVinsight1').hide();
				 $('#equipmentVinsight2').hide();
				 $('#equipmentVinsight3').hide();
				 $('#equipmentVinsight4').hide();
				 $('#equipmentVinsight5').hide();
			 }else{
				 $('#equipmentVinsight1').show();
				 $('#equipmentVinsight2').show();
				 $('#equipmentVinsight3').show();
				 $('#equipmentVinsight4').show();
				 $('#equipmentVinsight5').show();
			 }
		
		 $('#msgDivSplSrv').hide();
		 if(shipmentNotFound!=true)
		 openSpecialServices();
		 }
		 return false;
	});
	 //tabSequence("#tabSequenceSPSV");
});
/*
function formatSpecialServiceHeader(param ){
	var formattedStr = "";
	if(param == null || param==" ") return param;
	var paramArray = param.split(",");
	if(paramArray==undefined || paramArray.length<1)
		return param;

	var hashtable = {};

	for(var i=0;i<paramArray.length;i++){
		var key = paramArray[i];

		if(hashtable[key]==undefined && paramArray[i]){
			hashtable[key]=1;
		}else if(paramArray[i]){
			hashtable[key]=hashtable[key]+1;
		}
	}

	for(var key in hashtable){
		if(hashtable[key] >1){
			formattedStr += key+"("+hashtable[key]+") | "
		}else{
			formattedStr += key+" | "
		}

    }
	if(formattedStr.length > 1){
		formattedStr = " - "+ formattedStr.substring(0,formattedStr.lastIndexOf("|"));
	}

    return formattedStr;
}
*/
var specialServiceGridLoadComplete = function(){

    var userData = $("#specialServiceGrid").getGridParam('userData');
    if(userData && userData.updateSpecialServiceHeader) {
		setAccordianTabDetails('splServicesHeader', userData.updateSpecialServiceHeader);
	}

	$("#clauseGridHHGS").trigger('reloadGrid');
	
	/*//added against 21739
 	if(counterSplServicesReloaded==0){
 		numberOfInitialRowsSplServices=jQuery("#specialServiceGrid").jqGrid('getGridParam', 'records');
 		counterSplServicesReloaded++;
 	}
 	if(numberOfInitialRowsSplServices != jQuery("#specialServiceGrid").jqGrid('getGridParam', 'records')){
 		changeInCommodity=true;
 	}*/
 	//to disable checkbox of hold 22735
 	var status = $('#statusCode').text();
	if (status == 'ISSUED' || status == 'CORRECTED') {
 	$("[id^=jqg_specialServiceGrid]").attr('disabled',true);
 	$('#cb_specialServiceGrid') .attr('disabled', true);
	}

};


function openSpecialServices(){
	getRateBasisList();
	$("#specialServiceDialog" ).dialog( "option", "title", 'Special Services' );
	$("#specialServiceDialog" ).dialog('open'); 
	$('input[name="specialServiceFormLine1.payee"]').css("color", "");
	$("#specialServiceFormLine2").show();
	$("#specialServiceFormLine3").show();
	$("#specialServiceFormLine4").show();
	$("#specialServiceFormLine5").show();
	// Defect 24939
	$("#useranddateHeader").hide();
	$("#useranddate").hide();
	$("#specialServiceDialog").height(550);
	$("#specialServiceMasterForm").clearForm();
	removeClassesForSpecialServiceForm();
	populateDefaultPageOptions();
	$('input[name*="commodityLineNumber"]').attr("disabled", true);
	var shipmentNumber=$('#shipmentNumberHidden').val();
	//alert("shipmentNumber:::"+shipmentNumber);
	if(null==shipmentNumber || shipmentNumber==''){
		$('input[name*="equipmentVinsight"]').removeClass("validate[required]");
		$('input[name*="equipmentVinsight"]').attr("disabled", true);
	}
	$("#isSpecialServiceAdd").val("true");
	isSpecialServiceChanged=false;
}  

function editSpecialService(id) {
	var seqNo = id.split('=')[1];
	//alert(seqNo);
	var bookingStatusCode=$('#statusCode').text();
	/*Booking Security*/
	if( bookingStatusCode=='ISSUED' ||  bookingStatusCode=='CORRECTED' || isSpecialServiceModifiable==false){
		$("#specialServiceDialog").gatesDisable();
	}
	else if(bookingStatusCode==undefined || bookingStatusCode==null || bookingStatusCode=='' || ((bookingStatusCode!='ISSUED')&& (bookingStatusCode!='CORRECTED')) || isSpecialServiceUpdate==true){
		$("#specialServiceDialog").gatesEnable();
		showSpecialServiceDialog(seqNo);
	}
	
}

function showSpecialServiceDialog(seqNo){
	isSpecialServiceChanged=false;
	var dataUrl = _context +"/shipment/specialservice/getSpecialService?seqNo="+seqNo;
	$("#specialServiceMasterForm").clearForm();
	$.ajax({
		url: dataUrl,
		success: function(responseText){
			removeClassesForSpecialServiceForm();
			getRateBasisList();
		    $('#msgDivSplSrv').hide();
			$("#specialServiceDialog").dialog('open');
			$("#isSpecialServiceAdd").val("false");
			$("#specialServiceFormLine2").hide();
			$("#specialServiceFormLine3").hide();
			$("#specialServiceFormLine4").hide();
			$("#specialServiceFormLine5").hide();
			// Defect 24939
			$("#useranddateHeader").show();
			$("#useranddate").show();
			$("#specialServiceMasterForm").loadJSON(responseText);
			$('input[name="specialServiceFormLine1\\.specialServiceCode"]').val(responseText.specialServiceFormLine1.specialServiceCode);
			$('input[name="specialServiceFormLine1\\.amount"]').val(responseText.specialServiceFormLine1.amount);
			var formattedVal="";
			var val = responseText.specialServiceFormLine1.amount;
			if(val !="" && val !=null )
			{
				val = parseFloat(val).toFixed(2);
				var splittedAtDot = val.toString().split(".");	
				var commaSepratedVal = splittedAtDot[0].toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
					
				if(splittedAtDot.length==1)
				{
					formattedVal = commaSepratedVal + ".00";
				}
				else
				{
					formattedVal = commaSepratedVal + "." + splittedAtDot[1];
				}
			}
			$('label[for="specialServiceFormLine1\\.amountReadOnly"]').text(formattedVal.toString());
			$('input[name="specialServiceFormLine1\\.commodityLineNumber"]').val(responseText.specialServiceFormLine1.commodityLineNumber);
			$('input[name="specialServiceFormLine1\\.equipmentVinsight"]').val(responseText.specialServiceFormLine1.equipmentVinsight);
			$('input[name="specialServiceFormLine1\\.numberOfUnit"]').val(responseText.specialServiceFormLine1.numberOfUnit);
			//changed for D025232
			var val1=responseText.specialServiceFormLine1.manualUserRate;
			if(val1 !="" && val1 !=null )
			{
				$('input[name="specialServiceFormLine1\\.manualUserRate"]').val(parseFloat(responseText.specialServiceFormLine1.manualUserRate).toFixed(2));
				
			}
			else
			{
				$('input[name="specialServiceFormLine1\\.manualUserRate"]').val(responseText.specialServiceFormLine1.manualUserRate);
			}
			$('select[name="specialServiceFormLine1\\.rateBasisCode"]').val(responseText.specialServiceFormLine1.rateBasisCode);
			$('input[name="specialServiceFormLine1\\.payee"]').val(responseText.specialServiceFormLine1.payee);
			$('input[name="specialServiceFormLine1\\.careOf"]').val(responseText.specialServiceFormLine1.careOf);
			$('input[name="specialServiceFormLine1\\.routingText"]').val(responseText.specialServiceFormLine1.routingText);
			$('select[name="specialServiceFormLine1\\.isDropOrPull"]').selected().val(responseText.specialServiceFormLine1.isDropOrPull);
			$('input[name="specialServiceFormLine1\\.source"]').val(responseText.specialServiceFormLine1.source);
			$('label[for="specialServiceFormLine1\\.sourceReadOnly"]').text(responseText.specialServiceFormLine1.source);
			$('select[name="specialServiceFormLine1\\.isApplyToAll"]').selected().val(responseText.specialServiceFormLine1.isApplyToAll);
			$('label[for="specialServiceFormLine1\\.processLevelCodeReadOnly"]').text(responseText.specialServiceFormLine1.processLevelCode);
			$('#passThruPayable1').val(responseText.specialServiceFormLine1.passThruPayable);
			//$('input[name="specialServiceFormLine1\\.processLevelCode"]').text(responseText.specialServiceFormLine1.processLevelCode);
			$("#specialServiceDialog").height(225);
			//alert(responseText.specialServiceFormLine1.carrierCode);
			if(responseText.specialServiceFormLine1.carrierCode=='03'){
				$('input[name="specialServiceFormLine1\\.payee"]').css("color", "purple");
			}else{
				$('input[name="specialServiceFormLine1\\.payee"]').css("color", "");
			}
			//populateEditRow(responseText);
			populateHiddenFields(1);
			applyUIValidations(1);
			checkRateBasisRequired(1);
			removeErrorPointersSPSV();
			isSpecialServiceChanged=false;
		}
	});
}


function unloadSpecialServiceGrid(){
	$('#specialServiceGrid').jqGrid('GridUnload');
}

function loadSpecialServiceGrid(){
	$('#specialServiceGrid').trigger("reloadGrid");
}

function setSpecialServicesDiv() {
	var specialServiceNumberCount = $("#specialServiceGrid").getGridParam(
			"reccount");
	var specialServiceDisplayText = "";
	//var specialServiceDisplayText = "Special Service ";
	if (specialServiceNumberCount > 0) {
		for ( var i = 1; i <= specialServiceNumberCount; i++) {
			var specialService = $("#specialServiceGrid").jqGrid('getCell', i,
					"specialServiceCode");
			if (i == 1) {
				if (null != specialService && specialService != undefined
						&& specialService != false) {
					specialServiceDisplayText = specialServiceDisplayText
							+ ' - ' + specialService;
				}
			} else {
				if (null != specialService && specialService != undefined
						&& specialService != false) {
					specialServiceDisplayText = specialServiceDisplayText
							+ ', ' + specialService;
				}
			}
		}
	}
	setAccordianTabDetails('splServicesHeader', specialServiceDisplayText);
}

;var stopNumber="";
var hazStp="";
var hazStpLinked="";
var isStopChanged='';
$(document).ready(
function() {
	if($('#tradeCode').val()=='A'){
		createShipmentItemStopOffsGrid();
		createShipmentStopOffHazardGrid();
		createShipmentStpOffGrid();
	}
	
	$('#shipmentStopOffForm :input').change(function()
	{
		if(this.type!='checkbox')
			console.log('change');
			isStopChanged = "Y";
	});


	$("#shipmentStopOffDialog").dialog({
		autoOpen : false,
		width : 930,
		modal : true,
		close : function() {
			removePartiesPopUps();
			clearShipmentStopOffForm();
			$("#shipmentStopOffForm").validationEngine('detach');
			tabSequence('#shipmentForm',true,false);
		},
		open: function()
		{
			tabSequence('#shipmentStopOffDialog',false,false);
		}
	});
	
	$('#stopOffAdd').click(function() {
		if (!(($("#statusCode").text()=='ISSUED')|| ($("#statusCode").text()=='CORRECTED' || isPartyAdd==false)))  {
			clearPartiesForm(); //for defect --D018588
			if(shipmentNotFound!=true)
			showAddStopOffsDialog();
			return false;
		}
	});
	//D026112
	$('#del_stopOffsGrid').click(function(){ 

	    var checkDelFlag= false;
		var rowIDs = jQuery("#stopOffsGrid").getDataIDs();
		for (var i=0;i<rowIDs.length;i=i+1)
		{ 
		var rowData=jQuery("#stopOffsGrid").getRowData(rowIDs[i]);
	    // You'll get a pop-up confirmation dialog, and if you say yes,
		}
	   		
		
	});
	
	$('#shipmentStopOffFormClear').click(function() {
		clearShipmentStopOffForm();
	});
	
	

});
//--------Supporting Functions-----------------
function float3DecimalFormat(cellvalue, options, rowObject){
	if(cellvalue != null && $.trim(cellvalue) != '' && $('#unitOfMeasureSourceCode').val() === "M"){
		return parseFloat(cellvalue).toFixed(3);
	}
	return $.trim(cellvalue);
}
var itemStopOffsGridComplete =function()
{
console.log("GridComplete");
$('table[aria-labelledby="gbox_itemstopOffsGrid"] thead tr[id="tr_itemStopOffSeqNumber"]').hide();
$('table[aria-labelledby="gbox_itemstopOffsGrid"] thead tr[id="FormError"] td').html("");
$('table[aria-labelledby="gbox_itemstopOffsGrid"] thead tr[id="FormError"]').hide();
//editAllItemStops();
};
var itemStopOffsGridLoadComplete =function()
{
console.log("GridComplete");
$('table[aria-labelledby="gbox_itemstopOffsGrid"] thead tr[id="ui-state-default"]').hide();
//editAllItemStops();
};
var stpoffHazardGridComplete = function() {
		console.log("stpoffHazardGridComplete");
		
		
	}
	
var stpoffHazardLoadComplete = function() {
		console.log("stpoffHazardLoadComplete");
		var rowIDs = jQuery("#StpOffHazardGrid").getDataIDs();	
		for (var i=0;i<rowIDs.length;i=i+1)
		{ 
		var rowData=jQuery("#StpOffHazardGrid").getRowData(rowIDs[i]);
		
		for (var j=0;j<hazStp.length;j=j+1) {
		if(rowData.shipmentHazardId==hazStp[j])
			{
			 $("#jqg_StpOffHazardGrid_"+rowData.shipmentHazardId, "#StpOffHazardGrid").attr("disabled",false);
			 $("#jqg_StpOffHazardGrid_"+rowData.shipmentHazardId, "#StpOffHazardGrid").attr("checked",true);
			}
			}
		for (var j=0;j<hazStpLinked.length;j=j+1) {
		if(rowData.shipmentHazardId==hazStpLinked[j])
		{		
		$("#jqg_StpOffHazardGrid_"+rowData.shipmentHazardId, "#StpOffHazardGrid").attr("disabled",true);
		}
		}
		}
	
	}
function editAllItemStops()
{

	var rowIDs = jQuery("#itemstopOffsGrid").getDataIDs();
	for (var i=0;i<rowIDs.length;i=i+1)
    { 
		var rowId = $('#itemstopOffsGrid').getCell(rowIDs[i], 'itemStopOffSeqNumber');
		   $('#itemstopOffsGrid').jqGrid('editRow', rowId,false);
    }

}
function getCheckHazardGridRows()
{
		var selRowIds=[];
		var hazard='';
		$("#hazardLinkStp").val();
		var rowIDs = jQuery("#StpOffHazardGrid").getDataIDs();	
		for (var i=0;i<rowIDs.length;i=i+1)
		{ 
		var rowData=jQuery("#StpOffHazardGrid").getRowData(rowIDs[i]);
		var id=$("#jqg_StpOffHazardGrid_"+rowData.shipmentHazardId);
		if(id.is(':checked')) {
		selRowIds.push(rowData.shipmentHazardId);
		
		}
		}
		hazard=selRowIds.join(",");
		$("#hazard").val(hazard);
		
}

function saveAllItemStopOffs(){
	updateItemStopErrorOccurred = false;
	$('table[aria-labelledby="gbox_equipmentGrid"] thead tr[id="FormError"] td').html("");
	$('table[aria-labelledby="gbox_equipmentGrid"] thead tr[id="FormError"]').hide();
	var rowIDs = jQuery("#itemstopOffsGrid").getDataIDs();
	for (var i=0;i<rowIDs.length;i=i+1)
    { 
	   var rowId = $('#itemstopOffsGrid').getCell(rowIDs[i], 'itemStopOffSeqNumber');
	   currentRowId = rowId+'_';
	   var isSuccess = $('#itemstopOffsGrid').jqGrid(
			   'saveRow', 
			   rowId, 
			   null, //onsuccessfunc
			   _context+'/shipment/stopoff/updateItemStopOff' //Url
	   );
	   
	   if(!isSuccess){
		   updateItemStopErrorOccurred = true;
		   //Store error record
		   currentRowId = '';
		  errorRowId = rowId;
		
		   break;
		}
	   else
		   $('#itemstopOffsGrid').jqGrid('editRow', rowId, false);
    }
	if(!updateItemStopErrorOccurred){
		equipmentUpdated = false;
	}
}
var stopOffsGridLoadComplete = function()
{
	setAccordianTabDetails('stopOffsHeader',"");
	$('#stopHeaderCheckBox').attr('checked', false);
	var specialCount = 0;
	$.ajax({
				url : _context +"/shipment/stopoff/getAddressCount",
				type : "GET",
				async:false,
				success : function(responseText) {
					if (responseText.success == true) {						
						specialCount=responseText.data;
					}
					}
					});
	var stopSize = jQuery("#stopOffsGrid").getGridParam("records");
	
	if(specialCount!='0' && stopSize==specialCount)
	{
	stopSize='<font color="black">'+stopSize+'</font>';
	specialCount='<font color="black">'+specialCount+'</font>';
	$('#stopHeaderCheckBox').attr('checked', true);
	}
	else
	{
	if(specialCount!='0'){
	stopSize='<font color="red">'+stopSize+'</font>';
	specialCount='<font color="red">'+specialCount+'</font>';
	}
	}
	if(specialCount!='0'){	
	setAccordianTabDetails('stopOffsHeader', stopSize+"/"+specialCount);
	}
};

var toOrderPartyPopulated = false;

// clears the stops form
function clearShipmentStopOffForm() {
	$("#shipmentStopOffForm").clearForm();
	$('input[name="shipmentStopOffSeqNo"]').val('');
	$('input[name="portCode"]').val('');
	$('input[name="tariffItem"]').val('');
	$('input[name="description"]').val('');
	$('input[name="weight"]').val('');
	$('select[name="quantity"]').val('');
	$('select[name="portCode"]').children().remove();
	$('select[name="portCode"]').append(
			"<option value=''></option>");
			$('select[name="partyListAddressRole"]').children().remove();
	$('select[name="partyListAddressRole"]').append(
			"<option value=''></option>");
			$('input[name="addressRoleId"]').val('');
}

function editStopOff(id) {
	var seqNo = id.split('=')[1];
	{
		var dataUrl = _context +"/shipment/stopoff/getItemStop?seqNo="+seqNo;
		$.ajax({
    		url: dataUrl,
    		success: function(responseText){
    			if(responseText.success){
				clearShipmentStopOffForm()
    				$.each(responseText.data.partyTypeList, function(key, value) {
    					$('select[name="partyListAddressRole"]').append($("<option/>", {
    						value : key,
    						text : value
    					}));
    				});
					
    				$.each(responseText.data.portCodeList, function(key, value) {
    					$('select[name="portCode"]').append($("<option/>", {
    						value : key,
    						text : value
    					}));
    				});
   				    if(shipmentNotFound!=true)
						hazStp=responseText.data.hazardLinkStp;
						hazStpLinked=responseText.data.hazardLinkAllStp;
						responseText.data.hazardLinkStp=null;
						responseText.data.hazardLinkAllStp=null;
   				    	$("#shipmentStopOffForm").loadJSON(responseText.data);
						stopNumber=responseText.data.positionInContainer;
						//hazStp=responseText.data.hazardLinkStp;
						//hazStpLinked=responseText.data.hazardLinkAllStp;
                $('#itemstopOffsGrid').jqGrid('setGridParam', { url: _context+'/shipment/stopoff/loadItemStopOff' ,datatype:"json"}).trigger('reloadGrid');
				$('#StpOffHazardGrid').jqGrid('setGridParam', { url: _context+'/shipment/stopoff/loadHazard' ,datatype:"json"}).trigger('reloadGrid');
				$('#stpOffGrid').jqGrid('setGridParam', { url: _context+'/shipment/stopoff/load' ,datatype:"json"}).trigger('reloadGrid');
				//editAllItemStops();
				$(".HeaderButton", ("#gview_itemstopOffsGrid")).click();
				$(".HeaderButton", ("#gview_StpOffHazardGrid")).click();
				$(".HeaderButton", ("#gview_stpOffGrid")).click();
   				 $("#shipmentStopOffDialog").dialog("option", "title", 'Edit StopOff');
 				$("#shipmentStopOffDialog").dialog("option", "buttons", [ {
 					text : "Cancel",
 					click : function() {
 						if(isStopChanged!="")
 						{
 							var r = confirm("All unsaved changes will be discarded.Continue?");
 							if(r){
 								restorePreShptSummary();
								isStopChanged='';
 								$('#shipmentStopOffMsgDiv').hide();
 								$(this).dialog("close");
 							}else
 								return;
 						}
 						else{
 							$('#shipmentStopOffMsgDiv').hide();
 							$(this).dialog("close");
 						}
 					}
 				}, {
 					text : "Save",
 					click : function() {
 						if($("#statusCode").text()!='ISSUED' && $("#statusCode").text()!='CORRECTED' && (isPartyUpdate)){
 							//saveAllItemStopOffs();
							getCheckHazardGridRows();
							updateStopOff();
 						}else{
 							$("#shipmentStopOffDialog").dialog('close');
 						}
 						
 					}
 				} ]);
 				
 				$('#shipmentStopOffForm').validationEngine('attach');
 				
 				if(($("#statusCode").text()=='CANC') ){
 					$("#shipmentStopOffDialog").gatesDisable();
 					$("#shipmentStopOffDialog").dialog('open');
 				}
 				else if(($("#statusCode").text()=='ISSUED') || ($("#statusCode").text()=='CORRECTED') || isPartyUpdate==false){
 					$("#shipmentStopOffDialog").gatesDisable();
 					$("#shipmentStopOffDialog").dialog('open');
 				}
 				else
 					{
 						$("#shipmentStopOffDialog").gatesEnable();
 						$("#shipmentStopOffDialog").dialog('open');
 					}
 			
 			}
 		}
 	});
	
			return false;
	}
}

function showAddStopOffsDialog() {
	
	if(($("#statusCode").text()=='CANC') || ($("#statusCode").text()=='ISSUED') || ($("#statusCode").text()=='CORRECTED')|| isPartyAdd==false){
		$("#shipmentStopOffDialog").gatesDisable();
	}else{
		$("#shipmentStopOffDialog").gatesEnable();
	$.ajax({
		url : _context +"/shipment/stopoff/showFormAdd",
		success : function(responseText) {
			console.log("inside showAddStopOffsDialog");
			clearShipmentStopOffForm();
			$.each(responseText.data.partyTypeList, function(key, value) {
				$('select[name="partyListAddressRole"]').append($("<option/>", {
					value : key,
					text : value
				}));
			});
			
			$.each(responseText.data.portCodeList, function(key, value) {
				$('select[name="portCode"]').append($("<option/>", {
					value : key,
					text : value
				}));
			});
			hazStp=responseText.data.hazardLinkStp;
			hazStpLinked=responseText.data.hazardLinkAllStp;
			responseText.data.hazardLinkStp=null;
			responseText.data.hazardLinkAllStp=null;
			$("#shipmentStopOffForm").loadJSON(responseText.data);
			$("#shipmentStopOffId").val(null);
			stopNumber=responseText.data.positionInContainer;
//			hazStp=responseText.data.hazardLinkStp;
//			hazStpLinked=responseText.data.hazardLinkAllStp;
			$('#itemstopOffsGrid').jqGrid('setGridParam', { url: _context+'/shipment/stopoff/loadItemStops' ,datatype:"json"}).trigger('reloadGrid');
			$('#StpOffHazardGrid').jqGrid('setGridParam', { url: _context+'/shipment/stopoff/loadHazard' ,datatype:"json"}).trigger('reloadGrid');
				  $('#stpOffGrid').jqGrid('setGridParam', { url: _context+'/shipment/stopoff/load' ,datatype:"json"}).trigger('reloadGrid');
			//editAllItemStops();
			$(".HeaderButton", ("#gview_itemstopOffsGrid")).click();
			$(".HeaderButton", ("#gview_StpOffHazardGrid")).click();
			$(".HeaderButton", ("#gview_stpOffGrid")).click();
			$("#shipmentStopOffDialog").dialog("option", "title", 'Add StopOff');
			$("#shipmentStopOffDialog").dialog("option", "buttons", [ {
				text : "Cancel",
				click : function() {
					if(isStopChanged!="")
					{
						var r = confirm("All unsaved changes will be discarded.Continue?");
						if(r){
							isStopChanged='';
							$('#shipmentStopOffMsgDiv').hide();
							$(this).dialog("close");
						}else
							return;
					}
					else{
					
						$('#shipmentStopOffMsgDiv').hide();
						$(this).dialog("close");
					}
				}
			}, {
				text : "Add",
				click : function() {
					if($("#statusCode").text()!='ISSD' && $("#statusCode").text()!='CORR' && (isPartyAdd)){
						getCheckHazardGridRows();
						addStopOff();
						//saveAllItemStopOffs();
						//setPartiesHeader();
					}else{
						$("#shipmentStopOffDialog").dialog('close');
					}
					
				}
			},
{				text : "Add New",
				click : function() {
					if($("#statusCode").text()!='ISSD' && $("#statusCode").text()!='CORR' && (isPartyAdd)){
						getCheckHazardGridRows();
						blockUI();
						console.log("before addStopOff");
						//addStopOff();
						var validateFields= $("#shipmentStopOffForm").validationEngine('validate') ; 
		
						if(validateFields){ 
						var queryString = $('#shipmentStopOffForm').formSerialize();
						$.ajax({
							url : _context +"/shipment/stopoff/addStopOff",
							type : "POST",
							asyn:false,
							data : queryString,
							success : function(responseText) {
							if (responseText.success == true) {
							console.log("inside addStopOff");
							$("#stopOffsGrid").trigger("reloadGrid");
							isStopChanged='';
							$("#shipmentStopOffDialog").dialog('close');
							console.log("before showAddStopOffsDialog");
							showAddStopOffsDialog();
							console.log("after showAddStopOffsDialog");
						} else 
							{
							showResponseMessages("shipmentStopOffMsgDiv", responseText);
							$('#shipmentStopOffMsgDiv').show();
							}
						}
					});
					}
						console.log("after addStopOff");
						$.unblockUI();
						//saveAllItemStopOffs();
						//setPartiesHeader();
					}else{
						$("#shipmentStopOffDialog").dialog('close');
					}
					
				}
			}			]);
			
			$('#shipmentStopOffForm').validationEngine('attach');
			console.log("open shipmentStopOffDialog ");
			$("#shipmentStopOffDialog").dialog('open');
			
		}
	});
	}
}

function addStopOff() {
		var validateFields= $("#shipmentStopOffForm").validationEngine('validate') ; 
		
		if(validateFields){ 
		var queryString = $('#shipmentStopOffForm').formSerialize();
		$.ajax({
			url : _context +"/shipment/stopoff/addStopOff",
			type : "POST",
			asyn:false,
			data : queryString,
			success : function(responseText) {
				if (responseText.success == true) {
					console.log("inside addStopOff");
					$("#stopOffsGrid").trigger("reloadGrid");
					isStopChanged='';
					$("#shipmentStopOffDialog").dialog('close');
					
				} else 
					{
					showResponseMessages("shipmentStopOffMsgDiv", responseText);
					$('#shipmentStopOffMsgDiv').show();
					}
			}
		});
	} else
		return;
}

function updateStopOff() {
	
	var validateFields= $("#shipmentStopOffForm").validationEngine('validate') ;

	
	if(validateFields){ // Changes done for Defect D017161
		
		var queryString = $('#shipmentStopOffForm').formSerialize();
		
		stopOffUpdate(queryString);
			
			
		}
		
	else
		return false;
}

function stopOffUpdate(queryString)
{
	$.ajax({
		url : _context +"/shipment/stopoff/stopOffUpdate",
		type : "POST",
		data : queryString,
		success : function(responseText) {
			if (responseText.success == true) {
				$("#stopOffsGrid").trigger("reloadGrid");
				$("#shipmentStopOffDialog").dialog('close');
				showResponseMessages("msgDiv", responseText);
				$('#shipmentStopOffMsgDiv').hide();
				isStopChanged='';
			}
			else 
				{
				showResponseMessages("shipmentStopOffMsgDiv", responseText);
				$('#shipmentStopOffMsgDiv').show();
				}
		}
	});
}

function restorePreShptSummary()
{
	var queryString = $('#shipmentStopOffForm').formSerialize();
	$.ajax({
		url : _context +"/shipment/stopoff/stopOffPrevUpdate",
		type : "POST",
		data : queryString,
		success : function(responseText) {
			if (responseText.success == true) {
				$("#stopOffsGrid").trigger("reloadGrid");
				$("#shipmentStopOffDialog").dialog('close');
				showResponseMessages("msgDiv", responseText);
				$('#shipmentStopOffMsgDiv').hide();
				isStopChanged='';
			}
			else 
				{
				showResponseMessages("shipmentStopOffMsgDiv", responseText);
				$('#shipmentStopOffMsgDiv').show();
				}
		}
	});
}

;var isSpecialServiceChanged=false;
$(document).ready(function () {
	$("#spSvcEntityName").val('shipment');
	var spsvCodeLineNumber=0;
	var truckerLineNumber=0;
	var payeeLineNumber=0;
	var equipmentVinsightLineNumber=0;
	
	/*$('input[name="specialServiceFormLine1\\.specialServiceCode"]').change(function(){
		var index=1;
		checkForSpecialServiceCdChg(index);
	});*/
	/*$('input[name="specialServiceFormLine2\\.specialServiceCode"]').change(function(){
		var index=2;
		checkForSpecialServiceCdChg(index);
	});
	$('input[name="specialServiceFormLine3\\.specialServiceCode"]').change(function(){
		var index=3;
		checkForSpecialServiceCdChg(index);
	});
	$('input[name="specialServiceFormLine4\\.specialServiceCode"]').change(function(){
		var index=4;
		checkForSpecialServiceCdChg(index);
	});
	$('input[name="specialServiceFormLine5\\.specialServiceCode"]').change(function(){
		var index=5;
		checkForSpecialServiceCdChg(index);
	});*/
	
	//D025134: 	Maintain Bill: SPECIAL SERVICE: ADV saved without PAYEE
	$("#specialServiceFormLine1 input").change(function() {
		checkForSpecialServiceCdChg(1);
		isSpecialServiceChanged = true;
	});

	$("#specialServiceFormLine1 select").change(function() {
		isSpecialServiceChanged = true;
	});
	
	$("#specialServiceFormLine2 input").change(function() {
		checkForSpecialServiceCdChg(2);
		isSpecialServiceChanged = true;
	});

	$("#specialServiceFormLine2 select").change(function() {
		isSpecialServiceChanged = true;
	});
	
	$("#specialServiceFormLine3 input").change(function() {
		checkForSpecialServiceCdChg(3);
		isSpecialServiceChanged = true;
	});

	$("#specialServiceFormLine3 select").change(function() {
		isSpecialServiceChanged = true;
	});
	
	$("#specialServiceFormLine4 input").change(function() {
		checkForSpecialServiceCdChg(4);
		isSpecialServiceChanged = true;
	});

	$("#specialServiceFormLine4 select").change(function() {
		isSpecialServiceChanged = true;
	});
	
	$("#specialServiceFormLine5 input").change(function() {
		checkForSpecialServiceCdChg(5);
		isSpecialServiceChanged = true;
	});

	$("#specialServiceFormLine5 select").change(function() {
		isSpecialServiceChanged = true;
	});
	
	/*
	 * for defect 21951
	 */
	$("form#specialServiceMasterForm input[type=text]").click(function() {
		clearErrMsg();
	});
	$("form#specialServiceMasterForm select").click(function() {
		clearErrMsg();
	});
	
	$('#imgSpecialServiceCodeLine1').click(function(){
		var index=1;
		casSpSvcCodeLookup(index);
		//processUIValidations(index);
	});
	$('#imgSpecialServiceCodeLine2').click(function(){
		var index=2;
		casSpSvcCodeLookup(index);
		//processUIValidations(index);
	});
	$('#imgSpecialServiceCodeLine3').click(function(){
		var index=3;
		casSpSvcCodeLookup(index);
		//processUIValidations(index);
	});
	$('#imgSpecialServiceCodeLine4').click(function(){
		var index=4;
		casSpSvcCodeLookup(index);
		//processUIValidations(index);
	});
	$('#imgSpecialServiceCodeLine5').click(function(){
		var index=5;
		casSpSvcCodeLookup(index);
		//processUIValidations(index);
	});
	
	$('#imgTruckerRateLine1').click(function(){
		var index=1;
		casTruckerLookup(index);
	});
	$('#imgTruckerRateLine2').click(function(){
		var index=2;
		casTruckerLookup(index);
	});
	$('#imgTruckerRateLine3').click(function(){
		var index=3;
		casTruckerLookup(index);
	});
	$('#imgTruckerRateLine4').click(function(){
		var index=4;
		casTruckerLookup(index);
	});
	$('#imgTruckerRateLine5').click(function(){
		var index=5;
		casTruckerLookup(index);
	});
	
	
	$('#imgPayeeLine1').click(function(){
		var index=1;
		casPayeeLookup(index);
	});
	$('#imgPayeeLine2').click(function(){
		var index=2;
		casPayeeLookup(index);
	});
	$('#imgPayeeLine3').click(function(){
		var index=3;
		casPayeeLookup(index);
	});
	$('#imgPayeeLine4').click(function(){
		var index=4;
		casPayeeLookup(index);
	});
	$('#imgPayeeLine5').click(function(){
		var index=5;
		casPayeeLookup(index);
	});
	
	$('select[name="specialServiceFormLine1\\.rateBasisCode"]').change(function(){
		var index=1;
		processRateBasis(index);
	});
	$('select[name="specialServiceFormLine2\\.rateBasisCode"]').change(function(){
		var index=2;
		processRateBasis(index);
	});
	$('select[name="specialServiceFormLine3\\.rateBasisCode"]').change(function(){
		var index=3;
		processRateBasis(index);
	});
	$('select[name="specialServiceFormLine4\\.rateBasisCode"]').change(function(){
		var index=4;
		processRateBasis(index);
	});
	$('select[name="specialServiceFormLine5\\.rateBasisCode"]').change(function(){
		var index=5;
		processRateBasis(index);
	});
	
	//Cas search Integration
	casPredictiveSearchOnAllLines();
	casPredictiveSearchOnAllPayee();
	
	//BR 5 All indicator implementation
	$('select[name="specialServiceFormLine1\\.isApplyToAll"]').change(function(){
		var index=1;
		validateApplyToAllInd(index);
	});
	$('select[name="specialServiceFormLine2\\.isApplyToAll"]').change(function(){
		var index=2;
		validateApplyToAllInd(index);
	});
	$('select[name="specialServiceFormLine3\\.isApplyToAll"]').change(function(){
		var index=3;
		validateApplyToAllInd(index);
	});
	$('select[name="specialServiceFormLine4\\.isApplyToAll"]').change(function(){
		var index=4;
		validateApplyToAllInd(index);
	});
	$('select[name="specialServiceFormLine5\\.isApplyToAll"]').change(function(){
		var index=5;
		validateApplyToAllInd(index);
	});
	
	$('#equipmentVinsight1').click(function(){
		var index="1";
		casEquipmentVinsightLookup(index);
	});
	$('#equipmentVinsight2').click(function(){
		var index="2";
		casEquipmentVinsightLookup(index);
	});
	$('#equipmentVinsight3').click(function(){
		var index="3";
		casEquipmentVinsightLookup(index);
	});
	$('#equipmentVinsight4').click(function(){
		var index="4";
		casEquipmentVinsightLookup(index);
	});
	$('#equipmentVinsight5').click(function(){
		var index="5";
		casEquipmentVinsightLookup(index);
	});


	
	//getRateBasisList();
	
	
	populateDefaultPageOptions();
	if($('#statusCode').text()!='ISSUED' && $('#statusCode').text()!='CORRECTED' && isSpecialServiceModifiable==true){
		removeClassesForSpecialServiceForm();
	}
	$('#msgDivSpSv').hide();
	
	$("#specialServiceMasterForm").validationEngine('attach');
	
	$('input[name="specialServiceFormLine1\\.manualUserRate"]').change(function(){
		var index="1";
		validateFloatingNumber(index);
		checkRateBasisRequired(index);
	});
	$('input[name="specialServiceFormLine2\\.manualUserRate"]').change(function(){
		var index="2";
		validateFloatingNumber(index);
		checkRateBasisRequired(index);
	});
	$('input[name="specialServiceFormLine3\\.manualUserRate"]').change(function(){
		var index="3";
		validateFloatingNumber(index);
		checkRateBasisRequired(index);
	});
	$('input[name="specialServiceFormLine4\\.manualUserRate"]').change(function(){
		var index="4";
		validateFloatingNumber(index);
		checkRateBasisRequired(index);
	});
	$('input[name="specialServiceFormLine5\\.manualUserRate"]').change(function(){
		var index="5";
		validateFloatingNumber(index);
		checkRateBasisRequired(index);
	});
	
	$("#specialServiceMasterForm").validationEngine('detach');
	$("#specialServiceMasterForm").validationEngine('attach');

	$('input[name="specialServiceFormLine1\\.payee"]').change(function(){
		var index="1";
		validatePayee(index);
	});
	$('input[name="specialServiceFormLine2\\.payee"]').change(function(){
		var index="2";
		validatePayee(index);
	});
	$('input[name="specialServiceFormLine3\\.payee"]').change(function(){
		var index="3";
		validatePayee(index);
	});
	$('input[name="specialServiceFormLine4\\.payee"]').change(function(){
		var index="4";
		validatePayee(index);
	});
	$('input[name="specialServiceFormLine5\\.payee"]').change(function(){
		var index="5";
		validatePayee(index);
	});
	
	$('input[name="specialServiceFormLine1\\.equipmentVinsight"]').change(function(){
		var index="1";
		validateEquipmentVinsight(index);
		//checkEquipmentContainer(index);
	});
	$('input[name="specialServiceFormLine2\\.equipmentVinsight"]').change(function(){
		var index="2";
		validateEquipmentVinsight(index);
		//checkEquipmentContainer(index);
	});
	$('input[name="specialServiceFormLine3\\.equipmentVinsight"]').change(function(){
		var index="3";
		validateEquipmentVinsight(index);
		//checkEquipmentContainer(index);
	});
	$('input[name="specialServiceFormLine4\\.equipmentVinsight"]').change(function(){
		var index="4";
		validateEquipmentVinsight(index);
		//checkEquipmentContainer(index);
	});
	$('input[name="specialServiceFormLine5\\.equipmentVinsight"]').change(function(){
		var index="5";
		validateEquipmentVinsight(index);
		//checkEquipmentContainer(index);
	});
	
	$('input[name="specialServiceFormLine1\\.commodityLineNumber"]').change(function(){
		var index="1";
		validateCommodityLineNumber(index);
	});
	$('input[name="specialServiceFormLine2\\.commodityLineNumber"]').change(function(){
		var index="2";
		validateCommodityLineNumber(index);
	});
	$('input[name="specialServiceFormLine3\\.commodityLineNumber"]').change(function(){
		var index="3";
		validateCommodityLineNumber(index);
	});
	$('input[name="specialServiceFormLine4\\.commodityLineNumber"]').change(function(){
		var index="4";
		validateCommodityLineNumber(index);
	});
	$('input[name="specialServiceFormLine5\\.commodityLineNumber"]').change(function(){
		var index="5";
		validateCommodityLineNumber(index);
	});
	
	 $('input[name="specialServiceFormLine1.payee"]').change(function(){
		 if($('input[name="specialServiceFormLine1.payee"]').val()=="" || $('input[name="specialServiceFormLine1.routingText"]').val()=='')
		 {
			  $('input[name="specialServiceFormLine1.careOf"]').val("");
		      $('input[name="specialServiceFormLine1.routingText"]').val("");
		 }
	});
	 
	 $('input[name="specialServiceFormLine2.payee"]').change(function(){
		 if($('input[name="specialServiceFormLine2.payee"]').val()=="" || $('input[name="specialServiceFormLine2.routingText"]').val()=='')
		 {
			  $('input[name="specialServiceFormLine2.careOf"]').val("");
		      $('input[name="specialServiceFormLine2.routingText"]').val("");
		 }
	});
	 $('input[name="specialServiceFormLine3.payee"]').change(function(){
		 if($('input[name="specialServiceFormLine3.payee"]').val()=="" || $('input[name="specialServiceFormLine3.routingText"]').val()=='')
		 {
			  $('input[name="specialServiceFormLine3.careOf"]').val("");
		      $('input[name="specialServiceFormLine3.routingText"]').val("");
		 }
	});
	 $('input[name="specialServiceFormLine4.payee"]').change(function(){
		 if($('input[name="specialServiceFormLine4.payee"]').val()=="" || $('input[name="specialServiceFormLine4.routingText"]').val()=='')
		 {
			  $('input[name="specialServiceFormLine4.careOf"]').val("");
		      $('input[name="specialServiceFormLine4.routingText"]').val("");
		 }
	});
	 $('input[name="specialServiceFormLine5.payee"]').change(function(){
		 if($('input[name="specialServiceFormLine5.payee"]').val()=="" || $('input[name="specialServiceFormLine5.routingText"]').val()=='')
		 {
			  $('input[name="specialServiceFormLine5.careOf"]').val("");
		      $('input[name="specialServiceFormLine5.routingText"]').val("");
		 }
	});
	 
	 $('input[name*="numberOfUnit"]').change(function(){
		 var numberOfUnit = $(this).val();
		 $(this).val($.trim(numberOfUnit));
	 });
	 
	
});

function validateFloatingNumber(index){
     var finalRate ="";
     var rate = "";
     rate = $('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').val();;
     rate= rate.split(",");
     for(i=0;i<rate.length;i++){
        finalRate = finalRate+rate[i];
     }
     if(finalRate != "")
        $('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').val(finalRate);
}
function checkEquipmentContainer(index){
	//-TODO need to be implement this a t later stage
	/*
	var entityName=$("#spSvcEntityName").val();
	if(entityName=='booking'){
		var isRequiredUnit=$('#isRequireReceivedUnit').val();
		var shipmentNumber=$('#shipmentNumberHidden').val();
		var bookingId=$('#bookingId').val();
		var equipmentVinsight=$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').val();
		if(!(equipmentVinsight == undefined || equipmentVinsight=='' || equipmentVinsight==null)){
			$.ajax({
				type : "POST",
				url : _context +"/booking/specialservice/getUnitOrEquipment",
				data : {
					
					vinsightequipment: equipmentVinsight,
					isRequiredUnit: isRequiredUnit,
					bookingId: bookingId
				},
				success : function(responseText) {	
					if(responseText.success){
						$('#msgDivSplSrv').hide();
						if(isRequiredUnit=='Y'){
							if(null!=responseText.data && undefined!=responseText.data && ''!=responseText.data ){
								$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').val(responseText.data[0]); 
								$("#equipmentVinsightHidden"+index).val(responseText.data[0]);
								$('input[name="specialServiceFormLine'+index+'\\.receivedUnitId"]').val(responseText.data[0]);
							}else{
								showErrorMessage('VINsight ID# '+equipmentVinsight+' was not found.  Please select from Received unit search');
							}
							
						}
						if(isRequiredUnit=='N'){
							if(null!=responseText.data && undefined!=responseText.data && ''!=responseText.data ){
								$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').val(responseText.data[2]);
								$("#equipmentVinsightHidden"+index).val(responseText.data[2]);
								$('input[name="specialServiceFormLine'+index+'\\.equipmentId"]').val(responseText.data[2]);
								$('input[name="specialServiceFormLine'+index+'\\.receivedFreightId"]').val(responseText.data[0]);
							}else{
								showErrorMessage('Equipment Nbr# '+equipmentVinsight+' is not found.  Please select from variance by booking');
								//showErrorMessage('Container '+equipmentVinsight+' either not associated to booking '+shipmentNumber+' or doesnt exist.');
							}
						}
					validateCommodityLineNumber(index);
					}else{
						if(isRequiredUnit=='Y'){
							showErrorMessage('VINsight ID# '+equipmentVinsight+' was not found.  Please select from Received unit search');
							//showErrorMessage('VinSight# '+equipmentVinsight+' doesnt exist.');
						}
						if(isRequiredUnit=='N'){
							showErrorMessage('Equipment Nbr# '+equipmentVinsight+' is not found.  Please select from variance by booking');
							//showErrorMessage('Container '+equipmentVinsight+' either not associated to booking '+shipmentNumber+' or doesnt exist.');
						}
					}
				}
			});
		}else{
			$('#msgDivSplSrv').hide();
		}
	}
*/}

function validateCommodityLineNumber(index){
	//var freightCount = $("#freightGrid").getGridParam("reccount");
	var freightCount = "";
	if($("#commodityGrid").getGridParam("reccount")!='undefined' && $("#commodityGrid").getGridParam("reccount")>0){
		freightCount = $("#commodityGrid").getGridParam("reccount");
	}else if($("#povGrid").getGridParam("reccount")!='undefined' && $("#povGrid").getGridParam("reccount")>0){
		freightCount = $("#povGrid").getGridParam("reccount");
	}else if($("#convGrid").getGridParam("reccount")!='undefined' && $("#convGrid").getGridParam("reccount")>0){
		freightCount = $("#convGrid").getGridParam("reccount");
	}
	//alert("freightCount"+freightCount);
	var applyToAllInd=$('select[name="specialServiceFormLine'+index+'\\.isApplyToAll"] option:selected').text();
	var commSize= $('#unitOfCommodity option');
	if(applyToAllInd=='N'){
		if(freightCount!=null && freightCount!=undefined && freightCount!=''){
			if(commSize!=null && commSize!=undefined && commSize.length==1){
				$('input[name="specialServiceFormLine'+index+'\\.commodityLineNumber"]').val(1);
			}
		}
	}
}


function validateEquipmentVinsight(index){
	var equipmentVinsight=$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').val();
	var equipmentVinsightHidden=$("#equipmentVinsightHidden"+index).val();
	var receivedUnitId=$('input[name="specialServiceFormLine'+index+'\\.receivedUnitId"]').val();
	var equipmentId=$('input[name="specialServiceFormLine'+index+'\\.equipmentId"]').val();
	if($.trim(equipmentVinsight)==''){
		$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').val(""); 
		$('input[name="specialServiceFormLine'+index+'\\.receivedUnitId"]').val("");
		$('input[name="specialServiceFormLine'+index+'\\.equipmentId"]').val("");
		$('input[name="specialServiceFormLine'+index+'\\.receivedFreightId"]').val("");
	}/*else if(receivedUnitId=='undefined' || receivedUnitId==null || receivedUnitId==""){				
		$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').val("");  
    }else if(equipmentId=='undefined' || equipmentId==null || equipmentId==""){				
		$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').val("");
		$('input[name="specialServiceFormLine'+index+'\\.receivedFreightId"]').val("");
    }*/else if(equipmentVinsight!=equipmentVinsightHidden){
		$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').val(""); 
		$("#equipmentVinsightHidden"+index).val("");
		$('input[name="specialServiceFormLine'+index+'\\.receivedUnitId"]').val("");
		$('input[name="specialServiceFormLine'+index+'\\.equipmentId"]').val("");
		$('input[name="specialServiceFormLine'+index+'\\.receivedFreightId"]').val("");
	}//Block commented by Mangesh for testing purpose
}

function validatePayee(index){
	var payee=$('input[name="specialServiceFormLine'+index+'\\.payee"]').val();
	var payeeHidden=$("#payeeHidden"+index).val();
	var organisationId=$('input[name="specialServiceFormLine'+index+'\\.organisationId"]').val();
	if($.trim(payee)==''){
		$('input[name="specialServiceFormLine'+index+'\\.organisationId"]').val("");
		$('input[name="specialServiceFormLine'+index+'\\.payee"]').val(""); 
		$('input[name="specialServiceFormLine'+index+'\\.addressRoleId"]').val("");
		$('input[name="specialServiceFormLine'+index+'\\.note"]').val("");
		$("#payeeHidden"+index).val("");
	} 
	else if(organisationId=='undefined' || organisationId==null || organisationId==""){ 
		$('input[name="specialServiceFormLine'+index+'\\.organisationId"]').val("");
		$("#payeeHidden"+index).val("");
		$('input[name="specialServiceFormLine'+index+'\\.payee"]').val(""); 
		$('input[name="specialServiceFormLine'+index+'\\.note"]').val("");
	}
	else if(payee!=payeeHidden){
		$('input[name="specialServiceFormLine'+index+'\\.payee"]').val(""); 
		$("#payeeHidden"+index).val("");
		$('input[name="specialServiceFormLine'+index+'\\.organisationId"]').val("");
		$('input[name="specialServiceFormLine'+index+'\\.addressRoleId"]').val("");
		$('input[name="specialServiceFormLine'+index+'\\.note"]').val("");
	}
}

function checkRateBasisRequired(index){
	var manualUserRate=$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').val();
	var isManualCharge=$('input[name="specialServiceFormLine'+index+'\\.isManualCharge"]').val();
	if(manualUserRate!=''){
		if($('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"] option:selected').text()==''){
			$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').addClass('validate[required]');
		}else{
			$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').removeClass('validate[required]');
		}
	}else if(manualUserRate==''){
		if(isManualCharge=='N' || isManualCharge==''){
			$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').removeClass('validate[required]');
			$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').removeClass('validate[required]');
		}
	}
	if($('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').val()!='' && 
			$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"] option:selected').text()!=''){
		$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').addClass('validate[required]');
	}
	
	
	var truckerRateId=$('input[name="specialServiceFormLine'+index+'\\.milTruckerRateId"]').val();
	var isMilTruckerCustomised=$('input[name="specialServiceFormLine'+index+'\\.isMilTruckerRateCustomized"]').val();
	if(null!=truckerRateId && truckerRateId!='' && isMilTruckerCustomised=='N' ){
		var truckerRateAmount=$('#truckerAmount'+index).val();
		if(truckerRateAmount!="" && manualUserRate!=truckerRateAmount){
			$('input[name="specialServiceFormLine'+index+'\\.source"]').val("AH CUSTOM");
			$('label[for="specialServiceFormLine'+index+'\\.sourceReadOnly"]').text("AH Customized");
			$('input[name="specialServiceFormLine'+index+'\\.isMilTruckerRateCustomized"]').val('Y');
			$('select[name="specialServiceFormLine'+index+'\\.isDropOrPull"]').attr("disabled", false);
		}else{
			$('select[name="specialServiceFormLine'+index+'\\.isDropOrPull"]').attr("disabled", true);
		}
	}
}

/*
 * Rules for Defaulting and Clearing Special Services
 */

function populateDefaultPageOptions(){
	var entity_name=$("#spSvcEntityName").val();
	if(entity_name=='container'){
		$('select[name*="isApplyToAll"]').selected().val('N');
		$('input[name*="equipmentVinsight"]').attr("disabled", true);
		$('select[name*="isApplyToAll"]').attr("disabled", true);
		//$('input[name*="equipmentVinsight"]').attr("readonly", true);
	}else if(entity_name=='shipment'){
		$('select[name*="isApplyToAll"]').selected().val('N');
		$('select[name*="isDropOrPull"]').selected().val(' ');
		$('input[name*="commodityLineNumber"]').attr("disabled", true);
		var shipmentNumber=$('#shipmentNumberHidden').val();
		if(null==shipmentNumber || shipmentNumber==''){
			$('input[name*="equipmentVinsight"]').removeClass("validate[required]");
			$('input[name*="equipmentVinsight"]').attr("disabled", true);
		}
	}
	
}
function populateDefaultSelectOptions(){
	$('select[name*="isApplyToAll"]').attr("selectedIndex",0);
	$('select[name*="isDropOrPull"]').attr("selectedIndex",0);
}

function removeClassesForSpecialServiceForm(){
	$('input[name*="manualUserRate"]').removeClass("validate[required]");
	$('select[name*="rateBasisCode"]').removeClass("validate[required]");
	$('input[name*="numberOfUnit"]').removeClass("validate[required]");
	$('input[name*="commodityLineNumber"]').removeClass("validate[required]");
	$('input[name*="payee"]').removeClass("validate[required]");
	//$('input[name*="specialServiceDate"]').removeClass("validate[required]");
	clearSpecialServiceRow(1);
	clearSpecialServiceRow(2);
	clearSpecialServiceRow(3);
	clearSpecialServiceRow(4);
	clearSpecialServiceRow(5);
}

function checkForSpecialServiceCdChg(index){
	if($("#statusCode").text()!='ISSUED' && $("#statusCode").text()!='CORRECTED' && isSpecialServiceModifiable==true){
		if($('input[name=specialServiceFormLine'+index+'\\.specialServiceCode]').val()=='' || 
			$('input[name=specialServiceFormLine'+index+'\\.specialServiceCode]').val()!=$('#specialServiceCode'+index).val()){
			clearSpecialServiceRow(index);
		}
	} else{
		if($("#isSpecialServiceAdd").val()=="true"){
			isSpecialServiceChanged = true;
		}
	}
}

function clearSpecialServiceRow(index){
	//alert("Test1");
	// Hidden field
	$('input[name="specialServiceFormLine'+index+'\\.isManualCharge"]').val("");
	$('input[name="specialServiceFormLine'+index+'\\.isRequireDate"]').val("");
	$('input[name="specialServiceFormLine'+index+'\\.isRequireQuantity"]').val("");
	$('input[name="specialServiceFormLine'+index+'\\.milTruckerRateId"]').val("");
	$('input[name="specialServiceFormLine'+index+'\\.chargeCodeExpected"]').val("");
	$('input[name="specialServiceFormLine'+index+'\\.isMilTruckerRateCustomized"]').val("");
	$('input[name="specialServiceFormLine'+index+'\\.addressRoleId"]').val("");
	$('input[name="specialServiceFormLine'+index+'\\.shipmentAddnlChrsticIdDs"]').val("");
	
	
	// Form Fields
	$('input[name="specialServiceFormLine'+index+'\\.specialServiceCode"]').val("");
	$('input[name="specialServiceFormLine'+index+'\\.commodityLineNumber"]').val("");
	//Process level code - Apply to All Indicator
	$('input[name="specialServiceFormLine'+index+'\\.processLevelCode"]').val("");
	$('label[for="specialServiceFormLine'+index+'\\.processLevelCodeReadOnly"]').text("");
	//Equipment/Vinsight -- SpecialServiceDate
	$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').val("");
	//$('input[name="specialServiceFormLine'+index+'\\.specialServiceDate"]').val("");
	//Number Of Unit - Drop Pull
	$('input[name="specialServiceFormLine'+index+'\\.numberOfUnit"]').val("");
	//$('select[name="specialServiceFormLine'+index+'\\.isDropOrPull"]').attr("selectedIndex",0);
	$('select[name="specialServiceFormLine1\\.isDropOrPull"]').selected().val(" ");
	//rate -- Amount
	$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').val("");
	$('input[name="specialServiceFormLine'+index+'\\.amount"]').val("");
	$('label[for="specialServiceFormLine'+index+'\\.amountReadOnly"]').text("");
	//RateBasis -- Source
	$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').attr("selectedIndex",0);
	$('input[name="specialServiceFormLine'+index+'\\.source"]').val("");
	$('label[for="specialServiceFormLine'+index+'\\.sourceReadOnly"]').text("");
	//Payee Routing Text
	$('input[name="specialServiceFormLine'+index+'\\.payee"]').val("");
	$('input[name="specialServiceFormLine'+index+'\\.careOf"]').val("");
	$('input[name="specialServiceFormLine'+index+'\\.routingText"]').val("");
	
	//Removing the classes
	$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').removeClass("validate[required]");
	$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').removeClass("validate[required]");
	$('input[name="specialServiceFormLine'+index+'\\.numberOfUnit"]').removeClass("validate[required]");
	$('input[name="specialServiceFormLine'+index+'\\.commodityLineNumber"]').removeClass("validate[required]");
	$('input[name="specialServiceFormLine'+index+'\\.payee"]').removeClass("validate[required]");
	//$('input[name="specialServiceFormLine'+index+'\\.specialServiceDate"]').removeClass("validate[required]");
	
	//Remove the read only fields
	//$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').attr("disabled", false);
	//$('input[name="specialServiceFormLine'+index+'\\.commodityLineNumber"]').attr("disabled", false);
	$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').attr("disabled", false);
	$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').attr('disabled',false);
	$('input[name="specialServiceFormLine'+index+'\\.numberOfUnit"]').attr('disabled',false);
	$('input[name="specialServiceFormLine'+index+'\\.payee"]').attr("disabled", false);
	$('input[name="specialServiceFormLine'+index+'\\.careOf"]').attr("disabled", false);
	$('input[name="specialServiceFormLine'+index+'\\.routingText"]').attr("disabled", false);
	//$('input[name="specialServiceFormLine'+index+'\\.specialServiceDate"]').attr('disabled',false);
	
	$('input[name="specialServiceFormLine'+index+'\\.commodityLineNumber"]').attr("disabled", true);
	$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').attr("disabled", true);
	
	
	$('input[name="specialServiceFormLine'+index+'\\.isMilTruckerRateCustomized"]').val('');
	$('input[name="specialServiceFormLine'+index+'\\.organisationId"]').val('');
	$('input[name="specialServiceFormLine'+index+'\\.equipmentId"]').val('');
	$('input[name="specialServiceFormLine'+index+'\\.receivedUnitId"]').val('');

	$('#specialServiceCode'+index).val('');
	$('#truckerAmount'+index).val('');
	$('#payeeHidden'+index).val('');
	$('#equipmentVinsightHidden'+index).val('');
	$('#equipmentVinsight'+index).hide();
	$('#imgPayeeLine'+index).show();
	$('#imgTruckerRateLine'+index).show();
	$('input[name="specialServiceFormLine1\\.payee"]').css("background-color", "");
	$('#specialServiceFormLine'+index).validationEngine('hideAll');
	
	$('#passThruPayable'+index).val('');
}

/*
 * Rules for applied when Special Service Code is selected from Predictive or Lookup
 */

function processUIValidations(index){
	processPayeeRequired(index);
	processRateRateBasis(index);
	processUnits(index);
	//processSpecialServicedate(index);
	processProcessLevelCode(index);
	$("#specialServiceMasterForm").validationEngine('detach');
	$("#specialServiceMasterForm").validationEngine('attach');
}
/*
 * Rules for applied when Special Service Code is selected from Predictive or Lookup
 */

function applyUIValidations(index){
	
	var truckerRateId=$('input[name="specialServiceFormLine'+index+'\\.milTruckerRateId"]').val();
	hideErrorMessage();
	if(truckerRateId==null || truckerRateId=='' || truckerRateId==undefined){
		processPayeeRequired(index);
	}
	processRateRateBasis(index);
	processUnits(index);
	//processSpecialServicedate(index);
	processProcessLevelCode(index);
	$("#specialServiceMasterForm").validationEngine('detach');
	$("#specialServiceMasterForm").validationEngine('attach');
}
function processPayeeRequired(index){
	var spSvChargeCode= $('input[name="specialServiceFormLine'+index+'\\.chargeCodeExpected"]').val();
	var passThruPayable=$('#passThruPayable'+index).val();
	var milTruckerRateId= $('input[name="specialServiceFormLine'+index+'\\.milTruckerRateId"]').val();
	var isDefaultFrtPayableCharge='';
	var accessorialAllowanceCode='';
	//Added PassthruPayable=="null" condition for Defect D026932
	if(passThruPayable=='' || passThruPayable==null || passThruPayable==undefined || passThruPayable=="null"){
		$('input[name="specialServiceFormLine'+index+'\\.payee"]').val('');
		$('input[name="specialServiceFormLine'+index+'\\.note"]').val('');
		$('input[name="specialServiceFormLine'+index+'\\.payee"]').removeClass("validate[required]");
		$('input[name="specialServiceFormLine'+index+'\\.payee"]').attr('disabled',true);
		$('#imgPayeeLine'+index).hide();
		return;
	} else {
		spSvChargeCode=passThruPayable;
	}
	if($('input[name="specialServiceFormLine'+index+'\\.isManualCharge"]').val()!='N'){
	$.ajax({
		type : "POST",
		url : _context +"/shipment/specialservice/getChargeCode",
		data : {
			// ChargeCode
			chargeCode: spSvChargeCode
		},
		success : function(responseText) {
			//alert(responseText);
			if(responseText!=null && responseText.data!=null){
				isDefaultFrtPayableCharge = responseText.data.isDefaultFrtPayableCharge;
				accessorialAllowanceCode = responseText.data.accessorialAllowanceCode;
				if(isDefaultFrtPayableCharge=='Y'){
					$('input[name="specialServiceFormLine'+index+'\\.payee"]').addClass("validate[required]");
					$('input[name="specialServiceFormLine'+index+'\\.payee"]').attr('disabled',false);
					$('input[name="specialServiceFormLine'+index+'\\.careOf"]').attr('disabled',true);
					$('input[name="specialServiceFormLine'+index+'\\.routingText"]').attr('disabled',false);
					$('#imgPayeeLine'+index).show();
				}else if(isDefaultFrtPayableCharge=='N' && (milTruckerRateId=='')){
					$('input[name="specialServiceFormLine'+index+'\\.payee"]').val('');
					$('input[name="specialServiceFormLine'+index+'\\.careOf"]').val('');
					$('input[name="specialServiceFormLine'+index+'\\.routingText"]').val('');
					$('input[name="specialServiceFormLine'+index+'\\.payee"]').removeClass("validate[required]");
					$('input[name="specialServiceFormLine'+index+'\\.payee"]').attr('disabled',true);
					$('input[name="specialServiceFormLine'+index+'\\.careOf"]').attr('disabled',true);
					$('input[name="specialServiceFormLine'+index+'\\.routingText"]').attr('disabled',true);
					$('#imgPayeeLine'+index).hide();
				}else{
					$('input[name="specialServiceFormLine'+index+'\\.payee"]').removeClass("validate[required]");
					$('input[name="specialServiceFormLine'+index+'\\.payee"]').attr('disabled',false);
					$('input[name="specialServiceFormLine'+index+'\\.careOf"]').attr('disabled',true);
					$('input[name="specialServiceFormLine'+index+'\\.routingText"]').attr('disabled',false);
					$('#imgPayeeLine'+index).show();
				}
				if(null==accessorialAllowanceCode && accessorialAllowanceCode!=''){
					if(accessorialAllowanceCode=='A'){
						$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').removeClass("validate[required]");
						$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').removeClass("validate[required]");
						$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').val('');
						$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').attr("selectedIndex",0);
						$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').attr('disabled',true);
						$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').attr('disabled',true);
						$('#imgTruckerRateLine'+index).hide();
					}else if(accessorialAllowanceCode=='C'){
						$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').attr('disabled',false);
						$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').attr('disabled',false);
						$('#imgTruckerRateLine'+index).show();
					}
				}
				if(isDefaultFrtPayableCharge!='Y'){
					var rateBasis=$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').selected().val();
					if($('input[name="specialServiceFormLine'+index+'\\.isManualCharge"]').val()!='Y' && 
							$('input[name="specialServiceFormLine'+index+'\\.isManualCharge"]').val()!='N' && (rateBasis==null || rateBasis=='') ){
						
						$('input[name="specialServiceFormLine'+index+'\\.payee"]').removeClass("validate[required]");
						$('input[name="specialServiceFormLine'+index+'\\.payee"]').attr('disabled',false);
						$('input[name="specialServiceFormLine'+index+'\\.careOf"]').attr('disabled',true);
						$('input[name="specialServiceFormLine'+index+'\\.routingText"]').attr('disabled',false);
						$('#imgPayeeLine'+index).show();
					}
				}
			
			}else{
				$('input[name="specialServiceFormLine'+index+'\\.payee"]').val('');
				$('input[name="specialServiceFormLine'+index+'\\.careOf"]').val('');
				$('input[name="specialServiceFormLine'+index+'\\.routingText"]').val('');
				$('input[name="specialServiceFormLine'+index+'\\.payee"]').removeClass("validate[required]");
				$('input[name="specialServiceFormLine'+index+'\\.payee"]').attr('disabled',true);
				$('input[name="specialServiceFormLine'+index+'\\.careOf"]').attr('disabled',true);
				$('input[name="specialServiceFormLine'+index+'\\.routingText"]').attr('disabled',true);
				$('#imgPayeeLine'+index).hide();
			}
		}
	});
}
}

function processRateRateBasis(index){
	//Rate Basis/Rate Check :BR 15, BR2, BR5
	if($('input[name="specialServiceFormLine'+index+'\\.isManualCharge"]').val()=='Y'){
		$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').attr('disabled',false);
		$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').attr('disabled',false);
		$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').addClass("validate[required]");
		$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').addClass("validate[required]");
		$('#imgTruckerRateLine'+index).show();
	}else if($('input[name="specialServiceFormLine'+index+'\\.isManualCharge"]').val()=='N') {
		$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').attr('disabled',true);
		$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').attr('disabled',true);
		$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').removeClass("validate[required]");
		$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').removeClass("validate[required]");
		$('#imgTruckerRateLine'+index).hide();
	}else {
		$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').attr('disabled',false);
		$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').attr('disabled',false);
		$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').removeClass("validate[required]");
		$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').removeClass("validate[required]");
		$('#imgTruckerRateLine'+index).show();
	}
}

function processUnits(index){
	if($('input[name="specialServiceFormLine'+index+'\\.isRequireQuantity"]').val()=='N'){
		//$('input[name="specialServiceFormLine'+index+'\\.numberOfUnit"]').val('');
		$('input[name="specialServiceFormLine'+index+'\\.numberOfUnit"]').attr('disabled',true);
		$('input[name="specialServiceFormLine'+index+'\\.numberOfUnit"]').removeClass("validate[required]");
	}else if($('input[name="specialServiceFormLine'+index+'\\.isRequireQuantity"]').val()=='Y'){
		//$('input[name="specialServiceFormLine'+index+'\\.numberOfUnit"]').val('');
		$('input[name="specialServiceFormLine'+index+'\\.numberOfUnit"]').attr('disabled',false);
		$('input[name="specialServiceFormLine'+index+'\\.numberOfUnit"]').addClass("validate[required]");
	}else{
		//$('input[name="specialServiceFormLine'+index+'\\.numberOfUnit"]').val('');
		$('input[name="specialServiceFormLine'+index+'\\.numberOfUnit"]').attr('disabled',false);
		$('input[name="specialServiceFormLine'+index+'\\.numberOfUnit"]').removeClass("validate[required]");
	}
}


function processProcessLevelCode(index){
	var processLvlCode=$('input[name="specialServiceFormLine'+index+'\\.processLevelCode"]').val();
	switch(processLvlCode){
		case "S":
				validateApplyToAllInd(index);
				break;
		case "C":
				validateApplyToAllInd(index);
				break;
		case "E":
				validateApplyToAllInd(index);
				break;
	}
}


function validateApplyToAllInd(index){
	//alert("Test3");
	var shipmentNumber=$('#shipmentNumber').val();
	var entity_name=$("#spSvcEntityName").val();
	if($('select[name="specialServiceFormLine'+index+'\\.isApplyToAll"] option:selected').text()=='N'){
		if($('input[name="specialServiceFormLine'+index+'\\.processLevelCode"]').val()=='S'){
			$('input[name="specialServiceFormLine'+index+'\\.commodityLineNumber"]').removeClass("validate[required]");
			$('input[name="specialServiceFormLine'+index+'\\.commodityLineNumber"]').attr("disabled", true);
			$('#equipmentVinsight'+index).hide();
		}
		if($('input[name="specialServiceFormLine'+index+'\\.processLevelCode"]').val()=='C'){
			processLevelC(index);
		}
		if($('input[name="specialServiceFormLine'+index+'\\.processLevelCode"]').val()=='E'){
			
			processLevelE(index,shipmentNumber);
		}
	}else if($('select[name="specialServiceFormLine'+index+'\\.isApplyToAll"] option:selected').text()=='Y'){
		if('shipment'==entity_name){
			processForShipment(index);
		}else if('container'==entity_name){
			
			processForShipment(index);
		}
	}
}

function processForShipment(index){
	//alert("Test2");
	$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').attr("disabled", true);
	$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').removeClass("validate[required]");
	$('input[name="specialServiceFormLine'+index+'\\.commodityLineNumber"]').removeClass("validate[required]");
	$('input[name="specialServiceFormLine'+index+'\\.commodityLineNumber"]').attr("disabled", true);
	$('input[name="specialServiceFormLine'+index+'\\.commodityLineNumber"]').val('');
	$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').val('');
	$('input[name="specialServiceFormLine'+index+'\\.receivedUnitId"]').val('');
	$('input[name="specialServiceFormLine'+index+'\\.shipmentFreightId"]').val('');
	$('input[name="specialServiceFormLine'+index+'\\.equipmentId"]').val('');
	$("#equipmentVinsightHidden"+index).val('');
	$('#equipmentVinsight'+index).hide();
}

function processLevelC(index){
	var freightCount = "";
	if($("#commodityGrid").getGridParam("reccount")!='undefined' && $("#commodityGrid").getGridParam("reccount")>0){
		freightCount = $("#commodityGrid").getGridParam("reccount");
	}else if($("#povGrid").getGridParam("reccount")!='undefined' && $("#povGrid").getGridParam("reccount")>0){
		freightCount = $("#povGrid").getGridParam("reccount");
	}else if($("#convGrid").getGridParam("reccount")!='undefined' && $("#convGrid").getGridParam("reccount")>0){
		freightCount = $("#convGrid").getGridParam("reccount");
	}
	var commSize= $('#unitOfCommodity option');
	if(freightCount!=null && freightCount!=undefined && freightCount!=''){
		if(commSize!=null && commSize!=undefined && commSize.length==1){
			$('input[name="specialServiceFormLine'+index+'\\.commodityLineNumber"]').val(1);
		}
	}
	$('input[name="specialServiceFormLine'+index+'\\.commodityLineNumber"]').addClass("validate[required]");
	$('input[name="specialServiceFormLine'+index+'\\.commodityLineNumber"]').attr("disabled", false);
	$('#equipmentVinsight'+index).hide();
}

function processLevelE(index,shipmentNumber){
	
	var entity_name=$("#spSvcEntityName").val();
	//alert("Test4"+entity_name);
	if('shipment'==entity_name){
		if(null==shipmentNumber || shipmentNumber==''){
			$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').removeClass("validate[required]");
			$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').attr("disabled", true);
			$('#equipmentVinsight'+index).hide();
		}else{
			$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').addClass("validate[required]");
			$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').attr("disabled", false);
			var freightCount = $("#commodityGrid").getGridParam("reccount");
			var vinsightCount = $("#povGrid").getGridParam("reccount");
			var convCount = $("#convGrid").getGridParam("reccount");
			var ldsGroup = $('#loadDischargeServiceGroup').val();
			if(freightCount!=null && freightCount!=undefined && freightCount!=''&& freightCount==1 && ldsGroup=='CY'){
				var rowIDs = $('#commodityGrid').getDataIDs();
				for (var i=0;i<rowIDs.length;i=i+1)  { 
					//var rowData=$('#commodityGrid').getRowData(rowIDs[i]);
					var colValue=$("#commodityGrid").jqGrid('getCell', rowIDs[i], 'equipmentId');
					$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').val(colValue);
					$('input[name="specialServiceFormLine'+index+'\\.equipmentId"]').val(colValue);
					$("#equipmentVinsightHidden"+index).val(colValue);
				}
				
			}else if(vinsightCount!=null && vinsightCount!=undefined && vinsightCount!=''&& vinsightCount==1 && ldsGroup=='AU'){
				var rowIDs = $('#povGrid').getDataIDs();
				for (var i=0;i<rowIDs.length;i=i+1)  { 
					//var rowData=$('#commodityGrid').getRowData(rowIDs[i]);
					var colValue=$("#povGrid").jqGrid('getCell', rowIDs[i], 'receivedUnitId');
					$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').val(colValue);
					$('input[name="specialServiceFormLine'+index+'\\.equipmentId"]').val(colValue);
					$("#equipmentVinsightHidden"+index).val(colValue);
				}
			}else if(convCount!=null && convCount!=undefined && convCount!=''&& convCount==1 && (ldsGroup=='CON' || ldsGroup=='LCL')){
				var rowIDs = $('#convGrid').getDataIDs();
				for (var i=0;i<rowIDs.length;i=i+1)  { 
					//var rowData=$('#commodityGrid').getRowData(rowIDs[i]);
					var colValue=$("#convGrid").jqGrid('getCell', rowIDs[i], 'receivedUnitId');
					if(colValue==''){
						colValue=$("#convGrid").jqGrid('getCell', rowIDs[i], 'equipmentId');
					}
					$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').val(colValue);
					$('input[name="specialServiceFormLine'+index+'\\.equipmentId"]').val(colValue);
					$("#equipmentVinsightHidden"+index).val(colValue);
				}
			}
			$('#equipmentVinsight'+index).show();
		}
	}else if('container'==entity_name){
		$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').addClass("validate[required]");
		$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').attr("disabled", false);
		$('select[name="specialServiceFormLine'+index+'\\.isApplyToAll"]').selected().val("N");
		
		$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').val(getEquipmentId());
		$('input[name="specialServiceFormLine'+index+'\\.equipmentId"]').val(getEquipmentId());
		$('input[name="specialServiceFormLine'+index+'\\.receivedFreightId"]').val(getReceivedFreightId());
	}
	
	
}
/*
 java object structure
special_service_code
process_level_code
is_manual_charge
is_available_on_picklist
charge_code_expected
is_require_quantity
description
is_require_date

CAS returned fields
data.level -- Process level code
data.userspcd -- Lookup screen concatenated values	
data.chgres -- Charge Code
data.desc -- special service description
data.clcode -- Clause Code
data.reqdt -- IS REQUIRED DATE
data.reqqty -- IS REQUIRED QTNY
data.manchrg -- is manual charge
*/

function processRateBasis(index){
	var rateBasisCd=$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').selected().val();
	
	if(rateBasisCd!=''){
		$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').addClass('validate[required]');
	}else if(rateBasisCd==''){
		if(isManualCharge=='N' || isManualCharge==''){
			$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').removeClass('validate[required]');
			$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').removeClass('validate[required]');
		}
	}
	
	var truckerRateId=$('input[name="specialServiceFormLine'+index+'\\.milTruckerRateId"]').val();
	var isMilTruckerCustomised=$('input[name="specialServiceFormLine'+index+'\\.isMilTruckerRateCustomized"]').val();
	if(null!=truckerRateId && truckerRateId!='' && isMilTruckerCustomised=='N'){
		if(rateBasisCd!='E'){
			$('input[name="specialServiceFormLine'+index+'\\.source"]').val("AH Customized");
			$('input[name="specialServiceFormLine'+index+'\\.isMilTruckerRateCustomized"]').val('Y');
			//Defect : D018102
			$('label[for="specialServiceFormLine'+index+'\\.sourceReadOnly"]').text("AH Customized");
		}
	}
}

function processCalculateAmount(index){
	var rateBasisCd=$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').selected().val();
	
	if(rateBasisCd!=''){
		$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').addClass('validate[required]');
	}else if(rateBasisCd==''){
		if(isManualCharge=='N' || isManualCharge==''){
			$('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').removeClass('validate[required]');
			$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').removeClass('validate[required]');
		}
	}
	
	var truckerRateId=$('input[name="specialServiceFormLine'+index+'\\.milTruckerRateId"]').val();
	var isMilTruckerCustomised=$('input[name="specialServiceFormLine'+index+'\\.isMilTruckerRateCustomized"]').val();
	if(null!=truckerRateId && truckerRateId!='' && isMilTruckerCustomised=='N'){
		if(rateBasisCd!='E'){
			$('input[name="specialServiceFormLine'+index+'\\.source"]').val("AH CUSTOM");
			$('input[name="specialServiceFormLine'+index+'\\.isMilTruckerRateCustomized"]').val('Y');
		}
	}
}

/*
 * Populate fields on Special Service Predictive Search
 */

/*function populateFields(data,index){
//Process level code
$('input[name="specialServiceFormLine'+index+'\\.processLevelCode"]').val(data.level);
// is manual charge
$('input[name="specialServiceFormLine'+index+'\\.isManualCharge"]').val(data.manchrg);
// Charge Code
$('input[name="specialServiceFormLine'+index+'\\.chargeCodeExpected"]').val(data.chgres);
// is required qty
$('input[name="specialServiceFormLine'+index+'\\.isRequireQuantity"]').val(data.reqqty);
// is required date
$('input[name="specialServiceFormLine'+index+'\\.isRequireDate"]').val(data.reqdt);
$('input[name="specialServiceFormLine'+index+'\\.source"]').val("Manual");
$('input[name="specialServiceFormLine'+index+'\\.isMilTruckerRateCustomized"]').val("N");
	
}*/

/*
 * populating Edit Row
 */


function populateEditRow(responseText){
	$('input[name="specialServiceFormLine1\\.specialServiceCode"]').val(responseText.specialServiceFormLine1.specialServiceCode);
	$('input[name="specialServiceFormLine1\\.commodityLineNumber"]').val(responseText.specialServiceFormLine1.commodityLineNumber);
	
	//SpecialService code - Apply to All Indicator
	$('select[name="specialServiceFormLine1\\.isApplyToAll"]').selected().val(responseText.specialServiceFormLine1.isApplyToAll);
	$('input[name="specialServiceFormLine1\\.processLevelCode"]').text(responseText.specialServiceFormLine1.processLevelCode);
	$('label[for="specialServiceFormLine1\\.processLevelCodeReadOnly"]').text(responseText.specialServiceFormLine1.processLevelCode);
	
	//Equipment/Vinsight-Date
	$('input[name="specialServiceFormLine1\\.equipmentVinsight"]').val(responseText.specialServiceFormLine1.equipmentVinsight);
	//$('input[name="specialServiceFormLine1\\.specialServiceDate"]').val(responseText.specialServiceFormLine1.specialServiceDate);
	//Units- Drop/Pull
	//Number Of Unit - Drop Pull
	$('input[name="specialServiceFormLine1\\.numberOfUnit"]').val(responseText.specialServiceFormLine1.numberOfUnit);
	$('select[name="specialServiceFormLine1\\.isDropOrPull"]').selected().val(responseText.specialServiceFormLine1.isDropOrPull);
	//Rate- Amount
	$('input[name="specialServiceFormLine1\\.manualUserRate"]').val(responseText.specialServiceFormLine1.manualUserRate);
	$('input[name="specialServiceFormLine1\\.amount"]').val(responseText.specialServiceFormLine1.amount);
	
	var formattedVal="";
	var val = responseText.specialServiceFormLine1.amount;
	if(val !="" && val !=null )
	{
		val = parseFloat(val).toFixed(2);
		var splittedAtDot = val.toString().split(".");	
		var commaSepratedVal = splittedAtDot[0].toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
			
		if(splittedAtDot.length==1)
		{
			formattedVal = commaSepratedVal + ".00";
		}
		else
		{
			formattedVal = commaSepratedVal + "." + splittedAtDot[1];
		}
	}
	$('label[for="specialServiceFormLine1\\.amountReadOnly"]').text(formattedVal.toString());
	//Rate Basis - Source
	$('select[name="specialServiceFormLine1\\.rateBasisCode"]').val(responseText.specialServiceFormLine1.rateBasisCode);
	$('input[name="specialServiceFormLine1\\.source"]').text(responseText.specialServiceFormLine1.source);
	//Payee-Routing Text
	$('input[name="specialServiceFormLine1\\.payee"]').val(responseText.specialServiceFormLine1.payee);
	$('input[name="specialServiceFormLine1\\.careOf"]').val(responseText.specialServiceFormLine1.careOf);
	$('input[name="specialServiceFormLine1\\.routingText"]').val(responseText.specialServiceFormLine1.routingText);
	
	//Hidden fields population	
	$('input[name="specialServiceFormLine1\\.seqNo"]').val(responseText.specialServiceFormLine1.seqNo);
	$('input[name="specialServiceFormLine1\\.isManualCharge"]').val(responseText.specialServiceFormLine1.isManualCharge);
	$('input[name="specialServiceFormLine1\\.isRequireQuantity"]').val(responseText.specialServiceFormLine1.isRequireQuantity);
	$('input[name="specialServiceFormLine1\\.isRequireDate"]').val(responseText.specialServiceFormLine1.isRequireDate);
	$('input[name="specialServiceFormLine1\\.chargeCodeExpected"]').val(responseText.specialServiceFormLine1.chargeCodeExpected);
	$('input[id="specialServiceCode1"]').val(responseText.specialServiceFormLine1.specialServiceCode);
	$('input[name="specialServiceFormLine1\\.addressRoleId"]').val(responseText.specialServiceFormLine1.addressRoleId);
	$('input[name="specialServiceFormLine1\\.isMilTruckerRateCustomized"]').val(responseText.specialServiceFormLine1.isMilTruckerRateCustomized);
	$('input[id="truckerAmount1"]').val(responseText.specialServiceFormLine1.amount);
}
/*
 * Populate fields on Special Service Predictive Search
 */

function populateFields(data,index){
	var entity_name = $("#spSvcEntityName").val();
	//alert("data.chgres:::"+data.chgres);
	//Process level code
	$('input[name="specialServiceFormLine'+index+'\\.processLevelCode"]').val(data.level);
	$('label[for="specialServiceFormLine'+index+'\\.processLevelCodeReadOnly"]').text(data.level);
	// is manual charge
	$('input[name="specialServiceFormLine'+index+'\\.isManualCharge"]').val(data.manchrg);
	// Charge Code
	//$('input[name="specialServiceFormLine'+index+'\\.chargeCodeExpected"]').val(data.chgres);
	//$('input[name="specialServiceFormLine'+index+'\\.chargeCodeExpected"]').val(data.rticmr);
	
	if(data.passpay!=undefined && data.passpay!=""){
		$('input[name="specialServiceFormLine'+index+'\\.chargeCodeExpected"]').val(data.passpay);
	}else if(data.rtipmr!=undefined && data.rtipmr!=""){
		$('input[name="specialServiceFormLine'+index+'\\.chargeCodeExpected"]').val(data.rtipmr);
	}
	
	// is required qty
	$('input[name="specialServiceFormLine'+index+'\\.isRequireQuantity"]').val(data.reqqty);
	// is required date
	$('input[name="specialServiceFormLine'+index+'\\.isRequireDate"]').val(data.reqdt);
	$('input[name="specialServiceFormLine'+index+'\\.source"]').val("Manual");
	$('label[for="specialServiceFormLine'+index+'\\.sourceReadOnly"]').text("Manual");
	$('input[name="specialServiceFormLine'+index+'\\.isMilTruckerRateCustomized"]').val("N");

	$('#passThruPayable'+index).val(data.passpay);
	
	if(entity_name=='container'){
		$('select[name="specialServiceFormLine'+index+'\\.isApplyToAll"]').selected().val("N");
		$('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').val(getEquipmentId());
		$('input[name="specialServiceFormLine'+index+'\\.equipmentId"]').val(getEquipmentId());
		$('input[name="specialServiceFormLine'+index+'\\.receivedFreightId"]').val(getReceivedFreightId());
	}
}

function getReceivedFreightId(){
	var receivedFrtId=$('input[name="currentContainer.receivedFreightId"]').val();
	if(receivedFrtId ==null || receivedFrtId==undefined || receivedFrtId==''){
		receivedFrtId=$('input[name="receivedFreightId"]').val();
	}
	return receivedFrtId;
}

function getEquipmentId(){
	var equipmentId=$('select[name="currentContainer.equipmentId"]').selected().val();
	if(equipmentId ==null || equipmentId==undefined || equipmentId==''){
		
		equipmentId=$('input[name="containerNum"]').val();
	}
	if(equipmentId.indexOf('-')>0){
		equipmentId = equipmentId.substring(0, equipmentId.indexOf('-'));
	}

	
	return equipmentId;
}

function casPredictiveSearchOnAllPayee(){
	var orgId='';
	$('input[name="specialServiceFormLine1\\.payee"]').gatesAutocomplete({
		//source: url,
		source:_context+'/cas/autocomplete.do',
		name: "Payee",
	 	extraParams: {
	 			 method: 'getPayeeSearch',
		 		 searchType: '289'
	 	},
	 	timeout: 20000,
	 	autoSelectWhenSingle:true,
		autoSelectFirst:true,
		autoSelectCriteria:function(item) {
		   if(item != null){
			     return 'true';
		  }else{
			  return 'false';
		  }
		},
	 	formatItem : function(item) {
	 		if(item.carr!='' && item.carr!='undefined' && item.carr!=undefined){
	 			return item.name+"-"+item.abbr+"-"+item.carr;	
	 		}else{
	 			return item.name+"-"+item.abbr;
	 		}
				
	 	},
	 	formatResult: function(item) {
	 		if(item.carr!='' && item.carr!='undefined' && item.carr!=undefined){
	 			return item.name+"-"+item.abbr+"-"+item.carr;	
	 		}else{
	 			return item.name+"-"+item.abbr;
	 		}
	 	},
	 	select : function(item) {
	 		if(validateSelectedPayee(item)){
	 			hideErrorMessage();
	 			orgId=item.orgid;
		 		$("#payeeHidden1").val($('input[name="specialServiceFormLine1\\.payee"]').val());
		 		$('input[name="specialServiceFormLine1.organisationId"]').val(orgId);
		 		if(item.count==1 || (item.carr!='' && item.carr!='undefined' && item.carr!=undefined)){
		 			console.log(item.arolid);
		 			console.log(item.addid);
		 			fetchAddresssDetails(item,1);
		 			checkBgColor(item.arolid);
		 		}
		 		else if(item.count>1){
		 			casPayeeLookup(1); 
		 		}
	 		} else {
	 			showError("Trucker is not compliant for Military move");
	 			$('input[name="specialServiceFormLine1.organisationId"]').val("");
	 			window.setTimeout(function(){ $('input[name="specialServiceFormLine1\\.payee"]').val(''); }, 250);
	 		}
	 		isSpecialServiceChanged=true;
	 	}
	});
	$('input[name="specialServiceFormLine2\\.payee"]').gatesAutocomplete({
		//source: url,
		source:_context+'/cas/autocomplete.do',
		name: "Payee",
	 	extraParams: {
	 			 method: 'getPayeeSearch',
		 		 searchType: '289'
	 	},
	 	timeout: 20000,
	 	autoSelectWhenSingle:true,
		autoSelectFirst:true,
		autoSelectCriteria:function(item) {
		   if(item != null){
			     return 'true';
		  }else{
			  return 'false';
		  }
		},
	 	formatItem : function(item) {
	 		if(item.carr!='' && item.carr!='undefined' && item.carr!=undefined){
	 			return item.name+"-"+item.abbr+"-"+item.carr;	
	 		}else{
	 			return item.name+"-"+item.abbr;
	 		}
				
	 	},
	 	formatResult: function(item) {
	 		if(item.carr!='' && item.carr!='undefined' && item.carr!=undefined){
	 			return item.name+"-"+item.abbr+"-"+item.carr;	
	 		}else{
	 			return item.name+"-"+item.abbr;
	 		}
	 	},
	 	select : function(item) {
	 		if(validateSelectedPayee(item)){
	 			hideErrorMessage();
	 			orgId=item.orgid;	
		 		$('input[name="specialServiceFormLine2.organisationId"]').val(orgId);
		 		if(item.count==1 || (item.carr!='' && item.carr!='undefined' && item.carr!=undefined)){
		 			console.log(item.arolid);
		 			console.log(item.addid);
		 			fetchAddresssDetails(item,2);
		 			checkBgColor(item.arolid);
		 		}
		 		else if(item.count>1){
		 			casPayeeLookup(2); 
		 		}
		 		$("#payeeHidden2").val($('input[name="specialServiceFormLine2\\.payee"]').val());
	 		} else {
	 			showError("Trucker is not compliant for Military move");
	 			$('input[name="specialServiceFormLine2.organisationId"]').val("");
	 			window.setTimeout(function(){ $('input[name="specialServiceFormLine2\\.payee"]').val(''); }, 250);
	 		}
	 		isSpecialServiceChanged=true;
	 		
	 	}
	});	
	$('input[name="specialServiceFormLine3\\.payee"]').gatesAutocomplete({
		//source: url,
		source:_context+'/cas/autocomplete.do',
		name: "Payee",
	 	extraParams: {
	 			 method: 'getPayeeSearch',
		 		 searchType: '289'
	 	},
	 	timeout: 20000,
	 	autoSelectWhenSingle:true,
		autoSelectFirst:true,
		autoSelectCriteria:function(item) {
		   if(item != null){
			     return 'true';
		  }else{
			  return 'false';
		  }
		},
	 	formatItem : function(item) {
	 		if(item.carr!='' && item.carr!='undefined' && item.carr!=undefined){
	 			return item.name+"-"+item.abbr+"-"+item.carr;	
	 		}else{
	 			return item.name+"-"+item.abbr;
	 		}
				
	 	},
	 	formatResult: function(item) {
	 		if(item.carr!='' && item.carr!='undefined' && item.carr!=undefined){
	 			return item.name+"-"+item.abbr+"-"+item.carr;	
	 		}else{
	 			return item.name+"-"+item.abbr;
	 		}
	 	},
	 	select : function(item) {
	 		if(validateSelectedPayee(item)){
	 			hideErrorMessage();
	 			orgId=item.orgid;	
		 		$('input[name="specialServiceFormLine3.organisationId"]').val(orgId);
		 		if(item.count==1 || (item.carr!='' && item.carr!='undefined' && item.carr!=undefined)){
		 			console.log(item.arolid);
		 			console.log(item.addid);
		 			fetchAddresssDetails(item,3);
		 			checkBgColor(item.arolid);
		 		}
		 		else if(item.count>1){
		 			casPayeeLookup(3); 
		 		}
		 		$("#payeeHidden3").val($('input[name="specialServiceFormLine3\\.payee"]').val());
	 		} else {
	 			showError("Trucker is not compliant for Military move");
	 			$('input[name="specialServiceFormLine3.organisationId"]').val("");
	 			window.setTimeout(function(){ $('input[name="specialServiceFormLine3\\.payee"]').val(''); }, 250);
	 		}
	 		isSpecialServiceChanged=true;
	 	}
	});	
	$('input[name="specialServiceFormLine4\\.payee"]').gatesAutocomplete({
		//source: url,
		source:_context+'/cas/autocomplete.do',
		name: "Payee",
	 	extraParams: {
	 			 method: 'getPayeeSearch',
		 		 searchType: '289'
	 	},
	 	timeout: 20000,
	 	autoSelectWhenSingle:true,
		autoSelectFirst:true,
		autoSelectCriteria:function(item) {
		   if(item != null){
			     return 'true';
		  }else{
			  return 'false';
		  }
		},
	 	formatItem : function(item) {
	 		if(item.carr!='' && item.carr!='undefined' && item.carr!=undefined){
	 			return item.name+"-"+item.abbr+"-"+item.carr;	
	 		}else{
	 			return item.name+"-"+item.abbr;
	 		}
				
	 	},
	 	formatResult: function(item) {
	 		if(item.carr!='' && item.carr!='undefined' && item.carr!=undefined){
	 			return item.name+"-"+item.abbr+"-"+item.carr;	
	 		}else{
	 			return item.name+"-"+item.abbr;
	 		}
	 	},
	 	select : function(item) {
	 		if(validateSelectedPayee(item)){
	 			hideErrorMessage();
	 			orgId=item.orgid;	
		 		$('input[name="specialServiceFormLine4.organisationId"]').val(orgId);
		 		if(item.count==1 || (item.carr!='' && item.carr!='undefined' && item.carr!=undefined)){
		 			console.log(item.arolid);
		 			console.log(item.addid);
		 			fetchAddresssDetails(item,4);
		 			checkBgColor(item.arolid);
		 		}
		 		else if(item.count>1){
		 			casPayeeLookup(4); 
		 		}
		 		$("#payeeHidden4").val($('input[name="specialServiceFormLine4\\.payee"]').val());
	 		} else {
	 			showError("Trucker is not compliant for Military move");
	 			$('input[name="specialServiceFormLine4.organisationId"]').val("");
	 			window.setTimeout(function(){ $('input[name="specialServiceFormLine4\\.payee"]').val(''); }, 250);
	 		}
	 		isSpecialServiceChanged=true;
	 	}
	});	
	$('input[name="specialServiceFormLine5\\.payee"]').gatesAutocomplete({
		//source: url,
		source:_context+'/cas/autocomplete.do',
		name: "Payee",
	 	extraParams: {
	 			 method: 'getPayeeSearch',
		 		 searchType: '289'
	 	},
	 	timeout: 20000,
	 	autoSelectWhenSingle:true,
		autoSelectFirst:true,
		autoSelectCriteria:function(item) {
		   if(item != null){
			     return 'true';
		  }else{
			  return 'false';
		  }
		},
	 	formatItem : function(item) {
	 		if(item.carr!='' && item.carr!='undefined' && item.carr!=undefined){
	 			return item.name+"-"+item.abbr+"-"+item.carr;	
	 		}else{
	 			return item.name+"-"+item.abbr;
	 		}
				
	 	},
	 	formatResult: function(item) {
	 		if(item.carr!='' && item.carr!='undefined' && item.carr!=undefined){
	 			return item.name+"-"+item.abbr+"-"+item.carr;	
	 		}else{
	 			return item.name+"-"+item.abbr;
	 		}
	 	},
	 	select : function(item) {
	 		if(validateSelectedPayee(item)){
	 			hideErrorMessage();
	 			orgId=item.orgid;	
		 		$('input[name="specialServiceFormLine5.organisationId"]').val(orgId);
		 		if(item.count==1 || (item.carr!='' && item.carr!='undefined' && item.carr!=undefined)){
		 			console.log(item.arolid);
		 			console.log(item.addid);
		 			fetchAddresssDetails(item,5);
		 			checkBgColor(item.arolid);
		 		}
		 		else if(item.count>1){
		 			casPayeeLookup(5); 
		 		}
		 		$("#payeeHidden5").val($('input[name="specialServiceFormLine5\\.payee"]').val());
	 		} else {
	 			showError("Trucker is not compliant for Military move");
	 			$('input[name="specialServiceFormLine5.organisationId"]').val("");
	 			window.setTimeout(function(){ $('input[name="specialServiceFormLine5\\.payee"]').val(''); }, 250);
	 		}
	 		isSpecialServiceChanged=true;
	 	}
	});	
}

/*
 * populating Edit Row
 */
function populateHiddenFields(index){
	//Hidden fields population	
	$('#specialServiceCode'+index).val($('input[name="specialServiceFormLine'+index+'\\.specialServiceCode"]').val());
	$('#truckerAmount'+index).val($('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').val());
	$('#payeeHidden'+index).val($('input[name="specialServiceFormLine'+index+'\\.payee"]').val());
	$('#equipmentVinsightHidden'+index).val($('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').val());
}


function casPredictiveSearchOnAllLines(){
	//var url = _context+'/cas/autocomplete.do?method=getSpclSrvcBK&searchType=256';
	var entity_name=$('#spSvcEntityName').val();
	var procLvlCd='ALL';
	/*if(entity_name=='container'){
		procLvlCd='E';
	}else if(entity_name=='quote'){
		procLvlCd='C';
	}*/
	$('input[name="specialServiceFormLine1\\.specialServiceCode"]').gatesAutocomplete({
		//source: url,
		source:_context+'/cas/autocomplete.do',
	 	extraParams: {
	 			 method: 'getSpclSrvcBK',
		 		 searchType: '256',
		 		 param : function(){return procLvlCd;}
	 	},
	 	timeout: 20000, 
		formatItem: function(data) {
			return data.id+"-"+data.desc;
		},
		formatResult: function(data) {
			return data.id;
		}, 
		select: function(data) {
			var index=1;
			//$('#specialServiceFormLine1\\.specialServiceDesc').val(data.id+'-'+data.desc);
			clearSpecialServiceRow(index);
			$('input[name="specialServiceFormLine1\\.specialServiceCode"]').val(data.id);
			$('#specialServiceCode1').val(data.id);
			populateFields(data,index);
			applyUIValidations(index);
			isSpecialServiceChanged=true;
		},
		onChange:function(){
			var index=1;
			checkForSpecialServiceCdChg(index);
		},
		autoSelectFirst:true,
		autoSelectCriteria :function(item){
			if(item.id.toUpperCase()==$('#'+thisId).val().toUpperCase()) {
				return true;
			}
			else {
				return false;
			}
		}
	});	
	$('input[name="specialServiceFormLine2\\.specialServiceCode"]').gatesAutocomplete({
		//source: url,
		source:_context+'/cas/autocomplete.do',
	 	extraParams: {
		 		 method: 'getSpclSrvcBK',
		 		 searchType: '256',
		 		param : function(){return procLvlCd;}
	 	},
	 	timeout: 20000, 
		formatItem: function(data) {
			return data.id+"-"+data.desc;
		},
		formatResult: function(data) {
			return data.id;
		}, 
		select: function(data) {
			var index=2;
			clearSpecialServiceRow(index);
			$('input[name="specialServiceFormLine2\\.specialServiceCode"]').val(data.id);
			$('#specialServiceCode2').val(data.id);
			populateFields(data,index);
			applyUIValidations(index);
			isSpecialServiceChanged=true;
		},
		onChange:function(){
			var index=2;
			checkForSpecialServiceCdChg(index);
		},
		autoSelectFirst:true,
		autoSelectCriteria :function(item){
			if(item.id.toUpperCase()==$('#'+thisId).val().toUpperCase()) {
				return true;
			}
			else {
				return false;
			}
		}
	});	
	$('input[name="specialServiceFormLine3\\.specialServiceCode"]').gatesAutocomplete({
		//source: url,
		source:_context+'/cas/autocomplete.do',
	 	extraParams: {
		 		 method: 'getSpclSrvcBK',
		 		 searchType: '256',
			     param : function(){return procLvlCd;}
	 	},
	 	timeout: 20000, 
		formatItem: function(data) {
			return data.id+"-"+data.desc;
		},
		formatResult: function(data) {
			return data.id;
		}, 
		select: function(data) {
			var index=3;
			clearSpecialServiceRow(index);
			$('input[name="specialServiceFormLine3\\.specialServiceCode"]').val(data.id);
			$('#specialServiceCode3').val(data.id);
			populateFields(data,index);
			applyUIValidations(index);
			isSpecialServiceChanged=true;
		},
		onChange:function(){
			var index=3;
			checkForSpecialServiceCdChg(index);
		},
		autoSelectFirst:true,
		autoSelectCriteria :function(item){
			if(item.id.toUpperCase()==$('#'+thisId).val().toUpperCase()) {
				return true;
			}
			else {
				return false;
			}
		}
	});	
	$('input[name="specialServiceFormLine4\\.specialServiceCode"]').gatesAutocomplete({
		//source: url,
		source:_context+'/cas/autocomplete.do',
	 	extraParams: {
		 		 method: 'getSpclSrvcBK',
		 		 searchType: '256',
			 	 param : function(){return procLvlCd;}
		 		
	 	},
	 	timeout: 20000, 
		formatItem: function(data) {
			return data.id+"-"+data.desc;
		},
		formatResult: function(data) {
			return data.id;
		}, 
		select: function(data) {
			var index=4;
			clearSpecialServiceRow(index);
			$('input[name="specialServiceFormLine4\\.specialServiceCode"]').val(data.id);
			$('#specialServiceCode4').val(data.id);
			populateFields(data,index);
			applyUIValidations(index);
			isSpecialServiceChanged=true;
		},
		onChange:function(){
			var index=4;
			checkForSpecialServiceCdChg(index);
		},
		autoSelectFirst:true,
		autoSelectCriteria :function(item){
			if(item.id.toUpperCase()==$('#'+thisId).val().toUpperCase()) {
				return true;
			}
			else {
				return false;
			}
		}
	});	
	$('input[name="specialServiceFormLine5\\.specialServiceCode"]').gatesAutocomplete({
		//source: url,
		source:_context+'/cas/autocomplete.do',
	 	extraParams: {
		 		 method: 'getSpclSrvcBK',
		 		 searchType: '256',
			     param : function(){return procLvlCd;}
	 	},
	 	timeout: 20000, 
		formatItem: function(data) {
			return data.id+"-"+data.desc;
		},
		formatResult: function(data) {
			return data.id;
		}, 
		select: function(data) {
			var index=5;
			clearSpecialServiceRow(index);
			$('input[name="specialServiceFormLine5\\.specialServiceCode"]').val(data.id);
			$('#specialServiceCode5').val(data.id);
			populateFields(data,index);
			applyUIValidations(index);
			isSpecialServiceChanged=true;
		},
		onChange:function(){
			var index=5;
			checkForSpecialServiceCdChg(index);
		},
		autoSelectFirst:true,
		autoSelectCriteria :function(item){
			if(item.id.toUpperCase()==$('#'+thisId).val().toUpperCase()) {
				return true;
			}
			else {
				return false;
			}
		}
	});		
}


function casEquipmentVinsightLookup(index){
	equipmentVinsightLineNumber=index;
	var shipmentNum= $("#shipmentNumber").val();
	var seqNum= $("#shipmentSequenceNumber").val();
	var corrNum= $("#shipmentCorrectionNumber").val();
	var LDSGroupCode = $('#loadDschServiceGroupCode').val();
	var equipPiece=$('#totalEqpts').html();
	var equpId= $('input[name="specialServiceFormLine'+equipmentVinsightLineNumber+'\\.equipmentVinsight"]').val();
	var status= $('#statusCode').html();
	var recDate = $('#rateDate').val();
	var ldServ=$('#loadServiceCode').val()+"-"+$('#dischargeServiceCode').val();
	//Defect-25770
	//cas/billOfLadFrtListConvlookup.do?0795360,000,FFF,CON/CON,10-17-2008,ISSD,MORG000001-1,CON,9"
	//cas/billLadingUnitConvlookup.do?0795360,000,FFF,,,,,,9"
	var urlCY="/cas/billLadingFreightlookup.do?"+shipmentNum+","+seqNum+","+corrNum+","+ LDSGroupCode.trim()+","+recDate+","+status+","+equpId+","+ ldServ+","+equipPiece+","+"&reload=true";	
	//var urlAU="/cas/billLadingUnitlookup.do?"+shipmentNum+","+seqNum+","+corrNum+","+ LDSGroupCode.trim()+","+recDate+","+status+","+equpId+","+ ldServ+","+equipPiece+","+"&reload=true";		
	//var urlCON="/cas/billOfLadFrtListConvlookup.do?"+shipmentNum+","+seqNum+","+corrNum+","+ ldServ+","+recDate+","+status+","+equpId+","+ LDSGroupCode.trim()+","+equipPiece+","+"&reload=true";	
	var urlAU="/cas/billLadingUnitlookup.do?"+shipmentNum+","+seqNum+","+corrNum+","+LDSGroupCode.trim()+","+recDate+","+status+","+equpId+","+ldServ+","+equipPiece+","+"&reload=true";		
	var urlCON="/cas/billOfLadFrtListConvlookup.do?"+shipmentNum+","+seqNum+","+corrNum+","+ldServ+","+recDate+","+status+","+equpId+","+LDSGroupCode.trim()+","+equipPiece+","+"&reload=true";
	var actionUrl="";
	if(LDSGroupCode=='AU'){
		actionUrl = _context+urlAU;
	}else if(LDSGroupCode=='CON' || LDSGroupCode =='LCL'){
		actionUrl = _context+urlCON;
	}else{
		actionUrl = _context+urlCY;
	}
	//actionUrl = _context + '/cas/receivedUnitsLookupSearch.do';
	var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, '', windowStyle);

	/*equipmentVinsightLineNumber=index;
	var isRequiredUnit=$('#isRequireReceivedUnit').val();
	var shipmentNumber=$('#shipmentNumber').val();
	alert("isRequireReceivedUnit"+isRequiredUnit);
	alert("shipmentNumber"+shipmentNumber);
	var actionUrl =null;
	var header='Recieved Unit List';
	if(isRequiredUnit!=null && isRequiredUnit!=undefined && $.trim(isRequiredUnit)!=''){
		if(isRequiredUnit=='Y'){
			actionUrl = _context + '/cas/receivedUnitsLookupSearch.do';	
			header="Recieved Unit List";
		}else if(isRequiredUnit=='N'){
			actionUrl = _context + '/cas/containerListbyBKPopUpSearch.do?filterValue1='+shipmentNumber;
			header="Container List";
		}
		var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
		window.open(actionUrl, header, windowStyle);
	}*/

}

function loadEquipmentNumber(id)
{
 //alert("loadEquipmentNumber"+id);
 var casData = id.split('|');
 $('input[name="specialServiceFormLine'+equipmentVinsightLineNumber+'\\.equipmentVinsight"]').val(casData[0]);
	$("#equipmentVinsightHidden"+equipmentVinsightLineNumber).val(casData[0]);
	$('input[name="specialServiceFormLine'+equipmentVinsightLineNumber+'\\.equipmentId"]').val(casData[0]);
	$('input[name="specialServiceFormLine'+equipmentVinsightLineNumber+'\\.shipmentFreightId"]').val(casData[1]);
	isSpecialServiceChanged=true; 
}
function loadVinNumber(id)
{
 //alert("loadVinNumber"+id)	;
	var casData = id.split('|');
	 $('input[name="specialServiceFormLine'+equipmentVinsightLineNumber+'\\.equipmentVinsight"]').val(casData[0]);
		$("#equipmentVinsightHidden"+equipmentVinsightLineNumber).val(casData[0]);
		$('input[name="specialServiceFormLine'+equipmentVinsightLineNumber+'\\.equipmentId"]').val(casData[0]);
}
function loadConUnitDescription(id){
	//alert("loadVinNumber"+id);
	var casData = id.split('|');
	 $('input[name="specialServiceFormLine'+equipmentVinsightLineNumber+'\\.equipmentVinsight"]').val(casData[0]);
		$("#equipmentVinsightHidden"+equipmentVinsightLineNumber).val(casData[0]);
		$('input[name="specialServiceFormLine'+equipmentVinsightLineNumber+'\\.equipmentId"]').val(casData[0]);
		$('input[name="specialServiceFormLine'+equipmentVinsightLineNumber+'\\.shipmentFreightId"]').val(casData[1]);
}
function loadConEquipmentNumber(id){
	//alert("loadVinNumber"+id);
	var casData = id.split('|');
	 $('input[name="specialServiceFormLine'+equipmentVinsightLineNumber+'\\.equipmentVinsight"]').val(casData[0]);
		$("#equipmentVinsightHidden"+equipmentVinsightLineNumber).val(casData[0]);
		$('input[name="specialServiceFormLine'+equipmentVinsightLineNumber+'\\.equipmentId"]').val(casData[0]);
		$('input[name="specialServiceFormLine'+equipmentVinsightLineNumber+'\\.shipmentFreightId"]').val(casData[1]);
}

function loadConVinNumber(id){
	//alert("loadVinNumber"+id);
	var casData = id.split('|');
	 $('input[name="specialServiceFormLine'+equipmentVinsightLineNumber+'\\.equipmentVinsight"]').val(casData[0]);
		$("#equipmentVinsightHidden"+equipmentVinsightLineNumber).val(casData[0]);
		$('input[name="specialServiceFormLine'+equipmentVinsightLineNumber+'\\.equipmentId"]').val(casData[0]);
		$('input[name="specialServiceFormLine'+equipmentVinsightLineNumber+'\\.shipmentFreightId"]').val(casData[1]);
}

function receivedUnits(id){
	var myData=id.split('|');
	var shipmentNumber=$('#shipmentNumber').val();
	if(myData.length>1){
		if(shipmentNumber==myData[1]){
			$('input[name="specialServiceFormLine'+equipmentVinsightLineNumber+'\\.equipmentVinsight"]').val(myData[0]); 
			return;
		}else{
			showErrorMessage();
		}	
	}else{
		showErrorMessage();
	}
}



function casSpSvcCodeLookup(index) {
	var entity_name=$('#spSvcEntityName').val();
	spsvCodeLineNumber=index;
	var proclvlCd='ALL';
	/*if(entity_name=='container'){
		proclvlCd='E';
	}else if(entity_name=='quote'){
		proclvlCd='C';
	}*/
	var specialServiceCode = $('input[name="specialServiceFormLine'+index+'\\.specialServiceCode"]').val();
	var actionUrl = _context + '/cas/spclSrvBKLookup.do?filterValue1='+encodeURIComponent(specialServiceCode)+'|'+proclvlCd+'|'+'&srcScreen=QT';
	
	var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, '', windowStyle);
}

function spclServiceUpdate(id){
	var values = id.split("|");
	var rateQuantityDate = values[2].split("-");
	clearSpecialServiceRow(spsvCodeLineNumber);
	$('#specialServiceFormLine'+spsvCodeLineNumber+'\\.specialServiceDesc').val(values[0]+'-'+values[4]);
	$('#specialServiceCode'+spsvCodeLineNumber).val(values[0]);
	$('input[name="specialServiceFormLine'+spsvCodeLineNumber+'\\.specialServiceCode"]').val(values[0]);
	//Process level code
	$('input[name="specialServiceFormLine'+spsvCodeLineNumber+'\\.processLevelCode"]').val(values[1]);
	$('label[for="specialServiceFormLine'+spsvCodeLineNumber+'\\.processLevelCodeReadOnly"]').text(values[1]);
	// is manual charge
	$('input[name="specialServiceFormLine'+spsvCodeLineNumber+'\\.isManualCharge"]').val(rateQuantityDate[2]);
	// Charge Code
	//$('input[name="specialServiceFormLine'+spsvCodeLineNumber+'\\.chargeCodeExpected"]').val(values[3]);
	if(values[6]!=undefined && values[6]!=""){
		$('input[name="specialServiceFormLine'+spsvCodeLineNumber+'\\.chargeCodeExpected"]').val(values[6]);	
	}else if(values[7]!=undefined && values[7]!=""){
		$('input[name="specialServiceFormLine'+spsvCodeLineNumber+'\\.chargeCodeExpected"]').val(values[7]);
	}
	
	// is required qty
	$('input[name="specialServiceFormLine'+spsvCodeLineNumber+'\\.isRequireQuantity"]').val(rateQuantityDate[1]);
	// is required date
	$('input[name="specialServiceFormLine'+spsvCodeLineNumber+'\\.isRequireDate"]').val(rateQuantityDate[0]);
	$('input[name="specialServiceFormLine'+spsvCodeLineNumber+'\\.source"]').val("Manual");
	$('label[for="specialServiceFormLine'+spsvCodeLineNumber+'\\.sourceReadOnly"]').text("Manual");
	$('input[name="specialServiceFormLine'+spsvCodeLineNumber+'\\.isMilTruckerRateCustomized"]').val("N");
	
	//D025911: 	Maintain Billing: Adding special service HHAGTLH from pop-up protects the payee field
	$('#passThruPayable'+spsvCodeLineNumber).val(values[6]);
	
	checkForSpecialServiceCdChg(spsvCodeLineNumber);
	isSpecialServiceChanged = true;
	
	applyUIValidations(spsvCodeLineNumber);
}


/*
 * QUOTE|TRUCKER|HHGM_ALL|PHONE|TRUCKER_ORIGIN|TRUCKER_RAMP|DIRECTION|RATE|ZIP|BASE_RATE|DROP_PULL|FREE_TIME|
 * OVER_TIME|CHASE_RATE|CITY|STATE|ZIP_CODE|FUEL_SURTY|FUEL_SUR
*/


function casTruckerLookup(index) {
	truckerLineNumber=index;
	var actionUrl = _context + '/cas/bookingtruckerRateSearch.do';
	var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, '', windowStyle);
}

function truckerRateUpdate(id){
	var values = id.split("|");
	$('input[name="specialServiceFormLine'+truckerLineNumber+'\\.payee"]').val(values[1]);
	$('input[name="specialServiceFormLine'+truckerLineNumber+'\\.milTruckerRateId"]').val(values[0]);
	$('input[name="specialServiceFormLine'+truckerLineNumber+'\\.manualUserRate"]').val(values[7]);
	$('select[name="specialServiceFormLine'+truckerLineNumber+'\\.rateBasisCode"]').selected().val("E");
	$('input[name="specialServiceFormLine'+truckerLineNumber+'\\.source"]').val("AH");
	$('label[for="specialServiceFormLine'+truckerLineNumber+'\\.sourceReadOnly"]').text("AH");
	$('input[name="specialServiceFormLine'+truckerLineNumber+'\\.isMilTruckerRateCustomized"]').val("N");
	// Adding Drop and Pull
	$('#truckerAmount'+truckerLineNumber).val(values[7]);
	$('select[name="specialServiceFormLine'+truckerLineNumber+'\\.isDropOrPull"]').selected().val(values[10]);
	$('select[name="specialServiceFormLine'+truckerLineNumber+'\\.isDropOrPull"]').attr("disabled", true);
	//Only Payee or Trucker can be associated with Special Service
	//$('input[name="specialServiceFormLine'+truckerLineNumber+'\\.addressRoleId"]').val("");
	$('input[name="specialServiceFormLine'+truckerLineNumber+'\\.note"]').val('');
	$('input[name="specialServiceFormLine'+truckerLineNumber+'\\.organisationId"]').val(values[21]);
	$('input[name="specialServiceFormLine'+truckerLineNumber+'\\.addressRoleId"]').val(values[20]);
	$.ajax({
		type : "POST",
		url : _context +"/shipment/specialservice/getTruckerRoutingText",
		data : {
			// Ramp City Code
			truckerRampCityCode: values[5],
			//Ramp
			truckerRamp: values[19],
			// Freight Location Code
			truckerFreightLocationCode: values[4]
		},
		success : function(responseText) {
			$('input[name="specialServiceFormLine'+truckerLineNumber+'\\.routingText"]').val(responseText.data);
			$('input[name="specialServiceFormLine'+truckerLineNumber+'\\.careOf"]').val('');
		}
	});
}


function casPayeeLookup(index) {
	payeeLineNumber=index;
	//$('input[id="organistionId"'+payeeLineNumber+']')
	//var org_id=$('input[id="organistionId'+payeeLineNumber+'"]').val();
	//var org_id=$("#organistionId"+payeeLineNumber).val();
	var org_id=$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.organisationId"]').val();
	if(org_id==undefined || org_id==null || org_id==''){
		alert("Please select organization first");
		return;
	}
	//var actionUrl = _context + '/cas/addRoleBKPopUpSearch.do?filterValue1='+$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.payee"]').val()+'&filterValue2='+org_id;
	var actionUrl = _context + '/cas/addRoleSPSRLookup.do?filterValue1='+org_id+'&filterValue2=04';
	var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, '', windowStyle);
}

//ORG_ID,ADD_ROLE, ADDR_TYPE,ATTENTION_LINE,CITY, C_O_NAME,NAME_QUALIFIER,ORG_NAME,STATE,ADDRESS,ZIP, PROVINCE,COUNTRY,SUITE
function payeeLookupUpdate(id){/*
	var values = id.split("|");
	$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.payee"]').val(values[7]);
	$("#organistionId"+payeeLineNumber).val(values[0]);
	//Name, Addr_Line1, Addr_line2, Suite, City
	var routingText=values[7]+","+values[9]+","+values[13]+","+values[4];
	$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.routingText"]').val(routingText);
	$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.isMilTruckerRateCustomized"]').val("");
	$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.milTruckerRateId"]').val("");
	$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.addressRoleId"]').val(values[1]);
	$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.source"]').val("Manual");
	$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.manualUserRate"]').val("");
*/}

//D026319: Maintain Booking: (and Maintain Billing) For Military cargo, need to check that the payee/trucker on the special service is allowed 
function validateSelectedPayee(item){
	var payeeValid = true;
	var carrierCode = "";
	if(item.carr!='' && item.carr!='undefined' && item.carr!=undefined){
		carrierCode = item.carr;
	}
	$.ajax({
		type : "GET",
		async:false,
		data:{	
				carrierCode : carrierCode, 
				orgAbbr : item.abbr,
				tariff : $("#tariffNumber").val() 
			 },
		url : _context + "/shipment/specialservice/validatePayee",
		success : function(responseText) {
			payeeValid = responseText.success;
		}
	});
	return payeeValid;
}

function fetchAddresssDetails(item,payeeLineNumber){
	$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.note"]').val('');
	$.ajax({
		type : "POST",
		url : _context +"/shipment/specialservice/getAddressDetails",
		data : {
			addressId: item.addid
		},
		success : function(responseText) {
			$("#payeeHidden"+payeeLineNumber).val(item.name);
			$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.payee"]').val(item.name);
			$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.organisationId"]').val(item.orgid);
			//Name, Addr_Line1, Addr_line2, Suite, City
			/*var routingText=values[7]+","+values[9]+","+values[13]+","+values[4];
			if(values[1]!=null || values[1]!=''){
				var orgAddressId=values[1];
				routingText=fetchAddresssDetails(orgAddressId,payeeLineNumber);
			}*/
			$.ajax({
				type : "POST",
				url : _context +"/shipment/specialservice/getCareOfDetails",
				data : {
					addressId: item.arolid
				},
				success : function(responseText){
					$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.careOf"]').val(responseText.data);
				}
			});
			$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.routingText"]').val(responseText.data);
			$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.addressRoleId"]').val(item.arolid);
			$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.source"]').val("Manual");
			$('label[for="specialServiceFormLine'+payeeLineNumber+'\\.sourceReadOnly"]').text("Manual");
			$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.isMilTruckerRateCustomized"]').val("");
			$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.milTruckerRateId"]').val("");
			checkRateBasisRequired(payeeLineNumber);
			isSpecialServiceChanged=true;
		}
	});
}


function clearErrMsg(){
	$("#specialServiceMasterForm").validationEngine('hideAll');
}
/*
function validateFrtPayableRequired(fields, rules, i, options){
alert("validateFrtPayableRequired " + fields.context.value);
if(fields.context.value==null || fields.context.value==""){
	return "* Payee's Carrier Code or Abbreviation is required";
}
}




function validateRateRequired(fields, rules, i, options){
alert("validateRateRequired "+fields.context.value);
if(fields.context.value==null || fields.context.value==""){
	return "* Rate is required";
}
}
function validateUnitsRequired(fields, rules, i, options){
alert("validateUnitsRequired "+fields.context.value);
if(fields.context.value==null || fields.context.value==""){
	fields.context.value="1";
	return "* Units are required";
}	
}
*/

/*
 * Validate Fields on Special Services
 */

function specialServiceLineCheck(index){
	
	var rateBasisCode=$('select[name="specialServiceFormLine'+index+'\\.rateBasisCode"]').selected().val();
	if(rateBasisCode==null || rateBasisCode==""){
		rateBasisCode=null;
	}
	if($('input[name="specialServiceFormLine'+index+'\\.commodityLineNumber"]').val()!="" || 
	   $('input[name="specialServiceFormLine'+index+'\\.equipmentVinsight"]').val()!="" ||
	   $('input[name="specialServiceFormLine'+index+'\\.numberOfUnit"]').val()!="" ||
	   $('input[name="specialServiceFormLine'+index+'\\.manualUserRate"]').val()!="" ||
	   	rateBasisCode!=null ||
	   $('input[name="specialServiceFormLine'+index+'\\.payee"]').val()!=""){
		return false;
	}
	return true;
	
}
function validateSpecialServiceFields(){
	var isValid = true;
	//Added code for D028272:BBFBHI speical service code does not require payee if user does not enter ratebasis and rate amount 
	var spSvCode="";
	//alert("Test: " + $('input[name="specialServiceFormLine1\\.specialServiceCode"]').val());
	//alert("isSpecialServiceAdd  1::::"+$("#isSpecialServiceAdd").val());
	if($("#isSpecialServiceAdd").val()!='false'){
		if($('input[name="specialServiceFormLine1\\.specialServiceCode"]').val()=="" && !specialServiceLineCheck(1)){
			//alert("Inside if 1::");
			$('input[name="specialServiceFormLine1\\.specialServiceCode"]').addClass("validate[required]");
			isValid=false;
		}else{
			//alert("Inside else 1::");
			 spSvCode=$('input[name="specialServiceFormLine1\\.specialServiceCode"]').val();
			if($('input[name="specialServiceFormLine1\\.payee"]').hasClass("validate[required]") && $('select[name="specialServiceFormLine1\\.rateBasisCode"]').selected().val() ==null && $('input[name="specialServiceFormLine1\\.manualUserRate"]').val()=="")
			  {
				 $('input[name="specialServiceFormLine1\\.payee"]').removeClass("validate[required]");
			     $('input[name="specialServiceFormLine1\\.payee"]').attr('disabled',true);
			     $('#imgPayeeLine1').hide();
			  }
			$('input[name="specialServiceFormLine1\\.specialServiceCode"]').removeClass("validate[required]");
		}
		if(isValid && $('input[name="specialServiceFormLine2\\.specialServiceCode"]').val()=="" && !specialServiceLineCheck(2)){
			$('input[name="specialServiceFormLine2\\.specialServiceCode"]').addClass("validate[required]");
			//alert("Inside if 2::");
			isValid=false;
			
		}else{
			spSvCode=$('input[name="specialServiceFormLine2\\.specialServiceCode"]').val();
			if($('input[name="specialServiceFormLine2\\.payee"]').hasClass("validate[required]") && $('select[name="specialServiceFormLine2\\.rateBasisCode"]').selected().val() ==null && $('input[name="specialServiceFormLine2\\.manualUserRate"]').val()=="")
			  {
				 $('input[name="specialServiceFormLine2\\.payee"]').removeClass("validate[required]");
			     $('input[name="specialServiceFormLine2\\.payee"]').attr('disabled',true);
			     $('#imgPayeeLine2').hide();
			  }
			$('input[name="specialServiceFormLine2\\.specialServiceCode"]').removeClass("validate[required]");
			//alert("Inside else 2::");
		}
		if(isValid && $('input[name="specialServiceFormLine3\\.specialServiceCode"]').val()=="" && !specialServiceLineCheck(3)){
			$('input[name="specialServiceFormLine3\\.specialServiceCode"]').addClass("validate[required]");
			isValid=false;
			
		}else{
			spSvCode=$('input[name="specialServiceFormLine3\\.specialServiceCode"]').val();
			if($('input[name="specialServiceFormLine3\\.payee"]').hasClass("validate[required]") && $('select[name="specialServiceFormLine3\\.rateBasisCode"]').selected().val() ==null && $('input[name="specialServiceFormLine3\\.manualUserRate"]').val()=="")
			  {
				 $('input[name="specialServiceFormLine3\\.payee"]').removeClass("validate[required]");
			     $('input[name="specialServiceFormLine3\\.payee"]').attr('disabled',true);
			     $('#imgPayeeLine3').hide();
			  }
			$('input[name="specialServiceFormLine3\\.specialServiceCode"]').removeClass("validate[required]");
		}
		if(isValid && $('input[name="specialServiceFormLine4\\.specialServiceCode"]').val()=="" && !specialServiceLineCheck(4)){
			$('input[name="specialServiceFormLine4\\.specialServiceCode"]').addClass("validate[required]");
			isValid=false;
			
		}else{
			spSvCode=$('input[name="specialServiceFormLine4\\.specialServiceCode"]').val();
			if($('input[name="specialServiceFormLine4\\.payee"]').hasClass("validate[required]") && $('select[name="specialServiceFormLine4\\.rateBasisCode"]').selected().val() ==null && $('input[name="specialServiceFormLine4\\.manualUserRate"]').val()=="")
			  {
				 $('input[name="specialServiceFormLine4\\.payee"]').removeClass("validate[required]");
			     $('input[name="specialServiceFormLine4\\.payee"]').attr('disabled',true);
			     $('#imgPayeeLine4').hide();
			  }
			$('input[name="specialServiceFormLine4\\.specialServiceCode"]').removeClass("validate[required]");
		}
		if(isValid && $('input[name="specialServiceFormLine5\\.specialServiceCode"]').val()=="" && !specialServiceLineCheck(5)){
			$('input[name="specialServiceFormLine5\\.specialServiceCode"]').addClass("validate[required]");
			isValid=false;
			
		}else{
			spSvCode=$('input[name="specialServiceFormLine5\\.specialServiceCode"]').val();
			if($('input[name="specialServiceFormLine5\\.payee"]').hasClass("validate[required]") && $('select[name="specialServiceFormLine5\\.rateBasisCode"]').selected().val() ==null && $('input[name="specialServiceFormLine5\\.manualUserRate"]').val()=="")
			  {
				 $('input[name="specialServiceFormLine5\\.payee"]').removeClass("validate[required]");
			     $('input[name="specialServiceFormLine5\\.payee"]').attr('disabled',true);
			     $('#imgPayeeLine5').hide();
			  }
			$('input[name="specialServiceFormLine5\\.specialServiceCode"]').removeClass("validate[required]");
		}
	}else{
		if($('input[name="specialServiceFormLine1\\.specialServiceCode"]').val()==""){
			$('input[name="specialServiceFormLine1\\.specialServiceCode"]').addClass("validate[required]");
			isValid=false;
		}else{
			$('input[name="specialServiceFormLine1\\.specialServiceCode"]').removeClass("validate[required]");
			spSvCode=$('input[name="specialServiceFormLine1\\.specialServiceCode"]').val();
			if($('input[name="specialServiceFormLine1\\.payee"]').hasClass("validate[required]") && $('select[name="specialServiceFormLine1\\.rateBasisCode"]').selected().val() =="" && $('input[name="specialServiceFormLine1\\.manualUserRate"]').val()=="")
			  {
				 $('input[name="specialServiceFormLine1\\.payee"]').removeClass("validate[required]");
			     $('input[name="specialServiceFormLine1\\.payee"]').attr('disabled',true);
			     $('#imgPayeeLine1').hide();
			  }
		}
	}
	
	if( $('input[name="specialServiceFormLine1.organisationId"]').val()!="" &&  $('input[name="specialServiceFormLine1.organisationId"]').val()!=null)
			{ 
					if($('input[name="specialServiceFormLine1\\.addressRoleId"]').val()==null ||  $('input[name="specialServiceFormLine1\\.addressRoleId"]').val()=='')
						{
						 $('input[name="specialServiceFormLine1.routingText"]').validationEngine('showPrompt', ' * Please select adddress role for selected organization.', 'error', true);
							isValid=false;
						}
					else
						{
							$('input[name="specialServiceFormLine1\\.routingText"]').removeClass("validate[required]");
						}
			}
	if( $('input[name="specialServiceFormLine2.organisationId"]').val()!="" &&  $('input[name="specialServiceFormLine2.organisationId"]').val()!=null)
	{ 
			if($('input[name="specialServiceFormLine2\\.addressRoleId"]').val()==null ||  $('input[name="specialServiceFormLine2\\.addressRoleId"]').val()=='')
				{
				 $('input[name="specialServiceFormLine2.routingText"]').validationEngine('showPrompt', ' * Please select adddress role for selected organization.', 'error', true);
					isValid=false;
				}
			else
				{
					$('input[name="specialServiceFormLine2\\.routingText"]').removeClass("validate[required]");
				}
	}
	if( $('input[name="specialServiceFormLine3.organisationId"]').val()!="" &&  $('input[name="specialServiceFormLine3.organisationId"]').val()!=null)
	{ 
			if($('input[name="specialServiceFormLine3\\.addressRoleId"]').val()==null ||  $('input[name="specialServiceFormLine3\\.addressRoleId"]').val()=='')
				{
				 $('input[name="specialServiceFormLine3.routingText"]').validationEngine('showPrompt', ' * Please select adddress role for selected organization.', 'error', true);
					isValid=false;
				}
			else
				{
					$('input[name="specialServiceFormLine3\\.routingText"]').removeClass("validate[required]");
				}
	}
	if( $('input[name="specialServiceFormLine4.organisationId"]').val()!="" &&  $('input[name="specialServiceFormLine4.organisationId"]').val()!=null)
	{ 
			if($('input[name="specialServiceFormLine4\\.addressRoleId"]').val()==null ||  $('input[name="specialServiceFormLine4\\.addressRoleId"]').val()=='')
				{
				 $('input[name="specialServiceFormLine4.routingText"]').validationEngine('showPrompt', ' * Please select adddress role for selected organization.', 'error', true);
					isValid=false;
				}
			else
				{
					$('input[name="specialServiceFormLine4\\.routingText"]').removeClass("validate[required]");
				}
	}
	if( $('input[name="specialServiceFormLine5.organisationId"]').val()!="" &&  $('input[name="specialServiceFormLine5.organisationId"]').val()!=null)
	{ 
			if($('input[name="specialServiceFormLine5\\.addressRoleId"]').val()==null ||  $('input[name="specialServiceFormLine5\\.addressRoleId"]').val()=='')
				{
				 $('input[name="specialServiceFormLine5.routingText"]').validationEngine('showPrompt', ' * Please select adddress role for selected organization.', 'error', true);
					isValid=false;
				}
			else
				{
					$('input[name="specialServiceFormLine5\\.routingText"]').removeClass("validate[required]");
				}
	}
	return isValid;
}




function showErrorMessage(){
	$('#msgDivSplSrv').html("<div class=\"message_error\"> Unit is not linked to shipment "+ $("#shipmentNumber").val()+"</div>");
	$('#msgDivSplSrv').show();
}

function showError(errorMessageString){
	$('#msgDivSplSrv').html("<div class=\"message_error\">"+ errorMessageString+"</div>");
	$('#msgDivSplSrv').show();
}

function hideErrorMessage(){
	$('#msgDivSplSrv').html("");
	$('#msgDivSplSrv').hide();
}

/*function processSpecialServicedate(index){
//Date Check.
if($('input[name="specialServiceFormLine'+index+'\\.isRequireDate"]').val()=='N'){
	$('input[name="specialServiceFormLine'+index+'\\.specialServiceDate"]').removeClass("validate[required] hasDatepicker");
	$('input[name="specialServiceFormLine'+index+'\\.specialServiceDate"]').attr('disabled',true);
}else	if($('input[name="specialServiceFormLine'+index+'\\.isRequireDate"]').val()=='Y'){
	$('input[name="specialServiceFormLine'+index+'\\.specialServiceDate"]').attr('disabled',false);
	$('input[name="specialServiceFormLine'+index+'\\.specialServiceDate"]').addClass("validate[required] hasDatepicker");
}else{
	$('input[name="specialServiceFormLine'+index+'\\.specialServiceDate"]').attr('disabled',false);
	$('input[name="specialServiceFormLine'+index+'\\.specialServiceDate"]').removeClass("validate[required] hasDatepicker");
}
}*/

function addroleUpdateForSPSR(data) {
	$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.note"]').val('');
	var values = data.split("|");
	var routingText = formatAddRoleDscrForSPSV(values[4],values[7],values[2],values[6]);
	//$("#payeeHidden"+payeeLineNumber).val(item.name);
	if(values[3]!='null')
	    $('input[name="specialServiceFormLine'+payeeLineNumber+'\\.careOf"]').val(values[3]);
	else
		$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.careOf"]').val('');	
	$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.routingText"]').val(routingText);
	$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.addressRoleId"]').val(values[9]);
	$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.source"]').val("Manual");
	$('label[for="specialServiceFormLine'+payeeLineNumber+'\\.sourceReadOnly"]').text("Manual");
	$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.isMilTruckerRateCustomized"]').val("");
	$('input[name="specialServiceFormLine'+payeeLineNumber+'\\.milTruckerRateId"]').val("");
	checkRateBasisRequired(payeeLineNumber);
	isSpecialServiceChanged=true;
	var dataUrl = _context +"/shipment/specialservice/changeBgColor?arolid="+values[9];
		$.ajax({
			type : "GET",
			url: dataUrl,
			success: function(responseText){
				if(responseText=='03'){
					$('input[name="specialServiceFormLine1.payee"]').css("color", "purple");
				}else{
					$('input[name="specialServiceFormLine1.payee"]').css("color", "");
				}
			}
		});

}

function formatAddRoleDscrForSPSV(nameQualifier, addressLine1, city, state) {
	var nameQualifierTemp = "";
	var addressLine1Temp = "";
	var cityTemp = "";
	var stateTemp = "";
	
	if (nameQualifier != "") {
		nameQualifierTemp = nameQualifier;
	}
	if (addressLine1 != "") {
		if (nameQualifierTemp != "") {
			addressLine1Temp = " - " + addressLine1;
		} else {
			addressLine1Temp =  addressLine1;
		}
	}
	/*if (city != "") {
		cityTemp = " - " + city;
	}*/
	if (state != "") {
		stateTemp = ", " + state;
	}
	 return nameQualifierTemp + addressLine1Temp + cityTemp + stateTemp;
}
function getRateBasisList() {
	// Get contact list for address. [commented for merge.]specialServiceFormLine1.rateBasisCode
	$.ajax({
		async:false,
		type : "POST",
		url : _context +"/shipment/specialservice/getRateBasisList",
		data : {
		},
		success : function(responseText) {
			$('select[name="specialServiceFormLine1\\.rateBasisCode"]').children().remove();
			$('select[name="specialServiceFormLine1\\.rateBasisCode"]').append("<option value=''></option>");
			for ( var i = 0; i < responseText.data.length; i++) {
				$('select[name="specialServiceFormLine1\\.rateBasisCode"]')
				.append($("<option/>", {
					value : responseText.data[i].code,
					text : responseText.data[i].description
				}));
			}
			if($("#isSpecialServiceAdd").val()!='false'){
				for(var i=2;i<=5;i++){
					$('select[name="specialServiceFormLine'+i+'\\.rateBasisCode"]').html($('select[name="specialServiceFormLine1\\.rateBasisCode"]').html());
				}
			}
		}
	});	
		
}

function checkBgColor(arolid)
{
	var dataUrl = _context +"/shipment/specialservice/changeBgColor?arolid="+arolid;
		$.ajax({
			type : "GET",
			url: dataUrl,
			success: function(responseText){
				if(responseText=='03'){
					$('input[name="specialServiceFormLine1.payee"]').css("color", "purple");
				}else{
					$('input[name="specialServiceFormLine1.payee"]').css("color", "");
				}
			}
		});
}

function formatToTwoDecimalPlaces(val)
{
	var formattedVal="";
	if(val !="" && val !=null )
	{
		val = parseFloat(val).toFixed(2);
		var splittedAtDot = val.toString().split(".");	
		var commaSepratedVal = splittedAtDot[0].toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
			
		if(splittedAtDot.length==1)
		{
			formattedVal = commaSepratedVal + ".00";
		}
		else
		{
			formattedVal = commaSepratedVal + "." + splittedAtDot[1];
		}
	}
	return formattedVal;
};var isClauseChanged = "";
var clauseCode = "";



//added against 21739
//var changeInClausesGrid=false;

$(document).ready(function() {
	
	
	$('#clause :input').change(function()
	{isClauseChanged = "Y";
		if(this.type=='radio')
		{
			if($("#custom").attr("checked")==true || 
					$("#custom").attr("checked")=='true'||$("#custom").attr("checked")=='checked')
			{
				selectForFormSerialize(this, 'C');
				customClickFunction();
			}
			else if($("#standard").attr("checked")==true || 
					$("#standard").attr("checked")=='true'||$("#standard").attr("checked")=='checked')
			{//alert("Test::::2");
				selectForFormSerialize(this, 'S');
				standardClickFunction();
			}
		}
	});
	
	$("#standardClauseCode").change(function()
	{//alert("Test::::3");
		if($("#standardClauseCode").val()=="" || 
				$("#standardClauseCode").val()!=clauseCode)
		{
			clauseCode = "";
			$("#standardClauseCode").val('');
			$('#text').val("");
			$("#isEditable").val("");
			$("#text").attr("readonly", true);
		}
	});
	
	//Autocompleter and lookup for standard clause
 	$('#standardClauseCode').gatesAutocomplete({
		source: '../cas/autocomplete.do?method=getBkStandardClause&searchType=297',
		formatItem: function(data) {
			return data.Code;
		},
		formatResult: function(data) {
			return data.Code;
		}, 
		select: function(data) {
			isClauseChanged = "Y";
			$("#text").attr("readonly", true);
			$('#standardClauseCode').val(data.Code);
			clauseCode = data.Code;
			$('#text').val(data.FullClause);
			$('#isEditable').val(data.is_editable);
			if($('#isEditable').val()=='Y')
				$("#text").attr("readonly", false);
		}
	});	
 	
	$('#standardClauseCode').gatesPopUpSearch({func:function() {standardClausePopupSearch();}});
	
	
	// create add clause dialog at body onload
	$("#addClauseDialog").dialog({
		autoOpen : false,
		width :634,
		modal : true,
		title: 'Add Clause',
		buttons:{
			Cancel:function()
			{
				if(isClauseChanged!="")
				{
					var r = confirm("All unsaved changes will be discarded.Continue?");
					if(r)
						$("#addClauseDialog").dialog('close');
					else
						return;
				}
				else
					$("#addClauseDialog").dialog('close');
			},
			/*Clear:function()
			{
				resetFunction();
			},*/
			Ok:function()
			{

				    
					if($("#clause").validationEngine('validate'))
					{
						var standardClauseCodes = $('#standardClauseCode').val().split(",");
						var count = standardClauseCodes.length;
						var i=0;
						var j=0;
						var texts = $('#text').val().split(/\r\n|\r|\n/g);
						for(i=0;i<count;i++)
						{
							isClauseChanged = "Y";
							//$("#text").attr("readonly", true);
							//var values = id.split("|");	
							$('#standardClauseCode').val($.trim(standardClauseCodes[i]));
							//clauseCode = values[0];
							$('#text').val(texts[j]);
							//$('#isEditable').val(values[2]);
							/*if($('#isEditable').val()=='Y')
								$("#text").attr("readonly", false);*/
							
						var queryString = $('#clause').formSerialize();
							$.ajax({
								url : _context +"/shipment/clause/addClause",
								type : "POST",
								data : queryString,
								success : function(
										responseText) {
										if(responseText.success==true)
										{
												$("#gridIdForClauses").trigger("reloadGrid");
												/*if($('#isInBond :selected').val()=='false')
												showResponseMessages("msgDiv", responseText);*/
										}
										else	
											showResponseMessages("msgDiv", responseText);
										
										$("#addClauseDialog").dialog('close');
							
							//added against 21739
							//changeInClausesGrid=true;
								}
							});
							
							j = j + 2;
						}
					}
				else
					return false;
			},
			'Ok & Next':function() {
				if($("#clause").validationEngine('validate')) 
				{
					var standardClauseCodes = $('#standardClauseCode').val().split(",");
					var count = standardClauseCodes.length;
					var i=0;
					var j=0;
					var texts = $('#text').val().split(/\r\n|\r|\n/g);
					for(i=0;i<count;i++)
					{
						isClauseChanged = "Y";
						//$("#text").attr("readonly", true);
						//var values = id.split("|");	
						$('#standardClauseCode').val($.trim(standardClauseCodes[i]));
						//clauseCode = values[0];
						$('#text').val(texts[j]);
						//$('#isEditable').val(values[2]);
						/*if($('#isEditable').val()=='Y')
							$("#text").attr("readonly", false);*/
						
					var queryString = $('#clause').formSerialize();
						$.ajax({
							url : _context +"/shipment/clause/addClause",
							type : "POST",
							data : queryString,
							success : function(
									responseText) {
									if(responseText.success==true)
									{
											$("#gridIdForClauses").trigger("reloadGrid");
											/*if($('#isInBond :selected').val()=='false')
											showResponseMessages("msgDiv", responseText);*/
									}
									else {	
										showResponseMessages("msgDiv", responseText);
									}
									
									// clear grid for next use
									$('#standardClauseCode').val('');
									$('#text').val('');
									isClauseChanged = '';
						
						//added against 21739
						//changeInClausesGrid=true;
							}
						});
						
						j = j + 2;
					}
				}
			else
				return false;
			}
		},
		open : function(){
			resetFunction();
			isClauseChanged = "";
			$("#clause").validationEngine('attach');
			tabSequence('#addClauseDialog',false,false);
		},
		close : function() {
			$("#clause").validationEngine('hideAll');
			$("#clause").validationEngine('detach');
			tabSequence('#shipmentForm',true,false);
			//$("#gridIdForClauses").trigger("reloadGrid");
		}
	});
	
	//
	$('#clausesAdd').click(function() {
		//Modified for Defect D028950
		if(!(($('#statusCode').text()=='ISSUED') || $('#statusCode').text()=='CORRECTED') && (isClausesAdd==true)){
			if(shipmentNotFound!=true)
			$("#addClauseDialog").dialog('open');
		}
		return false;
	});
   
	
      
  });

function customClickFunction()
{//alert("customClickFunction1");
	clauseCode = "";
	$("#standardClauseCode").val('');
	$("#text").val("");
	$("#isEditable").val("Y");
	$("#standardClauseCode").attr("disabled", true);
	$("#standardClauseCode").removeClass("validate[required]");
	$("#text").removeClass("validate[required]");
	//This will disable Add button while selecting custom radio button.
	$(":button:contains('Ok')").prop("disabled", true).addClass("ui-state-disabled");
	$("#text").attr("disabled", true);
}

function standardClickFunction()
{//alert("standardClickFunction");
	clauseCode = "";
	$("#standardClauseCode").val('');
	$("#text").val("");
	$("#isEditable").val("");
	$("#standardClauseCode").focus();
	$("#standardClauseCode").attr("disabled", false);
	$("#standardClauseCode").addClass("validate[required]");
	$("#text").addClass("validate[required]");
	//This will enable Add button while selecting standard radio button.
	$(":button:contains('Ok')").prop("disabled", false).removeClass("ui-state-disabled");
	$("#text").attr("readonly", false);
	$("#text").attr("disabled", false);
}

function resetFunction()
{
	//selectForFormSerialize($('#standard'), 'S');
	standardClickFunction();
}

function removeClausesPointers()
{
	$("#clause").validationEngine('hideAll');
}

function imposeMaxLength(Object, MaxLen) {
	return (Object.value.length <= MaxLen-1);
}

function standardClausePopupSearch() {
	
	var code = $('#standardClauseCode').val();
	var actionUrl =  _context + '/cas/blngstandardClauseSearch.do?code='+code+'&ratedatesearch='+ratedatesearch;
	var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, 'StandardClauseSearch', windowStyle);
}

function setStandardClause(id) {
	/*isClauseChanged = "Y";
	$("#text").attr("readonly", true);
	var values = id.split("|");	
	$('#standardClauseCode').val(values[0]);
	clauseCode = values[0];
	$('#text').val(values[1]);
	$('#isEditable').val(values[2]);
	if($('#isEditable').val()=='Y')
		$("#text").attr("readonly", false);*/
	
	var values = id.split("|");
	var i = 0;
	var linebreak = "\r\n";
	var clausesText = "";
	var actualCode = "";
	$('#isEditable').val(false);
	$("#text").attr("readonly", true);
	while(values[i] != null){
		if(values[i] == null){
			break;
		}		
		if(actualCode != ""){
			actualCode = actualCode + ", " + values[i].split(",")[0];	
			if(clausesText != ""){
				clausesText = clausesText + linebreak + linebreak + values[i].split(",")[4];	
			}else{
				clausesText = values[i].split(",")[4];
			}
		}else{
			actualCode = values[i].split(",")[0];
			if(clausesText != ""){
				clausesText = clausesText + linebreak + linebreak + values[i].split(",")[4];	
			}else{
				clausesText = values[i].split(",")[4];
			}
		}
		if(i == 0){
			if(values[i].split(",")[3] == 'Y' || values[i].split(",")[3] == 'y')
			{
				$('#isEditable').val(true);
				$("#text").attr("readonly", false);
			}
			else
			{
				$('#isEditable').val(false);
				$("#text").attr("readonly", true);
			}
		}else{
			$('#isEditable').val(false);
			$("#text").attr("readonly", true);
		}
		i = i + 1;
	}

	$('#standardClauseCode').val(actualCode);
	$('#text').val(clausesText);
	
	tempStandardClauseCode = $("#standardClauseCode").val();

}

var clauseGridComplete = function()
{
	 var rowIDs = jQuery("#gridIdForClauses").getDataIDs(); 
	 var headerStr = "";
     for (var i=0;i<rowIDs.length;i=i+1)
     { 
       var rowData=jQuery("#gridIdForClauses").getRowData(rowIDs[i]);
       //var trElement = jQuery("#"+ rowIDs[i],jQuery('#gridIdForClauses'));
   	   
       if (rowData.isEditable!='Y' || ($("#statusCode").text()=='CORRECTED')|| ($("#statusCode").text()=='ISSUED')|| isClausesUpdate==false){
    	   $('#gbox_gridIdForClauses tbody tr#'+rowIDs[i]+' td div.ui-inline-edit').hide();
       }
   	   if (($("#statusCode").text()=='ISSUED')|| ($("#statusCode").text()=='CORRECTED') || isClausesDelete==false)  {
   		   $('#gbox_gridIdForClauses tbody tr#'+rowIDs[i]+' td div.ui-inline-del').hide();
   		   
   	   }
   	   
       if(rowData.standardClauseCode!=null && rowData.standardClauseCode!='')
       {       if(headerStr=='')
    	   			headerStr = rowData.standardClauseCode;
       			else
       				headerStr = headerStr + ", "+rowData.standardClauseCode;
       }
       
       // D026181
       if(rowData.clauseTypeCode=='C'){
          	$("#gridIdForClauses").jqGrid('setCell',rowIDs[i],'clauseTypeCode', 'Custom');
          }else if(rowData.clauseTypeCode=='I'){
          	$("#gridIdForClauses").jqGrid('setCell',rowIDs[i],'clauseTypeCode', 'Instruction');
          }else{
          	$("#gridIdForClauses").jqGrid('setCell',rowIDs[i],'clauseTypeCode', 'Billing Clause');
          }
    	 // jQuery('#gridIdForClauses tr #'+rowIDs[i]+' td:last div:first div.ui-inline-edit',jQuery(this)).hide();
    	   //$('.ui-icon-pencil').hide();
    	   //$("#gridIdForClauses").jqGrid('setCell', (i), 'actions', $("div.ui-pg-div.ui-inline-edit", "#"+"gbox_gridIdForClauses").show(), 'ui-icon-pencil', '');
    }
     if(headerStr!="")
  	  // headerStr = "Clauses - " + headerStr;
     headerStr = " - " + headerStr;
     else
  	   headerStr = "";
     //headerStr = "Clauses";
     setAccordianTabDetails('clauseHeader', headerStr);
     
     $('#pagerIdForClauses .ui-pg-input').attr("readonly", true);
     
   //added against 21739
 	/*if(counterClausesGridReloaded==0){
 	numberOfInitialRowsClausesGrid=jQuery("#gridIdForClauses").jqGrid('getGridParam', 'records');
 	counterClausesGridReloaded++;
 	}
 	if(numberOfInitialRowsClausesGrid != jQuery("#gridIdForClauses").jqGrid('getGridParam', 'records')){
 		changeInClauses=true;
 	}*/
 	//22735
 	disableClauseCheckBoxes(); 
    return true;
};

var clauseLoadComplete = function()
{
	//hides add row
	$("#tr_clauseSeqNo", "#"+"gbox_gridIdForClauses").hide();
	
	//Clears and hides error row
	$('table[aria-labelledby="gbox_gridIdForClauses"] thead tr[id="FormError"] td').html("");
	$('table[aria-labelledby="gbox_gridIdForClauses"] thead tr[id="FormError"]').hide();
	
	return true;
};

function validateMaxlength(value, colname)
{
	if(value.length>1800)
		return [false, "Clause length cannot be greater than 1800 characters"];
	else
		return [true, ""];
}

function setClauseDiv() {
	var rowIDs = jQuery("#gridIdForClauses").getDataIDs();
	var headerStr = "";
	for ( var i = 0; i < rowIDs.length; i = i + 1) {
		var rowData = jQuery("#gridIdForClauses").getRowData(rowIDs[i]);

		if (rowData.standardClauseCode != null
				&& rowData.standardClauseCode != '') {
			if (headerStr == '')
				headerStr = rowData.standardClauseCode;
			else
				headerStr = headerStr + ", " + rowData.standardClauseCode;
		}
	}
	if (headerStr != "")
		headerStr = " - " + headerStr;
	else
		headerStr = "";
	//headerStr = "Clauses";
	setAccordianTabDetails('clauseHeader', headerStr);
}
//22735
function disableClauseCheckBoxes(){
	if($("#statusCode").text()=="ISSUED" || $("#statusCode").text()=="CORRECTED" ){
		   //disable checkboxes
		 $("#cb_gridIdForClauses").attr('disabled',true);
		 $("[id^=jqg_gridIdForClauses]").attr('disabled',true);
		}
};//added against 21739
//var changeInHoldGrid=false;
function createHoldGrid(entityName) {
	
	$("#entityName").val(entityName);
	//D023187
	if(entityName=='houseHoldShipment')
	{
	isHoldManualDelete=false;
	}
	var holdColNames = ['Id', 'Hold Code', 'Message', 'Placed','Released','Last Updated'];
	var holdColModels = [
	               {name:'holdSeqNo', index:'holdSeqNo', hidden:true},
	               {name:'holdCode', index:'holdCode', width:42, editable:true, formatter:(isHoldManualUpdate==true?'showlink': 'formatLink'), formatoptions : {
          				baseLinkUrl : "javascript:",
        				showAction: "editHold('",
        				addParam: "');" }
                    },
	               {name:'note', index:'note', width:200, editable:true},
	               {name:'placed', index:'placed', width:150, editable:false},
	               {name:'released', index:'released', width:150, editable:false},
	               {name:'lastUpdated', index:'lastUpdated', width:150, editable:false}
			   	];
			jQuery.extend($.fn.fmatter,
			{
				formatLink : function(cellvalue,
						options, rowdata) {
						return cellvalue;
				}
				});
				
	var holdHHGDSColNames = ['Id','Seq', 'Hold Code', 'Message', 'Placed','Released','Last Updated'];
	var holdHHGDSColModels = [
			               {name:'holdSeqNo', index:'holdSeqNo', hidden:true},
			               {name:'shipmentSeqNumberHHGDS', index:'shipmentSeqNumberHHGDS', width:42, editable:false},
			               {name:'holdCode', index:'holdCode', width:42, editable:true, formatter:(isHoldManualUpdate==true?'showlink': 'formatLink'), formatoptions : {
		          				baseLinkUrl : "javascript:",
		        				showAction: "editHold('",
		        				addParam: "');" }
		                    },
			               {name:'note', index:'note', width:200, editable:true},
			               {name:'placed', index:'placed', width:150, editable:false},
			               {name:'released', index:'released', width:150, editable:false},
			               {name:'lastUpdated', index:'lastUpdated', width:150, editable:false}
					   	];
					jQuery.extend($.fn.fmatter,
					{
						formatLink : function(cellvalue,
								options, rowdata) {
								return cellvalue;
						}
						});
	var jsonReaderHold = {
			root:"rows",
			page:"page",
			total:"total",
			records:"records",
			repeatitems:false,
			cell:"cell",
			id:"holdSeqNo"
		};
	if(entityName=='houseHoldShipment')
		{
		createGrid(
				"holdGrid", // grid id for user
				"holdPager", // page id for user
				_context+'/shipment/hold/load?entityName='+entityName, 
				'', 
				'', 
				'', 
				_context+'/shipment/hold/delete?entityName='+entityName,
				holdHHGDSColNames, 
				holdHHGDSColModels, 
				"Hold",

				"auto", 6, [ 6,  12,  18], true, isHoldManualDelete, false, false,
				jsonReaderHold, true, true, true, true, true, false, false, false, holdGridLoadComplete, false, true);
		}else{
			createGrid(
			"holdGrid", // grid id for user
			"holdPager", // page id for user
			_context+'/shipment/hold/load?entityName='+entityName, 
			'', 
			'', 
			'', 
			_context+'/shipment/hold/delete?entityName='+entityName,
			holdColNames, 
			holdColModels, 
			"Hold",

			"auto", 6, [ 6,  12,  18], true, isHoldManualDelete, false, false,
			jsonReaderHold, true, true, true, true, true, false, false, false, holdGridLoadComplete, false, true);
		}
	
	 $("#holdDialog").dialog({autoOpen: false ,width:970, height:200, modal: true
		    , buttons: {
		         Cancel:function(){
		            	$(this).dialog("close"); 
		            	tabSequence('#shipmentForm',true,false);
		          },
		          Ok:function(){
		        	  if (!$("#holdForm").validationEngine('validate')) {
			        		return;
		        	  }
		        	  
		        	  var dataUrl = _context+"/shipment/hold/add?entityName="+entityName;
			          if($("#isHoldAdd").val()=="false"){
			        	dataUrl = _context+"/shipment/hold/update?entityName="+entityName;
			          }
			          //alert(dataUrl+":::"+"&trade="+$('#tradeCode').val()+"&loadDschServiceGroupCode="+$('#loadDschServiceGroupCode').val());
			          $.ajax({
			      		type: "POST",
			      		url: dataUrl,
			      		data: $('#holdForm').formSerialize()+ "&trade="+$('#tradeCode').val()+"&loadDschServiceGroupCode="+$('#loadDschServiceGroupCode').val(),
			      		success: function(responseText){
			      			if(responseText.success){
			      				//resetMandatory();
			      				$("#holdDialog").dialog("close");
			      				if($("#isHoldAdd").val()=="false"){
			      					loadHoldGrid("U");
						        }
			      				else{
			      					loadHoldGrid("");
			      				}
			      				//added against 21739
			      				changeInHoldGrid=true;
			      			}
			      			else{
			      				showResponseMessages('msgDivHold', responseText);
			      				$('#msgDivHold').show();
			      			}
			      		}
			      	});
		          } 
	},
		open : function(){
			$("#holdForm").validationEngine('attach');
			tabSequence('#holdDialog',false,false);
		},
		close : function() {
			$("#holdForm").validationEngine('hideAll');
			$("#holdForm").validationEngine('detach');
		} 
	});
	
	 $("#holdAdd").click(function(){
		 if($('#statusCode').text()!='ISSUED' && $('#statusCode').text()!='CORRECTED' && isHoldManualAdd==true){
			 if($("#success").val()=='false'){
					$("div#msgDiv").html('<div class="message_error">Load shipment first.</div>');
			}
			else if($("#success").val()=='true' || $("#success").val()=='undefined' || $("#success").val()=='' || $("#success").val()==null){
				if(shipmentNotFound!=true) 
				openHold();
			}
		 }
		 return false;
	 });
	
	$('#holdCd').gatesPopUpSearch({
		func : function() {
				holdPopupSearch($('#holdCd').val());
		}
	});
	
	//Blurr the data for invalid item Id
	 $('#holdCd').change(function(){
		if($.trim($(this).val())==''){
			$(this).val(""); 
			$("#holdCdHidden").val("");
			$("#holdNote").val("");
			//$("#holdNoteHidden").val("");
		} 
		else if($("#holdCdHidden").val()=='undefined' || $("#holdCdHidden").val()==null || $("#holdCdHidden").val()==""){				
			$(this).val("");
			$("#holdNote").val("");
			//$("#holdNoteHidden").val("");
 	    }	
		else if($("#holdCdHidden").val()!=$.trim($(this).val())){
			$(this).val(""); 
			$("#holdCdHidden").val("");
			$("#holdNote").val("");
			//$("#holdNoteHidden").val("");
		}
		
		$(this).val($.trim($(this).val()));
		
		if($('#msgDivHold').is(':visible') && $(this).val()==''){
			$('#msgDivHold').html("");
			$('#msgDivHold').hide();
		}
   }); 	
	 
   $("#holdNote").change(function(){
	   /*if($.trim($(this).val())==''){
			$(this).val(""); 
			$("#holdNoteHidden").val("");
			$("#holdCd").val("");
			$("#holdCdHidden").val("");
		} 
		else if($("#holdNoteHidden").val()=='undefined' || $("#holdNoteHidden").val()==null || $("#holdNoteHidden").val()==""){				
			$(this).val(""); 
			$("#holdCd").val("");
			$("#holdCdHidden").val("");
	    }	
		else if($("#holdNoteHidden").val()!=$.trim($(this).val())){
			$(this).val(""); 
			$("#holdNoteHidden").val("");
			$("#holdCd").val("");
			$("#holdCdHidden").val("");
		}*/
	   $(this).val($.trim($(this).val()));
   });
   
   $("#releaseHold").click(function(){
	   var releasedHoldSeqNos = jQuery("#holdGrid").jqGrid('getGridParam','selarrrow');
	   if(releasedHoldSeqNos!='undefined' && releasedHoldSeqNos!=null && releasedHoldSeqNos!=''){
		   $.ajax({
				url: _context+"/shipment/hold/releaseHolds?entityName="+$("#entityName").val()+"&releasedHoldSeqNos="+releasedHoldSeqNos,
				success: function(responseText){
					if(responseText.success){
						loadHoldGrid("R");
						loadHoldUnreleasedGrid();
					}
					else{
					   $('table[aria-labelledby="gbox_holdGrid"] thead tr[id="FormError"] td').html(responseText.messages.error.toString());
					   $('table[aria-labelledby="gbox_holdGrid"] thead tr[id="FormError"]').show();
					}
				}
			});
	   }
	   else{
		   if($("#holdGrid").getGridParam("reccount")==0){
			   $('table[aria-labelledby="gbox_holdGrid"] thead tr[id="FormError"] td').html("There are no holds to be released.");
			   $('table[aria-labelledby="gbox_holdGrid"] thead tr[id="FormError"]').show();
		   }
		   else{
			   $('table[aria-labelledby="gbox_holdGrid"] thead tr[id="FormError"] td').html("Please select atleast one unreleased hold to be released.");
			   $('table[aria-labelledby="gbox_holdGrid"] thead tr[id="FormError"]').show();
		   }
	   }
	 //added against 21739
	  // changeInShipmentHold=true;
   });
   
   $("#undoReleaseHold").click(function(){
	   var undoReleasedHoldSeqNos = jQuery("#holdGrid").jqGrid('getGridParam','selarrrow');
	   if(undoReleasedHoldSeqNos!='undefined' && undoReleasedHoldSeqNos!=null && undoReleasedHoldSeqNos!=''){
		   $.ajax({
				url: _context+"/shipment/hold/undoReleaseHolds?entityName="+$("#entityName").val()+"&undoReleasedHoldSeqNos="+undoReleasedHoldSeqNos,
				success: function(responseText){
					if(responseText.success){
						loadHoldGrid("UR");
						loadHoldUnreleasedGrid();
					}
					else{
					   $('table[aria-labelledby="gbox_holdGrid"] thead tr[id="FormError"] td').html(responseText.messages.error.toString());
					   $('table[aria-labelledby="gbox_holdGrid"] thead tr[id="FormError"]').show();
					}
				}
			});
	   }
	   else{
		   if($("#holdGrid").getGridParam("reccount")==0){
			   $('table[aria-labelledby="gbox_holdGrid"] thead tr[id="FormError"] td').html("There are no holds to be unreleased.");
			   $('table[aria-labelledby="gbox_holdGrid"] thead tr[id="FormError"]').show();
		   }
		   else{
			   $('table[aria-labelledby="gbox_holdGrid"] thead tr[id="FormError"] td').html("Please select atleast one released hold to be undone.");
			   $('table[aria-labelledby="gbox_holdGrid"] thead tr[id="FormError"]').show();
		   }
	   }
	 //added against 21739
	   //changeInShipmentHold=true;
   });
   
   //Button- Hold Release on create_shipment.jsp
   /*$("#shipmentHoldReleaseBtn").click(function(){
	   $.ajax({
			url: _context+"/shipment/hold/releaseHolds?entityName="+$("#entityName").val()+"&releasedHoldSeqNos="+$("#holdUnreleasedGrid").getDataIDs()[0],
			success: function(responseText){
				if(responseText.success){
					loadHoldGrid("R");
					loadHoldUnreleasedGrid();
				}
			}
		});
   });*/
	 
   /*$("#holdGrid").jqGrid('setGridParam',{
			afterInsertRow: function(rowid, rowdata, rowelem){
				alert("afterInsertRow");
				loadHoldGrid();
			}
    });*/
   //holdPredictive();
   $('#holdCd').gatesAutocomplete({
		source:_context+'/cas/autocomplete.do',
	 	extraParams: {
		 		 method: 'search_hold_code',
		 		 searchType: '264',
		 		parentSearch: function(){return  "ALL" + '|'+ getTrade() + '|'+ getLdDschSrvcGroup();}
	 	},
		formatItem : function(item) {
			//alert("item.HOLD_CODE: " + item.HOLD_CODE);
			//alert("item.DESCRIPTION: " + item.DESCRIPTION);
			return item.HOLD_CODE/*+"-"+item.DESCRIPTION*/;
		},
		formatResult : function(item) {
			//alert("item: " + item);
			return item.HOLD_CODE/*+"-"+item.DESCRIPTION*/;
		},
		select : function(item) {
			$('#holdCd').val(item.HOLD_CODE);
			$("#holdCdHidden").val(item.HOLD_CODE);
			$('#holdNote').val(item.DESCRIPTION);
			//$("#holdNoteHidden").val(item.DESCRIPTION);
		}
	});
}

function openHold(){
	$("#holdDialog").dialog( "option", "title", 'Hold' );
	
	if($("#statusCode").text()!='ISSUED' && $("#statusCode").text()!='CORRECTED')
	{
		$("#holdDialog").dialog('open'); 
	} 
	$("#holdForm").clearForm();
	$("#isHoldAdd").val("true");
	$('#msgDivHold').hide();
	$("#holdCd").attr("readOnly", false);
	$("#holdNote").attr("readOnly", false);
}

function editHold(id) {
	var holdSeqNo = id.split('=')[1];
	//alert(seqNo);
	if(isHoldManualUpdate){
	showHoldDialog(holdSeqNo);
	}
}

function showHoldDialog(holdSeqNo){
	//alert("seqNo: " + seqNo);
	$.ajax({
		url: _context+"/shipment/hold/getHold?holdSeqNo="+holdSeqNo+"&entityName="+$("#entityName").val(),
		success: function(responseText){
			openHold();
			$("#isHoldAdd").val("false");
			$("#holdForm").loadJSON(responseText);
			$("#holdCdHidden").val(responseText.holdCd);
			//$("#holdNoteHidden").val(responseText.holdNote);
			$("#holdCd").attr("readOnly", true);
			$("#holdNote").attr("readOnly", false);
		}
	});
}

function holdPopupSearch(holdCd) {
	var actionUrl = _context + '/cas/maintainHoldSearch.do?filterValue1=' + $("#holdCd").val() + '&filterValue4=' + $("#holdNote").val() + '&filterValue5=' + $("#tradeCode").val() + '&filterValue6=' + $("#loadDschServiceGroupCode").val();
	var windowStyle = 'top=50,left=100,height=500,width=900,scrollbars=0,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	window.open(actionUrl, 'CitySearch', windowStyle);
}

function holdCodeUpdate(holdCodeMessageText){
	var holdCodeDetails = holdCodeMessageText.split("|");
	$('#holdCd').val(holdCodeDetails[0]);
	$("#holdCdHidden").val(holdCodeDetails[0]);
	$('#holdNote').val(holdCodeDetails[1]);
	//$("#holdNoteHidden").val(holdCodeDetails[1]);
	clearHoldErrMsg();
}

function holdCodesUpdate(holdCodes, messageTexts){
	$('#holdCd').val(holdCodes);
	$("#holdCdHidden").val(holdCodes);
	$('#holdNote').val(messageTexts);
	//$("#holdNoteHidden").val(messageTexts);
	clearHoldErrMsg();
}

var holdGridLoadComplete = function(){
	var holdCount = $("#holdGrid").getGridParam("reccount");
	if(holdCount==0){
		setAccordianTabDetails('maintainShipmentHoldId', "");
	}
	else if(holdCount>0){
		/*var holdDisplayText = " - "+jQuery("#holdGrid").getRowData($("#holdGrid").getDataIDs()[0]).holdCode;
		var releaseCol=jQuery("#holdGrid").getRowData($("#holdGrid").getDataIDs()[0]).released;
		if(releaseCol.trim()==""){
		setAccordianTabDetails('maintainShipmentHoldId', holdDisplayText);
		}else if(holdCount>0){*/
			var holdDisplayText = "";
			var rowIDs = jQuery("#holdGrid").getDataIDs(); 
	        for (var i=0;i<rowIDs.length;i=i+1){ 
		        rowData = jQuery("#holdGrid").getRowData(rowIDs[i]);
		        if ($.trim(rowData.released)==""){
		        	holdDisplayText+=$.trim(rowData.holdCode) + " , ";
		        }
		       //Commented for Defect D027261 
		        //D023187
		       /* if($("#entityName").val()=='houseHoldShipment')
				{
				$("#gbox_holdGrid .cbox").attr("disabled", true);
				$("input.cbox", "#gbox_holdGrid #"+rowIDs[i]).hide();
				} */ 
	        }
	        
	        if($.trim(holdDisplayText)!=""){
	        	holdDisplayText = " - " + holdDisplayText;
	        	holdDisplayText = holdDisplayText.substring(0, holdDisplayText.length - 3);
	        }
			setAccordianTabDetails('maintainShipmentHoldId', holdDisplayText);
		//}
	}
	// Hides blank row on grid creation as readonly parameter is false to include form error row 
	$('table[aria-labelledby="gbox_holdGrid"] thead tr[id="tr_holdSeqNo"]').hide();
	//Hides Error row on grid reload
	$('table[aria-labelledby="gbox_holdGrid"] thead tr[id="FormError"] td').html("");
	$('table[aria-labelledby="gbox_holdGrid"] thead tr[id="FormError"]').hide();
	
	
	if($("#holdGridCount").val()>holdCount){
		//alert("IN");
		//validateBillingStarted("Del");
	}
	$("#holdGridCount").val(holdCount);
	
	// Call for displaying unreleased holds
	getUnreleasedHoldCount($("#entityName").val());
	//Load holdUnreleasedGrid when user define hold grid is loaded
	loadHoldUnreleasedGrid();
	
	//added against 21739
 	/*if(counterHoldGridReloaded==0){
 		numberOfInitialRowsHold=jQuery("#holdGrid").jqGrid('getGridParam', 'records');
 		counterHoldGridReloaded++;
 	}
 	if(numberOfInitialRowsHold != jQuery("#holdGrid").jqGrid('getGridParam', 'records')){
 		changeInHoldGrid=true;
 	}*/
 	$('#holdGrid').jqGrid('setGridWidth', 870);
 	
 	//to disable checkbox of hold 22735
    var status = $('#statusCode').text();
	if (status == 'ISSUED' || status == 'CORRECTED') {
		$("[id^=jqg_holdGrid]").attr('disabled',true);
		$('#cb_holdGrid') .attr('disabled', true);
	}
};

function clearHoldErrMsg(){
	$("#holdForm").validationEngine('hideAll');
}

function unloadHoldGrid(){
	$('#holdGrid').jqGrid('GridUnload');
}

function loadHoldGrid(oper){
	//alert("oper: "+ oper);
	$('#holdGrid').trigger("reloadGrid");
	//validateBillingStarted(oper);
}

function holdPredictive(){
	$('#holdCd').gatesAutocomplete({
		source : _context + '/cas/autocomplete.do?method=search_hold_code&searchType=264&parentSearch=' + getHoldCodeMessage() + '|'+ getTrade() + '|'+ getLdDschSrvcGroup(),
		formatItem : function(item) {
			//alert("item.HOLD_CODE: " + item.HOLD_CODE);
			//alert("item.DESCRIPTION: " + item.DESCRIPTION);
			return item.HOLD_CODE/*+"-"+item.DESCRIPTION*/;
		},
		formatResult : function(item) {
			//alert("item: " + item);
			return item.HOLD_CODE/*+"-"+item.DESCRIPTION*/;
		},
		select : function(item) {
			$('#holdCd').val(item.HOLD_CODE);
			$("#holdCdHidden").val(item.HOLD_CODE);
			$('#holdNote').val(item.DESCRIPTION);
			//$("#holdNoteHidden").val(item.DESCRIPTION);
		}
	});
}

function getHoldCodeMessage(){
	if($("#holdNote").val()=='undefined' || $.trim($("#holdNote").val())=='' || $("#holdNote").val()==null){
		return "ALL";
	}
	else{
		return $("#holdNote").val();
	}
}

function getTrade(){
	if($("#tradeCode").val()=='undefined' || $.trim($("#tradeCode").val())=='' || $("#tradeCode").val()==null){
		return "ALL";
	}
	else{
		return $("#tradeCode").val();
	}
}

function getLdDschSrvcGroup(){
	var loadDschServiceGroup = $("#loadDschServiceGroupCode").val();
	//alert("loadDschServiceGroup: " + loadDschServiceGroup);
	if(loadDschServiceGroup=='undefined' || $.trim(loadDschServiceGroup)=='' || loadDschServiceGroup==null){
		return "ALL";
	}
	else{
		return loadDschServiceGroup;
	}
}

function validateBillingStarted(oper){
	//alert("seqNo: " + seqNo);
	var shipmentNumber = $.trim($("#shipmentNumber").val());
	if(shipmentNumber!='undefined' && shipmentNumber!=null && shipmentNumber!=''){
		$.ajax({
			url: _context+"/shipment/hold/validateBillingStarted?entityName="+$("#entityName").val()+"&shipmentNumber="+shipmentNumber+"&oper="+oper,
			success: function(responseText){
				if(responseText.success){
					showResponseMessages('msgDiv', responseText);
				}
				else{
					//alert("MsgDiv12: " + $('#msgDiv').html());
					if(oper!='D'){
						$('#msgDiv').html("");
					}
					//alert($('#msgDiv div[class="message_info"]').html());
				}
			}
		});
	}
}

function openHoldsUnreleasedDialog(entityName){
	$("#holdsUnreleased").dialog({
		width : 710,
		height : 100,
		title : 'Unreleased Holds',
		autoResize : true,
		modal: false,
		position: 'center',
		close : function(event, ui) {
			//commented for Defect D028950
			//$("#shipmentHoldReleaseBtn").attr("disabled", true);
			unloadHoldUnreleasedGrid();
			
			//On closing the holdUnreleasedGrid, change + to -
			$("#holdCount").html($("#holdCount").text().replace("-", "+"));
		}
	});
	
	/*$(window).resize(function() {
        $('body').css('height', $(this).height());
        $('#holdsUnreleased').dialog( "option", "position", [400, 660] );
    })
    .scroll(function(){
    		$(this).resize();
    	});	*/
	
	$(window).scroll(function() {
		$('body').css('height', $(this).height());
        $('#holdsUnreleased').dialog( "option", "position", "center" );
	});
	
	createHoldUnreleasedGrid(entityName);
}

function createHoldUnreleasedGrid(entityName) {
	var holdDisplayColNames = ['', '', '', '', ''];
	var holdDisplayColModels = [
	               {name:'holdSeqNo', index:'holdSeqNo', hidden:true},
	               {name:'holdCode', index:'holdCode', width:80, editable:false},
	               {name:'note', index:'note', width:320, editable:false, formatter:formatMessageText},
	               {name:'holdMz.targetWebPageSection', index:'holdMz.targetWebPageSection', width:80, editable:true, formatter:'showlink', formatoptions : {
         				baseLinkUrl : "javascript:",
       				showAction: "editHoldDisplay('",
       				addParam: "');" }
                   },
	               {name:'holdMz.highlightedAttributes', index:'holdMz.highlightedAttributes', width:160, editable:false}
			   	];

	var jsonReaderHoldDisplay = {
			root:"rows",
			page:"page",
			total:"total",
			records:"records",
			repeatitems:false,
			cell:"cell",
			id:"holdSeqNo"
		};

    /*createGrid(
			"holdUnreleasedGrid", // grid id for user
			"holdDisplayPager", // page id for user
			_context+'/shipment/hold/loadUnreleasedHolds?entityName='+entityName, 
			'', 
			'', 
			'', 
			'',
			holdDisplayColNames, 
			holdDisplayColModels, 
			"",
			160, 5, [5], true, true, false, true,
			jsonReaderHoldDisplay, true, true, false, true, true, false, false, false, holdUnreleasedGridLoadComplete, false, true);*/
	
	$('#holdUnreleasedGrid').gatesGrid({
		colNames: holdDisplayColNames,
		colModel: holdDisplayColModels,
		jsonReader: jsonReaderHoldDisplay,
		rowNum: 5,
		rowList: [5],
		height: 100,
		multiselect:true,
		gatesOptions: {
			urls: {load: _context+'/shipment/hold/loadUnreleasedHolds?entityName='+entityName},
			extraData: {
				customerGroup: function() {
					return $.trim($('#customerGroupId :selected').text());
				},
				loadDschGroup: function() {
					return  $.trim($('#loadDschServiceGroupCode').val());
				}
			},
			loadComplete: holdUnreleasedGridLoadComplete
		}
	});
    
    jQuery("#holdUnreleasedGrid").jqGrid('setGridParam',{
				onSelectRow:function(rowid, status){
				//alert("onSelectRow: " + rowid);
				var firstRowId = $("#holdUnreleasedGrid").getDataIDs()[0];
				// The first row of holdUnreleasedGrid is always selected and its checkbos is always checked.
				$('table[aria-labelledby="gbox_holdUnreleasedGrid"] tr[id="'+firstRowId+'"] input[type=checkbox]').attr('checked', true);
				$('table[aria-labelledby="gbox_holdUnreleasedGrid"] tr[id="'+firstRowId+'"]').addClass("ui-state-highlight");
			    if(firstRowId!=rowid){
			    	$('table[aria-labelledby="gbox_holdUnreleasedGrid"] tr[id="'+rowid+'"] input[type=checkbox]').attr('checked', false);
			    	$('table[aria-labelledby="gbox_holdUnreleasedGrid"] tr[id="'+rowid+'"]').removeClass("ui-state-highlight");
				}	
				
				return true;
			}
		});
	
	//Removing Header of holdUnreleasedGrid
	$("#holdUnreleasedGrid").parents("div.ui-jqgrid-view").children("div.ui-jqgrid-hdiv").hide();
	
	//On opening the holdUnreleasedGrid, change - to +
	$("#holdCount").html($("#holdCount").text().replace("+", "-"));
}

function editHoldDisplay(id) {
	var holdCode = id.split('=')[1];
	var colValue=$("#holdUnreleasedGrid").jqGrid('getCell', holdCode, 'holdMz.targetWebPageSection');
	
	
	// this code is added to load grids
	

	 createShipmentPartieGrid();
	 createShipmentReferenceNumberGrid();
		createShipmentRoutingGrid();
		createShipmentCommodityGrid();
		createShipmentSpecialServiceGrid();
		createShipmentClauseGrid();
		
		//
	//alert(colValue);
	var accordionIndex = '';
	if(colValue == 'Header'){
		window.scrollTo(0, 0);
		//expandRelatedDivForHold('');
	}
	else if(colValue == 'Shipper/Consignee'){
		accordionIndex = 0;
		expandRelatedDivForHold('#maintainShipmentShipperConsignee');
	}else if(colValue == 'Reference Numbers' ||colValue =='Marks'){
		accordionIndex = 2;
		expandRelatedDivForHold('#maintainShipmentRefNumberMarks');
	}else if(colValue == 'Routing VVD'){
		accordionIndex = 3;
		expandRelatedDivForHold('#maintainShipmentRouting');
	}else if(colValue == 'Commodity'){
		accordionIndex = 4;
		expandRelatedDivForHold('#maintain_commodity_shipment');
	}else if(colValue == 'Military'){
		accordionIndex = 5;
		expandRelatedDivForHold('#maintainShipmentMilitary');
	}else if(colValue == 'Special Services'){
		accordionIndex = 6;
		expandRelatedDivForHold('#maintainShipmentSpecialServices');
	} else if(colValue == 'Clause'){
		accordionIndex = 7;
		expandRelatedDivForHold('#maintainBookingClauses');
	}else if(colValue == 'Hold'){
		accordionIndex = 8;
		expandRelatedDivForHold('#maintainShipmentHold');
	}
	
	if(accordionIndex!=''){
		//openTargetAccordian(accordionIndex);
		var offset = accordianPostionCoordinates(accordionIndex);
		window.scrollTo(offset.left, offset.top);
	}
	
}

function accordianPostionCoordinates(accordionIndex){
	return $($('.shipment-section')[accordionIndex]).offset();
}

var holdUnreleasedGridLoadComplete = function(){
	//Default selection of first row
	jQuery("#holdUnreleasedGrid").setSelection($("#holdUnreleasedGrid").getDataIDs()[0], true);
	//Removes background colur from first row
	$('span', $($('td', $('#'+$("#holdUnreleasedGrid").getDataIDs()[0], $("#holdUnreleasedGrid")))[4])).css("background-color", "");
	//$("#holdUnreleasedGrid tr[id="+$("#holdUnreleasedGrid").getDataIDs()[0]+"] td").css("background-color", "#98BF21");
	
	//Setting content of  first td of every tr of holdUnreleasedGrid
	$('table[id="holdUnreleasedGrid"] tr td[aria-describedby="holdUnreleasedGrid_rn"]').html("");
	$('table[id="holdUnreleasedGrid"] tr td[aria-describedby="holdUnreleasedGrid_rn"]').attr("title", "");
	
	//Disabling all the checkboxes of all the displayed rows of the grid
	$('table#holdUnreleasedGrid input[type=checkbox]').attr('disabled', true);
	//Enabling the checkbox of the first row of the grid
	$('table[aria-labelledby="gbox_holdUnreleasedGrid"] tr[id="'+$("#holdUnreleasedGrid").getDataIDs()[0]+'"] input[type=checkbox]').attr('disabled', false);
	
	if($("#holdUnreleasedGrid").getGridParam("reccount")==0){
		$( "#holdsUnreleased" ).dialog('close'); 
	}
	else{
		$("#shipmentHoldReleaseBtn").attr("disabled", false);
	}
	/*$('#holdsUnreleased').attr("style","width: auto; min-height: 10px; max-height:85px; height: auto;");
	$($('#holdsUnreleased').parent())[0].style.top="637px";
	if($('#gview_holdUnreleasedGrid') != undefined && $('#gview_holdUnreleasedGrid').children() != undefined){
		if($('#gview_holdUnreleasedGrid').children()[2] != undefined ){
			$('#gview_holdUnreleasedGrid').children()[2].style.height="auto";
		}
	}*/
	calculateUnreleasedHoldGridPosition();
};

function calculateUnreleasedHoldGridPosition(){
	if($("#hold_link").offset().top>100){
	var leftCoordinate = ($("#hold_link").offset().left + $("#hold_link").width()) - $('#holdsUnreleased').dialog( "option", "width") - 10;
	var topCoordinate = $("#hold_link").offset().top - $('#holdsUnreleased').outerHeight() - 45;
	$('#holdsUnreleased').dialog( "option", "position", "center" );
	$(window).scroll(function() {
		$('#holdsUnreleased').dialog( "option", "position", "center" );
	});
	}
}


function getUnreleasedHoldCount(entityName){
	//alert("getUnreleasedHoldCount: " + entityName);
	//alert("#shipmentId): " + $("#shipmentId").val());
	if($('#hiddenonHoldLink').val() == "true")
		$('#onHoldLink').html(" - ON hold "); 
	else 
		$('#onHoldLink').html(""); 
		
	if(($("#shipmentId").val()!='undefined' && $("#shipmentId").val()!=null && $.trim($("#shipmentId").val())!='') || (entityName!='undefined' && entityName!='' && entityName!=null && entityName!='shipment')){
		$.ajax({
			url: _context+"/shipment/hold/getUnreleasedHoldCount?entityName="+entityName+"&customerGroup="+$.trim($('#customerGroupId :selected').text())+"&loadDschGroup="+$.trim($('#loadDschServiceGroupCode').val()),
			success: function(responseText){
				if(responseText.success){
					if(responseText.data!=0){
						$("#holdsDiv").show();
						$("a.holds").attr("href", "javascript:openHoldsUnreleasedDialog('"+entityName+"');");
						//On opening/closing the holdUnreleasedGrid, toggle + and -
						if($('#holdUnreleasedGrid tr').length==0){
							$("#holdCount").html("("+responseText.data+")+");
						}
						else{
							$("#holdCount").html("("+responseText.data+")-");
						}
						// For Defect D17560 -- Praveen
						//$("#shipmentHoldReleaseBtn").attr("disabled", false);
						if(entityName=='rateBill' || entityName=='printFreight'){
							loadHoldUnreleasedGrid();
						}
						
					}
					else{
						$("#holdsDiv").show();
						$("a.holds").attr("href", "javascript:void(0)");
						$("#holdCount").html("(0)");
						//$("#shipmentHoldReleaseBtn").attr("disabled", true);
						//$('#onHoldLink').html(""); // For Defect D17560  --Praveen
					}
				}
			}
		});
	}
	if(entityName != "houseHoldShipment") {
		$("#shipmentHoldReleaseBtn").tooltip({ 
		    bodyHandler: function() { 
		    	var toolTipText = "";
		    	$.ajax({
		    		url: _context+"/shipment/hold/getFirstUnreleasedHold?entityName="+entityName+"&customerGroup="+$.trim($('#customerGroupId :selected').text())+"&loadDschGroup="+$.trim($('#loadDschServiceGroupCode').val()),
		    		async: false,
		    		success: function(responseText){
		    			if(responseText.success){
		    				toolTipText = responseText.data.holdCode + " - " + responseText.data.note;
		    			}
		    		}
		    	});
		        return toolTipText; 
		    }, 
		    showURL: false 
		});
	}
}

function openUnreleasedHoldGridOnIntialDisplay(entityName){
	//alert("openUnreleasedHoldGridOnIntialDisplay: " + entityName);
	if($('#hiddenonHoldLink').val()=="true")
		$('#onHoldLink').html(" - ON hold "); 
	else 
		$('#onHoldLink').html(""); 	
	$.ajax({
			url: _context+"/shipment/hold/getUnreleasedHoldCount?entityName="+entityName,
			success: function(responseText){
				if(responseText.success){
					if(responseText.data!=0){
						//getUnreleasedHoldCount(entityName);
						$("#holdsDiv").show();
						$("a.holds").attr("href", "javascript:openHoldsUnreleasedDialog('"+entityName+"');");
						if($('#holdUnreleasedGrid tr').length==0){
							$("#holdCount").html("("+responseText.data+")+");
						} else{
							$("#holdCount").html("("+responseText.data+")-");
						}
						if(entityName=='rateBill' || entityName=='printFreight'){
							loadHoldUnreleasedGrid();
						}
						openHoldsUnreleasedDialog(entityName);
						loadHoldUnreleasedGrid();
						if(entityName=="shipment"){
							$("#shipmentHoldReleaseBtn").attr("disabled", false);
						}
					}else{
						$("#holdsDiv").show();
						$("a.holds").attr("href", "javascript:void(0)");
						$("#holdCount").html("(0)");
						//$("#shipmentHoldReleaseBtn").attr("disabled", true);
						//$('#onHoldLink').html(""); // For Defect D17560  --Praveen
						$( "#holdsUnreleased" ).dialog('close');
					}
				}
			}
		});
}

/*function showHideUnreleasedHoldButton(){
	var loadDschServiceGroup = $("#loadDschServiceGroupCode").val();
	//alert("loadDschServiceGroup: " + loadDschServiceGroup);
	if(loadDschServiceGroup=='undefined' || $.trim(loadDschServiceGroup)=='' || loadDschServiceGroup==null){
		$("#holdsDiv").hide();
		$("#shipmentHoldReleaseBtn").attr("disabled", true);
	}
	else{
		getUnreleasedHoldCount();
	}
}*/

function loadHoldUnreleasedGrid(){
	$('#holdUnreleasedGrid').trigger("reloadGrid");
}

function unloadHoldUnreleasedGrid(){
	$('#holdUnreleasedGrid').jqGrid('GridUnload');
}

function formatMessageText(cellvalue, options, rowObject){
	//alert("cellvalue: " + cellvalue);
	if($.trim(rowObject.holdMz.isRequireDataReview)=='Y' && $.trim(rowObject.holdMz.isDataRqrdInTrgtAttribute)=='Y'){
		cellvalue = '<span style="background-color:red">'+cellvalue+'</span>';
	}
	else if($.trim(rowObject.holdMz.isRequireDataReview)=='Y'){
		//D028307
		//cellvalue = '<span style="background-color:yellow">'+cellvalue+'</span>';
	}

return cellvalue;
}

function selectedHoldRelease(entityName){
	//alert("selectedHoldRelease::"+entityName);
	
	
	if(entityName=="shipment"){
		urlString = _context+"/shipment/hold/releaseHolds?entityName="+entityName+"&releasedHoldSeqNos="+$("#holdUnreleasedGrid").getDataIDs()[0];
	}
	else if(jQuery("#holdUnreleasedGrid").getRowData( $('#holdUnreleasedGrid').jqGrid('getDataIDs')[0]).note
			=='Err: Invalid P/C indicator found on bill')
	{
		urlString = _context+"/shipment/hold/deleteETyoeHold?entityName="+entityName+"&releasedHoldSeqNo="+$("#holdUnreleasedGrid").getDataIDs()[0];
		//$("#holdsUnreleased").dialog('close');
	}
	else{
		urlString = _context+"/shipment/hold/selectedHoldRelease?entityName="+entityName+"&releasedHoldSeqNo="+$("#holdUnreleasedGrid").getDataIDs()[0];
	}
	
	 $.ajax({
			url: urlString,
			success: function(responseText){
				if(responseText.success){
					if(entityName=="shipment"){
						loadHoldGrid("");
						//$('#shipmentSaveBtn').trigger("click");
					}else if(entityName=="payment" || entityName=="sendDocument"){
						window.opener.loadHoldGrid("D");
					}
					else if(entityName=="containerBilling"){
						loadHoldGrid("D");
					}
					else if(entityName=="rateBill")
					{
						loadHoldGrid("D");
					}
					loadHoldUnreleasedGrid();
					// Call for displaying unreleased holds
					getUnreleasedHoldCount(entityName);
				}
			}
		});

}

function setShipmentHold() {
	var holdCount = $("#holdGrid").getGridParam("reccount");
	if (holdCount == 0) {
		setAccordianTabDetails('maintainShipmentHoldId', "");
	} else if (holdCount > 0) {
		/*var holdDisplayText = " - "
				+ jQuery("#holdGrid").getRowData(1).holdCode;
		var releaseCol=jQuery("#holdGrid").getRowData(1).released;
		if(releaseCol.trim()==""){
			setAccordianTabDetails('maintainShipmentHoldId', holdDisplayText);
		}else{
			setAccordianTabDetails('maintainShipmentHoldId', "");
		}*/
		var holdDisplayText = "";
		var rowIDs = jQuery("#holdGrid").getDataIDs(); 
        for (var i=0;i<rowIDs.length;i=i+1){ 
	        rowData = jQuery("#holdGrid").getRowData(rowIDs[i]);
	        if ($.trim(rowData.released)==""){
	        	holdDisplayText+=$.trim(rowData.holdCode) + " | ";
	        }
        }
        
        if($.trim(holdDisplayText)!=""){
        	holdDisplayText = " - " + holdDisplayText;
        	holdDisplayText = holdDisplayText.substring(0, holdDisplayText.length - 3);
        }
		setAccordianTabDetails('maintainShipmentHoldId', holdDisplayText);
		
	}
}

function expandRelatedDivForHold(divId)
{
	collapseAll();
	window.scrollTo(0, 0);
	$(divId).css('display', 'block');
}
;$(function() {
	
	$("#milRequiredDeliveryDate").datepicker({
		dateFormat : 'mm-dd-yy'
	});
	
	$("#milRequiredDeliveryDate").change(function(){
		if(!validateDate('milRequiredDeliveryDate')){
			$(this).validationEngine('showPrompt', '* Enter date in Format (mm-dd-yyyy)', 'error', 'topRight', true);
		}
	});
	
	$('#militaryConsignorCode').blur(
			function ()
			{
				if($('#militaryConsignorCode').val()!=''){
					var s1 = $('#militaryConsignorCode').val();
					$('#militaryConsignorCode').val(s1.toUpperCase());
					
				}
			});
	
	        $('#militaryPortCallFileNumber').blur(
			function ()
			{
				if($('#militaryPortCallFileNumber').val()!=''){
					var s3 = $('#militaryPortCallFileNumber').val();
					$('#militaryPortCallFileNumber').val(s3.toUpperCase());
					
				}
			});
	        $('#governmentBillOfLadingNbr').blur(
	    			function ()
	    			{
	    				if($('#governmentBillOfLadingNbr').val()!=''){
	    					var s4 = $('#governmentBillOfLadingNbr').val();
	    					$('#governmentBillOfLadingNbr').val(s4.toUpperCase());
	    					
	    				}
	    			});
	
	        $('#militaryContractNumber').blur(
	    			function ()
	    			{
	    				if($('#militaryContractNumber').val()!=''){
	    					var s5 = $('#militaryContractNumber').val();
	    					$('#militaryContractNumber').val(s5.toUpperCase());
	    					
	    				}
	    			});
	
	        $('#militaryVoyageDocNumber').blur(
	    			function ()
	    			{
	    				if($('#militaryVoyageDocNumber').val()!=''){
	    					var s6 = $('#militaryVoyageDocNumber').val();
	    					$('#militaryVoyageDocNumber').val(s6.toUpperCase());
	    					
	    				}
	    			});

// Autocompleter and lookup for Cargo Pickup
	$('#cargoPickupCityCodeDesc').gatesAutocomplete({
		source : _context + '/tm/Autocomplete/autoCompCity',
		formatItem : function(item) {
			return item.cityCode + " " + item.cityName;
		},
		formatResult : function(item) {
			return item.cityCode + "-" + item.cityName;
		},
		select : function(item) {
			$('#cargoPickupCityCode').val(item.cityCode);
		}
	});
	
	$('#cargoDeliveryCityCodeDesc').gatesAutocomplete({
		source : _context + '/tm/Autocomplete/autoCompCity',
		formatItem : function(item) {
			return item.cityCode + " " + item.cityName;
		},
		formatResult : function(item) {
			return item.cityCode + "-" + item.cityName;
		},
		select : function(item) {
			$('#cargoDeliveryCityCode').val(item.cityCode);
		}
	});
	
	$('#cargoPickupCityCodeDesc').blur(function() {
		if ($('#cargoPickupCityCode').val() == "")
		{
			$('#cargoPickupCityCodeDesc').val('');
		}
		else if($('#cargoPickupCityCodeDesc').val() == '')
		{
			$('#cargoPickupCityCode').val('');
		}
	});
	
	$('#cargoDeliveryCityCodeDesc').blur(function() {
		if ($('#cargoDeliveryCityCode').val() == "")
		{
			$('#cargoDeliveryCityCodeDesc').val('');
		}
		else if($('#cargoDeliveryCityCodeDesc').val() == '')
		{
			$('#cargoDeliveryCityCode').val('');
		}
	});
	
	// function- cityUpdate is in routing.js for pickup and delivery
	$('#cargoPickupCityCodeDesc').gatesPopUpSearch({
		func : function() {
				placePopupSearch($('#cargoPickupCityCode').val(), 8);
		}
	});
	
	$('#cargoDeliveryCityCodeDesc').gatesPopUpSearch({
		func : function() {
				placePopupSearch($('#cargoDeliveryCityCode').val(), 9);
		}
	});
	
	$('#militaryIbsStatusCode').change(function(){
		//alert("militaryIbsStatusCode change");
		/*if(($('#customerGroupId :selected').text()=="GOVERNMENT") && $('#isAllowBookingUnit').val()=="Y"){
			setIBSCodeMandatory();
			var ibsCodeText='';
			if($('#militaryIbsStatusCode option:selected').text()!=''){
				ibsCodeText = $('#militaryIbsStatusCode option:selected').text().split(":")[1];
			}
			setCargoPickupDeliveryMandatory(ibsCodeText);
		}
		else{
			//$(this).val("");
			//Block commented by Mangesh: NO BR
			resetIBSCode();
			resetCargoPickup();
			resetCargoDelivery();
		}*/
		///----------Added by pRIYANKA
		setIBSCodeMandatory();
		var ibsCodeText='';
		if($('#militaryIbsStatusCode option:selected').text()!=''){
			ibsCodeText = $('#militaryIbsStatusCode option:selected').text().split(":")[1];
		}
		setCargoPickupDeliveryMandatory(ibsCodeText);
		//------------------
	});
	
	$('#milRequiredDeliveryDate').change(function(){
		$('#requiredDeliveryDate').val($(this).val());
	});
	
	/*$('#militaryPortCallFileNumber').change(function(){
		if($.trim($(this).val())==''){
			setAccordianTabDetails('maintainShipmentMilitaryId', 'Military');
		}
		else{
			setAccordianTabDetails('maintainShipmentMilitaryId', 'Military - '+$.trim($(this).val()));
		}
		$.trim($(this).val());
	});*/
});

function setIBSCodeMandatory(){
	// IBSCode Code
	$("#ibsCodeLbl").html("IBS Code<span class=\"mandatory\">*</span>");
	$("#militaryIbsStatusCode").addClass("validate\[required\]");
}

function resetIBSCode(){
	// IBSCode Code
	$("#ibsCodeLbl").html("IBS Code");
	$("#militaryIbsStatusCode").removeClass("validate\[required\]");
}

function setCargoPickupDeliveryMandatory(ibsStatusCode){
	if(ibsStatusCode.substr(0, 4)=='DOOR'){
		 setCargoPickupMandatory();
	}
	else{
		resetCargoPickup();
	}
	
	if(ibsStatusCode.substr(5, 9)=='DOOR'){
		setCargoDeliveryMandatory();
	}
	else{
		resetCargoDelivery();
	}
}

function validateIBSCode(){
	/*if(!(($('#customerGroupId :selected').text()=="GOVERNMENT") && $('#isAllowBookingUnit').val()=="Y") && $('#militaryIbsStatusCode').val()!=""){
		//$('#militaryIbsStatusCode').val("");
		return "IBS code is not valid for this shipment.";
   	}*/
}

function setCargoPickupMandatory(){
	$('#cargoPickupCityCodeDesc').removeAttr("disabled");
	$("#cargoPickupLbl").html("Cargo Pickup<span class=\"mandatory\">*</span>");
	$("#cargoPickupCityCodeDesc").addClass("validate\[required\]");
	$('#popupSearchcargoPickupCityCodeDesc').show();
}

function resetCargoPickup(){
	$('#cargoPickupCityCodeDesc').val('');
	$('#cargoPickupCityCodeDesc').attr("disabled", true);
	$("#cargoPickupLbl").html("Cargo Pickup");
	$("#cargoPickupCityCodeDesc").removeClass("validate\[required\]");
	$('#popupSearchcargoPickupCityCodeDesc').hide();
}

function setCargoDeliveryMandatory(){
	$('#cargoDeliveryCityCodeDesc').removeAttr("disabled");
	$("#cargoDeliveryLbl").html("Cargo Delivery<span class=\"mandatory\">*</span>");
	$("#cargoDeliveryCityCodeDesc").addClass("validate\[required\]");
	$('#popupSearchcargoDeliveryCityCodeDesc').show();
	//$('#imgPayeeLine'+index).show();
}

function resetCargoDelivery(){
	$('#cargoDeliveryCityCodeDesc').val('');
	$('#cargoDeliveryCityCodeDesc').attr("disabled", true);
	$("#cargoDeliveryLbl").html("Cargo Delivery");
	$("#cargoDeliveryCityCodeDesc").removeClass("validate\[required\]");
	$('#popupSearchcargoDeliveryCityCodeDesc').hide();
}

/*function validateRDD(){
	var conventionalRDD = $('#requiredDeliveryDate').val();
	var rdd = $('#milRequiredDeliveryDate').val();
	//alert("conventionalRDD: "+rdd);
	//alert("rdd: "+conventionalRDD);
	if(conventionalRDD!=null && conventionalRDD!='' && rdd!= null && rdd!='' && conventionalRDD!=rdd){
		return "VVD Routing's Conventional RDD and Military's RDD should match.";
	}*/
//}


function setMilitaryDiv() {
	var divText = $('#militaryPortCallFileNumber').val();
	if ($.trim(divText) == '') {
		setAccordianTabDetails('maintainShipmentMilitaryId', 'Military');
	} else {
		setAccordianTabDetails('maintainShipmentMilitaryId', ' - '
				+ $.trim(divText));
	}
	$.trim(divText);
}

function updateMilitaryData(responseText){
	//alert("responseText.data.header.requiredDeliveryDate"+responseText.data.header.requiredDeliveryDate);
	//alert("responseText.data.routing.freightDestinationCityCode"+responseText.data.routing.freightDestinationCityCode);
	$('#milRequiredDeliveryDate').val(responseText.data.header.requiredDeliveryDate);
	$('#cargoDeliveryCityCode').val(responseText.data.routing.freightDestinationCityCode);
	$('#cargoDeliveryCityCodeDesc').val(responseText.data.routing.freightDestinationCityCodeDescription);
	$('#cargoPickupCityCode').val(responseText.data.routing.freightOriginCityCode);
	$('#cargoPickupCityCodeDesc').val(responseText.data.routing.freightOriginCityCodeDescription);
	if(responseText.data.militaryShipment.militaryIbsStatusCode==''){
		resetCargoPickup();
		resetCargoDelivery();
	}else{
		var ibsCodeText='';
		if($('#militaryIbsStatusCode option:selected').text()!=''){
			ibsCodeText = $('#militaryIbsStatusCode option:selected').text().split(":")[1];
		}
		setCargoPickupDeliveryMandatory(ibsCodeText);
	}
}; var somethingChanged =false;
 var somethingChangedMixComm = false;
 var dataName =  null;
 var grpId = null;
 var itemId = null;
 var origWt=null;
 var origVol=null;
 var tempImperialCubeValue=0;
var tempImperialWeightValue=0;
var tempMetricCubeValue=0;
var tempMetricWeightValue=0;
var changeCountForCube=0;
var changeCountForWeight=0;
var shipmentLoadDschPair = "";
var isNoteValid=false;
//	D025042
var isAddNew=false;
var commoditySequenceNumber="";

 $(function() {
	 
	 if($('#tariffNumber').val()=="" || $('#tariffNumber').val()==null){
		 $('#itemNumber').attr("readOnly",true);
	 }
	 $('#tariffCheck').val($("#tariffNumber").val());
	 
	 /*This section is used to check if there is some change in form */
	 var tabbable = 'input[type="text"]:not(:disabled):not(:hidden):not([readonly="readonly"]),'+
		            'input[type="button"]:not(:disabled),'+
		            'input[type="password"]:not(:disabled),input[type="radio"]:not(:disabled),'+
		            'input[type="submit"]:not(:disabled),input[type="file"]:not(:disabled),'+
		            'input[type="reset"]:not(:disabled),input[type="image"]:not(:disabled),'+
		            'img,a,button:not(:disabled),textarea:not(:disabled)';
	 $(tabbable,'#maintain_commodity_shipment').change(function(){ 
		
			 somethingChanged =true; });
	 $(tabbable,'#blmx').change(function(){somethingChangedMixComm = true;});
	 
	 $('#netWeight').change(function(){
		 
		  somethingChanged = true;
	 });
	 $('#cube').change(function(){
		 	
		 //D025036
		 	var iLen = resolveSpaces("shipmentItemImperialLengthFeet") + resolveSpaces("shipmentItemImperialLengthInches");
		 	var iBre = resolveSpaces("shipmentItemImperialBreathFeet") + resolveSpaces("imperialBreathInches");
		 	var iHei = resolveSpaces("shipmentItemImperialHeightFeet") + resolveSpaces("shipmentItemImperialHeightInches");
			/*var iBre = parseInt( $.trim($('#shipmentItemImperialBreathFeet').val()))+parseInt( $.trim($('#imperialBreathInches').val())); 
			var iHei = parseInt( $.trim($('#shipmentItemImperialHeightFeet').val()))+parseInt( $.trim($('#shipmentItemImperialHeightInches').val()));*/
			if((iLen == 0 || iBre == 0 || iHei == 0)&&(iLen != 0 || iBre != 0 || iHei != 0)){
				alert("Please enter valid L B H for cube");
			}
			var metLen = resolveSpaces("shipmentItemMetricLength");
			var metBre = resolveSpaces("shipmentItemMetricBreadth");
			var metHei = resolveSpaces("shipmentItemMetricHeight");
			/*var metLen = $('#shipmentItemMetricLength').val();
			var metBre = $('#shipmentItemMetricBreadth').val();
			var metHei = $('#shipmentItemMetricHeight').val();*/
			if((metLen == 0 || metBre == 0 || metHei == 0)&&(metLen != 0 || metBre != 0 || metHei != 0)){
				alert("Please enter valid L B H for cube");
			}		 
		//D025404
		if($.trim($('#cube').val()) == "" ){
			if((iLen != 0 && iBre != 0 && iHei != null) || (metLen != 0 && metBre != 0 && metHei != 0) )
			recalculateCube();
		}
		somethingChanged = true;
	 });
	 $('#note').change(function(){
		
		  somethingChanged = true;
		  
		  $(this).val($(this).val().toUpperCase());
	 });
	 
	 $('#note').focusout(function(){
			//D030985: 	PROD Error Message 
			$(this).val($(this).val().toUpperCase());
		});
	 
	 $('#piece').change(function(){
		 //D026553
		 if($('#loadDschServiceGroupCode').val()=="CON" || $('#loadDschServiceGroupCode').val()=="LCL"){
			 recalculateCube();
			}
		  somethingChanged = true;
	 });
	 $('#commodityDesc').change(function(){
		
		  somethingChanged = true;
	 });
	 
	// D033656: 	Can't update Customer Commodity Description in [Maintain Bill] page
	// Seems like somethingChanged not being updated by pasting into customer commodity	 
	// the table change above always firing for me so seems redudant but will not hurt. 
	 
	 $("#containerCommodityDesc").change(function() {
		 somethingChanged = true;
		});
	 
	 $("#containerCommodityDesc").bind("paste",function() {
		 somethingChanged = true;
		});
	 
	 
	 $('#itemNumber').change(function(){
		
		
		 somethingChanged = true;
		 $('#note').val("");
		 $('#shipmentCommodityCode').val();
		 $('#commodityDesc').val("");	//for 22742
		 //if(itemId==null || itemId==""){				
		     	$("#itemNumber").val("");       	
		 /*	  }		
				else{
					$("#itemNumber").val(dataName); 
					itemId="";
				}*/
	 });
	 $('#shipmentItemImperialLengthFeet').change(function(){ recalculateCube(); somethingChanged = true;});
	 $('#shipmentItemImperialLengthInches').change(function(){recalculateCube(); somethingChanged = true;});
	 $('#shipmentItemImperialBreathFeet').change(function(){recalculateCube(); somethingChanged = true;});
	 $('#imperialBreathInches').change(function(){ recalculateCube(); somethingChanged = true;});
	 $('#shipmentItemImperialHeightFeet').change(function(){recalculateCube();  somethingChanged = true;});
	 $('#shipmentItemImperialHeightInches').change(function(){ recalculateCube(); somethingChanged = true;});
	 $('#shipmentItemMetricLength').change(function(){ recalculateCube(); somethingChanged = true;});
	 $('#shipmentItemMetricBreadth').change(function(){ recalculateCube(); somethingChanged = true;});
	 $('#shipmentItemMetricHeight').change(function(){ recalculateCube(); somethingChanged = true;});
	 
	 $('#mixCommItem').change(function(){ somethingChangedMixComm = true;});
	 $('#mixCommPieces').change(function(){ somethingChangedMixComm = true;});
	 $('#mixCommNetWgt').change(function(){ somethingChangedMixComm = true;});
	 $('#mixCommCube').change(function(){ somethingChangedMixComm = true;});
	 $('#mixCommNote').change(function(){ somethingChangedMixComm = true;});
	 $('#mixCommCommDesc').change(function(){ somethingChangedMixComm = true;});
	
	 /* D025028 */
	 $('#sealNumber').change(function(){
			
		 somethingChanged = true;
		 somethingChangedMixComm = true;
	 });
	 $('#eqpOverflow').change(function(){
			
		 somethingChanged = true;
		 somethingChangedMixComm = true;
	 });
	 
	 $('#mixCommNote').focusout(function(){
		//D030985: 	PROD Error Message  
			$(this).val($(this).val().toUpperCase());
		});
	 
	 
	 
/**/
	 var checkClearButton = true;
	
	
	 var presentCommodityLine ='';
	 $('#unitOfCommodity').click(function(){
		 presentCommodityLine = $('#unitOfCommodity').val();
	 });
	 $('#unitOfCommodity').change(function(){
		
		 if(somethingChanged == true){
			 var con= confirm('Changes have been made but not saved, do you want to continue(Y/N) ?');
		
		if(con== true ){
		commodityCallOnUnitChange();
		}else{
			$('#unitOfCommodity').val(presentCommodityLine);
		}
		 }
		 else{
			 commodityCallOnUnitChange();
		 }
	 });
	 $('#nextCommodity').click(function(){
		
		 if(somethingChanged == true ){
			  somethingChanged == false;
		  var con= confirm('Changes have been made but not saved, do you want to continue(Y/N) ?');
		
		 if(con== true ){
			/* if($("#validateShipmentCommodityDiv").validationEngine('validate')){
				 if($("#shipmentCommodityHeader").validationEngine('validate')){
					 updateCommodityBeforeSave();
				 };
			 };*/
		commodityCallOnNext();
		 }
		 }
		 else{
			 /*if($("#validateShipmentCommodityDiv").validationEngine('validate')){
				 if($("#shipmentCommodityHeader").validationEngine('validate')){
					 updateCommodityBeforeSave();
				 };
			 };*/
			 commodityCallOnNext();
		 }
	 });
	 $('#previousCommodity').click(function(){
		
		 if(somethingChanged == true){
			  somethingChanged == false;
			 var con= confirm('Changes have been made but not saved, do you want to continue(Y/N) ?');
				
			 if(con== true ){
				/* if($("#validateShipmentCommodityDiv").validationEngine('validate')){
					 if($("#shipmentCommodityHeader").validationEngine('validate')){
						 updateCommodityBeforeSave();
					 };
				 };*/
		commodityCallOnPrev();
		 
		 }
		 }
		 else{
			 /*if($("#validateShipmentCommodityDiv").validationEngine('validate')){
				 if($("#shipmentCommodityHeader").validationEngine('validate')){
					 updateCommodityBeforeSave();
				 };
			 };*/
			 commodityCallOnPrev();
		 }
	 
	 
	 });
	 
	 $('#updateCommodity').click(function(){
		var isValid = true;
		isValid = validateTariffCode(isValid);
		 if($("#validateShipmentCommodityDiv").validationEngine('validate') && isValid){
			 if($("#shipmentCommodityHeader").validationEngine('validate')){
		// var  buttonAction = validateButtonAction("update");
				 blockUI();
				 // D026052, merge update and validate
				noteValidationAndUpdateCommodity();
			 }
		 }
	 });
	 

	 
	 
	 $('#clearCommodity').click(function(){
		 
		 clearCommoditySection(checkClearButton);
		 checkClearButton = false;
		 
	 });
	 
	 $('#addCommodity').click(function(){
		 
		 var commodityLine = $('#commodityLine').text();
			if(Number(commodityLine)==0){
				if($('#netWeight').val()=="" || $('#netWeight').val()==null){
					$('input[name="shipmentItemForm.netWeight"]').validationEngine('showPrompt', '* This field is required', 'error', true);
					   return false;
				}
				if($('#commodityDesc').val()=="" || $('#commodityDesc').val()==null){
					$('input[name="shipmentItemForm.commodityDesc"]').validationEngine('showPrompt', '* This field is required', 'error', true);
					   return false;
				}
			}
			
			 commodityCallOnAdd(); 
	 }); 
	 $('#deleteCommodity').click(function(){
		 var condelete= confirm('Please confirm request to delete this commodity.');
		 if(condelete==true){
		 var queryString = $('#shipmentForm').formSerialize();
		 $.ajax({
			 type:"POST",
			 url:_context+"/shipmentCommodity/deleteCommodity",
			 data :queryString,
			success: function(responseText){
				if(responseText.success==true){
				reloadShipmentCommodityData(responseText);
				alert("Successfully DELETED");
				$("#commodityGrid").trigger('reloadGrid');
				$("#povGrid").trigger('reloadGrid');
				 $("#convGrid").trigger('reloadGrid');
				 $("#specialServiceGrid").trigger('reloadGrid');
				checkClearButton = true;
				saveBillBeforeBillButton = true;
				// Needed to get the selected id correct, reload is running to soon I think.
				setFreightAccordianTabDetails(responseText.data.shipmentItemForm.commodityLine, responseText.data.header.tariffNumber, responseText.data.shipmentItemForm.itemNumber, responseText.data.shipmentItemForm.customerCommodityDescription, responseText.data.shipmentItemForm.commodityDesc);
				
				
			}
				else{
					showResponseMessages("msgDivCommodity", responseText);
					}
				}
		 }); 
		 }
		
	 });
	 
	 
	 
	 $('#commodityDesc').change(function(){
		$('#itemNumber').val(""); 
		$('#shipmentCommodityCode').val($('#commodityCode').val()); 
		 $('#note').val("");
		 //D024736: Fields are not mandatory when tariffNumber and itemNumber are not added yet
		 if($('#tariffNumber').val() ==""){
				$(this).removeClass("validate[required]");
				$(this).removeClass("validate[funcCall[validateTrfCmdDesc]]");	   
		 }
	 });
	 $('#mixCommCommDesc').change(function(){
		 	$('#mixCommItem').val(""); 
			$('#mixCommodityCommodityCode').val($('#mixCommCommodityCode').val());
			$('#mixCommNote').val("");
			////console.log("mixCommCommDesc change function called");
		 });
	 
	 $('#commodityCode').change(function(){
		    // D026052: somethingchanged not firing for commodity
		    somethingChanged = true;
			$('#shipmentCommodityCode').val($('#commodityCode').val()); 
			//console.log("After commodity code change, shipmentCommodityCode value:"+$('#shipmentCommodityCode').val());
		 });
	 //D026313
	 $('#kind').change(function(){			
			somethingChanged = true;
		 });
	 
	 $('#mixCommCommodityCode').change(function(){
			
			$('#mixCommodityCommodityCode').val($('#mixCommCommodityCode').val()); 
		 });
	 
	/* var url = _context+'/cas/autocomplete.do?method=searchTariffSource&searchType=11'; 
	 var tariffNumber = $('#tariffNumber').val();
	 $('#tariffNumber').gatesAutocomplete({
	 source:url ,
	 mustMatch:true,
	 
	*/
	var tariffNumber = $('#tariffNumber').val();
	grpId = null;
	
	$('#tariffNumber').gatesAutocomplete({
	 source: _context+'/cas/autocomplete.do',
		 extraParams: {
		 		 method: 'searchTariffSource',
		 		 searchType: '11',
		 		 mustMatch:true,
		 		 groupType:  '01'
		 },
		// mustMatch:true,
	     formatItem: function(data) {
			 return data.name;
		 },
		 formatResult: function(data) {
			 // Grab value as default
			 dataName=data.name;
			 grpId=data.id;
			 //console.log("format "+grpId);
			 return data.name;
		 }, 
		 select: function(data) {
			 $('#tariffNumber').val(data.id);
			 $('#tariffCheck').val(data.name);
			 grpId=data.id;
			// console.log('grpId '+grpId);
			 clearDataForTariffNumber(data.name,tariffNumber);
			 clearTariffItemOnChangeOfTariff();
			 tariffNumber =  $('#tariffNumber').val();
			 setSaveBillBeforeBillButton();
		 }
	 });
	
	 $('#tariffNumber').change(function(){	
		 somethingChanged = true;

		 clearTariffItemOnChangeOfTariff();
				$('#itemNumber').val("");
				$('#mixCommItem').val("");
				$('#note').val("");
				 if($('#tariffNumber').val()=="" || $('#tariffNumber').val()==null){
					 $('#itemNumber').attr("readOnly",true);
					 $('#mixCommItem').attr("readOnly",true);
					 
				 }else{
					 $('#itemNumber').attr("readOnly",false);
					 $('#mixCommItem').attr("readOnly",false);
				 }
				
		
				 console.log('use grpId '+grpId);
			if(grpId==null ||grpId==""){
				//Fix for defect# D025970 
				//If you tab out of the Tariff field before the result comes back the value should not get blanked out.
				// This was the wrong fix!
	        	$("#tariffNumber").val(""); 
	        	$("#tariffCheck").val("");
	    	}
			else{
				$("#tariffNumber").val(dataName);
				$("#tariffCheck").val(dataName);
				$('#itemNumber').val("");
 				//$('#in_item').removeAttr("disabled");
				grpId="";
			}
		 
	 });
	
	 $('#tariffNumber').gatesPopUpSearch({
		 func:function() {			
			 SourceTariffPopupSearch();
		 }
			 
	 });
	 $('#itemNumber').gatesPopUpSearch({
		 func:function() { 
			 
				 ItemPopupSearch();							 
			 }
	 });
	 
	 $('#commodityDesc').gatesPopUpSearch({
			func : function() {
				if(($('#commodityDesc').val()!="") || ($('#tariffNumber').val()!="" && $('#itemNumber').val().trim()!="")){
				commPopupSearch();
				 somethingChanged = true;
			}
				else{
					alert("Please enter either Commodity Description or Tariff and Item");
				}
					
				}
		});
	 $('#mixCommCommDesc').gatesPopUpSearch({
			
	 func : function() {
			if(($('#mixCommCommDesc').val()!="") || ($('#tariffNumber').val()!="" && $('#mixCommItem').val()!="")){
				mixCommCommDescPopupSearch();
				 somethingChangedMixComm = true;
		}
			else{		
				alert("Please enter either Commodity Description or Tariff and Item");
			}
				
			}
		});
	
	 
		$('#note').gatesPopUpSearch({
			
			func : function() {
				if($('#tariffNumber').val()!=null && $('#tariffNumber').val().trim()!="" && 
						$('#itemNumber').val()!=null && $('#itemNumber').val()!=""){
				notePopupSearch();
				 somethingChanged = true;
			}}
		});
		
		$('#mixCommNote').gatesPopUpSearch({
			func : function() {
				if($('#tariffNumber').val()!=null && $('#tariffNumber').val().trim()!="" && 
						$('#mixCommItem').val()!=null && $('#mixCommItem').val().trim()!=""){
				notePopupSearchMixComm();
				}}
		});
		/*var tempImperialCubeValue=0;
		var tempImperialWeightValue=0;
		var tempMetricCubeValue=0;
		var tempMetricWeightValue=0;
		var changeCountForCube=0;
		var changeCountForWeight=0;*/
		$('#cube').change(function(){ 
			changeCountForCube=0;
			if($('#unitOfMeasureSourceCode').val()=="I"){
				tempImperialCubeValue=$('#cube').val();
				tempMetricCubeValue=0;
			}else{
				tempImperialCubeValue=0;
				tempMetricCubeValue=$('#cube').val();
			}
			});
		$('#netWeight').change(function(){
			changeCountForWeight = 0;
			if($('#unitOfMeasureSourceCode').val()=="I"){
				tempImperialWeightValue=$('#netWeight').val();
				tempMetricWeightValue=0;
			}else{
				tempImperialWeightValue=0;
				tempMetricWeightValue=$('#netWeight').val();
			}
			});
		if($('#cube').val()!="" ){
			
			if($('#unitOfMeasureSourceCode').val()=="I" ){
				tempImperialCubeValue=$('#cube').val();
			}else{
				tempMetricCubeValue=$('#cube').val();
			}
		}
		if($('#netWeight').val()!=""){
			
			if($('#unitOfMeasureSourceCode').val()=="I" ){
				tempImperialWeightValue=$('#netWeight').val();
			}else{
				tempMetricWeightValue=$('#netWeight').val();
			}
		}
		
		$('#unitOfMeasureSourceCode').change(function(){
			changeCountForWeight=changeCountForWeight+1;
			changeCountForCube=changeCountForCube+1;
			origWt=$('#netWeight').val();
			origVol=$('#cube').val();
			if($('#unitOfMeasureSourceCode').val()=="M"){
			$('#netWeightlabel').html("Wgt-KGS");
			//for parties
			$('#totalWeightKGS').html("Total Weight (kgs)");
			
			//added for rounding off decimal places to 3 for metric units
			var modifiedWtMetric=parseFloat(origWt *  0.453592).toFixed(3);
			var modifiedVolMetric = parseFloat(origVol * 0.0283168).toFixed(3);
			if(changeCountForWeight>=2 && tempMetricWeightValue>0){
				$('#netWeight').val(tempMetricWeightValue);
				//for parties section
				$('#totalWeight').val(tempMetricWeightValue);
			}else{
				$('#netWeight').val(modifiedWtMetric);
				//for parties section
				$('#totalWeight').val(modifiedWtMetric);
			}
			$('#cubeLabel').html("Cube(Meters)");
			//for parties
			$('#totalCubeM').html("Total Cube(m)");
			
			//added for rounding off decimal places to 3 for metric units
			if(modifiedVolMetric=='0'){
				if(changeCountForCube>=2 && tempMetricCubeValue>0){
					$('#cube').val(tempMetricCubeValue);
					//for parties section
					$('#totalCube').val(tempMetricCubeValue);
				}else{
					$('#cube').val('');
				}
			}else{
				if(changeCountForCube>=2 && tempMetricCubeValue>0){
					$('#cube').val(tempMetricCubeValue);
					//for parties section
					$('#totalCube').val(tempMetricCubeValue);
				}else{
					$('#cube').val(modifiedVolMetric);
					//for parties section
					$('#totalCube').val(modifiedVolMetric);
				}
			}
			$('#netWeight').removeClass("integer");
			$('#cube').removeClass("integer");
			}
			else if($('#unitOfMeasureSourceCode').val()=="I"){
				 getLoadDschServicepairValue();
				
				$('#netWeightlabel').html("Wgt-LBS");
				//for parties
				$('#totalWeightKGS').html("Total Weight (lbs)");
				
				//added for rounding off decimal places to 0 for imperial units
				var modifiedWtImperial= parseInt(Math.round(origWt * 2.20462)); 
				if(changeCountForWeight>=2 && tempImperialWeightValue>0){
					$('#netWeight').val(tempImperialWeightValue);
					//for parties section
					$('#totalWeight').val(tempImperialWeightValue);
					
				}else{
					$('#netWeight').val(modifiedWtImperial);
					//for parties section
					$('#totalWeight').val(modifiedWtImperial);
				}
				//$('#netWeight').val(modifiedWtImperial);
				
				$('#netWeight').addClass("integer");
				$('#cube').addClass("integer");
				$('#cubeLabel').html("Cube(Ft)");
				//for parties
				$('#totalCubeM').html("Total Cube(ft)");
				
				
				var modifiedVolMetric = "";
				//added for rounding off decimal places to 0 for imperial units
				/*if($('#routingLoadDischargePair').val()!=null && $('#routingLoadDischargePair').val().trim()=="AU"){
					modifiedVolMetric =Math.floor(origVol * 35.314666);
				}else{
					modifiedVolMetric =Math.ceil(origVol * 35.314666);
				}*/
				modifiedVolMetric =parseInt(Math.round(origVol * 35.314666));
				if(modifiedVolMetric=='0' || isNaN(modifiedVolMetric)){
					if(changeCountForCube>=2 && tempImperialCubeValue>0){
						$('#cube').val(tempImperialCubeValue);
						//for parties section
						$('#totalCube').val(tempImperialCubeValue);
					}else{
						$('#cube').val('');
					}
				}else{
					if(changeCountForCube>=2 && tempImperialCubeValue>0){
						$('#cube').val(tempImperialCubeValue);
						//for parties section
						$('#totalCube').val(tempImperialCubeValue);
					}else{
						$('#cube').val(modifiedVolMetric);
						//for parties section
						$('#totalCube').val(modifiedVolMetric);
					}
				}
			}

			if($('#loadDschServiceGroupCode').val()=="CON" || $('#loadDschServiceGroupCode').val()=="LCL"){
				setLengthBreathHeight();
			}
			changedMeasurementSource($('#unitOfMeasureSourceCode').val());
			$('#cube').trigger("change");
			$('#netWeight').trigger("change");
		});
		
	/*	predictive for item*/
		
		
		$('#itemNumber').gatesAutocomplete({

			source: _context+'/cas/autocomplete.do',
			minLength: 1,
			 extraParams: {
	 			 method: 'searchItemName',
	 		 		 searchType: '43',
	 		 		 //term: function(){return (request.term==null || $.trim(request.term)=='')?"ALL":request.term;},
	 		 		 groupType:  '01',
	 		 		 sourceTariff:  function(){return ($('#tariffNumber').val()==null || ($('#tariffNumber').val())=='')?"ALL":$('#tariffNumber').val();},
	 		 		 groupName:   function(){return ($('#tariffNumber').val()==null || ($('#tariffNumber').val())=='')?"ALL":$('#tariffNumber').val();}
	 		 },
	 	// mustMatch:true,
		 formatItem: function(data) {
			 dataName=data.name;
			 itemId=data.id ;
		 		 return data.name;
		 },
		 formatResult: function(data) {
		 		 return data.name;
		 },
			 select: function(data) {
				 somethingChanged = true;
				 $('#tariffItemId').val(data.id);
						resetTariffDetails(data.id,data.name);
				$('#itemNumber').val(data.name);
					 	
				getPrimaryCommodity($('#tariffNumber').val(), data.name);	
				//fetching commodity code list on change of item
				fetchCommodityCodeList($("#tariffNumber").val(),$("#itemNumber").val(),null,false,null);
				$("#note").val("");
				 itemId=data.id ;
				 setSaveBillBeforeBillButton();
			 },
			 autoSelectFirst:true, //for 22742 on tabbing
		});		 

		/*Ends Predctive for Item*/
		
		 $('#mixedCommodityView').click(function(){
			var changeView = true;
			if(somethingChanged == true){
				
				changeView = confirm('There are unsaved changes . Do you want to proceed ?');
				
			}
			
			if(changeView) {
				somethingChanged = false;
				if($('#mixedCommodityView').val()=="Mixed Commodity View")	
				{
				 
					reloadMixedCommodityData();
				}
				if($('#mixedCommodityView').val()=="Commodity View")
				{
					
					// D032310: Enable disabled field for submit.
					// Not a pretty solution but I think it works, if other fields are missing they need to be added.
					
					var tariffDisabled = $('#tariffNumber').attr("disabled");
					var uomDisabled = $('#unitOfMeasureSourceCode').attr("disabled");
					var netWeightDisabled = $('#netWeight').attr("disabled");
					var cubeDisabled = $('#cube').attr("disabled");
					
					if(tariffDisabled) $('#tariffNumber').removeAttr("disabled");
					if(uomDisabled)    $('#unitOfMeasureSourceCode').removeAttr("disabled");
					if(netWeightDisabled)    $('#netWeight').removeAttr("disabled");
					if(cubeDisabled)    $('#cube').removeAttr("disabled");
					
					var queryString = $('#shipmentForm').formSerialize();
					
					if(tariffDisabled) $('#tariffNumber').attr("disabled","disabled");
					if(uomDisabled)    $('#unitOfMeasureSourceCode').attr("disabled","disabled");
					if(netWeightDisabled)    $('#netWeight').attr("disabled","disabled");
					if(cubeDisabled)    $('#cube').attr("disabled","disabled");
					
					
					
					 $.ajax({
						 type:"POST",
						 url:_context+"/shipmentCommodity/loadCommodityDetails",
						 data :queryString,
						success: function(responseText){
							
							if(responseText.success== true){
		                                      reloadShipmentCommodityData(responseText);
	
								$("#commodityGrid").trigger('reloadGrid');
						document.getElementById("blcn").style.display="block";
						document.getElementById("blmx").style.display="none";
						document.getElementById("commodityGridDiv").style.display="block";
						
						 $('#mixedCommodityView').val("Mixed Commodity View");
						 $('#tr_shipmentFreightId').hide();
						}	
						}
					 });
				}
		 	}
		 }); 
		 
		 $('#equipmentNumber').change(function(){
			 
			 if(somethingChangedMixComm == true){
				
				 var conMixComm= confirm('There are unsaved changes . Do you want to proceed ?');
			
				if(conMixComm== true ){
					somethingChangedMixComm = false;
					equipmentCallOnEqpChangeChange();
				}
			 }
			 else{
				 equipmentCallOnEqpChangeChange();
			 }
			
		 
 });

		 $('#previousEquipment').click(function(){
			 
			 if(somethingChangedMixComm == true){
				 
				 var conMixComm= confirm('There are unsaved changes . Do you want to proceed ?');
			
			if(conMixComm== true ){
				somethingChangedMixComm = false;
				equipmentCallOnEqpPrevChange();
			}
			 }
			 else{
				 equipmentCallOnEqpPrevChange();
			 } 
		 
 });	 
		
		 $('#nextEquipment').click(function(){
			 if(somethingChangedMixComm == true){
				
				 var conMixComm= confirm('There are unsaved changes . Do you want to proceed ?');
			
			if(conMixComm== true ){
				 somethingChangedMixComm = false;
				equipmentCallOnEqpNextChange();
			}
			 }
			 else{
				 equipmentCallOnEqpNextChange();
			 } 
		 
 });	
		 $('#updateEquipment').click(function(){
			 updateEquipment();
		 });
		 
		 
		 if($('#billType').val()=="HHGDS" && $("#kind").val().trim()=="")
				$("#kind").val("PCS");
		 
		 var url1 = _context+'/cas/autocomplete.do?method=searchTariffTranslateCodeForTrade&searchType=379&parentSearch='+$('#tradeCode').val();
		 $("#kind").gatesAutocomplete({
		 source: url1,
		
		 formatItem: function(data) {
		 return data.TTCODE_DESC;
		 },
		 autoSelectFirst:true,
		 formatResult: function(data) {
			 somethingChanged = true;
		 return data.TTCODE;
		
		 }, 
		 select: function(data) {
		 $("#kind").val(data.TTCODE);
		 somethingChanged = true;
		 }
		 }); 
		 
		 
		 var url2 = _context+'/cas/autocomplete.do?method=searchTariffTranslateCodeForTrade&searchType=379&parentSearch='+$('#tradeCode').val();
		 $("#mixCommKind").gatesAutocomplete({
		 source: url2,
		
		 formatItem: function(data) {
		 return data.TTCODE_DESC;
		 },
		 autoSelectFirst:true,
		 formatResult: function(data) {
		 return data.TTCODE;
		 }, 
		 select: function(data) {
		 $("#mixCommKind").val(data.TTCODE);
		 somethingChangedMixComm = true;
		 }
		 }); 
		 
		 
		 
		 $( "#commodityDescPage" ).dialog({
				autoOpen: false, 
				width: 1000,
				modal: true,
				closeOnEscape: false,
				beforeClose: function() {
					
					
				},
				open:function(){
					tabSequence('#commodityDescPage',false,false);
				},
				close : function() {
					
				//	$('#specialServicesGrid').jqGrid('GridUnload');
					 $("#mixcommodityGrid").trigger('reloadGrid');  
					 tabSequence('#',true,false);
				},
				buttons : {
					
				"Add & New": function(){
				        	callComodityAddNew();
				        	$('#mixCommItem').focus();
				        },
			        Ok: function(){
			        	if(mixCommOverlayMode=="edit"){
			        		callCommodityEdit();
			        	}
			        	else{
			        					       
			        	callComodityAdd();
			        	}
			        },
			        Clear: function() {
			        	clearCommodity();
			        },
			        Cancel: function() {

			        	 if(somethingChangedMixComm == true ){

			   		  var conf= confirm('Changes have been made but not saved, do you want to continue(Y/N) ?');
			   		if(conf== true ){
			   			somethingChangedMixComm == false;
			   		 $("#commodityDescPage").dialog('close');
						}else{
							}
						}else{
							 $("#commodityDescPage").dialog('close');
						}
			        	
			        }
				}
			});
		 
		 $('#commodityAddDiv').click(function() {
			 if($('#statusCode').text()!="CORRECTED" && $('#statusCode').text()!="ISSUED")
				{
				 	showAddCommodityDialog();
				 	return true;
				}
			 return false;
		 });
		
		$('#shipmentItemImperialLengthFeet').change(function() {
			var totalMetersLength = convertInchesToMeter($('#shipmentItemImperialLengthFeet').val(), $('#shipmentItemImperialLengthInches').val());
			$('#shipmentItemMetricLength').val(totalMetersLength);
		});
		 
		$('#shipmentItemImperialLengthInches').change(function() {
			var totalMetersBreadth = convertInchesToMeter($('#shipmentItemImperialLengthFeet').val(), $('#shipmentItemImperialLengthInches').val());
			$('#shipmentItemMetricLength').val(totalMetersBreadth);
		});
		 
		 
		
		
		$('#shipmentItemImperialBreathFeet').change(function() {
			var totalMetersHeight = convertInchesToMeter($('#shipmentItemImperialBreathFeet').val(), $('#imperialBreathInches').val());
			$('#shipmentItemMetricBreadth').val(totalMetersHeight);
		});
		 
		$('#imperialBreathInches').change(function() {
			var totalMetersInches = convertInchesToMeter($('#shipmentItemImperialBreathFeet').val(), $('#imperialBreathInches').val());
			$('#shipmentItemMetricBreadth').val(totalMetersInches);
		});
		
		$('#shipmentItemImperialHeightFeet').change(function() {
			var totalMeters = convertInchesToMeter($('#shipmentItemImperialHeightFeet').val(), $('#shipmentItemImperialHeightInches').val());
			$('#shipmentItemMetricHeight').val(totalMeters);
		});
		 
		$('#shipmentItemImperialHeightInches').change(function() {
			var totalMeters = convertInchesToMeter($('#shipmentItemImperialHeightFeet').val(), $('#shipmentItemImperialHeightInches').val());
			$('#shipmentItemMetricHeight').val(totalMeters);
		});
		
		
		$('#shipmentItemMetricLength').change(function(){
			var convertedUnits = new imperialLength($('#shipmentItemMetricLength').val());
			$('#shipmentItemImperialLengthFeet').val(convertedUnits.feet);
			$('#shipmentItemImperialLengthInches').val(convertedUnits.inches);
		});
		$('#shipmentItemMetricBreadth').change(function(){
			var convertedUnits = new imperialLength($('#shipmentItemMetricBreadth').val());
			$('#shipmentItemImperialBreathFeet').val(convertedUnits.feet);
			$('#imperialBreathInches').val(convertedUnits.inches);
		});
		$('#shipmentItemMetricHeight').change(function(){
			var convertedUnits = new imperialLength($('#shipmentItemMetricHeight').val());
			$('#shipmentItemImperialHeightFeet').val(convertedUnits.feet);
			$('#shipmentItemImperialHeightInches').val(convertedUnits.inches);
		});
		
		
		 
		$('#unitOfMeasureSourceCode').change(function(){
			if($('#unitOfMeasureSourceCode').val()=="I"){
				document.getElementById("forImperial").style.display="block";
				document.getElementById("forMetric").style.display="none";	
			}else {
				document.getElementById("forImperial").style.display="none";
				document.getElementById("forMetric").style.display="block";	
			}
		});
		
		/*Security shipment*/
		if(shipmentNotFound==false)
		{
			if(isCommodityBLCNUpdate ||isCommodityBLAUUpdate ||isCommodityBLCVUpdate){
				$('#updateCommodity').attr('disabled', false);
				$('#clearCommodity').attr('disabled', false);
			}else{
				$('#updateCommodity').attr('disabled', true);
				$('#clearCommodity').attr('disabled', true);
			}
		
			if(isCommodityBLCNAdd ||isCommodityBLAUAdd ||isCommodityBLCVAdd){
				$('#addCommodity').attr('disabled', false);
			}else{
				$('#addCommodity').attr('disabled', true);
			}
			if(isCommodityBLCNDelete ||isCommodityBLAUDelete ||isCommodityBLCVDelete){
				$('#deleteCommodity').attr('disabled', false);
			}else{
				$('#deleteCommodity').attr('disabled', true);
			}
		}
		
		
		$('#tariffNumber').live('keydown', function(event) {
			if (event.keyCode == '16') {
				return;
			}
				
			if (event.keyCode == '9' && $('#mixedCommodityView').val()!="Commodity View") {
				event.preventDefault();
				if (event.shiftKey) {
					$('#shipmentCommodityHeader').focus();
				}else{
					$('#itemNumber').focus();
				}
					}
				});
		
		$('#itemNumber').live('keydown', function(event) {
			if (event.keyCode == '16') {
				return;
			}
				
			if (event.keyCode == '9' && $('#mixedCommodityView').val()!="Commodity View") {
				event.preventDefault();
				if (event.shiftKey) {
					$('#tariffNumber').focus();
				}else{
					$('#note').focus();
				}
					}
				});
		
		$('#note').live('keydown', function(event) {
			if (event.keyCode == '16') {
				return;
			}
				
			if (event.keyCode == '9' && $('#mixedCommodityView').val()!="Commodity View") {
				event.preventDefault();
				if (event.shiftKey) {
					$('#itemNumber').focus();
				}else{
					$('#piece').focus();
				}
					}
				});
		
		$('#piece').live('keydown', function(event) {
			if (event.keyCode == '16') {
				return;
			}
				
			if (event.keyCode == '9' && $('#mixedCommodityView').val()!="Commodity View") {
				event.preventDefault();
				if (event.shiftKey) {
					$('#note').focus();
				}else{
					$('#kind').focus();
				}
					}
				});
		
		$('#kind').live('keydown', function(event) {
			if (event.keyCode == '16') {
				return;
			}
				
			if (event.keyCode == '9' && $('#mixedCommodityView').val()!="Commodity View") {
				event.preventDefault();
				if (event.shiftKey) {
					$('#piece').focus();
				}else{
					$('#netWeight').focus();
				}
					}
				});
		
		$('#netWeight').live('keydown', function(event) {
			if (event.keyCode == '16') {
				return;
			}
				
			if (event.keyCode == '9' && $('#mixedCommodityView').val()!="Commodity View") {
				
				event.preventDefault();
				if (event.shiftKey) {
					$('#kind').focus();
				}else{
					$('#cube').focus();
				}
					}
				});
		

		$('#cube').live('keydown', function(event) {
			if (event.keyCode == '16') {
				return;
			}
				
			if (event.keyCode == '9' && $('#mixedCommodityView').val()!="Commodity View") {
				event.preventDefault();
				if (event.shiftKey) {
					$('#netWeight').focus();
				}else{
					$('#containerCommodityDesc').focus();
				}
					}
				});
		
		$('#commodityDesc').live('keydown', function(event) {
			if (event.keyCode == '16') {
				return;
			}
				
			if (event.keyCode == '9' && $('#mixedCommodityView').val()!="Commodity View") {
				event.preventDefault();
				if (event.shiftKey) {
					
				}else{
					$('#itemNumber').focus();
				}
					}
				});
		
	
		
 });
 
 function enableCommodityUpdate(){
		
 }
 var mixCommodityRecordCount =0;
function showAddCommodityDialog(){
	 //console.log("showAddCommodityDialog");
	 $('#mixCommCommDesc').attr('disabled', false);
	 
	 //console.log($('#mixcommodityGrid').getGridParam('lastpage')+"="+$('#mixcommodityGrid').getGridParam('page'));
	 if($('#mixcommodityGrid').getGridParam('lastpage') != $('#mixcommodityGrid').getGridParam('page') ) {
		 jQuery("#mixcommodityGrid").setGridParam({
			    page: $('#mixcommodityGrid').getGridParam('lastpage')
		 });
		 $("#mixcommodityGrid").attr("finishShowCommodity", true);
		 $("#mixcommodityGrid").trigger("reloadGrid");
	} else {
		finishShowAddCommodityDialog();
	}
}
	 
function finishShowAddCommodityDialog(){	 
	 var queryString = $('#shipmentForm').formSerialize();
	 $.ajax({
		 type:"POST",
		 url:_context+"/shipmentCommodity/newCommodity",
		 data :queryString,
		 success: function(responseText){
			 if(responseText.success==true)
		    
		     setValueInCommodityOverlay(responseText.data);
			 updateMixCommKindList(responseText);
	           $("#commodityDescPage").dialog( "option", "title", 'Add Commodity for '+$('#equipmentNumber').val() );
	           $("#commodityDescPage").dialog('open');
	           //$('#mixCommItem').val($('#itemNumber').val());
	           //if(responseText.data.itemNumber!=null)
	           //$('#mixCommItem').val(responseText.data.itemNumber);
	          // $('#mixCommItemId').val($('#itemNumber').val());
	           mixCommOverlayMode= "add";
	           $('#mixCommItem').removeAttr("readOnly");
	           $('#msgDivCommodityOverlay').html("");
	           if($('#tariffNumber').val()=="" || $('#tariffNumber').val()==null){
	        	     $('#msgDivCommodityOverlay').html("Tariff Item disabled, enter a tariff #");
	      		     $('#msgDivCommodityOverlay').addClass("itemError");
					 $('#mixCommItem').attr("readOnly",true);
					 
				 }
	           
	          
	           loadNewRow();
	           mixCommodityRecordCount = jQuery("#mixcommodityGrid").jqGrid('getGridParam', 'records');
	           loadItemDataForMixCommodity();
}
	 });
}


function setValueInCommodityOverlay(data){
	$('#mixCommItem').val(data.mixCommItem);
	$('#mixCommPieces').val(data.mixCommPieces);
	$('#mixCommNetWgt').val(data.mixCommNetWgt);
	$('#mixCommKind').val(data.mixCommKind);
	$('#mixCommCube').val(data.mixCommCube);
	$('#mixCommNote').val(data.mixCommNote);
	$('#mixCommCommDesc').val(data.mixCommCommDesc);
	//$('#mixCommItemId').val(data.mixCommItem);
	$('#mixCommItem').val(data.mixCommItem);
	
	$('#mixCommodityCommoditycommentId').val(data.mixCommodityCommoditycommentId);
	$('#mixCommodityCommodityCode').val(data.mixCommodityCommodityCode);
	populateMixCommodityCodeListBilling(data.commodityCodeList);
	 $(":button:contains('Add & New')").prop("disabled", false).removeClass("ui-state-disabled");
}

function clearCommodity(){
	
	$('#mixCommItem').val("");
	$('#mixCommPieces').val("");
	$('#mixCommNetWgt').val("");
	$('#mixCommKind').val("");
	$('#mixCommCube').val("");
	$('#mixCommNote').val("");
	$('#mixCommCommDesc').val("");
	$('#mixCommItemId').val("");
	$('#mixCommItem').val("");
	$('#mixCommodityCommoditycommentId').val("");
	$('#mixCommodityCommodityCode').val("");
	$('#mixCommCommodityCode').val("");
	 $('#msgDivCommodityOverlay').html("");
	 $("#mixCommKind").val("");
}
  function callComodityAddNew(){

	  var returnNetweight = checkForPositiveNumberNetWeight();
		 var returnNetCube = checkForPositiveNumberCube();
		 var returnPiece = checkForPositiveNumberPieces();
		 var returnTotalCube = checkForTotalCube();
		 var checkForNote = checkForNoteNumber();
		 var returnCheckKind = checkKind();
		 if(returnPiece && returnNetCube && returnNetweight && returnTotalCube && checkForNote && returnCheckKind){
	
	    callCommodityAddNewWithTimeOut();
		 }
 }
  
  function callCommodityAddNewWithTimeOut(){
	  
	  $(":button:contains('Add & New')").prop("disabled", true).addClass("ui-state-disabled");
	  var params = 
			"mixCommItem=" + $('#mixCommItem').val() +
			"&mixCommPieces=" + $('#mixCommPieces').val() +
			"&mixCommNetWgt=" + $('#mixCommNetWgt').val() +
			"&mixCommKind=" + $('#mixCommKind').val() +
			"&mixCommCube=" + $('#mixCommCube').val() +
			"&mixCommNote=" + $('#mixCommNote').val() +
			"&mixCommCommDesc="+ $('#mixCommCommDesc').val()+
			"&mixCommCommCode="+$('#mixCommodityCommodityCode').val();
			
			
	 $.ajax({
		 type:"POST",
		 url:_context+"/shipmentCommodity/commodityAddNew",
		 data :params,
		 success: function(responseText){
			
			 if(responseText.success==true){
				 somethingChangedMixComm = false;
				 mixCommodityRecordCount++;
				 addRowToMixCommodityGrid(mixCommodityRecordCount, $('#mixCommItem').val() , $('#mixCommNetWgt').val(),$('#mixCommCube').val() ,$('#mixCommPieces').val(), $('#mixCommKind').val() ,  $('#mixCommNote').val() , $('#mixCommCommDesc').val()  );
				
				 setValueInCommodityOverlay(responseText.data);
				
				 $("#mixcommodityGrid").trigger('reloadGrid');  
				 $('#msgDivCommodityOverlay').html("");
				 $('#mixCommCommDesc').attr('disabled', false);
			 } else{
				
				 if(responseText.success==false){
					 showResponseMessagesMixComm("msgDivCommodityOverlay",responseText);
					 document.getElementById("msgDivCommodityOverlay").style.display="block";
				 }
			 }	
			 $(":button:contains('Add & New')").prop("disabled", false).removeClass("ui-state-disabled");
		 }
	 }); 
  }
  function showResponseMessagesMixComm(msgDivId, responseText) {
		if (responseText.messages) {

			var messages = responseText.messages;
			var messageContent = '';
			if (messages.error.length > 0) {
				var array = messages.error;
				var len = messages.error.length;
				for ( var i = 0; i < len; i++) {

					messageContent += '<div class="message_error">' + array[i]
							+ '</div>';
				}
			}

			if (messages.warn.length > 0) {
				var array = messages.warn;
				var len = messages.warn.length;
				for ( var i = 0; i < len; i++) {
					messageContent += '<div class="message_warning">' + array[i]
							+ '</div>';
				}
			}

			if (messages.info.length > 0) {
				var array = messages.info;
				var len = messages.info.length;
				for ( var i = 0; i < len; i++) {
					messageContent += '<div class="message_info">' + array[i]
							+ '</div>';
				}
			}

			if (messages.success.length > 0) {
				var array = messages.success;
				var len = messages.success.length;
				for ( var i = 0; i < len; i++) {
					messageContent += '<div class="message_success">' + array[i]
							+ '</div>';
				}
			}
			if (messageContent != '') {
				$('#' + msgDivId).html(messageContent);
				window.scrollTo(0, 0);
			}
		}
	}

 function callComodityAdd(){
	 var returnNetweight = checkForPositiveNumberNetWeight();
	 var returnNetCube = checkForPositiveNumberCube();
	 var returnPiece = checkForPositiveNumberPieces();
	 var returnTotalCube = checkForTotalCube();
	 var checkForNote = checkForNoteNumber();
	 var returnCheckKind = checkKind();
	 if(returnPiece && returnNetCube && returnNetweight && returnTotalCube && checkForNote && returnCheckKind){
		 callComodityAddWithTimeOut();
	//window.setTimeout('callComodityAddWithTimeOut()',2000);
	 }
 }
 
 
 function checkForNoteNumber(){
	 var val = $('#mixCommNote').val(); 
	 var charRegex = /^[0-9a-zA-Z\ \'\&]+$/; 
	 if(val!=null && val!=""){
	 if(!charRegex.test($.trim(val))){ alert(" Please enter valid note , Only Number Character allowed"); 
	 return false;
	 }else{
		 return true;
	 };
	 
	 } return true;
	 
 }
 function callComodityAddWithTimeOut(){
	 var params = 
			"mixCommItem=" + $('#mixCommItem').val() +
			"&mixCommPieces=" + $('#mixCommPieces').val() +
			"&mixCommNetWgt=" + $('#mixCommNetWgt').val() +
			"&mixCommKind=" + $('#mixCommKind').val() +
			"&mixCommCube=" + $('#mixCommCube').val() +
			"&mixCommNote=" + $('#mixCommNote').val() +
			"&mixCommCommDesc="+ $('#mixCommCommDesc').val()+
			"&mixCommCommCode="+$('#mixCommodityCommodityCode').val();
			
	 $.ajax({
		 type:"POST",
		 url:_context+"/shipmentCommodity/commodityAddNew",
		 data :params,
		 success: function(responseText){
			 somethingChangedMixComm = false;
			 if(responseText.success==true){
				 setValueInCommodityOverlay(responseText.data);
	     $("#commodityDescPage").dialog( "option", "title", 'Add Commodity' );
	     $("#commodityDescPage").dialog('close');
	     $('#mixCommCommDesc').attr('disabled', false);
	   
	     $("#mixcommodityGrid").trigger('reloadGrid');  
	     $('#msgDivCommodityOverlay').html("");
			 }else{
				
				 if(responseText.success==false){
					 showResponseMessagesMixComm("msgDivCommodityOverlay",responseText);
					 document.getElementById("msgDivCommodityOverlay").style.display="block";
				 }
			 }	
	     
}
	 });
 }
 function callCommodityEdit(){
	 //console.log("EDIT Start "+new Date());
	 var returnNetweight = checkForPositiveNumberNetWeight();
	 var returnNetCube = checkForPositiveNumberCube();
	 var returnTotalCube = checkForTotalCube();
	 var checkForNote = checkForNoteNumber();
	 var returnPiece = checkForPositiveNumberPieces();
	 var returnCheckKind = checkKind();
	 if(returnPiece && returnNetCube && returnNetweight&&returnTotalCube&& checkForNote && returnCheckKind){
		 callCommodityEditWithTimeOut();
	 //window.setTimeout('callCommodityEditWithTimeOut()',2000); // why wait 2 seconds?
	 }
 }
 
 function callCommodityEditWithTimeOut(){
	 var params = 
			"mixCommItem=" + $('#mixCommItem').val() +
			"&mixCommPieces=" + $('#mixCommPieces').val() +
			"&mixCommNetWgt=" + $('#mixCommNetWgt').val() +
			"&mixCommKind=" + $('#mixCommKind').val() +
			"&mixCommCube=" + $('#mixCommCube').val() +
			"&mixCommNote=" + $('#mixCommNote').val() +
			"&mixCommCommDesc="+ $('#mixCommCommDesc').val()+
			"&mixCommUnitOfCommodity=" + $('#mixCommUnitOfCommodity').val() +
			"&mixCommShipmentItemId="+ $('#mixCommShipmentItemId').val()+
			"&mixCommoditycommentId=" +$('#mixCommodityCommoditycommentId').val()+
			"&mixCommoditycommodityCode="+$('#mixCommodityCommodityCode').val() +
			"&shipmentmixCommItemId=0" ;
			
	 $.ajax({
		 type:"POST",
		 url:_context+"/shipmentCommodity/commodityEditUpdate",
		 data :{mixCommItem:$('#mixCommItem').val(),  mixCommPieces: $('#mixCommPieces').val() 
			 ,mixCommNetWgt: $('#mixCommNetWgt').val() 
			 ,mixCommKind: $('#mixCommKind').val() 
			 ,mixCommCube: $('#mixCommCube').val() 
			 ,mixCommNote: $('#mixCommNote').val() 
			 ,mixCommCommDesc:$('#mixCommCommDesc').val()
			 ,mixCommUnitOfCommodity: $('#mixCommUnitOfCommodity').val() 
			 ,mixCommShipmentItemId:$('#mixCommShipmentItemId').val()
			 ,mixCommoditycommentId:$('#mixCommodityCommoditycommentId').val()
			 ,mixCommoditycommodityCode:$('#mixCommodityCommodityCode').val() 
			 ,shipmentmixCommItemId:0 },
		 success: function(responseText){
			 if(responseText.success==true){
				 //console.log("EDIT Done "+new Date());
				 somethingChangedMixComm = false;
				 var currentRowId = parseInt($('#mixCommUnitOfCommodity').val());
				 var nextRowId = getNextRowId(currentRowId);
				 if(nextRowId != -1) { 
					 //console.log("binding to loadComplete");
					 $('#mixCommCommDesc').attr('disabled', false);
					 $('#mixcommodityGrid').attr('nextRowId',nextRowId); 
				 } else {
					 $("#commodityDescPage").dialog('close'); 
				 }
				 
				
				 $("#mixcommodityGrid").trigger('reloadGrid');  
				 
				
			 }
			 else{
				 showResponseMessages("msgDivCommodityOverlay", responseText);
			 }
}
	 });
 }
 function SourceTariffPopupSearch() {   
	 var actionUrl = _context+"/cas/sourcetarifflookup.do?grpTyp="+01+"&sourceTariff="+$('#tariffNumber').val();
	 tariffNumber =$('#tariffNumber').val();
	 var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
	 window.open(actionUrl, 'SourceTariffSearch', windowStyle);    
	 }
 
 function sourceTariffSearchUpdate(id){
	 var values = id.split("|");
	   $('#tariffNumber').val(values[0]);
	   $('#tariffCheck').val(values[0]);
	   clearDataForTariffNumber(values[0],tariffNumber);
	   clearTariffItemOnChangeOfTariff();
	   tariffNumber =  $('#tariffNumber').val();
	   // Lookup items
	   window.itemList = null;
	 }

 
 /*function loadTemplateDetails()
	{  
	 var queryString = $('#shipmentForm').formSerialize();
	
		$.ajax({
			type: "POST",
			url: _context +"/shipmentCommodity/loadTemplateDetails",
			data: queryString,
		    success: function(responseText) {
		    	
		  
		    	 $("#kind").get(0).options.length = 0;
			        $.each(responseText.data.kindList, function(index,kindList) {
			            $("#kind").get(0).options[$("#kind").get(0).options.length] = new Option(kindList.description, kindList.code);
			        });
					
			        var kindNo = responseText.data.kind; //$("#containerNumberForDispatch").val();
			        $("#kind").editableDropdown("selectOption", {value: kindNo, text: kindNo});
		 		 }
	});
	}
 */
 function clearDataForTariffNumber(id, olddata){
		
	 if(id!=olddata ){
		
			
			$('#itemNumber').val("");
			$('#note').val("");
			$('#itemNumber').removeAttr("readOnly");
	 }
 }
 function clearCommoditySection(checkClearButton){
	
	
	 $('#commodityDesc').val("");
	 $('#itemNumber').val("");
	 $('#note').val("");
	 $('#netWeight').val("");
	 $('#piece').val("");
	 $('#cube').val("");
	$('#containerCommodityDesc').val("");
	$('#commodityCode').val("");
	 $('#unitOfCommodity')
     .append($('<option>',{ value : "" })
     .text(""));
	 var size = $('#unitOfCommodity').size();
	
	 $('#previousCommodity').attr("disabled",true);
		$('#nextCommodity').attr("disabled",true);
		
		$('#deleteCommodity').attr("disabled",true);
		
		$("#kind").val("");
		 somethingChanged == false;
	
		 $("#shipmentItemImperialLengthFeet").val("");
			$("#shipmentItemImperialLengthInches").val("");
			$("#shipmentItemImperialBreathFeet").val("");
			$("#imperialBreathInches").val("");
			$("#shipmentItemImperialHeightFeet").val("");
			$("#shipmentItemImperialHeightInches").val("");
			$("#shipmentItemMetricLength").val("");
			$("#shipmentItemMetricBreadth").val("");
			$("#shipmentItemMetricHeight").val("");
 }
 
 function updateShipmentKindList(){
	 var queryString = $('#shipmentForm').formSerialize();
	 $.ajax({
		 type:"POST",
		 url:_context+"/shipmentCommodity/returnKindText",
		 data:queryString,
		 success:function(responseText){
			 if(responseText.success =="True"){
				 
				 return responseText.data;
			 }
		 }
		 
	 });
 }
 var commDescSearchLocator ="";
 function commPopupSearch() {
		var dscr = $("#commodityDesc").val();
		var tariffNo = $("#tariffNumber").val();
		var itemNo =$("#itemNumber").val();
		var estShipDate = "";
	/*	if($('#freightReceivedDate').val()!=null && $('#freightReceivedDate').val()!="null" && $('#freightReceivedDate').val()!=""){
			estShipDate = $('#freightReceivedDate').val();
		} */
		//Assigned RateDate instead of ReceivedDate as part of defect D026648
		if($('#rateDate').val()!=null && $('#rateDate').val()!="null" && $('#rateDate').val()!=""){
			estShipDate = $('#rateDate').val();
		}
		var loadSrvc = $("#loadServiceCode").val();
		var dischargeSrvc =  $("#dischargeServiceCode").val();
		var trade = $('#tradeCode').val();
		var blOriginCityCode = $('#blOriginCityCode').val();
		var originPortCityCode =  $('#originPortCityCode').val();
		var destinationPortCityCode =  $('#destinationPortCityCode').val();
		var blDestinationCityCode =  $('#blDestinationCityCode').val();
		
		commDescSearchLocator = "commDesc";
		var actionUrl = _context+'/cas/searchShipmentCommodityLookup.do?filterValue1=' +encodeURIComponent(dscr + '|' + tariffNo + '|' +itemNo+ '|' + trade +
				'|' + loadSrvc + '|' + dischargeSrvc + '|' + estShipDate + '|' + blOriginCityCode + '|' + originPortCityCode + 
				'|' + destinationPortCityCode + '|' + blDestinationCityCode);
		var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
		window.open(actionUrl, 'CustomerSearch', windowStyle);		
	}

 function mixCommCommDescPopupSearch() {
	 var dscr = $("#mixCommCommDesc").val();
		var tariffNo = $("#tariffNumber").val();
		var itemNo =$("#mixCommItem").val();
		var estShipDate = "";
		if($('#freightReceivedDate').val()!=null && $('#freightReceivedDate').val()!="null" && $('#freightReceivedDate').val()!=""){
			estShipDate = $('#freightReceivedDate').val();
		}
		var loadSrvc = $("#loadServiceCode").val();
		var dischargeSrvc =  $("#dischargeServiceCode").val();
		var trade = $('#tradeCode').val();
		var blOriginCityCode = $('#blOriginCityCode').val();
		var originPortCityCode =  $('#originPortCityCode').val();
		var destinationPortCityCode =  $('#destinationPortCityCode').val();
		var blDestinationCityCode =  $('#blDestinationCityCode').val();
		commDescSearchLocator = "mixCommDesc";
		
		var actionUrl = _context+'/cas/searchShipmentCommodityLookup.do?filterValue1=' +encodeURIComponent(dscr + '|' + tariffNo + '|' +itemNo+ '|' + trade +
				'|' + loadSrvc + '|' + dischargeSrvc + '|' + estShipDate + '|' + blOriginCityCode + '|' + originPortCityCode + 
				'|' + destinationPortCityCode + '|' + blDestinationCityCode);
		var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
		window.open(actionUrl, 'CustomerSearch', windowStyle);		
		
	}
 
	function commodityUpdate(id){
		var values= id.split("|");
		if(commDescSearchLocator=="commDesc"){
			
			if(values[1] != null && values[1] == "**NPC**"){
				alert("NO PRIMARY COMMODITY FOUND");
			}else{
				$("#commodityDesc").val(values[1]);
				$("#commodityDesc").val(values[1]);	
			}
		
		$("#tariffNumber").val(values[3]);
		$("#tariffCheck").val(values[3]);
		$("#itemNumber").val(values[4]);
		returnCommodityCode(values,commDescSearchLocator);
		
		fetchCommodityCodeList($("#tariffNumber").val(),$("#itemNumber").val(),values,false,null);
		
		
		somethingChanged= true;
	}
		else if(commDescSearchLocator=="mixCommDesc"){
			
			
			if(values[1] != null && values[1] == "**NPC**"){
				alert("NO PRIMARY COMMODITY FOUND");
			}else{
				$("#mixCommCommDesc").val(values[1]);
				$("#mixCommCommDesc").val(values[1]);	
			}
			
			$("#tariffNumber").val(values[3]);
			$("#tariffCheck").val(values[3]);
			$("#mixCommItem").val(values[4]);
			returnCommodityCode(values,commDescSearchLocator);
			//$("#mixCommodityCommodityCode").val(mixCommodityCommodityCode);
			
			fetchCommodityCodeList($("#tariffNumber").val(),$("#mixCommItem").val(),values[1],true,null);
			
			somethingChangedMixComm=true;
			}
		}

	function returnCommodityCode(values,commDescSearchLocator){
		queryString = "descType="+values[0]+
		              "commodityId="+values[9]+
		              "itemId="+values[11];
		 $.ajax({
			 type:"GET",
			 async:false,
			 url:_context+"/shipmentCommodity/returnCommodityCode",
			 data: {descType:values[0], commodityId:values[9],itemId:values[11]},
			 success:function(responseText){
				 if(responseText.success){
					 if(commDescSearchLocator=="commDesc"){
					 $("#shipmentCommodityCode").val(responseText.data);
					 }else if(commDescSearchLocator=="mixCommDesc"){
					 $("#mixCommodityCommodityCode").val(mixCommodityCommodityCode);
					 }
				 }
			 }
			 
		 });
	}
	
	function fetchCommodityCodeList(tariffNumber,itemNumber,values,isMixed,itemId){
		var selectedCommodityCode = 	$("#shipmentCommodityCode").val();
		//console.log("Inside method fetchCommodityCodeList, tariffNumber:"+tariffNumber+",itemNumber:"+itemNumber+",isMixed:"+isMixed);
//		var tariffNumber = $("#tariffNumber").val();
//		var itemNumber = $("#itemNumber").val();
		if(!isMixed){
		var commoditydescId='00000';
		if(values!=null){commoditydescId=values[9];}		 
			$.ajax({
			 type:"GET",
			 async:false,
			 url:_context+"/shipmentCommodity/returnCommodityCodeList",
			 data: {tariffNumber:tariffNumber,itemNumber:itemNumber,commodityDescId:commoditydescId},
			 success:function(responseText){				
				 if(responseText.success){				
					populateCommodityCodeListBilling(responseText.data);					
					setFreightAccordianTabDetails($('#commodityLine').text(),tariffNumber,itemNumber, $('#containerCommodityDesc').val(),$("#commodityDesc").val());
					$('#shipmentCommodityCode').val(selectedCommodityCode);
				 }
			 }			 
			});
		}else {
		//D032322
			if(itemId==null){itemId=0;}			 
			$.ajax({
				 type:"GET",
				 url:_context+"/shipmentCommodity/returnCommCodeListByCommDescName",
				 data: {tariffNumber:tariffNumber,itemNumber:itemNumber,commodityDesc:values,itemId:itemId},
				 success:function(responseText){					
					 if(responseText.success){						
						populateMixCommodityCodeListBilling(responseText.data);						
						setFreightAccordianTabDetails($('#commodityLine').text(),tariffNumber,itemNumber, $('#containerCommodityDesc').val(),$("#commodityDesc").val());
						$('#shipmentCommodityCode').val(selectedCommodityCode);
					 }
				 }
				 
			 });
		}
	}
	
	/*function populateCommodityCodeListChange(list){
		alert("Inside populaCommodityCodeListChange, list :"+list);
		$('select#commodityCode').children().remove().end().append('<option selected value="">Select</option>');
		if(list != null)
		{
			for ( var i = 0; i < list.length; i++) {
		
				$('select#commodityCode').append($("<option/>", {
					value : list[i].code,
					text : list[i].code + " - " +list[i].description
				}));
			alert("value:"+value+",text:"+text);
			}
			
			if(list.length==1){
				$('#commodityCode').val($.trim(list[0].code));
		
			}
		}
	}*/
	
	var noteLookUp="";
	function notePopupSearch() {
		
		var tariffNo = $("#tariffNumber").val();
		var itemNo = $("#itemNumber").val();
		// Need to set it
		var estShipDate = "";
		if($('#rateDate').val()!=null && $('#rateDate').val()!="null" && $('#rateDate').val()!=""){
			estShipDate = $('#rateDate').val();
		}
		var trade = $("#tradeCode").val();
		var loadSrvc = $("#loadServiceCode").val();
		var dischargeSrvc = $("#dischargeServiceCode").val();
		var originPortCityCode = $('#originPortCityCode').val();
		var destinationPortCityCode = $('#destinationPortCityCode').val();
		var eqType = "";
		var eqLength= "";
		var eqHeight= "";
		noteLookUp ="CONTRCOMM";
		var origin = $('#blOriginCityCode').val();
		var destination = $('#blDestinationCityCode').val();
		var actionUrl = _context+'/cas/searchNoteNoLookup.do?filterValue1=' + tariffNo + '|' + itemNo + '|' + estShipDate + '|' + eqType + 
			'|' + eqLength + '|' + eqHeight + '|' + origin + '|' + destination +
			'|' + originPortCityCode + '|' + destinationPortCityCode + '|' + loadSrvc + '|' + dischargeSrvc + '|' + trade ;
		
			
		var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
		window.open(actionUrl, 'NoteSearch', windowStyle);
	
	}

	function noteNoUpdate(id){
		var values= id.split("|");
		if(noteLookUp=="CONTRCOMM"){
		
		$("#note").val((values[0]));
		somethingChanged=true;
		}else{
			
			$("#mixCommNote").val((values[0]));
			somethingChangedMixComm = true;
		}
	
	}
	function ItemPopupSearch() { 
		if ($('#itemNumber').is('[readonly]') ) {}else{
		var actionUrl = _context+"/cas/itemnamelookup.do?sourceTariff="+$('#tariffNumber').val()+"&grpName="+$('#tariffNumber').val()+"&grpTyp=01"+"&itemName="+$('#itemNumber').val();
		var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
		window.open(actionUrl, 'ItemNameSearch', windowStyle);    
	} 
	}	
	
	function itemNameSearchUpdate(id){
		var values = id.split("|");
	  	$('#itemNumber').val(values[0]);
	  	somethingChanged = true;
	  	getPrimaryCommodity($('#tariffNumber').val(), $('#itemNumber').val());		  	
	  	$("#note").val("");
	  	fetchCommodityCodeList($('#tariffNumber').val(), $('#itemNumber').val(),null,false,null);
	}  
			
	
	function updateKindList(responseText){
		 /* $("#kind").get(0).options.length = 0;
	        $.each(responseText.data.shipmentItemForm.kindList, function(index, kindList) {
	            $("#kind").get(0).options[$("#kind").get(0).options.length] = new Option(kindList.description, kindList.code);
	        });*/
			
	        var kind = responseText.data.shipmentItemForm.kind; //$("#containerNumberForDispatch").val();
	        $("#kind").val(kind);
	       /* var kindText = responseText.data.shipmentItemForm.kindText; 
	        $("#kind").editableDropdown("selectOption", {value: kind, text: kindText});*/

	}
	
/*function updateEquipmentNumber(responseText){
	$("#equipmentNumber").get(0).options.length =0;
	  $.each(responseText.data.shipmentItemForm.kindList, function(index, kindList) {
          $("#kind").get(0).options[$("#kind").get(0).options.length] = new Option(kindList.description, kindList.code);
      });
		
      var kind = responseText.data.shipmentItemForm.kind; //$("#containerNumberForDispatch").val();
      var kindText = responseText.data.shipmentItemForm.kindText; 
      $("#kind").editableDropdown("selectOption", {value: kind, text: kindText});
	
	
}	*/
	function updateMixCommKindList(responseText){
		 /* $("#mixCommKind").get(0).options.length = 0;
	        $.each(responseText.data.mixCommkindList, function(index, kindList) {
	            $("#mixCommKind").get(0).options[$("#mixCommKind").get(0).options.length] = new Option(kindList.description, kindList.code);
	        });
			*/ 
	        var kind = responseText.data.mixCommKind; 
	       // var kindText = responseText.data.mixCommKind;
	        $("#mixCommKind").val(kind);

	}
	
	function updateCommodityLine(responseText){
		  $("#unitOfCommodity").get(0).options.length = 0;
		  $.each(responseText.data.shipmentItemForm.commodityLineList, function(index, commodityLineList) {
	            $("#unitOfCommodity").get(0).options[$("#unitOfCommodity").get(0).options.length] = new Option(commodityLineList.description, commodityLineList.code);
	        });
		  var unitOfCommodity = responseText.data.shipmentItemForm.unitOfCommodity;
		  $("#unitOfCommodity").val(unitOfCommodity);
	}
	
	function validateButtonAction(Strng){
		if(Strng=="next"){
		if($('#unitOfCommodity').val()>=$('#commodityLine').text()){
			alert("There is no Next Commodity");
			$('#nextCommodity').attr("disabled",true);
			return false;
		}
		else{
			return true;
			}
		}	
		else if(Strng=="previous"){
			if($('#unitOfCommodity').val()<="1"){
				alert("There is no Previous Commodity");
				$('#previousCommodity').attr("disabled",true);
				return false;
			}
			else{
				return true;	
			}
			
		}
		else  return true;
		
	}
	function enableCommoditySectionButtons(buttonStrng){
		if(buttonStrng =="ALL"){
			if(isCommodityBLCNUpdate ||isCommodityBLAUUpdate ||isCommodityBLCVUpdate){
			$('#clearCommodity').attr("disabled",false);
			$('#updateCommodity').attr("disabled",false);
			}
			if(isCommodityBLCNAdd ||isCommodityBLAUAdd ||isCommodityBLCVAdd){
			$('#addCommodity').attr("disabled",false);
			}
			if(isCommodityBLCNDelete ||isCommodityBLAUDelete ||isCommodityBLCVDelete){
			$('#deleteCommodity').attr("disabled",false);
			}
			
			
		}
	}
	function resetTariffDetails(itemId,itemName){
		$('#commodityDesc').val('');
		
		$('#note').val('');
		
	}
	
	function getPrimaryCommodity(tariffNo, itemNo){
		var blOriginCityCode = $('#blOriginCityCode').val();
		var blDestinationCityCode = $('#blDestinationCityCode').val();
		var originPortCityCode = $('#originPortCityCode').val();
		var destinationPortCityCode = $('#destinationPortCityCode').val();
		var loadSrvc = $("#loadServiceCode").val();
		var dischargeSrvc = $("#dischargeServiceCode").val();
		var trade = $('#tradeCode').val();
		var estShipDate = "";
		if($('#rateDate').val()!="" && $('#rateDate').val()!=null && $('#rateDate').val()!="null"){
			estShipDate = $('#rateDate').val();
		}else if($('#freightReceivedDate').val()!="" && $('#freightReceivedDate').val()!=null && $('#freightReceivedDate').val()!="null"){
			estShipDate = $('#freightReceivedDate').val();
		}
		//var tariffNo = $("#tariff").val();
		//var itemNo = $("#tariffItemNumber").val();
		
		var urlComm= _context+'/cas/autocomplete.do?method=getPrimaryCommodity&searchType=281&parentSearch='+blOriginCityCode
		+'|'+blDestinationCityCode+'|'+originPortCityCode+'|'+destinationPortCityCode+'|'+loadSrvc+'|'+dischargeSrvc
		+'|'+trade+'|'+tariffNo+'|'+itemNo+'|'+estShipDate;
		
		$.ajax({
			url: urlComm,
			type: "POST",
			success: function(responseText){
				//alert("commodityNotFound: " + responseText[0].commodityNotFound);
				if(responseText!=null){
					if(responseText[0].commodityNotFound=='undefined' || responseText[0].commodityNotFound==null || responseText[0].commodityNotFound==''){
						$('#msgDivCommodity').html('');
						$('#msgDivCommodity').hide();
						$("#commodityDesc").val(responseText[0].desc);

						if(responseText[0].descid!=null && responseText[0].descid!=''){
							
							$.ajax({
								url: _context+'/booking/freight/getCommodityCodes',
								async:false,
								data: {commodityDescId:responseText[0].descid,
									frtItemId:responseText[0].itemid},
								success: function(responseText){
									if(responseText.success){
										populateCommodityCodeList(responseText.data);
									}
								}
							});
						}
						
						if ($.trim(responseText[0].noterate)!=null && $.trim(responseText[0].noterate)!='') {
							
							$('#note').val("");
						} else {
							
						}
						
						
					}
					else{
						$('#msgDivCommodity').show();
						//$('#msgDivCommodity').html('<div class="message_error">Commodity code description is not found.</div>');
						resetMandatoryTariffCmdDesc();
						/*setMandatoryTariffItem();*/
						$("#commodityDesc").val("");
						$('#shipmentCommodityCode').val("");
						// displaying more specific error message if available as per D025670
						if (responseText[0].commodityNotFound =="Y"){
							$('#msgDivCommodity').html('<div class="message_error">Commodity Code/Description not found for Tariff Item.</div>'); //Defect 26684		
						}else
						if(responseText[0].errmsg)
							$('#msgDivCommodity').html('<div class="message_error">'+responseText[0].errmsg+'</div>');
						else
							$('#msgDivCommodity').html('<div class="message_error">Invalid combination of data to satisfy the Tariffs edit condition.</div>');
						

					}
				}
			}
		});
	}
	
	function populateCommodityCodeList(list){
		
		
		
		if(list.length>0){
			if(list.length==1){
			$('#shipmentCommodityCode').val(list[0].code);
			}else{
				$('#shipmentCommodityCode').val("");
			}
		}
	}

	function populateMixCommodityCodeList(list){
		
		
		
		if(list.length>0){
			$('#mixCommodityCommodityCode').val(list[0].code);
		}
		populateMixCommodityCodeListBilling(list);
	}
	
	function setTariffCommodityDecription(itemName){
		
		var blOriginCityCode = $('#blOriginCityCode').val();
		var blDestinationCityCode = $('#blDestinationCityCode').val();
		var originPortCityCode = $('#originPortCityCode').val();
		var destinationPortCityCode = $('#destinationPortCityCode').val();
		var loadSrvc = $("#loadServiceCode").val();
		var dischargeSrvc = $("#dischargeServiceCode").val();
		var trade = "";
		var tariffNo = $("#tariffNumber").val();
		var itemNo = itemName;
		
		var urlComm= _context+'/cas/autocomplete.do?method=getPrimaryCommodity&searchType=281&parentSearch='+blOriginCityCode
		+'|'+blDestinationCityCode+'|'+originPortCityCode+'|'+destinationPortCityCode+'|'+loadSrvc+'|'+dischargeSrvc
		+'|'+trade+'|'+tariffNo+'|'+itemNo;
		
		$.ajax({
			url: urlComm,
			type: "POST",
			success: function(responseText){
				if(responseText!=null){
					$("#commodityDesc").val(responseText[0].desc);
					
					
					
					if (responseText[0].note== "Y" && $.trim(responseText[0].noterate)!=null && $.trim(responseText[0].noterate)!='') {
						
						$('#note').val("");
					} else {
						
					}
					}}});
	}
	function loadMixedCommodityEquipmentData(responseText){
		 $("#equipmentNumber").get(0).options.length = 0;
		 $.each(responseText.data.freightForm.equipmentNumberList, function(index, equipmentNumberList) {
	            $("#equipmentNumber").get(0).options[$("#equipmentNumber").get(0).options.length] = new Option(equipmentNumberList.description, equipmentNumberList.code);
	        });
			
	        var equipmentNumber = responseText.data.freightForm.equipmentId; //$("#containerNumberForDispatch").val();
	        
	        $("#equipmentNumber").val(equipmentNumber);
	        $('#totalEquipment').text(responseText.data.freightForm.totalEquipment);
	        $('#sealNumber').val(responseText.data.freightForm.sealNumber);
	        if(responseText.data.freightForm.overflow=="No" || responseText.data.freightForm.overflow=="N"){
	        	$('#eqpOverflow').val("N");
	        }
	        else if(responseText.data.freightForm.overflow=="Yes" || responseText.data.freightForm.overflow=="Y"){
	        	$('#eqpOverflow').val("Y");
	        }
	        //$('#eqpOverflow').val(responseText.data.freightForm.overflow);
	        $('#shipmentFreightSeqNumber').val(responseText.data.freightForm.shipmentFreightSeqNumber);
	        $('#temperatureEqp').val(responseText.data.freightForm.temperatureEqp);
	        $('#temperatureEqp').val(responseText.data.freightForm.temperature);
	        $('#temperatureCode ').val(responseText.data.freightForm.temperatureCode);
	        $('#eqptType').val(responseText.data.freightForm.eqptType);
	        $('#eqptHeight').text(responseText.data.freightForm.eqptHeight);
	        $('#eqptLength').text(responseText.data.freightForm.eqptLength);
	        $('#prorateCode').text(responseText.data.freightForm.prorateCode);
	        $('#freightEquipmemtDetail').text(responseText.data.freightForm.eqptDetail);
	        $('#shipmentFreightId').val(responseText.data.freightForm.shipmentFreightId);
	        if($('#eqptType').val()!="R" ){
	        	$('#temperatureEqp').attr("disabled",true);
	        	$('select[name="freightForm.temperatureCode"]').attr("disabled",true);
	        	
	        }
	        else{
	        	$('#temperatureEqp').removeAttr("disabled");
	        	$('select[name="freightForm.temperatureCode"]').attr("disabled",false);
	        }
	}
	
	function format_number_long(){
		pnumber = $('#netWeight').val();
		if($("#unitOfMeasureSourceCode").val()=="M") {
		
		decimals=3;
		    if (isNaN(pnumber)) { return 0};
		    if (pnumber=='') { return 0};
		     
		    var snum = new String(pnumber);
		    var sec = snum.split('.');
		    var whole = parseFloat(sec[0]);
		    var result = '';
		     
		    if(sec.length > 1){
		        var dec = new String(sec[1]);
		        dec = String(parseFloat(sec[1])/Math.pow(10,(dec.length - decimals)));
		        dec = String(Math.round(parseFloat(dec))/Math.pow(10,decimals));
		        var value = dec.split('.')[1]
		        if(value!=undefined && value != 'undefined' && value != null){
		        	dec = value;
		        }
		        dec = '.'+dec;
		        dec = String(whole + dec);
		        var dot = dec.indexOf('.');
		        if(dot == -1){
		            dec += '.'; 
		            dot = dec.indexOf('.');
		        }
		        while(dec.length <= dot + decimals) { dec += '0'; }
		        result = dec;
		    } else{
		        var dot;
		        var dec = new String(whole);
		        dec += '.';
		        dot = dec.indexOf('.');     
		        while(dec.length <= dot + decimals) { dec += '0'; }
		        result = dec;
		    }   
		    $('#netWeight').val(result);
		}else{
			  $('#netWeight').val(parseInt(Math.round(pnumber)));
		}	
	}
	

	function format_number_MixCube(){
		pnumber = $('#mixCommCube').val();
		if($("#unitOfMeasureSourceCode").val()=="M") {
		decimals=3;
		    if (isNaN(pnumber)) { return 0};
		    if (pnumber=='') { return 0};
		     
		    var snum = new String(pnumber);
		    var sec = snum.split('.');
		    var whole = parseFloat(sec[0]);
		    var result = '';
		     
		    if(sec.length > 1){
		        var dec = new String(sec[1]);
		        dec = String(parseFloat(sec[1])/Math.pow(10,(dec.length - decimals)));
		        dec = String(Math.round(parseFloat(dec))/Math.pow(10,decimals));
		        dec = '.'+dec.split('.')[1];
		        dec = String(whole + dec);
		        var dot = dec.indexOf('.');
		        if(dot == -1){
		            dec += '.'; 
		            dot = dec.indexOf('.');
		        }
		        while(dec.length <= dot + decimals) { dec += '0'; }
		        result = dec;
		    } else{
		        var dot;
		        var dec = new String(whole);
		        dec += '.';
		        dot = dec.indexOf('.');     
		        while(dec.length <= dot + decimals) { dec += '0'; }
		        result = dec;
		    }   
		    $('#mixCommCube').val(result);
		}else{
			
			getLoadDschServicepairValue();
			if($('#routingLoadDischargePair').val()!=null && $('#routingLoadDischargePair').val().trim()=="AU"){
			if(parseInt(Math.floor(pnumber))=='0'){
				 $('#mixCommCube').val('');
			}else{
			 $('#mixCommCube').val(Math.floor(pnumber));
			}}
			else{
				if(parseInt(Math.ceil(pnumber))=='0'){
					 $('#mixCommCube').val('');
				}else{
				 $('#mixCommCube').val(Math.ceil(pnumber));
				}	
			}
		}
		    
		    
		    
		    
		    
		
	}
	function format_number_MixNetWeight(){
		pnumber = $('#mixCommNetWgt').val();
		if($("#unitOfMeasureSourceCode").val()=="M") {
		decimals=3;
		    if (isNaN(pnumber)) { return 0};
		    if (pnumber=='') { return 0};
		     
		    var snum = new String(pnumber);
		    var sec = snum.split('.');
		    var whole = parseFloat(sec[0]);
		    var result = '';
		     
		    if(sec.length > 1){
		        var dec = new String(sec[1]);
		        dec = String(parseFloat(sec[1])/Math.pow(10,(dec.length - decimals)));
		        dec = String(Math.round(parseFloat(dec))/Math.pow(10,decimals));
		        dec = '.'+dec.split('.')[1];
		        dec = String(whole + dec);
		        var dot = dec.indexOf('.');
		        if(dot == -1){
		            dec += '.'; 
		            dot = dec.indexOf('.');
		        }
		        while(dec.length <= dot + decimals) { dec += '0'; }
		        result = dec;
		    } else{
		        var dot;
		        var dec = new String(whole);
		        dec += '.';
		        dot = dec.indexOf('.');     
		        while(dec.length <= dot + decimals) { dec += '0'; }
		        result = dec;
		    }   
		    $('#mixCommNetWgt').val(result);
		}else{
			if(parseInt(Math.ceil(pnumber))=='0'){
				 $('#mixCommNetWgt').val('');
			}else{
			 $('#mixCommNetWgt').val(Math.ceil(pnumber));
			}	
		}
	}
	function format_number_cube(){
		pnumber = $('#cube').val();
		if($("#unitOfMeasureSourceCode").val()=="M") {
		
		decimals=3;
		    if (isNaN(pnumber)) { return 0};
		    if (pnumber=='') { return 0};
		     
		    var snum = new String(pnumber);
		    var sec = snum.split('.');
		    var whole = parseFloat(sec[0]);
		    var result = '';
		     
		    if(sec.length > 1){
		        var dec = new String(sec[1]);
		        dec = String(parseFloat(sec[1])/Math.pow(10,(dec.length - decimals)));
		        dec = String(Math.round(parseFloat(dec))/Math.pow(10,decimals));
		        dec = '.'+dec.split('.')[1];
		        dec = String(whole + dec);
		        var dot = dec.indexOf('.');
		        if(dot == -1){
		            dec += '.'; 
		            dot = dec.indexOf('.');
		        }
		        while(dec.length <= dot + decimals) { dec += '0'; }
		        result = dec;
		    } else{
		        var dot;
		        var dec = new String(whole);
		        dec += '.';
		        dot = dec.indexOf('.');     
		        while(dec.length <= dot + decimals) { dec += '0'; }
		        result = dec;
		    }   
		    if(result=='0'){
		    	 $('#cube').val('');
		    }else{
		    $('#cube').val(result);
		    }
		}else{
			getLoadDschServicepairValue();
			if($('#routingLoadDischargePair').val()!=null && $('#routingLoadDischargePair').val().trim()=="AU"){
			if(parseInt(Math.floor(pnumber))=='0'){
				 $('#cube').val('');
			}else{
			 $('#cube').val(Math.floor(pnumber));
			}}
			else{
				if(parseInt(Math.ceil(pnumber))=='0'){
					 $('#cube').val('');
				}else{
				 $('#cube').val(Math.ceil(pnumber));
				}	
			}
		}
	}
	
	function commodityCallOnUnitChange(){
	 var queryString = $('#shipmentForm').formSerialize();
	 $.ajax({
		 type:"POST",
		 url:_context+"/shipmentCommodity/loadCommodityByUnit",
		 data :queryString,
		success: function(responseText){
			reloadShipmentCommodityData(responseText);
			$("#commodityGrid").trigger('reloadGrid');
			$("#povGrid").trigger('reloadGrid');
			 $("#convGrid").trigger('reloadGrid');
			 $('#tr_shipmentFreightId').hide();
				if($("#convGrid").getGridParam("reccount")>0){ $('#tr_shipmentConvFreightId').hide();};
			checkClearButton = true;
		}	      
	 });
	 somethingChanged = false;
	}
	
	
	function commodityCallOnAdd(){
		 if($("#validateShipmentCommodityDiv").validationEngine('validate')){
			 if($("#shipmentCommodityHeader").validationEngine('validate')){
		 var queryString = $('#shipmentForm').formSerialize();
		 $.ajax({
			 type:"POST",
			 url:_context+"/shipmentCommodity/addCommodity",
			 data :queryString,
			success: function(responseText){
				if(responseText.success==true){
				reloadShipmentCommodityData(responseText);
				$("#commodityGrid").trigger('reloadGrid');
				 $('#tr_shipmentFreightId').hide();
				
				 $("#povGrid").trigger('reloadGrid');
				 $("#convGrid").trigger('reloadGrid');
					if($("#convGrid").getGridParam("reccount")>0){ $('#tr_shipmentConvFreightId').hide();};
				   checkClearButton = true;
				   $('#msgDivCommodity').html("");
				   saveBillBeforeBillButton = true;
				   somethingChanged= true;
				   //D025042, For emptying fields in commodity grid when clicked on add btn.
				   //D027432: 	Maintain Bill , commodity Grid multiple container linkage
				   // Commented below code - copy of the values should be avoided in Java where the form is set in session 
				  /* $('#commodityDesc').val("");
					 $('#itemNumber').val("");
					 $('#note').val("");
					 $('#netWeight').val("");
					 $('#piece').val("");
					 $('#kind').val("");
					 $('#cube').val("");
					 $('#containerCommodityDesc').val("");
					 $('#commodityCode').val("");
					 $('#unitOfCommodity')
				     .append($('<option>',{ value : "" })
				     .text(""));
				     	//D025042
					 isAddNew=true;
					 commoditySequenceNumber=$('#unitOfCommodity').val();*/
					 
			}
					showResponseMessages("msgDivCommodity", responseText);
					$('#msgDivCommodity').show();
				}
				
		 }); 
		 }
		 }
	}
	function commodityCallOnNext(){
		 var queryString = $('#shipmentForm').formSerialize();
		 $.ajax({
			 type:"POST",
			 url:_context+"/shipmentCommodity/loadCommodityByNext",
			 data :queryString,
			success: function(responseText){
			//	D025042
				reloadShipmentCommodityData(responseText);
				//D027432: 	Maintain Bill , commodity Grid multiple container linkage
				 /*if(isAddNew==true && $('#unitOfCommodity').val()==commoditySequenceNumber){
					 $('#commodityDesc').val("");
					 $('#itemNumber').val("");
					 $('#note').val("");
					 $('#netWeight').val("");
					 $('#piece').val("");
					 $('#kind').val("");
					 $('#cube').val("");
					 $('#containerCommodityDesc').val("");
					 $('#commodityCode').val("");
					 
				 }*/
				$("#commodityGrid").trigger('reloadGrid');
				$("#povGrid").trigger('reloadGrid');
				 $("#convGrid").trigger('reloadGrid');
					if($("#convGrid").getGridParam("reccount")>0){ $('#tr_shipmentConvFreightId').hide();};
				 $('#tr_shipmentFreightId').hide();
				checkClearButton = true;
			}	        
		 });
		//}somethingChanged 
		 somethingChanged = false;
	}
	function commodityCallOnPrev(){
		 var queryString = $('#shipmentForm').formSerialize();
			
		 $.ajax({
			 type:"POST",
			 url:_context+"/shipmentCommodity/loadCommodityByPrevious",
			 data :queryString,
			success: function(responseText){
				reloadShipmentCommodityData(responseText);
				$("#commodityGrid").trigger('reloadGrid');
				$("#povGrid").trigger('reloadGrid');
				 $("#convGrid").trigger('reloadGrid');
				 $('#tr_shipmentFreightId').hide();
				checkClearButton = true;
				
			}	        
		 });
		 somethingChanged = false;
	}

	function changedMeasurementSource(uom){
	var seq = 0;
	    if($('#unitOfCommodity').val()!="0" || $('#unitOfCommodity').val()!="" || $('#unitOfCommodity').val()!=null){
	    seq = $('#unitOfCommodity').val();

	    }
	     if(seq!=0){
    		 $.ajax({
    			 type:"POST",
    			 async:false,
    			 url:_context+"/shipmentCommodity/convertFreightDimensions",
    			 data :{uom: uom,seq:seq},
    			    success: function(responseText){}


    		 });
    		 }
    	}

	function equipmentCallOnEqpChangeChange(){
		 var queryString = $('#shipmentForm').formSerialize();
		 $.ajax({
			 type:"POST",
			 url:_context+"/shipmentCommodity/equipmentNumber",
			 data :queryString,
			 success: function(responseText){
				 if(responseText.success== true){
						document.getElementById("blcn").style.display="none";
						document.getElementById("blmx").style.display="block";
					loadMixedCommodityEquipmentData(responseText);
				        $('#mixedCommodityView').val("Commodity View");
				        $("#mixcommodityGrid").trigger('reloadGrid');  
				}	
			 }
	 });
	}
	
	function equipmentCallOnEqpPrevChange(){
		 var queryString = $('#shipmentForm').formSerialize();
		 $.ajax({
			 type:"POST",
			 url:_context+"/shipmentCommodity/previousEquipment",
			 data :queryString,
			 success: function(responseText){
				 if(responseText.success== true){
						document.getElementById("blcn").style.display="none";
						document.getElementById("blmx").style.display="block";
					loadMixedCommodityEquipmentData(responseText);
					clearMsgDivCommodity();
				        $('#mixedCommodityView').val("Commodity View");
				        $("#mixcommodityGrid").trigger('reloadGrid');     
				}	
			 }
	 });
	}
	
	function equipmentCallOnEqpNextChange(){
		 var queryString = $('#shipmentForm').formSerialize();
		 $.ajax({
			 type:"POST",
			 url:_context+"/shipmentCommodity/nextEquipment",
			 data :queryString,
			 success: function(responseText){
				 if(responseText.success== true){
						document.getElementById("blcn").style.display="none";
						document.getElementById("blmx").style.display="block";
				    	loadMixedCommodityEquipmentData(responseText);
				    	clearMsgDivCommodity();
				        $('#mixedCommodityView').val("Commodity View");
				        $("#mixcommodityGrid").trigger('reloadGrid');   
				}	
			 }
	 });
	}
	
	function clearMsgDivCommodity(){
		$('#msgDivCommodity').html("");
	}
	function changeCommodtiySectionOnLdsDscBasis(responseText){
		if(responseText.data.routing.routingLoadDischargePair!=null && responseText.data.routing.routingLoadDischargePair!="" 
			&& responseText.data.routing.routingLoadDischargePair!="null"){
		if(responseText.data.routing.routingLoadDischargePair.trim() =="AU"){
		document.getElementById("forCon2").style.display="none";
		document.getElementById("forCon3").style.display="none";
		document.getElementById("forCon1").style.display="none";
		document.getElementById("forPov1").style.display="block";
		document.getElementById("forPov2").style.display="block";
		document.getElementById("convGridDiv").style.display="none";
		document.getElementById("forPov3").style.display="block";
		document.getElementById("mixCommButton").style.display="none";
		document.getElementById("commodityGridDiv").style.display="none";
		document.getElementById("povGridDiv").style.display="block";
		document.getElementById("forConventional").style.display="none";
		$("#pieceValue").text(responseText.data.shipmentItemForm.cmdLineLink);
		$("#povGrid").trigger('reloadGrid');
		$('#tr_shipmentFreightAutoId').hide();
		
		
		$('#h3BookingPageTitle').html('<h3 class="content-title">Maintain Bill</h3>');
		
		////
		
		origWt=$('#netWeight').val();
		origVol=$('#cube').val();
		if(responseText.data.header.unitOfMeasureSourceCode=="M"){
			document.getElementById("forMetric").style.display="block";
			document.getElementById("forImperial").style.display="none";
			$('#netWeightlabel').html("Wgt-KGS");
			
			//added for rounding off decimal places to 3 for metric units
			var modifiedWtMetric=(Math.round(origWt*1000)/1000).toFixed(3);
			$('#netWeight').val(modifiedWtMetric);
			
			
			$('#cubeLabel').html("Cube(Meters)");
			
			//added for rounding off decimal places to 3 for metric units
			var modifiedVolMetric=(Math.round(origVol*1000)/1000).toFixed(3);
			if(modifiedVolMetric=='0'){
				$('#cube').val('');
			}else{
			$('#cube').val(modifiedVolMetric);
			}
			}
		 
		origWt=$('#netWeight').val();
		origVol=$('#cube').val();
			if(responseText.data.header.unitOfMeasureSourceCode=="I"){
			document.getElementById("forImperial").style.display="block";
			document.getElementById("forMetric").style.display="none";
			$('#netWeightlabel').html("Wgt-LBS");
			
			//added for rounding off decimal places to 0 for imperial units
			var modifiedWtImperial=(Math.round(origWt)).toFixed(0);
			$('#netWeight').val(modifiedWtImperial);
			
			
			$('#cubeLabel').html("Cube(Ft)");
			
			//added for rounding off decimal places to 0 for imperial units
			var modifiedVolImperial=(Math.floor(origVol));
			$('#cube').val(modifiedVolImperial);
			if(modifiedVolImperial=='0'){
				$('#cube').val('');
			}else{
			$('#cube').val(modifiedVolImperial);
			}
			
			}
		
		}
		if(responseText.data.routing.routingLoadDischargePair.trim() =="CY"){
			if(responseText.data.header.billType!=null && responseText.data.header.billType.trim()=="STANDARD" ||
					responseText.data.header.billType!=null && responseText.data.header.billType.trim()=="HHGDS"){
			document.getElementById("forCon2").style.display="block";
			document.getElementById("forCon1").style.display="block";
			document.getElementById("forCon3").style.display="block";
			document.getElementById("forPov1").style.display="none";
			document.getElementById("forPov2").style.display="none";
			document.getElementById("forPov3").style.display="none";
			document.getElementById("convGridDiv").style.display="none";
			document.getElementById("forConventional").style.display="none";
			
			document.getElementById("mixCommButton").style.display="block";
			document.getElementById("commodityGridDiv").style.display="block";
			document.getElementById("povGridDiv").style.display="none";
			// this is used to hide and show on Basis of Bill type 
			document.getElementById("blcn").style.display="block";
			document.getElementById("blmx").style.display="none";
			$("#commodityGrid").trigger('reloadGrid');
			 $('#mixedCommodityView').val("Mixed Commodity View");
			 $('#tr_shipmentFreightId').hide();
			 $('#h3BookingPageTitle').html('<h3 class="content-title">Maintain Bill</h3>');
			
			}
			else if(responseText.data.header.billType!=null && responseText.data.header.billType.trim()=="MIXED"){
				document.getElementById("forCon2").style.display="none";
				document.getElementById("forCon1").style.display="none";
				document.getElementById("forCon3").style.display="none";
				document.getElementById("forPov1").style.display="none";
				document.getElementById("forPov2").style.display="none";
				document.getElementById("forPov3").style.display="none";
				document.getElementById("povGridDiv").style.display="none";
				document.getElementById("convGridDiv").style.display="none";
				document.getElementById("mixCommButton").style.display="block";
				document.getElementById("commodityGridDiv").style.display="none";
				document.getElementById("forConventional").style.display="none";
				document.getElementById("povGridDiv").style.display="none";
				 $('#mixedCommodityView').val("Commodity View");
				 document.getElementById("blcn").style.display="none";
					document.getElementById("blmx").style.display="block";
					$("#mixcommodityGrid").trigger('reloadGrid');
					$('#tr_unitOfCommodity').hide();
					 $('#h3BookingPageTitle').html('<h3 class="content-title">Maintain Bill</h3>');
					 loadMixedCommodityEquipmentData(responseText);
			}
			origWt=$('#netWeight').val();
			origVol=$('#cube').val();
			if(responseText.data.header.unitOfMeasureSourceCode=="M"){
				document.getElementById("forMetric").style.display="block";
				document.getElementById("forImperial").style.display="none";
				$('#netWeightlabel').html("Wgt-KGS");
				
				//added for rounding off decimal places to 3 for metric units
				var modifiedWtMetric=(Math.round(origWt*1000)/1000).toFixed(3);
				$('#netWeight').val(modifiedWtMetric);
				
				
				$('#cubeLabel').html("Cube(Meters)");
				
				//added for rounding off decimal places to 3 for metric units
				var modifiedVolMetric=(Math.round(origVol*1000)/1000).toFixed(3);
				if(modifiedVolMetric=='0'){
					$('#cube').val('');
				}else{
				$('#cube').val(modifiedVolMetric);
				}
				}
			 
			origWt=$('#netWeight').val();
			origVol=$('#cube').val();
				if(responseText.data.header.unitOfMeasureSourceCode=="I"){
				document.getElementById("forImperial").style.display="block";
				document.getElementById("forMetric").style.display="none";
				$('#netWeightlabel').html("Wgt-LBS");
				
				//added for rounding off decimal places to 0 for imperial units
				var modifiedWtImperial=(Math.round(origWt)).toFixed(0);
				$('#netWeight').val(modifiedWtImperial);
				
				
				$('#cubeLabel').html("Cube(Ft)");
				
				//added for rounding off decimal places to 0 for imperial units
				var modifiedVolImperial=(Math.ceil(origVol));
				$('#cube').val(modifiedVolImperial);
				if(modifiedVolImperial=='0'){
					$('#cube').val('');
				}else{
				$('#cube').val(modifiedVolImperial);
				}
				
				}
			
		}
		if(responseText.data.routing.routingLoadDischargePair.trim() =="LCL"){
			document.getElementById("forCon2").style.display="block";
			document.getElementById("forCon1").style.display="block";
			document.getElementById("forCon3").style.display="block";
			document.getElementById("forPov1").style.display="none";
			document.getElementById("forPov2").style.display="none";
			document.getElementById("forPov3").style.display="none";
			document.getElementById("convGridDiv").style.display="block";
			
			document.getElementById("mixCommButton").style.display="none";
			document.getElementById("commodityGridDiv").style.display="none";
			document.getElementById("povGridDiv").style.display="none";
			// this is used to hide and show on Basis of Bill type 
			document.getElementById("blcn").style.display="block";
			document.getElementById("blmx").style.display="none";
			// $('#mixedCommodityView').val("Mixed Commodity View");
			document.getElementById("forConventional").style.display="block";
			
			$('#h3BookingPageTitle').html('<h3 class="content-title">Maintain Bill</h3>');
			
			 
			
			
			 if((!(responseText.data.routing.loadServiceCode=="FI" && responseText.data.routing.dischargeServiceCode=="FO"))
					 ||(!(responseText.data.routing.loadServiceCode=="FO" && responseText.data.routing.dischargeServiceCode=="FI"))){
				//document.getElementById("tr_shipmentConvFreightId").style.display="block";
			 }
			 $("#convGrid").trigger('reloadGrid');
			 origWt=$('#netWeight').val();
				origVol=$('#cube').val();
				if(responseText.data.header.unitOfMeasureSourceCode=="M"){
					document.getElementById("forMetric").style.display="block";
					document.getElementById("forImperial").style.display="none";
					$('#netWeightlabel').html("Wgt-KGS");
					
					//added for rounding off decimal places to 3 for metric units
					var modifiedWtMetric=(Math.round(origWt*1000)/1000).toFixed(3);
					$('#netWeight').val(modifiedWtMetric);
					
					
					$('#cubeLabel').html("Cube(Meters)");
					
					//added for rounding off decimal places to 3 for metric units
					var modifiedVolMetric=(Math.round(origVol*1000)/1000).toFixed(3);
					if(modifiedVolMetric=='0'){
						$('#cube').val('');
					}else{
					$('#cube').val(modifiedVolMetric);
					}
					}
				 
				origWt=$('#netWeight').val();
				origVol=$('#cube').val();
					if(responseText.data.header.unitOfMeasureSourceCode=="I"){
					document.getElementById("forImperial").style.display="block";
					document.getElementById("forMetric").style.display="none";
					$('#netWeightlabel').html("Wgt-LBS");
					
					//added for rounding off decimal places to 0 for imperial units
					var modifiedWtImperial=(Math.round(origWt)).toFixed(0);
					$('#netWeight').val(modifiedWtImperial);
					
					
					$('#cubeLabel').html("Cube(Ft)");
					
					//added for rounding off decimal places to 0 for imperial units
					var modifiedVolImperial=(Math.ceil(origVol));
					$('#cube').val(modifiedVolImperial);
					if(modifiedVolImperial=='0'){
						$('#cube').val('');
					}else{
					$('#cube').val(modifiedVolImperial);
					}
					
					}
		
			
		}
		if(responseText.data.routing.routingLoadDischargePair.trim() =="CON"){
			document.getElementById("forCon2").style.display="block";
			document.getElementById("forCon1").style.display="block";
			document.getElementById("forCon3").style.display="block";
			document.getElementById("forPov1").style.display="none";
			document.getElementById("forPov2").style.display="none";
			document.getElementById("forPov3").style.display="none";
			document.getElementById("convGridDiv").style.display="block";
			
			document.getElementById("mixCommButton").style.display="none";
			document.getElementById("commodityGridDiv").style.display="none";
			document.getElementById("povGridDiv").style.display="none";
			// this is used to hide and show on Basis of Bill type 
			document.getElementById("blcn").style.display="block";
			document.getElementById("blmx").style.display="none";
			// $('#mixedCommodityView').val("Mixed Commodity View");
			document.getElementById("forConventional").style.display="block";
			
			$('#h3BookingPageTitle').html('<h3 class="content-title">Maintain Bill</h3>');
			
			 
			
			
			 if((!(responseText.data.routing.loadServiceCode=="FI" && responseText.data.routing.dischargeServiceCode=="FO"))
					 ||(!(responseText.data.routing.loadServiceCode=="FO" && responseText.data.routing.dischargeServiceCode=="FI"))){
				//document.getElementById("tr_shipmentConvFreightId").style.display="block";
			 }
			 $("#convGrid").trigger('reloadGrid');
			 origWt=$('#netWeight').val();
				origVol=$('#cube').val();
				if(responseText.data.header.unitOfMeasureSourceCode=="M"){
					document.getElementById("forMetric").style.display="block";
					document.getElementById("forImperial").style.display="none";
					$('#netWeightlabel').html("Wgt-KGS");
					
					//added for rounding off decimal places to 3 for metric units
					var modifiedWtMetric=(Math.round(origWt*1000)/1000).toFixed(3);
					$('#netWeight').val(modifiedWtMetric);
					
					
					$('#cubeLabel').html("Cube(Meters)");
					
					//added for rounding off decimal places to 3 for metric units
					var modifiedVolMetric=(Math.round(origVol*1000)/1000).toFixed(3);
					if(modifiedVolMetric=='0'){
						$('#cube').val('');
					}else{
					$('#cube').val(modifiedVolMetric);
					}
					}
				 
				origWt=$('#netWeight').val();
				origVol=$('#cube').val();
					if(responseText.data.header.unitOfMeasureSourceCode=="I"){
					document.getElementById("forImperial").style.display="block";
					document.getElementById("forMetric").style.display="none";
					$('#netWeightlabel').html("Wgt-LBS");
					
					//added for rounding off decimal places to 0 for imperial units
					var modifiedWtImperial=(Math.round(origWt)).toFixed(0);
					$('#netWeight').val(modifiedWtImperial);
					
					
					$('#cubeLabel').html("Cube(Ft)");
					
					//added for rounding off decimal places to 0 for imperial units
					var modifiedVolImperial=(Math.ceil(origVol));
					$('#cube').val(modifiedVolImperial);
					if(modifiedVolImperial=='0'){
						$('#cube').val('');
					}else{
					$('#cube').val(modifiedVolImperial);
					}
					
					}
		}
		}
		
	}
	
	function checkKind(){
		var a = $('#mixCommKind').val();
		//console.log("checkKind "+a);
		if(a == null || a.length == 0 || a.match("^[a-zA-Z '].*$")) {
			return true;
			
		}
		alert("Letters only for Kind");
		return false;
	}	

	function checkForPositiveNumberNetWeight(){
		var a = $('#mixCommNetWgt').val();
		if(isNaN(a)){alert("Only Positive Number allowed for Net weight");return false;}
		a=Number(a);
		if(a<0){alert("Only Positive Number allowed for Net weight");return false;}
		return true;
	}	
	
	function checkForPositiveNumberCube(){
		var a = $('#mixCommCube').val();
		if(isNaN(a)){alert("Only Positive Number allowed for Cube");return false;}
		a=Number(a);
		if(a<0){alert("Only Positive Number allowed for Cube");return false;}
		return true;
	}
	
	function checkForTotalCube(){
	//D030066
		var isOldHHgds = "NO";
		if(createUser != null && createUser != 'undefined' && createUser.trim() != "" &&
			$("#billType").val()!=null && $("#billType").val()!="" && $("#billType").val()!='undefined' 
			&& $("#billType").val()=="HHGDS" && createUser.trim().charAt(0)=="$"){
			isOldHHgds = "YES";
		}
		if($('#totalCube').val()=="" || Number($('#totalCube').val())==0){
			return true;
		}else{
			if(isOldHHgds == "YES"){
			if(Number($('#mixCommCube').val())>Number($('#totalCube').val())){
				//alert( "Commodity line cubic feet exceeds total cube set on BLHD.");
				$('#msgDivCommodityOverlay').html('<div class="message_error">Commodity line cubic feet exceeds total cube set on Bill Header.</div>');
				return false;
			}
			}
		}
		return true;
	}
	function checkForPositiveNumberPieces(){
		var a = $('#mixCommPieces').val();
		if(isNaN(a)){alert("Only Positive Whole Number allowed for Pieces");return false;}
		a=Number(a);
		if(a<0){alert("Only Positive Whole Number allowed for Pieces");return false;}
		var snum = new String(a);
	    var sec = snum.split('.');
	    if(Number(sec.length)>1){
	    	alert("Only Positive Whole Number allowed for Pieces");return false;
	    }
		return true;
	}
	
	function dimensionFieldSetUp(responseText){
		$("#shipmentItemImperialLengthFeet").val(responseText.data.shipmentItemForm.imperialLengthFeet);
		$("#shipmentItemImperialLengthInches").val(responseText.data.shipmentItemForm.imperialLengthInches);
		$("#shipmentItemImperialBreathFeet").val(responseText.data.shipmentItemForm.imperialBreathFeet);
		$("#imperialBreathInches").val(responseText.data.shipmentItemForm.imperialBreathInches);
		$("#shipmentItemImperialHeightFeet").val(responseText.data.shipmentItemForm.imperialHeightFeet);
		$("#shipmentItemImperialHeightInches").val(responseText.data.shipmentItemForm.imperialHeightInches);
		$("#shipmentItemMetricLength").val(responseText.data.shipmentItemForm.metricLength);
		$("#shipmentItemMetricBreadth").val(responseText.data.shipmentItemForm.metricBreadth);
		$("#shipmentItemMetricHeight").val(responseText.data.shipmentItemForm.metricHeight);
				
	}
	function validateTrfCmdDesc(){
		if($.trim($('#commodityDesc').val())==''){
			$('#commodityDesc').val(($('#commodityDesc').val()));
		}
		else if($("#commodityDesc").val().length > 30) {
			 return "* Tariff Commodity Desc can't be more than 30. At present, the length is "+ $("#commodityDesc").val().length +".";
		}
	}
	function clearErrMsg(){
		$("#maintain_commodity_shipment").validationEngine('hideAll');
	}
	function validateItem(){
		 if($("#itemNumber").val().trim().length > 8) {
			 return "* Tariff Item can't be more than 8 in length. At present, the length is "+ $("#itemNumber").val().trim().length + ".";
		}
	}
	
	function validateTariffCode(isValid){
		
		 if(($("#tariffNumber").val()=="")&& ($('#itemNumber').val!="") && $('#mixedCommodityView').val()=="Mixed Commodity View") {
			 openCommodityDivBlock();
			 $('input[name="header.tariffNumber"]').validationEngine('showPrompt', '*Tariff is mandatory', 'error', 'topRight', true);
			 isValid = false;
				return isValid;
		} else  if($('#tariffNumber').val() != $('#tariffCheck').val()  ) {
			 openCommodityDivBlock();
			 $('input[name="header.tariffNumber"]').validationEngine('showPrompt', 'Tariff did not load correctly, please re-enter', 'error', 'topRight', true);
			 isValid = false;
			 return isValid;
		}else{
			
			return isValid;
		}
	}
	// Setting mandatory fields for Tariff Commodity Description
	function setMandatoryTariffCmdDesc(){
			// Tariff Commodity Desc
			//$("#tariffCmdDescLbl").html("Tariff Commodity Desc<span class=\"mandatory\">*</span>");
			$("#commodityDesc").addClass("validate[required]");
			
			setMandatoryTariffItem();
			
			// Commodity Code
			//$("#commodityCodeLbl").html("Com. Code<span class=\"mandatory\">*</span>");
		//	$("#commodityCode").addClass("validate[required]");
	}

	function resetMandatoryTariffCmdDesc(){
		// Tariff Commodity Desc
		$("#tariffCmdDescLbl").html("Tariff Commodity Desc");
		$("#tariffCommodityDescription").removeClass("validate[required]");
		
		resetMandatoryTariffItem();
		
		// Commodity Code
		//$("#commodityCodeLbl").html("Com. Code");
		//$("#commodityCode").removeClass("validate[required]");
	}
	function resetMandatoryTariffCmdDescMixedComm(){
		// Tariff Commodity Desc
		$("#mixedCommodityDescLabel").html("Tariff Commodity Desc");
		$("#mixedCommodityDescLabel").removeClass("validate[required]");
		
	//	resetMandatoryTariffItem();
	}
	function setMandatoryTariffItem(){
		// Tariff
		//$("#tariffLbl").html("Tariff<span class=\"mandatory\">*</span>");
		$("#tariffNumber").addClass("validate[required]");
		
		// Item
	//	$("#itemLbl").html("Item<span class=\"mandatory\">*</span>");
		$("#itemNumber").addClass("validate[required]");
	}
	function setMandatoryTariffItemMixedComm(){
		// Tariff
		//$("#tariffLbl").html("Tariff<span class=\"mandatory\">*</span>");
		$("#tariffNumber").addClass("validate[required]");
		
		// Item
	//	$("#itemLbl").html("Item<span class=\"mandatory\">*</span>");
		$("#mixedCommItemLabel").addClass("validate[required]");
	}
	
	function setMandatoryTariffItemForMixedComm(){
		// Tariff
		//$("#tariffLbl").html("Tariff<span class=\"mandatory\">*</span>");
		$("#tariffNumber").addClass("validate[required]");
		
		// Item
	//	$("#itemLbl").html("Item<span class=\"mandatory\">*</span>");
		$("#itemNumber").addClass("validate[required]");
	}

	function resetMandatoryTariffItem(){
		// Tariff
	//	$("#tariffLbl").html("Tariff");
		$("#tariffNumber").removeClass("validate[required]");
		
		// Item
		//$("#itemLbl").html("Item");
		$("#itemNumber").removeClass("validate[required]");
	}
	function validateTotalCube(){
		var isOldHHgds = "NO";
		if(createUser != null &&  createUser != 'undefined' && createUser.trim() != "" &&
			$("#billType").val()!=null && $("#billType").val()!="" && $("#billType").val()!='undefined' 
			&& $("#billType").val()=="HHGDS" && createUser.trim().charAt(0)=="$"){
			isOldHHgds = "YES";
		}
		if($('#totalCube').val()=="" || Number($('#totalCube').val())==0){
			
		}else{
			if(isOldHHgds == "YES" && Number($('#cube').val())>Number($('#totalCube').val())){
				 return "* Commodity line cubic feet exceeds total cube set on Bill Header ";
			}
		}
	}
	
	
	function validateNetWeight(){
		
	}
	
	function reloadCommoditySectionButtons(responseText){
		var unitOfCommodity = Number($("#unitOfCommodity option:selected").text());
		var commodityLine = Number(responseText.data.shipmentItemForm.commodityLine);
		if((unitOfCommodity == commodityLine) && (commodityLine ==1)){
			$('#previousCommodity').attr("disabled","disabled");
			$('#nextCommodity').attr("disabled","disabled");
		}else if((unitOfCommodity == commodityLine) && (commodityLine ==0)){
			$('#previousCommodity').attr("disabled","disabled");
			$('#nextCommodity').attr("disabled","disabled");
			$('#clearCommodity').attr("disabled","disabled");
			$('#deleteCommodity').attr("disabled","disabled");
			$('#updateCommodity').attr("disabled","disabled");
			
		}else if(unitOfCommodity == commodityLine){
			$('#nextCommodity').attr("disabled","disabled");
			$('#previousCommodity').attr("disabled",false);
		}else if(unitOfCommodity==1){
			$('#previousCommodity').attr("disabled","disabled");
			$('#nextCommodity').attr("disabled",false);
		}else{
			$('#nextCommodity').attr("disabled",false);
			$('#previousCommodity').attr("disabled",false);
		}
	
		
	}
	
	function reloadMixedCommodityData(){
		var queryString = $('#shipmentForm').formSerialize();
		 $.ajax({
			 type:"POST",
			 url:_context+"/shipmentCommodity/loadEquipmentDetail",
			 data :queryString,
			success: function(responseText){
				
				if(responseText.success== true){
					document.getElementById("blcn").style.display="none";
					document.getElementById("blmx").style.display="block";
				loadMixedCommodityEquipmentData(responseText);
			        $('#mixedCommodityView').val("Commodity View");
			        $("#mixcommodityGrid").trigger('reloadGrid'); 
			        $('#tr_shipmentItemId').hide();
			}	
			}
		 });
	}
	
	function removeMandatoryCheck(){
		var commodityLine = $('#commodityLine').text();
		//D024736: Fields are not mandatory when tariffNumber and itemNumber are not added
		if(Number(commodityLine)==0 || ($('#tariffNumber').val() =="" && $('#itemNumber').val() =="")){
			$('#commodityDesc').removeClass('validate[required]');
			$('#netWeight').removeClass('validate[required]');
			
		}else{
			$('#commodityDesc').addClass('validate[required]');
			$('#netWeight').addClass('validate[required]');	
		}
	}
	
	function clearTariffItemOnChangeOfTariff(){
		// D025030, clear items
		window.itemList = null;
		$.ajax({
			async:false,
			 type:"GET",
			 url:_context+"/shipmentCommodity/clearItem",
			success: function(responseText){
			}
		
			});
	}
	
	
	function validateShipmentCommodityFieldsOnSave(){
		var isValid = true;
		if($('#mixedCommodityView').val()=="Mixed Commodity View" || $('#mixedCommodityView').val() ==""){
			
			if($('input[name="shipmentItemForm.commodityDesc"]').val()=='' || $('input[name="shipmentItemForm.commodityDesc"]').val()==null){
					openCommodityDivBlock();
					isValid = false;
					$('input[name="shipmentItemForm.commodityDesc"]').validationEngine('showPrompt', 'This field is required.', 'error', 'topRight', true);
					return isValid;
				}
			
			
			isValid = validateTariffCode(isValid);
			if(!isValid){
			
			return isValid;
			}
			if($('input[name="shipmentItemForm.note"]').val()!='' && $('input[name="shipmentItemForm.note"]').val()!=null){
				var val = $('#note').val();
				var charRegex = /^[0-9a-zA-Z\ \'\&]+$/; 
				if(!charRegex.test($.trim(val))){
			
				openCommodityDivBlock();
				isValid = false;
				$('input[name="shipmentItemForm.note"]').validationEngine('showPrompt', 'validNoteNumber.', 'error', 'topRight', true);
				return isValid;
				}
			}
			if($('input[name="shipmentItemForm.netWeight"]').val()=='' || $('input[name="shipmentItemForm.netWeight"]').val()==null){
				openCommodityDivBlock();
				isValid = false;
				$('input[name="shipmentItemForm.netWeight"]').validationEngine('showPrompt', 'This field is required.', 'error', 'topRight', true);
				return isValid;
			}
			if($('input[name="shipmentItemForm.netWeight"]').val()!='' || $('input[name="shipmentItemForm.netWeight"]').val()!=null){
				if(isNaN($('input[name="shipmentItemForm.netWeight"]').val())){
					openCommodityDivBlock();
					isValid = false;
					$('input[name="shipmentItemForm.netWeight"]').validationEngine('showPrompt', 'Only Decimal Number allowed.', 'error', 'topRight', true);
					return isValid;
					}else if($('input[name="shipmentItemForm.netWeight"]').val()*1 <1){
						openCommodityDivBlock();
						isValid = false;
						$('input[name="shipmentItemForm.netWeight"]').validationEngine('showPrompt', 'Minimum allowed value is 1', 'error', 'topRight', true);
						return isValid;
						}else if($('input[name="shipmentItemForm.netWeight"]').val()*1 >9999999.999){
							openCommodityDivBlock();
							isValid = false;
							$('input[name="shipmentItemForm.netWeight"]').validationEngine('showPrompt', 'Maximum allowed value is 9999999.999', 'error', 'topRight', true);
							return isValid;
							}
					}
			
			if($('input[name="shipmentItemForm.cube"]').val()!='' || $('input[name="shipmentItemForm.cube"]').val()!=null || $('input[name="shipmentItemForm.cube"]').val()!='0'){
				if(isNaN($('input[name="shipmentItemForm.cube"]').val())){
					openCommodityDivBlock();
					isValid = false;
					$('input[name="shipmentItemForm.cube"]').validationEngine('showPrompt', 'Only Decimal Number allowed.', 'error', 'topRight', true);
					return isValid;
					}else if($('input[name="shipmentItemForm.cube"]').val()*1 >9999999.999){
						openCommodityDivBlock();
					isValid = false;
					$('input[name="shipmentItemForm.cube"]').validationEngine('showPrompt', 'Maximum allowed value is 9999999.999', 'error', 'topRight', true);
					return isValid;
					}
				}
			
			if(($('#piece').val()!="" || $('#piece').val()!=null)){
				if(isNaN($('#piece').val())){
				openCommodityDivBlock();
				isValid = false;
				$('input[name="shipmentItemForm.piece"]').validationEngine('showPrompt', 'Only Positve Number allowed.', 'error', 'topRight', true);
				return isValid;
			}
				else if($('#piece').val().split('.').length>1){
				isValid = false;
				openCommodityDivBlock();
				$('input[name="shipmentItemForm.piece"]').validationEngine('showPrompt', 'Only Positve Number allowed.', 'error', 'topRight', true);
				return isValid;
			}else if($('#piece').val()<0){
				isValid = false;
				openCommodityDivBlock();
				$('input[name="shipmentItemForm.piece"]').validationEngine('showPrompt', 'Only Positve Number allowed.', 'error', 'topRight', true);
				return isValid;
			}
			
		}
			
		if($('#loadDschServiceGroupCode').val()=="CON" || $('#loadDschServiceGroupCode').val()=="LCL"){
				
			if($('#unitOfMeasureSourceCode').val()=="I"){
				
				/*if($('input[name="shipmentItemForm.imperialLengthFeet"]').val()=='' || $('input[name="shipmentItemForm.imperialLengthFeet"]').val()==null){
					openCommodityDivBlock();
					isValid = false;
					$('input[name="shipmentItemForm.imperialLengthFeet"]').validationEngine('showPrompt', 'This field is required.', 'error', 'topRight', true);
					return isValid;
				}else*/ if(isNaN($('input[name="shipmentItemForm.imperialLengthFeet"]').val())){
					openCommodityDivBlock();
					isValid = false;
					$('input[name="shipmentItemForm.imperialLengthFeet"]').validationEngine('showPrompt', 'Only Number allowed.', 'error', 'topRight', true);
					return isValid;
					}else if($('input[name="shipmentItemForm.imperialLengthFeet"]').val().split('.').length>1){
						isValid = false;
						openCommodityDivBlock();
						$('input[name="shipmentItemForm.imperialLengthFeet"]').validationEngine('showPrompt', 'Only Number allowed.', 'error', 'topRight', true);
						return isValid;
					}else if($('input[name="shipmentItemForm.imperialLengthFeet"]').val()*1>100.00){
						openCommodityDivBlock();
						isValid = false;
						$('input[name="shipmentItemForm.imperialLengthFeet"]').validationEngine('showPrompt', 'Maximum allowed value is 100', 'error', 'topRight', true);
						return isValid;
						
					}
				
				//commented against D021774
				/*if($('input[name="shipmentItemForm.imperialLengthInches"]').val()=='' || $('input[name="shipmentItemForm.imperialLengthInches"]').val()==null){
					openCommodityDivBlock();
					isValid = false;
					$('input[name="shipmentItemForm.imperialLengthInches"]').validationEngine('showPrompt', 'This field is required.', 'error', 'topRight', true);
					return isValid;
				}else */if(isNaN($('input[name="shipmentItemForm.imperialLengthInches"]').val())){
					openCommodityDivBlock();
					isValid = false;
					$('input[name="shipmentItemForm.imperialLengthInches"]').validationEngine('showPrompt', 'Only Number allowed.', 'error', 'topRight', true);
					return isValid;
					}else if($('input[name="shipmentItemForm.imperialLengthInches"]').val().split('.').length>1){
						isValid = false;
						openCommodityDivBlock();
						$('input[name="shipmentItemForm.imperialLengthInches"]').validationEngine('showPrompt', 'Only Number allowed.', 'error', 'topRight', true);
						return isValid;
					}else if($('input[name="shipmentItemForm.imperialLengthInches"]').val()*1>11.00){
						openCommodityDivBlock();
						isValid = false;
						$('input[name="shipmentItemForm.imperialLengthInches"]').validationEngine('showPrompt', 'Maximum allowed value is 11', 'error', 'topRight', true);
						return isValid;
						
					}
				
				
			/*	if($('input[name="shipmentItemForm.imperialBreathFeet"]').val()=='' || $('input[name="shipmentItemForm.imperialBreathFeet"]').val()==null){
					openCommodityDivBlock();
					isValid = false;
					$('input[name="shipmentItemForm.imperialBreathFeet"]').validationEngine('showPrompt', 'This field is required.', 'error', 'topRight', true);
					return isValid;
				}else*/ if(isNaN($('input[name="shipmentItemForm.imperialBreathFeet"]').val())){
					openCommodityDivBlock();
					isValid = false;
					$('input[name="shipmentItemForm.imperialBreathFeet"]').validationEngine('showPrompt', 'Only Number allowed.', 'error', 'topRight', true);
					return isValid;
					}else if($('input[name="shipmentItemForm.imperialBreathFeet"]').val().split('.').length>1){
						isValid = false;
						openCommodityDivBlock();
						$('input[name="shipmentItemForm.imperialBreathFeet"]').validationEngine('showPrompt', 'Only Number allowed.', 'error', 'topRight', true);
						return isValid;
					}else if($('input[name="shipmentItemForm.imperialBreathFeet"]').val()*1>50.00){
						openCommodityDivBlock();
						isValid = false;
						$('input[name="shipmentItemForm.imperialBreathFeet"]').validationEngine('showPrompt', 'Maximum allowed value is 50', 'error', 'topRight', true);
						return isValid;
						
					}
				
				
				//commented against D021774
				/*if($('input[name="shipmentItemForm.imperialBreathInches"]').val()=='' || $('input[name="shipmentItemForm.imperialBreathInches"]').val()==null){
					openCommodityDivBlock();
					isValid = false;
					$('input[name="shipmentItemForm.imperialBreathInches"]').validationEngine('showPrompt', 'This field is required.', 'error', 'topRight', true);
					return isValid;
				}else*/ if(isNaN($('input[name="shipmentItemForm.imperialBreathInches"]').val())){
					openCommodityDivBlock();
					isValid = false;
					$('input[name="shipmentItemForm.imperialBreathInches"]').validationEngine('showPrompt', 'Only Number allowed.', 'error', 'topRight', true);
					return isValid;
					}else if($('input[name="shipmentItemForm.imperialBreathInches"]').val().split('.').length>1){
						isValid = false;
						openCommodityDivBlock();
						$('input[name="shipmentItemForm.imperialBreathInches"]').validationEngine('showPrompt', 'Only Number allowed.', 'error', 'topRight', true);
						return isValid;
					}else if($('input[name="shipmentItemForm.imperialBreathInches"]').val()*1>11.00){
						openCommodityDivBlock();
						isValid = false;
						$('input[name="shipmentItemForm.imperialBreathInches"]').validationEngine('showPrompt', 'Maximum allowed value is 11', 'error', 'topRight', true);
						return isValid;
						
					}
				
				
				/*if($('input[name="shipmentItemForm.imperialHeightFeet"]').val()=='' || $('input[name="shipmentItemForm.imperialHeightFeet"]').val()==null){
					openCommodityDivBlock();
					isValid = false;
					$('input[name="shipmentItemForm.imperialHeightFeet"]').validationEngine('showPrompt', 'This field is required.', 'error', 'topRight', true);
					return isValid;
				}else*/ if(isNaN($('input[name="shipmentItemForm.imperialHeightFeet"]').val())){
					openCommodityDivBlock();
					isValid = false;
					$('input[name="shipmentItemForm.imperialHeightFeet"]').validationEngine('showPrompt', 'Only Number allowed.', 'error', 'topRight', true);
					return isValid;
					}else if($('input[name="shipmentItemForm.imperialHeightFeet"]').val().split('.').length>1){
						isValid = false;
						openCommodityDivBlock();
						$('input[name="shipmentItemForm.imperialHeightFeet"]').validationEngine('showPrompt', 'Only Number allowed.', 'error', 'topRight', true);
						return isValid;
					}else if($('input[name="shipmentItemForm.imperialHeightFeet"]').val()*1>30.00){
						openCommodityDivBlock();
						isValid = false;
						$('input[name="shipmentItemForm.imperialHeightFeet"]').validationEngine('showPrompt', 'Maximum allowed value is 30', 'error', 'topRight', true);
						return isValid;
						
					}
				
				//commented against D021774
				/*if($('input[name="shipmentItemForm.imperialHeightInches"]').val()=='' || $('input[name="shipmentItemForm.imperialHeightInches"]').val()==null){
					openCommodityDivBlock();
					isValid = false;
					$('input[name="shipmentItemForm.imperialHeightInches"]').validationEngine('showPrompt', 'This field is required.', 'error', 'topRight', true);
					return isValid;
				}else */if(isNaN($('input[name="shipmentItemForm.imperialHeightInches"]').val())){
					openCommodityDivBlock();
					isValid = false;
					$('input[name="shipmentItemForm.imperialHeightInches"]').validationEngine('showPrompt', 'Only Number allowed.', 'error', 'topRight', true);
					return isValid;
					}else if($('input[name="shipmentItemForm.imperialHeightInches"]').val().split('.').length>1){
						isValid = false;
						openCommodityDivBlock();
						$('input[name="shipmentItemForm.imperialHeightInches"]').validationEngine('showPrompt', 'Only Number allowed.', 'error', 'topRight', true);
						return isValid;
					}else if($('input[name="shipmentItemForm.imperialHeightInches"]').val()*1>11.00){
						openCommodityDivBlock();
						isValid = false;
						$('input[name="shipmentItemForm.imperialHeightInches"]').validationEngine('showPrompt', 'Maximum allowed value is 11', 'error', 'topRight', true);
						return isValid;
						
					}
				
			}else if($('#unitOfMeasureSourceCode').val()=="M"){
				
			 if(isNaN($('input[name="shipmentItemForm.metricLength"]').val())){
					openCommodityDivBlock();
					isValid = false;
					$('input[name="shipmentItemForm.metricLength"]').validationEngine('showPrompt', 'Only Number allowed.', 'error', 'topRight', true);
					return isValid;
					}else if($('input[name="shipmentItemForm.metricLength"]').val()<0){
						isValid = false;
						openCommodityDivBlock();
						$('input[name="shipmentItemForm.metricLength"]').validationEngine('showPrompt', 'Only Positve Number allowed.', 'error', 'topRight', true);
						return isValid;
					}
					else if($('input[name="shipmentItemForm.metricLength"]').val()*1>30.480){
						openCommodityDivBlock();
						isValid = false;
						$('input[name="shipmentItemForm.metricLength"]').validationEngine('showPrompt', 'Maximum allowed value is 30.480', 'error', 'topRight', true);
						return isValid;
						
					}
				
			 if(isNaN($('input[name="shipmentItemForm.metricBreadth"]').val())){
					openCommodityDivBlock();
					isValid = false;
					$('input[name="shipmentItemForm.metricBreadth"]').validationEngine('showPrompt', 'Only Number allowed.', 'error', 'topRight', true);
					return isValid;
					}else if($('input[name="shipmentItemForm.metricBreadth"]').val()<0){
						isValid = false;
						openCommodityDivBlock();
						$('input[name="shipmentItemForm.metricBreadth"]').validationEngine('showPrompt', 'Only Positve Number allowed.', 'error', 'topRight', true);
						return isValid;
					}
					else if($('input[name="shipmentItemForm.metricBreadth"]').val()*1>15.240){
						openCommodityDivBlock();
						isValid = false;
						$('input[name="sshipmentItemForm.metricBreadth"]').validationEngine('showPrompt', 'Maximum allowed value is 15.240', 'error', 'topRight', true);
						return isValid;
						
					}
			 
			 if(isNaN($('input[name="shipmentItemForm.metricHeight"]').val())){
					openCommodityDivBlock();
					isValid = false;
					$('input[name="shipmentItemForm.metricHeight"]').validationEngine('showPrompt', 'Only Number allowed.', 'error', 'topRight', true);
					return isValid;
					}else if($('input[name="shipmentItemForm.metricHeight"]').val()<0){
						isValid = false;
						openCommodityDivBlock();
						$('input[name="shipmentItemForm.metricHeight"]').validationEngine('showPrompt', 'Only Positve Number allowed.', 'error', 'topRight', true);
						return isValid;
					}
					else if($('input[name="shipmentItemForm.metricHeight"]').val()*1>9.144){
						openCommodityDivBlock();
						isValid = false;
						$('input[name="shipmentItemForm.metricHeight"]').validationEngine('showPrompt', 'Maximum allowed value is 9.144', 'error', 'topRight', true);
						return isValid;
						
					}
				
				
			}
				
				
				
			}
		return isValid;
		
	}
		return isValid;
	}
	
	
	function openCommodityDivBlock(){
		document.getElementById('maintain_commodity_shipment').style.display="block";
		var position = $('#maintain_commodity_shipment').position();
		
		window.scrollTo(position.left, position.top);
	}
	
	
	function expandShipmentCommoditySection(){
		var position = $($('#shipmentCommodityHeader').parent().parent()).position();
		 window.scrollTo(position.left, position.top);
		 $('#maintain_commodity_shipment').attr('style','display:block');
		 $('#maintain_commodity_shipment').addClass('ui-accordion-content-active');
		 
		 $('#maintain_commodity_shipment').parent()
		 	.find('h3')
		      .removeClass('ui-state-default').removeClass('ui-corner-all').addClass('ui-state-active').addClass('ui-corner-top')
		 	.find('span')
		 		.removeClass('ui-icon-triangle-1-e').addClass('ui-icon-triangle-1-s');
		 
		/* $('.shipment-section').click(function() {
				$(this).accordion('option', 'active', true);
			});*/
		 
		
	}
	
	function updateCommodityBeforeSave(){
		console.log('updateCommodtyBeforeSave')
		//console.log('update commodity before save');
		 var queryCommodityString = $('#shipmentForm').formSerialize();
			// if(buttonAction == true){
		 
		
		
				 
	     if($('#mixedCommodityView').val()=="Commodity View" && somethingChangedMixComm == true)
				 {
				 var queryString = $('#shipmentForm').formSerialize();
					
				 $.ajax({
					 type:"POST",
					 url:_context+"/shipmentCommodity/updateEquipment",
					 data :queryString,
					 success: function(responseText){
						 if(responseText.success== true){

						   saveShipment();
						   somethingChanged = false;
						   somethingChangedMixComm = false;
						   expandShipmentCommoditySection();
						}
						 else{
							 document.getElementById("msgDivCommodity").style.display="block";
							 showResponseMessages("msgDivCommodity",responseText);
							 }
						 $.unblockUI();
						 }
					 
			 });

			
				 }else if( somethingChanged== true){
			 
			 //console.log("somethingChanged" + somethingChanged);
						checkForNoteValidation();
						 
				 }else{
					 saveShipment(); 
					 somethingChanged = false;
					   somethingChangedMixComm = false;
					   
				 }
		 
		
	}
	
	
	
	function onNoteValidateSuccessShmtSave(){
		//console.log('onNoteValidateSuccessShmtSave');
		 var queryString = $('#shipmentForm').formSerialize();

		 if($('#unitOfCommodity').val()=="0" || $('#unitOfCommodity').val()=="" || $('#unitOfCommodity').val()==null){
			 
			
			 $.ajax({
				 type:"POST",
				 url:_context+"/shipmentCommodity/addCommodity",
				 data :queryString,
				success: function(responseText){
					if(responseText.success==true){
						
						 saveShipment();
						 somethingChanged = false;
						   somethingChangedMixComm = false;
						   expandShipmentCommoditySection();
				}
					else{
						showResponseMessages("msgDivCommodity", responseText);
						}
					//$.unblockUI();
					}
					
			 }); 
			 
		 }else{
		 $.ajax({
			// async:false,
			 type:"POST",
			 url:_context+"/shipmentCommodity/updateCommodity",
			 data :queryString,
			success: function(responseText){
				if(responseText.success==true){
				//reloadShipmentCommodityData(responseText);upadated against the defect 21244
				 saveShipment();
				 somethingChanged = false;
				   somethingChangedMixComm = false;
				   expandShipmentCommoditySection();
			}
				else{
					openCommodityDivBlock();
					showResponseMessages("msgDivCommodity", responseText);
				}
				//$.unblockUI();
			}	        
		 });
	 }

	}
	function updateCommodityBeforeSaveForBillButton(){
		
		//console.log('updateCommodityBeforeSaveForBillButton');
		 var queryCommodityString = $('#shipmentForm').formSerialize();
			// if(buttonAction == true){
		 
		 if($('#mixedCommodityView').val()=="Commodity View" && somethingChangedMixComm == true)
		 {
		 var queryString = $('#shipmentForm').formSerialize();
			
		 $.ajax({
			 type:"POST",
			 url:_context+"/shipmentCommodity/updateEquipment",
			 data :queryString,
			 success: function(responseText){
				 if(responseText.success== true){

					 saveShipment();
				   somethingChanged = false;
				        
				}
				 else{
					 document.getElementById("msgDivCommodity").style.display="block";
					 showResponseMessages("msgDivCommodity",responseText);
					 }
				 }
			 
	 });
		 
		 
		 
		 
		 
		 }else if(somethingChanged== true){
			 if($('#unitOfCommodity').val()=="0" || $('#unitOfCommodity').val()==""){
				 
				 var queryString = $('#shipmentForm').formSerialize();
				 $.ajax({
					 type:"POST",
					 url:_context+"/shipmentCommodity/addCommodity",
					 data :queryString,
					success: function(responseText){
						if(responseText.success==true){
							callBillActionAfterSave = true;
							//D032676: 	GATES Performance - Maintain Bill - Bill Button - Merge save and rateBill transactions into one server call 
							//saveShipmentForBillButton();
							rateBill();
							somethingChanged = false;
					}
						else{
							$.unblockUI();
							showResponseMessages("msgDivCommodity", responseText);
							
							}
						}
						
				 }); 
				 
			 }else{
			 $.ajax({
				 //async:false,//removed so that block UI image loads 1st(before this ajax call)
				 type:"POST",
				 url:_context+"/shipmentCommodity/updateCommodity",
				 data :queryCommodityString,
				success: function(responseText){
					if(responseText.success==true){
					//reloadShipmentCommodityData(responseText);upadated against the defect 21244
						callBillActionAfterSave = true;
					 //D032676: 	GATES Performance - Maintain Bill - Bill Button - Merge save and rateBill transactions into one server call 
					 //saveShipmentForBillButton();
						rateBill();
				}
					else{
						openCommodityDivBlock();
						$.unblockUI();
						showResponseMessages("msgDivCommodity", responseText);
					}
				}	        
			 });
		 }
		 }else{
			 callBillActionAfterSave = true;
			 //D032676: 	GATES Performance - Maintain Bill - Bill Button - Merge save and rateBill transactions into one server call 
			 //saveShipmentForBillButton();
			 rateBill();
			   somethingChanged = false;
		 }
		
		
	}
	
	
	function  updateCommodity(){
		//console.log('update commodity');
		 var queryString = $('#shipmentForm').formSerialize();
			// if(buttonAction == true){
			 $.ajax({
				 type:"POST",
				 url:_context+"/shipmentCommodity/updateCommodity",
				 data :queryString,
				success: function(responseText){
					if(responseText.success==true){
					reloadShipmentCommodityData(responseText);
					fetchCommodityCodeList($("#tariffNumber").val(),$("#itemNumber").val(),null,false,null);
					
					//updateUnitValues();
					//recalculateCube();
					//alert("Successfully Updated");
					showResponseMessages("msgDivCommodity", responseText);
					}
					else{
						showResponseMessages("msgDivCommodity", responseText);
					}
					$('#msgDivCommodity').show();
					$.unblockUI();
				}	        
			 });
			
	}
	function updateUnitValues(){
		 if($('#unitOfMeasureSourceCode').val()=="I"){
			 $('#cube').val(tempImperialCubeValue);
			 $('#netWeight').val(tempImperialWeightValue);
		 }
	}
	
	
	function recalculateCube(){
		cubeChanged=true;
		var oldCube = $('#cube').val();
		if($('#unitOfMeasureSourceCode').val()=="I"){
			
			var impLenFeet = resolveSpaces("shipmentItemImperialLengthFeet");
			var impLenInc =  resolveSpaces("shipmentItemImperialLengthInches");
				//against D021774
			var impLen  =  parseInt(impLenFeet*12) + parseInt(impLenInc);
			
			var impBreFeet = resolveSpaces("shipmentItemImperialBreathFeet");
			var impBreInc =  resolveSpaces("imperialBreathInches");

			var impBre  =  parseInt(impBreFeet*12) + parseInt(impBreInc);
			
			var impHeiFeet = resolveSpaces("shipmentItemImperialHeightFeet");
			var impHeiInc =  resolveSpaces("shipmentItemImperialHeightInches");
	
			var impHei  =  parseInt(impHeiFeet*12) + parseInt(impHeiInc);
			
			var cubeFeets  = impLen * impBre *  impHei;
			if(Math.round(cubeFeets/(12 * 12 * 12)) =='0'){
				$('#cube').val(oldCube); // removed inside quotes  for D026160 defect  //D025036
			}else{
				if(isNaN(Math.round(cubeFeets/(12 * 12 * 12)))){
					$('#cube').val(oldCube); // D025036
				}else{										
					var pieces = $('#piece').val();					
					var piecesInt = resolveSpaces("piece");//parseInt(pieces);
					if(piecesInt == 0){
						piecesInt = 1;
						 $('#piece').val("1");	
					}
					$('#cube').val(piecesInt*Math.round(cubeFeets/(12 * 12 * 12)));				
				}
			}
			
		}else if($('#unitOfMeasureSourceCode').val()=="M"){
			
			var metLen = $.trim($('#shipmentItemMetricLength').val());
			var metBre = $.trim($('#shipmentItemMetricBreadth').val());
			var metHei = $.trim($('#shipmentItemMetricHeight').val());
			var pieces = $.trim($('#piece').val());
			if(metLen == "")
				metLen = 0;
			if(metBre == "")
				metBre = 0;
			if(metHei == "")
				metHei = 0;
			if(pieces == "")
				pieces = 0;
			if(metLen != 0 && metBre != 0 && metHei != 0 & pieces != 0 ){
				if(parseFloat(pieces)* parseFloat(metLen)* parseFloat(metBre)* parseFloat(metHei)>0){
					$('#cube').val((Math.round((parseFloat(pieces)* parseFloat(metLen)* parseFloat(metBre)* parseFloat(metHei))*1000)/1000).toFixed(3));
				}
			}else
				$('#cube').val(oldCube);
		}
		
	}
	
	
	
	function getLoadDschServicepairValue(){
		
		var loadServiceCode = $('#loadServiceCode').val();
		var dschServiceCode = $('#dischargeServiceCode').val();
		
		$.ajax({
		    async:false,
			url: _context +"/shipment/routing/getLoadDschPair?loadServiceCode="+loadServiceCode+"&dischargeServiceCode="+dschServiceCode,
			success: function(responseText){
				if(responseText.data.loadDschServiceGroupCode!=null){
				$('#routingLoadDischargePair').val(responseText.data.loadDschServiceGroupCode);
				
				};
		
	}
		});
		}
	function validateWeightUOM(){
		if($('#unitOfMeasureSourceCode').val()=="I"){
			if($('#netWeight').val()>9999999){
			 return "* Maximum Allowed value is 9999999";
			}
			/*else if($('#netWeight').val()<1){
				 return "* Minimum value is 1";
				}*/
		}else{
			if($('#netWeight').val()>9999999.999){
			return "* Maximum Allowed value is 9999999.999";
			}
			else if($('#netWeight').val()<0.001){
				 return "* Minimum value is 0.001";
			}
		}
		
		
	}
	function validateCubeUOM(){
			if($('#unitOfMeasureSourceCode').val()=="I"){
				if($('#cube').val()>99999999){
				 return "* Maximum Allowed value is 99999999";
				}
			}else if($('#cube').val()>99999999.999){
				return "* Maximum Allowed value is 99999999.999";
			}
		
	}
	
	var lengthInExcess=0;
	var breadthInExcess=0;
	var heightInExcess=0;
	function setLengthBreathHeight(){
		
		if($('#unitOfMeasureSourceCode').val()=="M"){
			/*var length = (resolveSpaces("shipmentItemImperialLengthFeet")*0.3048 + resolveSpaces("shipmentItemImperialLengthInches")*0.0254).toFixed(3);
			var breadth = (resolveSpaces("shipmentItemImperialBreathFeet")*0.3048 + resolveSpaces("imperialBreathInches")*0.0254).toFixed(3);
			var height = (resolveSpaces("shipmentItemImperialHeightFeet")*0.3048 + resolveSpaces("shipmentItemImperialHeightInches")*0.0254).toFixed(3);*/
			//alert("Length:"+$('#shipmentItemImperialLengthFeet').val()+"*0.3048+"+$('#shipmentItemImperialLengthInches').val()+"*0.0254 +"+lengthInExcess);
			console.log("For UOM=M Length:"+$('#shipmentItemImperialLengthFeet').val()+"*0.3048+"+$('#shipmentItemImperialLengthInches').val()+"*0.0254 +"+lengthInExcess);
			var length=((($('#shipmentItemImperialLengthFeet').val()*0.3048+  $('#shipmentItemImperialLengthInches').val()*0.0254 +lengthInExcess)*1000)/1000).toFixed(3);
			$('#shipmentItemMetricLength').val(length);
			console.log("breadth:"+$('#shipmentItemImperialBreathFeet').val()+"*0.3048+"+$('#imperialBreathInches').val()+"*0.0254 +"+breadthInExcess);
			var breadth=((($('#shipmentItemImperialBreathFeet').val()*0.3048+  $('#imperialBreathInches').val()*0.0254+ breadthInExcess)*1000)/1000).toFixed(3);
			$('#shipmentItemMetricBreadth').val(breadth);
			console.log("height:"+$('#shipmentItemImperialHeightFeet').val()+"*0.3048+"+$('#shipmentItemImperialHeightInches').val()+"*0.0254 +"+heightInExcess);
			var height=((($('#shipmentItemImperialHeightFeet').val()*0.3048+  $('#shipmentItemImperialHeightInches').val()*0.0254 +heightInExcess)*1000)/1000).toFixed(3);
			$('#shipmentItemMetricHeight').val(height);
			
		}
		if($('#unitOfMeasureSourceCode').val()=="I"){
			
			
			
			var length=$('#shipmentItemMetricLength').val();
			if(length>0){
			inches_totalLength = (39.3701 * length);
			feetLength = parseInt(inches_totalLength / 12);
			inchesLength = Math.round(inches_totalLength % 12);
			if(inchesLength==12){
				feetLength = feetLength+1;
				inchesLength=0;
			}
			$('#shipmentItemImperialLengthFeet').val(feetLength);
			$('#shipmentItemImperialLengthInches').val(inchesLength);
			lengthInExcess=length-(feetLength*0.3048 + inchesLength*0.0254);
			console.log("For UOM=I Length:"+$('#shipmentItemImperialLengthFeet').val()+"*0.3048+"+$('#shipmentItemImperialLengthInches').val()+"*0.0254 +"+lengthInExcess);
			}
		
			var breadth=$('#shipmentItemMetricBreadth').val();
			if(breadth>0){
			inches_totalBreadth = (39.3701 * breadth);
			feetBreadth = parseInt(inches_totalBreadth / 12);
			inchesBreadth = Math.round(inches_totalBreadth % 12);
			if(inchesBreadth==12){
				feetBreadth = feetBreadth+1;
				inchesBreadth=0;
			}
			$('#shipmentItemImperialBreathFeet').val(feetBreadth);
			$('#imperialBreathInches').val(inchesBreadth);
			
			breadthInExcess=breadth-(feetBreadth*0.3048 + inchesBreadth*0.0254);
			console.log("breadth:"+$('#shipmentItemImperialBreathFeet').val()+"*0.3048+"+$('#imperialBreathInches').val()+"*0.0254 +"+breadthInExcess);			
			}
			
			var height=$('#shipmentItemMetricHeight').val();
			if(height>0){
			inches_totalHeight = (39.3701 * height);
			feetHeight = parseInt(inches_totalHeight / 12);
			inchesHeight = Math.round(inches_totalHeight % 12);
			if(inchesHeight==12){
				feetHeight = feetHeight+1;
				inchesHeight=0;
			}
			$('#shipmentItemImperialHeightFeet').val(feetHeight);
			$('#shipmentItemImperialHeightInches').val(inchesHeight);
			
			heightInExcess=height-(feetHeight*0.3048 + inchesHeight*0.0254);
			console.log("height:"+$('#shipmentItemImperialHeightFeet').val()+"*0.3048+"+$('#shipmentItemImperialHeightInches').val()+"*0.0254 +"+heightInExcess);			
			}
		
		}
		recalculateCube();
	}	
	//for 21832 note validation
	function checkForNoteValidation(){
		
		 var note = $('#note').val();
		var itemNumber=$('#itemNumber').val();
		var tariffNumber=$('#tariffNumber').val();
		var tariffCommodityDescription=$('#commodityDesc').val();
		var queryString = $('#shipmentForm').formSerialize();
			
		 $.ajax({
			 type:"POST",
			 url:_context+"/shipmentCommodity/checkForNoteValidation",
			 data :{queryString:queryString,note:note, itemNumber:itemNumber, tariffNumber:tariffNumber,tariffCommodityDescription:tariffCommodityDescription},
			 success: function(responseText){
				 if(responseText.success== true){
					 isNoteValid=true;
					 onNoteValidateSuccessShmtSave();
					}
				 else{
					 isNoteValid=false;
					 showResponseMessages("msgDivCommodity", responseText);
					// alert("Please enter a valid note");
					 $.unblockUI();
					 }
				
			 }
			 
		 });
	}
	
	function resolveSpaces(obj){
		var value = $.trim($('#'+obj).val());
		if(value =="")
			return 0;
		else
			return parseInt(value);
	};
	
	// 
	function noteValidationAndUpdateCommodity(){
		
		 var note = $('#note').val();
		var itemNumber=$('#itemNumber').val();
		var tariffNumber=$('#tariffNumber').val();
		var tariffCommodityDescription=$('#commodityDesc').val();
		var queryString = $('#shipmentForm').formSerialize();
			
		 $.ajax({
			 type:"POST",
			 url:_context+"/shipmentCommodity/checkForNoteValidation",
			 data :{queryString:queryString,note:note, itemNumber:itemNumber, tariffNumber:tariffNumber,tariffCommodityDescription:tariffCommodityDescription},
			 success: function(responseText){
				 if(responseText.success== true){
					 isNoteValid=true;
					 updateCommodity(); 
					
					}
				 else{
					 isNoteValid=false;
					 showResponseMessages("msgDivCommodity", responseText);
					// alert("Please enter a valid note");
					 $.unblockUI();
					 }
				
			 }
			 
		 });
	}
	
	var equipmentUpdateComplete = false;
	function updateEquipment() {
			equipmentUpdateComplete = false;
			 blockUI();
			 var queryString = $('#shipmentForm').formSerialize();
			
			 $.ajax({
				 type:"POST",
				 url:_context+"/shipmentCommodity/updateEquipment",
				 data :queryString,
				 success: function(responseText){
					 if(responseText.success== true){
							document.getElementById("blcn").style.display="none";
							document.getElementById("blmx").style.display="block";
						    loadMixedCommodityEquipmentData(responseText);
						   
					        $('#mixedCommodityView').val("Commodity View");
					        $("#mixcommodityGrid").trigger('reloadGrid');  
					      $('#msgDivCommodity').html("");
					      showResponseMessages("msgDivCommodity", responseText);
					}
					 else{
						 document.getElementById("msgDivCommodity").style.display="block";
						 showResponseMessages("msgDivCommodity",responseText);
						 }
					 $.unblockUI();
					 equipmentUpdateComplete = true;
					 }
			
		 });
	}
	; $(function() {

		 $('#mixCommItem').click(function(){
			 $(this).select();
		 });
		 
	 	$('#mixCommItem').change(function(){
	 		var found = false;
	 		$('#mixCommCommDesc').val("");
	 		$('#mixCommNote').val('');
	 		if(window.itemList != null) {
	 			for (var i=0; i<window.itemList.length ; i++) {
	 				var item = window.itemList[i];
	 				$(this).val($(this).val().toUpperCase());
	 				if(item.name.trim() == $(this).val().trim()) {
	 					found = true;
	 					$(this).val(item.name);
	 					var tariffNo=$('#tariffNumber').val();
	 					var itemNo=$('#mixCommItem').val();	 					
	 					fetchCommodityCodeList(tariffNo, itemNo,null,true,null);
	 					$('#mixCommCommDesc').val(item.description);
	 					break;
	 				}
	 			}	
 			}
	 		
	 		if(found)  
	 		{
	 			$(this).removeClass("itemError");
	 			$('#mixCommCommDesc').attr('disabled', true);
	 			
	 		} else  
	 		{ 
	 			$(this).addClass("itemError");
	 			$('#mixCommCommDesc').attr('disabled', false);
	 		}
	 		
	 	}); 
	 	
	 	
	 	
	 	/*Permission Shipment Security*/
		if(isCommodityBLMXAdd){
			$('#commodityAddDiv').css('visibility', 'visible');
		}else{
			$('#commodityAddDiv').css('visibility', 'hidden');	
		}
		
		if(isCommodityBLMXUpdate){
			$('#updateEquipment').css('visibility', 'visible');
		}else{
			$('#updateEquipment').css('visibility', 'hidden');	
		}
		if(isCommodityBLMXDisplayOnly){
			 $('#mixedCommodityView').attr('disabled', false);
		}else{
			$('#mixedCommodityView').attr('disabled', true);
		}
 });
 
	function resetTariffDetailsForMixedCommodity(itemId){
		$('#mixCommCommDesc').val('');
		
		$('#mixCommNote').val('');
		setTariffCommodityDecriptionForMixedCommodity(itemId);
	}
	
	function setTariffCommodityDecriptionForMixedCommodity(itemId){
		
		if(itemId!=null ||itemId !=""){
			 var mixCommItemId = "mixCommItemId="+itemId;
			 $.ajax({
				 type:"GET",
				 url:_context+"/shipmentCommodity/setTariffCommodityDecriptionMixedComm",
				 data :mixCommItemId,
			 success:function(responseText){
					 if(responseText.success=true){
						 
						 $('#mixCommCommDesc').val(responseText.data);
						 }
					 }
				 
		});
		
	}
	}
	
	function notePopupSearchMixComm() {
		var tariffNo = $("#tariffNumber").val();
		var itemNo = $("#mixCommItem").val();
		
		
		var estShipDate = "";
		if($('#rateDate').val()!=null && $('#rateDate').val()!="null" && $('#rateDate').val()!=""){
			estShipDate = $('#rateDate').val();
		}
		var trade = $("#tradeCode").val();
		var loadSrvc = $("#loadServiceCode").val();
		var dischargeSrvc = $("#dischargeServiceCode").val();
		var originPortCityCode = $('#originPortCityCode').val();
		var destinationPortCityCode = $('#destinationPortCityCode').val();
		var eqType = "";
		var eqLength= "";
		var eqHeight= "";
		noteLookUp ="MIXCOMM";
		var origin = $('#blOriginCityCode').val();
		var destination = $('#blDestinationCityCode').val();
		var actionUrl = _context+'/cas/searchNoteNoLookup.do?filterValue1=' + tariffNo + '|' + itemNo + '|' + estShipDate + '|' + eqType + 
			'|' + eqLength + '|' + eqHeight + '|' + origin + '|' + destination +
			'|' + originPortCityCode + '|' + destinationPortCityCode + '|' + loadSrvc + '|' + dischargeSrvc + '|' + trade ;
			
			
		var windowStyle = 'top=0,left=0,height=500,width=1000,scrollbars=1,resizable=1,status=1,toolbar=0,menubar=0,location=0';
		window.open(actionUrl, 'NoteSearch', windowStyle);
	
	}

	
	function getPrimaryCommodityForMixedComm(tariffNo, itemNo){
		var blOriginCityCode = $('#blOriginCityCode').val();
		var blDestinationCityCode = $('#blDestinationCityCode').val();
		var originPortCityCode = $('#originPortCityCode').val();
		var destinationPortCityCode = $('#destinationPortCityCode').val();
		var loadSrvc = $("#loadServiceCode").val();
		var dischargeSrvc = $("#dischargeServiceCode").val();
		var trade = $('#tradeCode').val();
		var estShipDate = "";
		/*if($('#rateDate').val()!="" && $('#rateDate').val()!=null && $('#rateDate').val()!="null"){
			estShipDate = $('#rateDate').val();
		}else if($('#freightReceivedDate').val()!="" && $('#freightReceivedDate').val()!=null && $('#freightReceivedDate').val()!="null"){
			estShipDate = $('#freightReceivedDate').val();
		}*/
		/*if($('#freightReceivedDate').val()!=null && $('#freightReceivedDate').val()!="null" && $('#freightReceivedDate').val()!=""){
			estShipDate = $('#freightReceivedDate').val();
		}*/
		if($('#rateDate').val()!=null && $('#rateDate').val()!="null" && $('#rateDate').val()!=""){
			estShipDate = $('#rateDate').val();
		}
		
		var urlComm= _context+'/cas/autocomplete.do?method=getPrimaryCommodity&searchType=281&parentSearch='+blOriginCityCode
		+'|'+blDestinationCityCode+'|'+originPortCityCode+'|'+destinationPortCityCode+'|'+loadSrvc+'|'+dischargeSrvc
		+'|'+trade+'|'+tariffNo+'|'+itemNo+'|'+estShipDate;
		
	
		
		$.ajax({
			url: urlComm,
			type: "POST",
			success: function(responseText){
				//alert("commodityNotFound: " + responseText[0].commodityNotFound);
				if(responseText!=null){
					if(responseText[0].commodityNotFound=='undefined' || responseText[0].commodityNotFound==null || responseText[0].commodityNotFound==''){
						$('#msgDivCommodityOverlay').html('');
						$('#msgDivCommodityOverlay').hide();
						$("#mixCommCommDesc").val(responseText[0].desc);
						/*$("#tariffCommodityDescriptionHidden").val(responseText[0].desc);*/
						/*$("#frtGrpId").val(responseText[0].grpid);
						$("#frtItemId").val(responseText[0].itemid);*/
						//$("#commodityDescription").val(responseText[0].desc);
	if(responseText[0].descid!=null && responseText[0].descid!=''){
							
							$.ajax({
								url: _context+'/booking/freight/getCommodityCodes',
								async:false,
								data: {commodityDescId:responseText[0].descid,
									frtItemId:responseText[0].itemid},
								success: function(responseText){
									if(responseText.success){
										populateMixCommodityCodeList(responseText.data);
									}
								}
							});
						}
						
						if ($.trim(responseText[0].noterate)!=null && $.trim(responseText[0].noterate)!='') {
							
							$('#mixCommNote').val("");
							
						} else {
							
						}
						
						//alert("tariffItemCmdtyDescId: "+ responseText[0].descid);
						/*if(responseText[0].descid!=null && responseText[0].descid!=''){
							//$('#tariffItemCmdtyDescId').val(responseText[0].descid);
							$.ajax({
								url: _context+'/booking/freight/getCommodityCodes',
								data: {commodityDescId:responseText[0].descid},
								success: function(responseText){
									if(responseText.success){
										populateCommodityCodeList(responseText.data);
									}
								}
							});
						}*/
					/*	setMandatoryTariffCmdDesc();
						$("#primaryFreightPresent").val("Y");*/
					}
					else{
						$('#msgDivCommodityOverlay').show();
						// displaying more specific error message if available as per D025670
						if (responseText[0].commodityNotFound =="Y"){
							$('#msgDivCommodity').html('<div class="message_error">Commodity Code/Description not found for Tariff Item.</div>');		
						}else
						if(responseText[0].errmsg)
							$('#msgDivCommodity').html('<div class="message_error">'+responseText[0].errmsg+'</div>');
						else
							$('#msgDivCommodity').html('<div class="message_error">Invalid combination of data to satisfy the Tariffs edit condition.</div>');
						
						resetMandatoryTariffCmdDescMixedComm();
						setMandatoryTariffItemMixedComm();
						
						/*$("#primaryFreightPresent").val("N");*/
					/*	clearCommodityCodeList();*/
					}
				}
			}
		});
	};var _cmdtyGridCount = -1;
var shipmentForm = $('#shipmentForm').formSerialize();
var currentRowId='';
$(document).ready(
		function() {
			
			var isDeletable = true;
			var linkFormatter = "";
			var EditLink ="";
			
			currentRowId='';
			
	/*		$('#commodityGrid').gatesGrid({
				caption: "Container",
				colNames: colNamesForContainer,
				colModel: colModelForContainer,
				jsonReader: jsonReaderContainer,
				pager: '#pagerCommodityGrid',
				rowNum:6,
				rowList: [ 5, 10 ],
				gatesOptions: {
					urls: {
						load: '../shipmentCommodity/loadContainerGrid', 
						edit: '../shipmentCommodity/updateContainerGrid' 
					},
					controls: {
						navBar: true,
						navBarAdd: false,
						navBarEdit: false,
						navBarDelete: false, //- multiDelete
						
						inlineAdd: true, //- hideCustomAddRow
						inlineEdit: true, //- hideEdit
						inlineDelete: false //- hideDelete
					}
				},
				beforeEditCell: function(rowid, cellname, value, iRow, iCol) {
				   // here identify row based on rowid
				   // if the row should not be editable than simply make the cells noneditable using
					jQuery('#commodityGrid').editCell(iRow, iCol, false);
					jQuery('#commodityGrid').jqGrid("restoreCell", iRow, iCol);
				},
                  
				beforeRowEdit: function(rowid){
					 alert ("edited"); 
				}
				
			});*/

		
	});



function containerGridLoad(){
	$('#tr_shipmentFreightId').remove();
	if($('#statusCode').text()=='ISSUED'|| $('#statusCode').text()=='CORRECTED' ||$('#statusCode').text()==""){
		$("div.ui-pg-div.ui-inline-edit","#gbox_commodityGrid").hide();
		var grid = $("#commodityGrid");
		var pos=getColumnIndexByName(grid,'actionLinkUnlink');
		grid.jqGrid('hideCol', grid.getGridParam("colModel")[pos].name);
		//$('#maintain_commodity_shipment').gatesDisable();
		enableDisableCommosityButtons();
	}else {
		
		//$('#maintain_commodity_shipment').gatesEnable();
		
		if(isCommodityBLCNUpdate){
		$("div.ui-pg-div.ui-inline-edit","#gbox_commodityGrid").show();
		}
		if(isCommodityBLCNLink){
		var grid = $("#commodityGrid");
		var pos=getColumnIndexByName(grid,'actionLinkUnlink');
		grid.jqGrid('showCol', grid.getGridParam("colModel")[pos].name);
		}
	}
	
	var tradeCode = $('#tradeCode').val();
	var grid = $("#commodityGrid");
	var pos=getColumnIndexByName(grid,'temperatureDual');
	if(tradeCode != 'A'){	
		grid.jqGrid('hideCol', grid.getGridParam("colModel")[pos].name);
	} else {
		grid.jqGrid('showCol', grid.getGridParam("colModel")[pos].name);
	}
	
	var reccountContainerGrid = $('#commodityGrid').jqGrid('getDataIDs');
	
	
	for (var i = 0; i < reccountContainerGrid.length; i++) {
		if(jQuery("#commodityGrid").getRowData(reccountContainerGrid[i]).isContainerLinked!="YES"){
			$($("#commodityGridDiv div.ui-pg-div.ui-inline-edit")[i], "#"+reccountContainerGrid[i]).hide();
		}
		
		if(jQuery("#commodityGrid").getRowData(reccountContainerGrid[i]).isPreReceivedContainer=="true"){
			
			 $('#commodityGrid').jqGrid('setCell', reccountContainerGrid[i], 'equipDesc','','',{style: 'background-color : yellow'},'');
		}else{


		}
	}
	callBillActionAfterSave = true;
	
	
}

function enableDisableCommosityButtons(){
	if($('#commodityLine').html()!='1'){
		$('#previousCommodity').attr("disabled",false);
		$('#nextCommodity').attr("disabled",false);
		$('#unitOfCommodity').attr("disabled",false);
		$('#mixedCommodityView').attr("disabled",false);
		
		$('#updateCommodity').attr("disabled",true);
		$('#clearCommodity').attr("disabled",true);
		$('#addCommodity').attr("disabled",true);
		$('#deleteCommodity').attr("disabled",true);
		
		buttons();
	}else{
		$('#previousCommodity').attr("disabled",true);
		$('#nextCommodity').attr("disabled",true);
		$('#unitOfCommodity').attr("disabled",true);
		$('#updateCommodity').attr("disabled",true);
		$('#clearCommodity').attr("disabled",true);
		$('#addCommodity').attr("disabled",true);
		$('#deleteCommodity').attr("disabled",true);
		$('#mixedCommodityView').attr("disabled",false);
		buttons();
	}
	$('#HHGDSCommodity').attr("disabled",false);
	if($('#totalEquipment').html()!='1'){
		
		
		$('#previousEquipment').attr("disabled",false);
		$('#nextEquipment').attr("disabled",false);
	}else{
		$('#previousEquipment').attr("disabled",true);
		$('#nextEquipment').attr("disabled",true);
		
		
	}
	
}

function buttons(){
	var unitOfCommodity = Number($("#unitOfCommodity option:selected").text());
	var commodityLine = Number($('#commodityLine').html());
	if((unitOfCommodity == commodityLine) && (commodityLine ==1)){
		$('#previousCommodity').attr("disabled","disabled");
		$('#nextCommodity').attr("disabled","disabled");
	}else if((unitOfCommodity == commodityLine) && (commodityLine ==0)){
		$('#previousCommodity').attr("disabled","disabled");
		$('#nextCommodity').attr("disabled","disabled");
		$('#clearCommodity').attr("disabled","disabled");
		$('#deleteCommodity').attr("disabled","disabled");
		$('#updateCommodity').attr("disabled","disabled");
		
	}else if(unitOfCommodity == commodityLine){
		$('#nextCommodity').attr("disabled","disabled");
		$('#previousCommodity').attr("disabled",false);
	}else if(unitOfCommodity==1){
		$('#previousCommodity').attr("disabled","disabled");
		$('#nextCommodity').attr("disabled",false);
	}else{
		$('#nextCommodity').attr("disabled",false);
		$('#previousCommodity').attr("disabled",false);
	}
}

function actionToLinkUnLink(id){
	
var shipmentFreightId =id.split('=')[1];
	$.ajax({
		url : _context +"/shipmentCommodity/actionContainerToCommodity",
		type : "GET",
		data : {
			unitOfCommodity :  $("#unitOfCommodity").val(),
			shipmentFreightId: shipmentFreightId,
			unitOfMeasure: $('#unitOfMeasureSourceCode :selected').val()
		},
		success : function(responseText) {
			if(responseText.success==true){
		
			$('#commodityGrid').trigger('reloadGrid');
			$("#cmdLineLink").text(responseText.data.cmdLineLink+"/");
			$("#cmdLinks").text(responseText.data.cmdLinks+"/");
			$("#totalEqpts").text(responseText.data.totalEqpts);
			
			if($('#unitOfMeasureSourceCode :selected').val()=="I") {
				$("#netWeight").val(Math.round(responseText.data.netWeight).toFixed(0));
				$('#cube').val(Math.round(responseText.data.cube).toFixed(0));
			}else{
				$("#netWeight").val(responseText.data.netWeight);
				$('#cube').val(responseText.data.cube);
			}

			$('#piece').val(responseText.data.piece);
			$('#kind').val(responseText.data.kind);
			 $('#msgDivCommodity').html("");
			 somethingChanged = true;
			 saveBillBeforeBillButton = true;
			 setTimeout(function(){ $('#isAnyGridChanged').val("true"); }, 1000); //D027692
		}
			else{
				showResponseMessages("msgDivCommodity", responseText);
			}
			}});
}


var getColumnIndexByName = function(grid,columnName) {
var cm = grid.jqGrid('getGridParam','colModel');
for (var i=0,l=cm.length; i<l; i++) {
    if (cm[i].name===columnName) {
        return i;
    }
}
return -1;
};
var _cmdtyGridCount = -1;
var shipmentForm = $('#shipmentForm').formSerialize();
var mixCommOverlayMode= "add";
var currentRowId='';
$(document).ready(
		function() {
			
			var isDeletable = true;
			var linkFormatter = "";
			var EditLink ="";
			
		
		
		});

	


function loadComplete(){
	$('#tr_shipmentItemId').remove();//Defect-25329-To delete extra empty row added
	if($('#statusCode').text()=='ISSUED'|| $('#statusCode').text()=='CORRECTED'){
		$("div.ui-pg-div.ui-inline-edit", "#gbox_mixcommodityGrid").hide();
		$("div.ui-pg-div.ui-inline-del", "#gbox_mixcommodityGrid").hide();
	$('#maintain_commodity_shipment').gatesDisable();
	enableDisableCommosityButtons();
	}else {
		
	/*	$('#maintain_commodity_shipment').gatesEnable();*/
		
		if(isCommodityBLMXUpdate){
			$("div.ui-pg-div.ui-inline-edit", "#gbox_mixcommodityGrid").show();
		}else{
			$("div.ui-pg-div.ui-inline-edit", "#gbox_mixcommodityGrid").hide();
		}
		if(isCommodityBLMXDelete){
			$("div.ui-pg-div.ui-inline-del", "#gbox_mixcommodityGrid").show();
		}else{
			$("div.ui-pg-div.ui-inline-del", "#gbox_mixcommodityGrid").hide();
		}
	}
	if($('#unitOfMeasureSourceCode :selected').val()=="I")
	{
		$('#mixcommodityGrid').setLabel("cube", "Cube(ft)");
		$('#mixcommodityGrid').setLabel("netWeight", "Net Weight(lbs)");
		$('#mixcommodityGrid').setColProp("netWeight",{formatoptions: {decimalPlaces: 0, thousandsSeparator: ""}});
	}
	else if($('#unitOfMeasureSourceCode :selected').val()=="M")
	{
		$('#mixcommodityGrid').setLabel("cube", "Cube(m)");
		$('#mixcommodityGrid').setLabel("netWeight", "Net Weight(kgs)");
		$('#mixcommodityGrid').setColProp("netWeight",{formatoptions: {decimalPlaces: 3,thousandsSeparator: ""}});
	}
	/*var mixCommGrid = $('#mixcommodityGrid').jqGrid('getDataIDs');
	var netWeight="";
	var cube="";
	for (var i = 0; i < mixCommGrid.length; i++) {
	  netWeight = jQuery("#mixcommodityGrid").getRowData( $('#mixcommodityGrid').jqGrid('getDataIDs')[i]).netWeight;
	   cube = jQuery("#mixcommodityGrid").getRowData( $('#mixcommodityGrid').jqGrid('getDataIDs')[i]).cube;
	   
	   if($('#unitOfMeasureSourceCode :selected').val()=="I")
	   {
		   netWeight = +(+netWeight).toFixed(0); 
		   cube = +(+cube).toFixed(0);
		   
	   }
	   else  if($('#unitOfMeasureSourceCode :selected').val()=="M")
	   {
		   netWeight = +(+netWeight).toFixed(2); 
		   cube = +(+cube).toFixed(2);  
	   }
	   var rowData = $('#mixcommodityGrid').jqGrid('getRowData', i+1);
	   rowData.cube = cube;
	   rowData.netWeight = netWeight;
	   $('#mixcommodityGrid').jqGrid('setRowData', i+1, rowData);
	}*/
	
	// I left this in as I didn't want to deal with it all right now but I believe the change I made to 
	// the number formater make it unnecessary. D032235
	tableLength = jQuery("#mixcommodityGrid").jqGrid('getGridParam', 'records');//$($('#mixcommodityGrid')).length;
	for(var i=1;i<=tableLength;i++)
	{
		var netWeight ="";
		var cube ="";
		if($($('#gbox_mixcommodityGrid table')[1]).children().children()[i]!= undefined &&
				$($('#gbox_mixcommodityGrid table')[1]).children().children()[i] !=null)
		{
			if($($($('#gbox_mixcommodityGrid table')[1]).children().children()[i]).children()[4]!=undefined)
			netWeight = $($($('#gbox_mixcommodityGrid table')[1]).children().children()[i]).children()[4].innerHTML;
			if($($($('#gbox_mixcommodityGrid table')[1]).children().children()[i]).children()[5]!=undefined)
			cube = $($($('#gbox_mixcommodityGrid table')[1]).children().children()[i]).children()[5].innerHTML;
			
			if($('#unitOfMeasureSourceCode :selected').val()=="I")
			{
				netWeight = (parseFloat(netWeight.replace(/\s/g, ''))).toFixed(0); 
				cube = parseFloat(cube.replace(/\s/g, '') ).toFixed(0);
			   
			}
			else  if($('#unitOfMeasureSourceCode :selected').val()=="M")
			{
				netWeight =(parseFloat(netWeight.replace(/\s/g, '') )).toFixed(3);
				cube = parseFloat(cube.replace(/\s/g, '') ).toFixed(3);
			}
			// = netWeight.replace(/\B(?=(\d{3})+(?!\d))/g, " ");
			//cube = cube.replace(/\B(?=(\d{3})+(?!\d))/g, " ");
		
			if($($($('#gbox_mixcommodityGrid table')[1]).children().children()[i]).children()[4]!=undefined)
				{
					$($($('#gbox_mixcommodityGrid table')[1]).children().children()[i]).children()[4].innerHTML=netWeight;
					$($($($('#gbox_mixcommodityGrid table')[1]).children().children()[i]).children()[4]).attr('title',netWeight);
				}
			if($($($('#gbox_mixcommodityGrid table')[1]).children().children()[i]).children()[5]!=undefined)	
				{
					$($($('#gbox_mixcommodityGrid table')[1]).children().children()[i]).children()[5].innerHTML=cube;
					$($($($('#gbox_mixcommodityGrid table')[1]).children().children()[i]).children()[5]).attr('title',cube);
				}

		}
	}
	
	
	// Set footer
	var userData = $("#mixcommodityGrid").getGridParam('userData');
	var netWeightSum = "";
	if(userData) {
		netWeightSum = userData.netWeightSum;
	}
	jQuery("#mixcommodityGrid").footerData('set',{itemNumber:'Total',netWeight:netWeightSum});
	
	
	// jqGrid load complete are temporary methods that are called once!
	//console.log("Inside method loadComplete, mix commodity code value:"+$('#mixCommodityCommodityCode').val()+" tariff "+$('#tariffNumber').val() );
	
	if($('#mixcommodityGrid').attr('nextRowId') != null) {
		openUpdateComodityOverLay($('#mixcommodityGrid').attr('nextRowId') );
		$('#mixcommodityGrid').attr('nextRowId',null);
	}
	
	
	if( $('#mixcommodityGrid').attr('finishShowCommodity') != null ) {
		//console.log("show");
		$('#mixcommodityGrid').attr('finishShowCommodity',null);
		finishShowAddCommodityDialog();
	}
	
}


function openUpdateComodityOverLayWithChangeCheck(rowId) {
	if(somethingChangedMixComm == true ){
        var conf= confirm('Changes have been made but not saved, do you want to continue(Y/N) ?');
 		if(conf== true ){
 			 openUpdateComodityOverLay(rowId);
	    }
	} else{
		openUpdateComodityOverLay(rowId);
	}
}

function openUpdateComodityOverLay(rowId){
	
	params = 
		"rowId="+rowId;
		 $.ajax({
			 type:"GET",
			 url:_context+"/shipmentCommodity/editCommodity",
			 data :params,
			 success: function(responseText){
				 somethingChangedMixComm = false;
				 $('#msgDivCommodityOverlay').html("");
				 if(responseText.success==true) {
					 setValueInCommodityOverlayEdit(responseText.data);
				 }
				 $(":button:contains('Add & New')").prop("disabled", true).addClass("ui-state-disabled");
		     var position = loadPreviousAndNext(rowId);
		     $("#commodityDescPage").dialog( "option", "title", 'Edit Commodity row '+position+' for '+$('#equipmentNumber').val() );
		     mixCommOverlayMode ="edit";
		    
		     loadItemDataForMixCommodity();
		  //   updateMixCommKindList(responseText);
		   fetchCommodityCodeList($('#tariffNumber').val(),responseText.data.itemNumber,null,true,null);
		   $('#mixCommodityCommodityCode').val(responseText.data.commodityCode);

		     $("#commodityDescPage").dialog('open');
		     {
		    	 if($('#unitOfMeasureSourceCode :selected').val()=="I")
				   {
					var netWeight = (parseFloat($('#mixCommNetWgt').val().replace(/\s/g, '') )).toFixed(0);
					$('#mixCommNetWgt').val(netWeight);
					//Added not null verifying condition for Defect D026515
					if($('#mixCommCube').val()!="")
					{
					var cube = parseFloat($('#mixCommCube').val().replace(/\s/g, '')).toFixed(0);
					$('#mixCommCube').val(cube);
					}
					   
				   }
		     }
		     
	}
		 });
	}	
function setValueInCommodityOverlayEdit(data){
	$('#mixCommItem').removeClass("itemError");
	$('#mixCommCommDesc').attr('disabled', false);
	
	$('#mixCommItem').val(data.itemNumber);
	$('#mixCommItemId').val(data.itemNumber);
	$('#mixCommPieces').val(data.piece);
	$('#mixCommNetWgt').val(data.netWeight);
	if(data.kind!='' && data.kind!='null')
	$('#mixCommKind').val(data.kind);
	$('#mixCommCube').val(data.cube);
	$('#mixCommNote').val(data.note);
	$('#mixCommCommDesc').val(data.commodityDesc);
	$('#mixCommItemId').val(data.item);
	$('#mixCommShipmentItemId').val(data.shipmentItemId);
	$('#mixCommUnitOfCommodity').val(data.unitOfCommodity);
	
	  
		
     
      
      
	
	$('#mixCommodityCommoditycommentId').val(data.commentId);
	$('#mixCommodityCommodityCode').val(data.commodityCode);

	//console.log("Inside method setValueInCommodityOverlayEdit, mix commodity code value:"+$('#mixCommodityCommodityCode').val());
	
	populateMixCommodityCodeListBilling(data.commodityCodeList);
	$('#mixCommItem').focus();
	if($('#tariffNumber').val()=="" || $('#tariffNumber').val()==null){
		 // 026586: add an error if this happens
		 $('#msgDivCommodityOverlay').html("Tariff Item disabled, enter a tariff #");
		 $('#msgDivCommodityOverlay').addClass("itemError");
		 $('#mixCommItem').attr("readOnly",true);
		 
	 }else{
		 $('#mixCommItem').attr("readOnly",false);
	 }
	
}

function loadItemDataForMixCommodity() {
	if(window.itemList == null) {
		var tariff = $('#tariffNumber').val();
		if(tariff !="" && tariff !=null){
			loadTariffItems(tariff);
		}
	}
	
}

function populateTariffItems(data) {
	window.itemList = data;
	for (var i=0; i<window.itemList.length ; i++) {
   		 window.itemList[i].label = window.itemList[i].name+" - "+window.itemList[i].description;
   		 window.itemList[i].value = window.itemList[i].description;
   		 
	}
	
	 $("#mixCommCommDesc").autocomplete({
		  source: window.itemList,
		  select: function( event, ui ) {
			  $('#mixCommItem').val( ui.item.name);
			  $('#mixCommNote').val("");
			  $('#mixCommItem').removeClass("itemError");
			 // console.log("Inside mixCommCommDesc autocomplete select function");
			 fetchCommodityCodeList($("#tariffNumber").val(),$("#mixCommItem").val(),ui.item.description,true,ui.item.id);
		  },
	 	  change: function (event, ui) {
	 		var found = false;  
	 		var val = $('#mixCommItem').val();
	 		if(val != null) val = val.trim();
	 		
	 		if(window.itemList != null) {
	 			for (var i=0; i<window.itemList.length ; i++) {
	 				var item = window.itemList[i];
	 				if(item.name.trim() == val) {
	 					found = true;
	 				}
	 			}	
			}
	 		if(found) {
	 			$('#mixCommItem').removeClass("itemError");
	 		} else {
	 		    $('#mixCommItem').addClass("itemError");
	 		}
	 	//	console.log("Inside mixCommCommDesc autocomplete change function");
	 	  }
		});
}

function loadTariffItems(tariffNumber) {
	blockUI();
	
	// load kinds
	$.ajax({
		 async:false,
		 type:"GET",
		 timeout: 100000,
		 url: _context+'/cas/autocomplete.do?term='+tariffNumber+'&method=searchTariffSourceWithItemName&searchType=43&mustMatch=true&groupType=ALL',
		 dataType: "json",
		 success: function( data, status ) {
			 populateTariffItems(data[0].items);
			 $.unblockUI();
		 },
		 error: function(jqXHR, textStatus, errorThrown) {
			 $.achtung({
	                className: 'achtungFail',
	                timeout: 3000,
	                message: 'Reload Tariff'
	            }); 
			 $.unblockUI();
		 }
	 }); 	
	
	$.ajax({
		 async:false,
		 type:"GET",
		 timeout: 100000,
		 url: _context+'/cas/autocomplete.do?term='+tariffNumber+'&method=searchTariffSourceWithItemName&searchType=43&mustMatch=true&groupType=ALL',
		 dataType: "json",
		 success: function( data, status ) {
			 populateTariffItems(data[0].items);
			 $.unblockUI();
		 },
		 error: function(jqXHR, textStatus, errorThrown) {
			 $.achtung({
	                className: 'achtungFail',
	                timeout: 3000,
	                message: 'Reload Tariff'
	            }); 
			 $.unblockUI();
		 }
	 }); 
}	

function getNextRowId(currentRowId) {
	var rows = $('#mixcommodityGrid').jqGrid('getDataIDs');
	
	var position = 0;
	for (;position<rows.length;position++) {
		if(rows[position] == currentRowId) break;
	}
	position++;
	
	if(position < rows.length ) {
		return rows[position];
	} else { 
		return -1;
	}
}

function getLineNumber(id) {
	var dataFromTheRow = jQuery("#mixcommodityGrid").jqGrid ('getRowData', id);
	if(dataFromTheRow != null) return  parseInt(dataFromTheRow.unitOfCommodityDisplay);
	return -1;
}

function getMinLineNumber() {
	var id = $('#mixcommodityGrid').jqGrid('getDataIDs')[0];
	var dataFromTheRow = jQuery("#mixcommodityGrid").jqGrid ('getRowData', id);
	if(dataFromTheRow != null) {
		var pos =  parseInt(dataFromTheRow.unitOfCommodityDisplay);
		if(isNaN(pos)) return 1;
		return pos;
	}
	return 1;
}

function getMaxLineNumber() {
	var rows = $('#mixcommodityGrid').jqGrid('getDataIDs');
	var id = rows[rows.length-1];
	var dataFromTheRow = jQuery("#mixcommodityGrid").jqGrid ('getRowData', id);
	if(dataFromTheRow != null) {
		var pos = parseInt(dataFromTheRow.unitOfCommodityDisplay);
		if(isNaN(pos)) return -1;
		return pos;
	}
	return -1;
}

function getPosition(id) {
	var rows = $('#mixcommodityGrid').jqGrid('getDataIDs');
	var position = 0;
	for (;position<rows.length;position++) {
		if(rows[position] == id) return position;
	}
	return -1;
}

function getPositionPastEnd(lineNumber) {
	var rows = $('#mixcommodityGrid').jqGrid('getDataIDs');
	var lastId = rows[rows.length-1];
	var lastLineNumber = getLineNumber(lastId);
	return lineNumber - lastLineNumber + rows.length-1;
}



function loadNewRow() {
	return loadOverlayData(-1);
}

function loadPreviousAndNext(rowIdIn) {
	return loadOverlayData(rowIdIn);
}

// Global variables, 
var currentOverlayPosition = 0;
var currentOverlayCnt = 0;

function loadOverlayData(id) {
	currentOverlayPosition = 0;
	
	
	id = parseInt(id);
	
	var position = -1;
	var lineNumber = 0;
	var maxLoadedIndex= getMaxLineNumber();
	var minLoadedIndex = getMinLineNumber();
	//console.log(maxLoadedIndex+" "+minLoadedIndex);
	
	if(id == -1) {
		//lineNumber = total+1;
		lineNumber = maxLoadedIndex+1;
		position = getPositionPastEnd(lineNumber);
	} else {
		lineNumber = getLineNumber(id);
		position = getPosition(id);
	}
	lineNumber = parseInt(lineNumber);
	
	var index = lineNumber-7;
	var finalCnt = 2;
	
	
	if(index < minLoadedIndex) { 
		finalCnt = 9-lineNumber+minLoadedIndex ;
		index = minLoadedIndex;
	}
	
	var maxIndex = lineNumber+finalCnt;
	if(maxIndex > maxLoadedIndex)  {
		index +=  maxLoadedIndex - maxIndex;
		if(index < minLoadedIndex) index = minLoadedIndex;
		
		maxIndex = maxLoadedIndex;
	}
	
	if(index < lineNumber) {
		var top = getHeaderString();
		currentOverlayCnt = 0;
		for(;index<lineNumber;index++) 
		{
			var pos=position-lineNumber+index;
			if((pos>0)||(pos==0))
			{
		    top+= getRow(index,pos);			
			}
		}
			
		top += "</table>";
		
		$("#mixedCommPreviousItems").html(top);
	} else {
		$("#mixedCommPreviousItems").html("");
	}
	
	
	
	
    index = parseInt(lineNumber)+1;
    if(index<=maxIndex) {
	    var bottom = "<table class=\"ui-jqgrid-htable ui-jqgrid\" cellspacing=\"0\" cellpadding=\"1\" border=\"0\" width=\"98%\">";
	    bottom+= "<thead><tr class=\"ui-jqgrid-labels\" >";
	    bottom+= "<th class=\"ui-state-default ui-th-column ui-th-lt\"><div class=\"ui-jqgrid-sortable\">Line</div></th>";
	    bottom+= "<th class=\"ui-state-default ui-th-column ui-th-lt\"><div class=\"ui-jqgrid-sortable\">Item</div></th>";
	    bottom+= "<th class=\"ui-state-default ui-th-column ui-th-lt\"><div class=\"ui-jqgrid-sortable\">Net Weight(lbs)</div></th>";
	    bottom+= "<th class=\"ui-state-default ui-th-column ui-th-lt\"><div class=\"ui-jqgrid-sortable\">Cube(ft)</div></th>";
	    bottom+= "<th class=\"ui-state-default ui-th-column ui-th-lt\"><div class=\"ui-jqgrid-sortable\">Pieces</div></th>";
	    bottom+= "<th class=\"ui-state-default ui-th-column ui-th-lt\"><div class=\"ui-jqgrid-sortable\">Kind</div></th>";
	    bottom+= "<th class=\"ui-state-default ui-th-column ui-th-lt\"><div class=\"ui-jqgrid-sortable\">Note</div></th>";
	    bottom+= "<th class=\"ui-state-default ui-th-column ui-th-lt\"><div class=\"ui-jqgrid-sortable\">Commodity Description</div></th>";
	    bottom+= "<th class=\"ui-state-default ui-th-column ui-th-lt\"><div class=\"ui-jqgrid-sortable\">&nbsp;</div></th>";
	    bottom+= "</tr></thead>";
		
	    currentOverlayCnt = 0;
		for(;index<=maxIndex;index++) {
			bottom+= getRow(index,position-lineNumber+index);
		}
		bottom += "</table>";
		
		$("#mixedCommNextItems").html(bottom);
    } else {
    	$("#mixedCommNextItems").html("");
    }
    return lineNumber;
	
}



function getRow(lineNumber, position) {
	var displayLineNumber = parseInt(lineNumber);
	currentOverlayPosition = displayLineNumber;
	var result = "";
	var rows = $('#mixcommodityGrid').jqGrid('getDataIDs');
	if(position < 0 || position >= rows.length) {
		var classValue = "ui-widget-content jqgrow ui-row-ltr";
		if(currentOverlayCnt%2 == 1) classValue += " uiAltRowClass";
		result +="<tr  class=\""+classValue+"\"><td>"+displayLineNumber+"</td><td colspan=\"8\">-------------------------</td></tr>";
	} else {
		var id = rows[position];
		var dataFromTheRow = jQuery("#mixcommodityGrid").jqGrid ('getRowData', id);
		var classValue = "ui-widget-content jqgrow ui-row-ltr";
		if(currentOverlayCnt%2 == 1) classValue += " uiAltRowClass";
		result +="<tr class=\""+classValue+"\">";
		result += "<td>"+dataFromTheRow.unitOfCommodityDisplay+"</td>";
		result += "<td style=\"text-align:right;\" class=\"monotype\">"+dataFromTheRow.itemNumber+"</td>";
		result += "<td style=\"text-align:right;\">"+dataFromTheRow.netWeight+"</td>";
		result += "<td style=\"text-align:right;\">"+dataFromTheRow.cube+"</td>";
		result += "<td style=\"text-align:right;\">"+dataFromTheRow.piece+"</td>";
		result += "<td>"+dataFromTheRow.kind+"</td>";
		result += "<td>"+dataFromTheRow.note+"</td>";
		result += "<td>"+dataFromTheRow.commodityDesc+"</td>";
		result += "<td ><div style=\"cursor: pointer;\" class=\"ui-pg-div  \" onclick=\"openUpdateComodityOverLayWithChangeCheck("+id+")\" onmouseover=\"jQuery(this).parent().parent().addClass('ui-state-hover');\" onmouseout=\"jQuery(this).parent().parent().removeClass('ui-state-hover')\"><span class=\"ui-icon ui-icon-pencil\"></span></div></td>";
		result +="</tr>";
	}
	currentOverlayCnt++;
	return result;
}

function getHeaderString() {
	var top = "<table class=\"ui-jqgrid-htable ui-jqgrid\" cellspacing=\"0\" cellpadding=\"1\" border=\"0\" width=\"98%\">";
	top+= "<thead><tr class=\"ui-jqgrid-labels\">";
	top+= "<th class=\"ui-state-default ui-th-column ui-th-lt\"><div class=\"ui-jqgrid-sortable\">Line</div></th>";
	top+= "<th class=\"ui-state-default ui-th-column ui-th-lt\"><div class=\"ui-jqgrid-sortable\">Item</div></th>";
	top+= "<th class=\"ui-state-default ui-th-column ui-th-lt\"><div class=\"ui-jqgrid-sortable\">Net Weight(lbs)</div></th>";
	top+= "<th class=\"ui-state-default ui-th-column ui-th-lt\"><div class=\"ui-jqgrid-sortable\">Cube(ft)</div></th>";
	top+= "<th class=\"ui-state-default ui-th-column ui-th-lt\"><div class=\"ui-jqgrid-sortable\">Pieces</div></th>";
	top+= "<th class=\"ui-state-default ui-th-column ui-th-lt\"><div class=\"ui-jqgrid-sortable\">Kind</div></th>";
	top+= "<th class=\"ui-state-default ui-th-column ui-th-lt\"><div class=\"ui-jqgrid-sortable\">Note</div></th>";
	top+= "<th class=\"ui-state-default ui-th-column ui-th-lt\"><div class=\"ui-jqgrid-sortable\">Commodity Description</div></th>";
	top+= "<th class=\"ui-state-default ui-th-column ui-th-lt\"><div class=\"ui-jqgrid-sortable\">&nbsp;</div></th>";
	top+= "</tr></thead>";
	return top;
}

function addRowToMixCommodityGrid(position, itemNumber, netWeight, cube, piece, kind, note, commodityDesc) {
	var classValue = "ui-widget-content jqgrow ui-row-ltr";
	if(currentOverlayCnt%2 == 1) classValue += " uiAltRowClass";
	currentOverlayCnt++;
	currentOverlayPosition++;
	var result ="<tr class=\""+classValue+"\">";
	result += "<td>New</td>";
	result += "<td style=\"text-align:right;\" class=\"monotype\" >"+itemNumber+"</td>";
	result += "<td style=\"text-align:right;\">"+netWeight+"</td>";
	result += "<td style=\"text-align:right;\">"+cube+"</td>";
	result += "<td style=\"text-align:right;\">"+piece+"</td>";
	result += "<td>"+kind+"</td>";
	result += "<td>"+note+"</td>";
	result += "<td>"+commodityDesc+"</td>";
	result +="</tr>";
	
	var html = $("#mixedCommPreviousItems").html();
	//console.log("html="+html);
	if(html.length == 0) {
		html = getHeaderString()+result+"</table>";
	} else {
	
		html = html.substring(0,html.length-8)+result+"</table>";
    }
	$("#mixedCommPreviousItems").html(html);
	
}

function populateMixCommodityCodeListBilling(list){
	//console.log("Inside populateMixCommodityCodeListBilling, list length:"+list.length);
	//alert("ShipmentCommodityCd val:"+$('#shipmentCommodityCode').val()+", mix comm cd val:"+$('#mixCommodityCommodityCode').val());
	var shmtCommCode = $('#mixCommodityCommodityCode').val();
//	alert("Inside populateCommodityCodeListBilling, shipment Commodity code:"+shmtCommCode);
	$('select#mixCommCommodityCode').children().remove().end().append('<option selected value="">Select</option>');
	if(list != null)
	{
		for ( var i = 0; i < list.length; i++) {
	
			$('select#mixCommCommodityCode').append($("<option/>", {
				value : list[i].code,
				text : list[i].code + " - " +list[i].description
			}));
//			alert("value:"+list[i].code+",text:"+list[i].code + " - " +list[i].description);
			if(shmtCommCode.length>0 && shmtCommCode==list[i].code){
				$('#mixCommCommodityCode').val($.trim(list[i].code));
//				alert("Dropdown code set to:"+$('#commodityCode').val());
			}
		}
		
		if(list.length==1){
			//alert("List length 1, code:"+$.trim(list[0].code));
			$('#mixCommCommodityCode').val($.trim(list[0].code));
			$('#mixCommodityCommodityCode').val($.trim(list[0].code));
	
		}
		
	}
	
}
;$(document).ready(
		function() {
			
			var isDeletable = true;
			var linkFormatter = "";
			var EditLink ="";
				});

function actionToLinkUnLinkPov(id){
	
	var shipmentFreightId =id.split('=')[1];
		$.ajax({
			url : _context +"/shipmentCommodity/actionContainerToCommodityPov",
			type : "GET",
			data : {
				unitOfCommodity :  $("#unitOfCommodity").val(),
				shipmentFreightId: shipmentFreightId,
				unitOfMeasure: $('#unitOfMeasureSourceCode :selected').val()
			},
			success : function(responseText) {
				if(responseText.success==true){
			
				$('#povGrid').trigger('reloadGrid');
				$("#cmdLineLinkPov").text(responseText.data.cmdLineLink+"/");
				$("#pieceValue").text(responseText.data.cmdLineLink);	
				
				$("#totalEqptsPov").text(responseText.data.totalEqpts);
				 $('#msgDivCommodity').html("");
			}
				else{
					showResponseMessages("msgDivCommodity", responseText);
				}
				}});
	}

function callloadCompleteAuto(){
	
	
	//$('#commodityGrid').jqGrid('clearGridData');
	
	if($('#statusCode').text()=='ISSUED'|| $('#statusCode').text()=='CORRECTED'){
		$("div.ui-pg-div.ui-inline-edit" ,"#gbox_povGrid").hide();
		var grid = $("#povGrid");
		var pos=getColumnIndexByName(grid,'actionLinkUnlink');
		grid.jqGrid('hideCol', grid.getGridParam("colModel")[pos].name);
		enableDisableCommosityButtons();
		
	}/*else {
		if(isCommodityBLCNUpdate){
		$("div.ui-pg-div.ui-inline-edit #gbox_povGrid").show();
		}
		if(isCommodityBLCNLink){
		var grid = $("#gbox_povGrid");
		var pos=getColumnIndexByName(grid,'actionLinkUnlink');
		grid.jqGrid('showCol', grid.getGridParam("colModel")[pos].name);
		}
	}*/
	else
		{
		//$('#maintain_commodity_shipment').gatesEnable();
		}
	var reccountAutoGrid = $('#povGrid').jqGrid('getDataIDs');
	
	for (var i = 0; i < reccountAutoGrid.length; i++) {
		if(jQuery("#povGrid").getRowData( $('#povGrid').jqGrid('getDataIDs')[i]). actionLinkUnlink=="LINK" ||
				(jQuery("#povGrid").getRowData( $('#povGrid').jqGrid('getDataIDs')[i]).actionLinkUnlink).trim()=="" ){
					$($("div.ui-pg-div.ui-inline-edit")[i], "#"+$('#povGrid').jqGrid('getDataIDs')[i]).hide();
		}
	}
	
	
	
	
};
$(document).ready(
		function() {
			
			var isDeletable = true;
			var linkFormatter = "";
			var EditLink ="";
		
			 
	});

function lclGridLoadComplete(){
	$('.FormData' ).each(function() {
		if(( $('#statusCode').text()=='ISSUED') || ($('#statusCode').text()=='CORRECTED')){
        if($(this).attr('id') == "tr_shipmentConvFreightId" ){
               if(i != 0){
                     $(this).remove();
               }
               i++;
        }
	}
 });
	
	$('#tr_shipmentConvFreightId').show();
	if(isCommodityBLCVAdd==false){
	$('#tr_shipmentConvFreightId').hide();
	}
	$('#tr_shipmentConvFreightId td input').val("");

	var reccountConvGrid = $('#convGrid').jqGrid('getDataIDs');	
	for (var i = 0; i < reccountConvGrid.length; i++) {
		if(jQuery("#convGrid").getRowData( $('#convGrid').jqGrid('getDataIDs')[i]). isDeletable=="Delete"){
			 var data = $("#convGrid").jqGrid('getRowData', $('#convGrid').jqGrid('getDataIDs')[i]);
			 data.isDeletable ="<span class='ui-icon ui-icon-trash'></span>";
			 jQuery("#convGrid").jqGrid('setRowData', $('#convGrid').jqGrid('getDataIDs')[i], data);
		}		
		jQuery("#convGrid").getRowData( $('#convGrid').jqGrid('getDataIDs')[i]).edit
	}
	var grid = $("#convGrid");
	var pos=getColumnIndexByConvGridName(grid,'actionLinkUnlink');
	
	if($('#statusCode').text()=='ISSUED'|| $('#statusCode').text()=='CORRECTED'){
		$("div.ui-pg-div.ui-inline-edit" ,"#gbox_convGrid").hide();		
		grid.jqGrid('hideCol', grid.getGridParam("colModel")[pos].name);		
		$('#tr_shipmentConvFreightId').hide();
		enableDisableCommosityButtons();
	}
	else
	{	
		grid.jqGrid('showCol', grid.getGridParam("colModel")[pos].name);	
		$('#tr_shipmentConvFreightId').show();
	}

	var conGridSize = $('#convGrid>tbody>tr').size();
	for(var j =1;j< conGridSize;j++){
		$($($('#convGrid>tbody>tr')[j]).children()[14]).find('.ui-inline-del').remove();
	}
	var j =1;
	for (var i = 0; i < reccountConvGrid.length; i++) {
		if(jQuery("#convGrid").getRowData( $('#convGrid').jqGrid('getDataIDs')[i]).actionLinkUnlink=="LINK" || 
				(jQuery("#convGrid").getRowData( $('#convGrid').jqGrid('getDataIDs')[i]).actionLinkUnlink).trim()==""){
			$($("div.ui-pg-div.ui-inline-edit")[i], "#"+$('#convGrid').jqGrid('getDataIDs')[i]).hide();
			j++;
		}
	}

	
}

function convGridLoadComplete(){
	// added for security
	/*$grid = jQuery("#convGrid");
	$grid.jqGrid('setGridWidth', 900);*/
	//D025042, Fix for Conventional grid duplication
/*	var i = 0;
	$('#tr_shipmentConvFreightId' ).each(function() {
		if(i != 0)
			$('#tr_shipmentConvFreightId').remove();
		i++;
	});*/
	$('.FormData' ).each(function() {
		if(( $('#statusCode').text()=='ISSUED') || ($('#statusCode').text()=='CORRECTED')){
        if($(this).attr('id') == "tr_shipmentConvFreightId" ){
               if(i != 0){
                     $(this).remove();
               }
               i++;
        }
	}
 });
	
	$('#tr_shipmentConvFreightId').show();
	if(isCommodityBLCVAdd==false){
	$('#tr_shipmentConvFreightId').hide();
	}
	/*if(($('#loadServiceCode').val()=="FI" && $('#dischargeServiceCode').val()=="FO")||($('#loadServiceCode').val()=="FO" && $('#dischargeServiceCode').val()=="FI")){*/
	$('#tr_shipmentConvFreightId td input').val("");
		// jQuery("#convGrid").hideCol('actionLinkUnlink');
	/*}
	if($('#loadServiceCode').val()=="FI"){
	 if($('#dischargeServiceCode').val()=="FO"){
		 $('#tr_shipmentConvFreightId').show();
	 }
	 else{
		 $('#tr_shipmentConvFreightId').hide();
	 }
	}
	else if($('#loadServiceCode').val()=="FO"){
	 if(!$('#dischargeServiceCode').val()=="FI"){
		 $('#tr_shipmentConvFreightId').show();
	 }else{
		 $('#tr_shipmentConvFreightId').hide();
	 }
	}
	else{
	 $('#tr_shipmentConvFreightId').hide();shipmen
	}*/


	var reccountConvGrid = $('#convGrid').jqGrid('getDataIDs');
	
	for (var i = 0; i < reccountConvGrid.length; i++) {
		if(jQuery("#convGrid").getRowData( $('#convGrid').jqGrid('getDataIDs')[i]). isDeletable=="Delete"){
			 var data = $("#convGrid").jqGrid('getRowData', $('#convGrid').jqGrid('getDataIDs')[i]);
			 data.isDeletable ="<span class='ui-icon ui-icon-trash'></span>";
			 jQuery("#convGrid").jqGrid('setRowData', $('#convGrid').jqGrid('getDataIDs')[i], data);
		}
		
		jQuery("#convGrid").getRowData( $('#convGrid').jqGrid('getDataIDs')[i]).edit
	}
	var grid = $("#convGrid");
	var pos=getColumnIndexByConvGridName(grid,'actionLinkUnlink');
	var deletepos=getColumnIndexByConvGridName(grid,'isDeletable');
	if($('#statusCode').text()=='ISSUED'|| $('#statusCode').text()=='CORRECTED'){
		$("div.ui-pg-div.ui-inline-edit" ,"#gbox_convGrid").hide();
		
		grid.jqGrid('hideCol', grid.getGridParam("colModel")[pos].name);
		grid.jqGrid('hideCol', grid.getGridParam("colModel")[deletepos].name);
		$('#tr_shipmentConvFreightId').hide();
		enableDisableCommosityButtons();
	}
	else
	{
	//$('#maintain_commodity_shipment').gatesEnable();
		grid.jqGrid('showCol', grid.getGridParam("colModel")[pos].name);
		grid.jqGrid('showCol', grid.getGridParam("colModel")[deletepos].name);
		$('#tr_shipmentConvFreightId').show();
	}

	var conGridSize = $('#convGrid>tbody>tr').size();
	for(var j =1;j< conGridSize;j++){
		$($($('#convGrid>tbody>tr')[j]).children()[14]).find('.ui-inline-del').remove();
	}
	var j =1;
	for (var i = 0; i < reccountConvGrid.length; i++) {
		if(jQuery("#convGrid").getRowData( $('#convGrid').jqGrid('getDataIDs')[i]).actionLinkUnlink=="LINK" || 
				(jQuery("#convGrid").getRowData( $('#convGrid').jqGrid('getDataIDs')[i]).actionLinkUnlink).trim()==""){
			$($("div.ui-pg-div.ui-inline-edit")[i], "#"+$('#convGrid').jqGrid('getDataIDs')[i]).hide();
			j++;
		}
	}
	//added against 21739
 	/*if(counterConvGridReloaded==0){
 		numberOfInitialRowsConv=jQuery("#convGrid").jqGrid('getGridParam', 'records');
 		counterConvGridReloaded++;
 	}
 	if(numberOfInitialRowsConv != jQuery("#convGrid").jqGrid('getGridParam', 'records')){
 		changeInCommodity=true;
 	}*/

 	//to set TCN as editable field or not-18593
 	rowId=$("#convGrid").getDataIDs();
 	if(rowId.length>0){
 		firstRowId = rowId[0];	//check LDSP data for only one row as same for all
 		var loadDischargeServPair = $('#convGrid').jqGrid('getCell',firstRowId,'loadDischargeServicePair');	//loadDischargeServPair is a hidden field in grid
	 		if(loadDischargeServPair!=null && loadDischargeServPair!=""){
	 			if(loadDischargeServPair=="CON-CON" || loadDischargeServPair=="CON-CY" || loadDischargeServPair=="RO-RO"){
		 			jQuery('#convGrid').setColProp('militaryTcn',{editable:true}); 
		 		}else{
		 			jQuery('#convGrid').setColProp('militaryTcn',{editable:false}); 
		 		}
	 		}
 	}

}

function actionToLinkUnLinkConv(id){
	
	var shipmentFreightId =id.split('=')[1];
		$.ajax({
			url : _context +"/shipmentCommodity/actionContainerToCommodityConv",
			type : "GET",
			data : {
				unitOfCommodity :  $("#unitOfCommodity").val(),
				shipmentFreightId: shipmentFreightId,
				unitOfMeasure: $('#unitOfMeasureSourceCode :selected').val()
			},
			success : function(responseText) {
				if(responseText.success==true){			
				$("#convGrid").trigger('reloadGrid');
				if($("#convGrid").getGridParam("reccount")>0){ 
					$('#tr_shipmentConvFreightId').hide();
				}
				$("#cmdLineLink").text(responseText.data.cmdLineLink+"/");
				$("#cmdLinks").text(responseText.data.cmdLinks+"/");
				$("#totalEqpts").text(responseText.data.totalEqpts);
				if($('#loadDschServiceGroupCode').val()!=null && $('#loadDschServiceGroupCode').val().trim()=="LCL"){
					$("#piece").val(responseText.data.piece);
					$("#kind").val(responseText.data.kind);
					if($('#unitOfMeasureSourceCode :selected').val()=="I") {
						$("#netWeight").val(Math.round(responseText.data.netWeight).toFixed(0));
						$("#cube").val(Math.round(responseText.data.cube).toFixed(0));
					}else{
						$("#netWeight").val(responseText.data.netWeight);
						$("#cube").val(responseText.data.cube);
					}
				}
				 $('#msgDivCommodity').html("");
			}
				else{
					showResponseMessages("msgDivCommodity", responseText);
				}
				}});
	}
function actionDelete(id){
	
	var shipmentFreightId =id.split('=')[1];
	$.ajax({
		url : _context +"/shipmentCommodity/actionDelete",
		type : "GET",
		data : {
			
			shipmentFreightId: shipmentFreightId
		},
		success : function(responseText) {
			if(responseText.success==true){
		
				 $("#convGrid").trigger('reloadGrid');
					if($("#convGrid").getGridParam("reccount")>0){ $('#tr_shipmentConvFreightId').hide();};
			$("#cmdLineLink").text(responseText.data.cmdLineLink+"/");
			$("#cmdLinks").text(responseText.data.cmdLinks+"/");
			$("#totalEqpts").text(responseText.data.totalEqpts);
			 $('#msgDivCommodity').html("");
		}
			else{
				showResponseMessages("msgDivCommodity", responseText);
			}
			}});
	
}

function validateTINConfirm(militaryTcn){
	// D030511: 	"TCN is not unique" pops up multiple times when adding tcns 
	// disable this method but doesn't look like it is being used.
	return true;
	
	/*
	if(militaryTcn!=null ){
	$.ajax({
		url : _context +"/shipmentCommodity/validateTIN",
		type : "GET",
		data : {
			
			validateTIN: militaryTcn
		},
		success : function(responseText) {
			if(responseText.success==true){
				return true;
		}
			else{
				var isConfirm = confirm("TCN is not unique. Exists on another Shipment. Override? (Y/N)");
				if (isConfirm) {
					return true;
			}else{
				return false;
			}
			}}});
	} */
	
}

var getColumnIndexByConvGridName = function(grid,columnName) {
	var cm = $("#convGrid").jqGrid('getGridParam','colModel');
	for (var i=0,l=cm.length; i<l; i++) {
	    if (cm[i].name===columnName) {
	        return i;
	    }
	}
	return -1;
	};


/*
 * $('form [name=ltlQuoteSearchForm]').formatCasSearchForm
 */
(function($) {
	
	$.fn.mandatory = function() {
	        
		var startTxt = this.html().substring(0,this.html().indexOf(':'));
		var endTxt = this.html().substring(this.html().indexOf(':'));
		
	    this.html(startTxt + '<span class="mandatory" style="font-size: 8pt" >*</span>'+ endTxt);

	  };
	  
	$.fn.formatCasSearchForm = function(o) {

		var o = $.extend({}, $.fn.formatCasSearchForm.defaults, {}, o);

		var resetForm = function(frm) {
			resetFileds(frm);
			
			if (o.defaultValues) {
				for(var i=0; i<o.defaultValues.length; i++) {
					$('#' + o.defaultValues[i].id, frm).val(o.defaultValues[i].value);
				}
			}
			
		};
		
		this.each(function() {				
			var f = this, $f = $(this);
			
			// set default values
			$(':text', this).DefaultValue('ALL');
			
			// Include "custom action" buttons after the "Search" button
			var $tdSearch = $('td input[type="button"][value="Search"]', this).parent('td');
			$tdSearch.append('&nbsp;&nbsp;');
			$tdSearch.next('td').remove();
			
			var $td=$tdSearch;
			for (var i=0; i<o.customActions.length; i++) {
				var buttonTag = '<input type="button" ';
				
				buttonTag += 'class="formButton ';
				if (o.customActions[i].clazz) {
					buttonTag += o.customActions[i].clazz;
				}
				buttonTag += '" ';
				
				if (o.customActions[i].alt) {
					buttonTag += 'alt="' + o.customActions[i].alt + '" ';
				}
				buttonTag += 'value="' + o.customActions[i].value + '" />';
				
				var $button = $(buttonTag);
				
				if (o.customActions[i].fn) {
					$button.click(o.customActions[i].fn);
				}
				
				var $buttonCell = $('<td>&nbsp;&nbsp;</td>');
				$buttonCell.prepend($button);
				
				$td.after($buttonCell);
				$td = $buttonCell;
			}
			
			// Swap reset and search buttons
			var $resetButton = $('td input[type="button"][value="Reset"]');
			$resetButton.val('Clear');
			var $tdReset = $resetButton.parent('td');
			$tdSearch.after($tdReset);
			
			// Change reset onclick handler to clear search results also
			$resetButton.click(function() {
				$('#displaybase').remove();	
			});
			
			// Hide "saved search" feature
			// : configure all searches to have a finite value for "displayColumns"
			// : hide the row (<tr>) enclosing "My Saved View:" <td>
			if (!o.hasSavedSearchFeature) {
				var $saved_search_td = $('td.formLabel:contains("My Saved View:")');
				$saved_search_td.parent('tr').hide();
			}else {
				var $saved_search_td = $('td.formLabel:contains("My Saved View:")');
				$saved_search_td.parent("tr").parent("tbody").parent("table").attr("align","right");
			}
				
			
			if (o.defaultValues) {
				var input = document.createElement("input");
				input.setAttribute("type", "hidden");
				input.setAttribute("id", "nullFieldIds");
				input.setAttribute("value", "");
				document.body.appendChild(input);
				
				for(var i=0; i<o.defaultValues.length; i++) {
					var $e = $('#' + o.defaultValues[i].id, this);
					
					if ($e.val() == 'ALL') {
						$e.val(o.defaultValues[i].value);
						input.value += o.defaultValues[i].id + ',';
					}
				}
				
				$('input[type="button"][value="Reset"]').click(function() { resetForm(f); });
			}
			
			// style buttons
			$('input[type="button"]').removeClass("formButton").addClass("buttonNoFloat");
			
		});
		
		// ...
		
		return null;

	};

	$.fn.formatCasSearchForm.defaults = {
		hasSavedSearchFeature: true
		// customActions: [ { value: "Add", fn: "addFunction" }, { value: "Another Add", fn: "addFunction" } ]
		// defaultValues: [ { id: "EXPIRATION_DATE", value: 'default.value' } ] 
	};
	
	
	
	

})(jQuery);

$(document).ready(function() {
	if ($('form').attr('id') == null || $('form').attr('id') == '') {
		$('form').attr('id', $('form').attr('name'));
	}
});
function getCurrentDate() {
	var fullDate = new Date();
	var dat = fullDate.getDate();
	var mon = fullDate.getMonth() + 1;
	var year = fullDate.getFullYear();
	var currentDate = mon + "-" + dat + "-" + year;
	return currentDate;
}

function convertPoundToKG(weightinLBS) {
	return Math.round(weightinLBS*0.45359237);
}

function convertKGToPound(weightinKilo) {
	return Math.round(weightinKilo*2.20462262);
}

function convertInchesToMeter(feet, inches) {
	if (feet == "") {
		feet = 0;
	}
	if (inches == "") {
		inches = 0;
	}
	var totalInches = Number(feet*12) + Number(inches);
	var meterValue = Math.round(totalInches*0.0254*10000) / 10000;
	return meterValue;
}

function convertMeterToInches(value) {
	if (value == "") {
		value = 0;
	}

	var inches = Math.round(value*39.3700787);
	return inches;
}

function getFeetFromInches(inches) {
	if (inches == "") {
		inches = 0;
	}

	var extraFeet = 0;
	if (inches >=12) {
		remainingInches = inches % 12;
		extraFeet = Math.round((inches-remainingInches)/ 12);
	}
	return extraFeet;
}

function getModInches(inches) {
	if (inches == "") {
		inches = 0;
	}

	if (inches >=12) {
		inches = Math.round(inches % 12);
	}
	return inches;
}

function getTotalInches(feet, inches) {
	if (feet == "") {
		feet = 0;
	}
	if (inches == "") {
		inches = 0;
	}
	
	var totalInches = Number(feet*12) + Number(inches);
	return totalInches;
}

function convertToImperialVolume(value) {
	if (value == "") {
		value = 0;
	}

	var imperialVol = Math.round(35.3146667*value);
	return imperialVol;
}

function convertToMetricVolume(value) {
	if (value == "") {
		value = 0;
	}
	
	var metricVol = Math.round(0.0283168466 *value);
	return metricVol;
}

function convertToImperialWeight(value) {
	if (value == "") {
		value = 0;
	}
	
	var imperialWeight = Math.round(2.20462262*value);
	return imperialWeight;
}

function convertToMetricWeight(value) {
	if (value == "") {
		value = 0;
	}
	
	var metricWeight = Math.round(0.45359237*value);
	return metricWeight;
}

function getCodes(city) {
	var end = city.indexOf("-");
	var code = city.substr(0, end);
	return code;
}


function scrollWin(){
	$('html,body').animate({
	scrollTop: $("#msgDiv").offset().top
	}, 200);
}

function imperialLength(value) {
	var totalInches = convertMeterToInches(	value );
	if (isNaN(totalInches)) {
		return;
	}
	var feets = getFeetFromInches(totalInches);
	var remInches = getModInches(totalInches);
	this.feet = feets;
	this.inches = remInches;
}

function toggleField(compareField, field) {
	var tmp = $('#'+ compareField).val();
	if ($.trim(tmp) == "" || $.trim(tmp) == "0") {
		$('#'+field).removeAttr("disabled");
	} else {
		$('#'+field).attr("disabled", true);
	}
};function initializeAlertDialogs() {

    $("#kickerTemplatesDivDialog").dialog({
        title: 'Alert Email Templates',
        autoOpen: false,
        autoResize: true,
        minHeight: 0,
        modal: true,
        width: 850,
        buttons: [{
            text: "Exit",
            click: function () {
                $(this).dialog("close");
            }
        }, {
            text: "Send",
            click: function () {
                var myGrid = $('#sendKickerGrid');
                var selRowId = myGrid.jqGrid('getGridParam', 'selrow');
                if (null == selRowId) {
                    alert('Please select a template');
                    return;
                }
                var templateId = myGrid.jqGrid('getCell', selRowId, 'templateId');
                applyAndSendKicker(templateId);
            }
        }]
    });

    $("#sendKickerDivDialog-isHtml").val('false'); // initial state for SendEmail overlay

    $("#sendKickerDivDialog").dialog({ // initializing overlay for SendEmail
        title: 'Send Alert Email',
        autoOpen: false,
        autoResize: true,
        minHeight: 0,
        modal: true,
        width: 1024,
        buttons: {
            Exit: function () {
                $(this).dialog("close");
            },
            Send: function () {
                console.log('Sending alert .. isHtml?' + $('#sendKickerDivDialog-isHtml').val());
                blockUI();
                var urlStr = _context + "/shipment/sendShipmentKicker";
                var data = {
                    emailBody: ($('#sendKickerDivDialog-isHtml').val() == 'true') ? $('#sendKickerDivDialog-emailBody').elrte('val') : $('#sendKickerDivDialog-emailBody').val(),
                    emailTo: $('#sendKickerDivDialog-emailTo').val(),
                    emailCc: $('#sendKickerDivDialog-emailCc').val(),
                    emailSubject: $('#sendKickerDivDialog-emailSubject').val(),
                    shipmentId: $('#sendKickerDivDialog-shipmentId').val(),
                    templateId: $('#sendKickerDivDialog-templateId').val()
                }
                $.ajax({
                    type: "POST",
                    url: urlStr,
                    data: data,
                    dataType: 'json',
                    success: function (responseData) {
                        console.log('Sending alert ... Success');
                        $.unblockUI();
                        alert("Email Alert sent successfully");
                        $(this).dialog("close");
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.log('Sending alert ... Error');
                        $.unblockUI();
                        alert("Email Alert could not be sent");
                        $(this).dialog("close");
                    }
                });
            }
        }
    });
}


function applyAndSendKicker(templateId) {

    blockUI();
    var urlStr = _context +"/shipment/getShipmentKickerSource?shipmentId="+$('#shipmentId').val()+"&templateId="+templateId;
    $.ajax({
        type: "GET",
        url: urlStr,
        dataType:'json',
        success: function(responseData){

            //var length = responseData.data.length ? parseInt(responseData.data.length) : 9999;

            var key = "body=";
            var start = responseData.data.mailto.indexOf(key) + key.length;
            var toEncode = responseData.data.mailto.substring(start);
            var noEncode = responseData.data.mailto.substring(0,start);
            var fullMailTo = noEncode + encodeURIComponent(toEncode);

            var length = fullMailTo.length;

            if (responseData.data.isHtml == 'true' || length > 1500) {

                console.log ('openSendBookingKicker called. templateId:' + templateId);
                $("#kickerTemplatesDivDialog").dialog('close'); // close templates grid
                $("#sendKickerDivDialog").dialog('open'); // opens SendEmail overlay

                if ($('#sendKickerDivDialog-isHtml').val() == 'true') { // if previous email was HTML, then reset Body
                    $('#sendKickerDivDialog-emailBody').elrte('destroy');
                    $('#sendKickerDivDialog-bodyContainer').html("<textarea id='sendKickerDivDialog-emailBody' style='width:950px;height:400px;'></textarea>");
                } else {
                    $('#sendKickerDivDialog-emailBody').val(''); // clear out
                }

                $('#sendKickerDivDialog-form input[type=text]').val(''); // clear out form fields
                $('#sendKickerDivDialog-form input[type=hidden]').val(''); // clear out form fields

                // chrome limit to mailto:
                if (responseData.data.isHtml == 'true') {
                    var opts = {
                        cssClass : 'el-rte',
                        height : 400,
                        width : 900,
                        toolbar : 'web2pyToolbar',
                        cssfiles : [ 'elrte-1.3/css/elrte-inner.css' ]
                    }
                    $("#sendKickerDivDialog-emailBody").elrte(opts).elrte('val', responseData.data.emailBody);
                } else {
                    $("#sendKickerDivDialog-emailBody").val(responseData.data.emailBody);
                }
                $('#sendKickerDivDialog-emailTo').val(responseData.data.emailTo);
                $('#sendKickerDivDialog-emailSubject').val(responseData.data.emailSubject);
                $('#sendKickerDivDialog-emailCc').val(responseData.data.emailCc);
                $('#sendKickerDivDialog-shipmentId').val(responseData.data.shipmentId);
                $('#sendKickerDivDialog-templateId').val(responseData.data.templateId);
                $('#sendKickerDivDialog-isHtml').val(responseData.data.isHtml);
            } else {

                $('#sendKickerHref').attr("href",noEncode + encodeURIComponent(toEncode));
                $('#sendKickerHref')[0].click();
            }

            $.unblockUI();
        },
        error: function(jqXHR,textStatus,errorThrown) {
            $.unblockUI();
            alert("Error getting template "+textStatus);
        }
    });
}

function openSendAlerts() {

    console.log("openSendAlerts - called");

    $( "#alerts-div" ).hide().load( "/gates/on_demand_alerts.html", function() {

        console.log("on_demand_alerts.html load completed.");

        initializeAlertDialogs();

        var kickerColNames = ['Id', 'Category', 'Customer Group', 'Name', 'Description', 'Subject Line', 'From', 'To', 'isHtml', 'CC', 'Create User', 'Create Date', 'User', 'Update Date'];

        var kickerColModel = [
            {name:'templateId', hidden:true, width:25},
            {name:'category', hidden:false, width:90},
            {name:'customerGroups', hidden:false, width:100},
            {name:'name', hidden:false},
            {name:'description', hidden:false},
            {name:'emailSubject', hidden:false},
            {name:'emailFrom', hidden:true},
            {name:'emailTo', hidden:false},
            {name:'isHtml', hidden:true},
            {name:'emailCC', hidden:true},
            {name:'createUser', hidden:true},
            {name:'createDate', hidden:true},
            {name:'lastUpdateUser', hidden:true},
            {name:'lastUpdateDate', hidden:true, "formatter":"date"}
        ];

        var jsonReaderReference = {
            root:"rows",
            page:"page",
            total:"total",
            records:"records",
            repeatitems:false,
            cell:"cell",
            id:"templateId"
        };

        $('#sendKickerGrid').jqGrid({
            url:_context+'/booking/loadEmailTemplates?module=Billing',
            datatype: "json",
            colNames:kickerColNames,
            colModel:kickerColModel,
            rowNum:10,
            pager: '#sendKickerPager',
            viewrecords: true,
            caption:'Templates',
            sortName: 'templateId',
            sortorder: "desc",
            loadonce: true,
            jsonReader : jsonReaderReference,
            height: "100%",
            multiselect: true,
            beforeSelectRow: function(rowid, e){
                jQuery("#sendKickerGrid").jqGrid('resetSelection');
                return(true);
            }
        }).navGrid("#sendKickerPager",{edit:false,add:false,del:false});

        $("#kickerTemplatesDivDialog").dialog('open');

    });

}

;